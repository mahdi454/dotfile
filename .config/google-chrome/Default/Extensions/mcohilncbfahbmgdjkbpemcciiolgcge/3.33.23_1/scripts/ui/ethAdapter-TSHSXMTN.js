import{a as L,g as c,h as u}from"./chunk-7HXH5OR4.js";import"./chunk-VAJR5FGA.js";import"./chunk-J67TLDRO.js";import"./chunk-F64IIDQ5.js";import"./chunk-CV2I3OFZ.js";import{a as D,b as E}from"./chunk-NOGKPIVH.js";import"./chunk-SKK4O3IC.js";import"./chunk-L4BR2EHM.js";import"./chunk-AQH6QKNE.js";import"./chunk-6IVHTBSR.js";import{a as l}from"./chunk-5IJLIHE4.js";import"./chunk-75OW6LUI.js";import"./chunk-W4IULSMQ.js";import"./chunk-JJIQEHOY.js";import"./chunk-CF7MQ2MC.js";import"./chunk-BX4HCRUM.js";import"./chunk-YJ2NGJXA.js";import{m as S}from"./chunk-EBR3PGFZ.js";import"./chunk-UDGUBKMO.js";import"./chunk-VPGNJAK6.js";import"./chunk-JUXPONKW.js";import"./chunk-WSUAESF2.js";import{a as I}from"./chunk-O2FUKKO3.js";import"./chunk-GCXT25LW.js";import"./chunk-FDCWN4NG.js";import"./chunk-5YGMD6KK.js";import{V as s,Ya as A,ic as g,mc as F}from"./chunk-O3CM75EN.js";import"./chunk-ZGRAPBBU.js";import"./chunk-J3CEQI22.js";import"./chunk-VFHYER2K.js";import"./chunk-KJIO572I.js";import"./chunk-HJXNXGYU.js";import"./chunk-KALFZBR5.js";import"./chunk-V55FEIYE.js";import"./chunk-EAZTJZU7.js";import"./chunk-QWVBDGZQ.js";import"./chunk-3AN5FAZD.js";import"./chunk-VOT7VHG3.js";import"./chunk-SYQUJKIR.js";import"./chunk-WPMHLM7C.js";import"./chunk-P7DU4NJA.js";import"./chunk-GAJPJAPC.js";import"./chunk-KW7JYBDS.js";import"./chunk-224G4QSH.js";import{f as y,h as T,m as M,n as p,o as w}from"./chunk-ZCHLW7CF.js";M();w();var o=y(L()),d=y(I());F();A();var f=class{constructor(){T(this,"signTransaction",async(t,e,n)=>{e=l(e);let r=await D(e),a=r.getMessageToSign(!1),i=p.Buffer.isBuffer(a)?a.toString("hex"):d.rlp.encode(a).toString("hex"),{type:h,chainId:P}=e,q={path:t.hdPathMap[s],chainId:P,requestId:g().toLowerCase(),signData:i,dataType:h===S.FEE_MARKET?o.KeystoneEthereumSDK.DataType.typedTransaction:o.KeystoneEthereumSDK.DataType.transaction,xfp:t.masterFingerprint},C=await u.openModal(c.showTxParams,{signRequest:q,baseChain:s}),m=p.Buffer.from(C,"hex"),R=m.slice(0,32),b=m.slice(32,64),N=m.slice(64),x=await E(r,{r:R,s:b,v:N});return n?x:{rawTxResult:x}});T(this,"signTypedData",async(t,e)=>{let n=t.hdPathMap[s];if(!["V4","V3"].includes(e.version))throw new Error("this version of typed data signing is no't supported");let a=p.Buffer.from(e.data,"utf-8"),i={path:n,requestId:g().toLowerCase(),signData:a,dataType:o.KeystoneEthereumSDK.DataType.typedData,xfp:t.masterFingerprint};return`0x${await u.openModal(c.showTxParams,{signRequest:i,baseChain:s})}`})}async signPersonalMessage(t,e){let n=t.hdPathMap[s],r=(0,d.stripHexPrefix)(e.data),a={path:n,requestId:g().toLowerCase(),signData:r,dataType:o.KeystoneEthereumSDK.DataType.personalMessage,xfp:t.masterFingerprint};return`0x${await u.openModal(c.showTxParams,{signRequest:a,baseChain:s})}`}},$=new f;export{$ as default};

window.inOKXExtension = true;
window.inMiniApp = false;
window.ASSETS_BUILD_TYPE = "publish";

//# sourceMappingURL=ethAdapter-TSHSXMTN.js.map
