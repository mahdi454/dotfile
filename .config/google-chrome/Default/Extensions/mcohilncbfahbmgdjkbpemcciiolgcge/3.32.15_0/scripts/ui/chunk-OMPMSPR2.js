import{a as k}from"./chunk-WWK72A4A.js";import{a as L}from"./chunk-UKF426AK.js";import{b as N}from"./chunk-BWRHBLYR.js";import{c as C,d as D}from"./chunk-YC6W5MPL.js";import{a as E}from"./chunk-Y6SGFHFT.js";import{qa as A}from"./chunk-S5DGV5WL.js";import{a as G}from"./chunk-VX55KNI4.js";import{b as I,k as O,q as T,s as v}from"./chunk-VGT27A4M.js";import{d as x,f as M}from"./chunk-R4G6BEPF.js";import{Jb as j,Xa as d,ub as c}from"./chunk-YT2MPR4E.js";import{H as _,o as w}from"./chunk-LDKM7IQF.js";import{K as R,pa as J}from"./chunk-6O63U2D6.js";import{M as F,x as s}from"./chunk-RIOWPXBZ.js";import{a as b}from"./chunk-O337TVCZ.js";import{f as S,m as y,o as h}from"./chunk-GLD6H5Q5.js";y();h();var l=S(b()),P=S(G());F();J();M();j();v();O();var B=({address:e,targetCoinId:i,registerPath:n})=>{let g=(0,P.useHistory)(),u=N();return async({coinId:r})=>{let{coin:t,baseCoin:o}=await u(r,!0);if(![String(r),String(o.coinId)].includes(String(i)))return!0;try{let a=await k({chainId:t.chainId,address:e});if(a===T.NOT_STARTED){let f=w.warn({title:s("wallet_dialog_modal_not_registered"),text:s("wallet_dialog_modal_register_before_using"),confirmText:s("wallet_dialog_modal_registerbtn"),cancelText:s("wallet_dialog_modal_backbtn"),alignBottom:!1,onConfirm:()=>{f.destroy(),g.push(n)},onCancel:()=>{f.destroy()}});return!1}if(a===T.PROCESSING)return _.warn({title:s("wallet_extension_transaction_notif_address_registering",{net:t.chainName})}),!1}catch(a){let f=a?.error_message||s("wallet_extension_transaction_notif_address_register_fail",{net:t.chainName});return _.error(f),!1}return!0}},rt=()=>{let e=E(d);return B({address:e,targetCoinId:c,registerPath:A})},nt=e=>{let[i,n]=(0,l.useState)({isLoading:!0,isError:!1,nonce:"0",maxFee:"0"}),g=async()=>(await C({coinId:c,address:e},{fromAddr:e,toAddr:""}))?.info?.nonce,u=async r=>{let t={type:"deploy_account",nonce:r,maxFee:"0"};return(await x().signTransaction(t,e,d))?.signature},m=async r=>{let{data:t={}}=await D({coinId:c,address:e,inputData:r});return t?.gasLimit};return(0,l.useEffect)(()=>{(async()=>{try{let t=await g();if(R(t)){n(a=>({...a,isLoading:!1,isError:!0}));return}let o=await u(t),p=await m(o);n(a=>({...a,isLoading:!1,isError:!1,nonce:t,maxFee:p}))}catch{n(o=>({...o,isLoading:!1,isError:!0}))}})()},[]),i},ot=({nonce:e,maxFee:i,address:n})=>{let g=L();return async()=>{let m={type:"deploy_account",nonce:e,maxFee:i},r=await x().signTransaction(m,n,d),t={type:"AccountActive",serviceChargeCoinId:c,nonce:e},o={signedTx:r?.signature,fromAdr:n,serviceCharge:i,toAdr:n,coinAmount:"0",coinId:c,txHash:r?.txId,txType:I.REGISTRATION,extJson:JSON.stringify(t)};return await g(o)}};export{rt as a,nt as b,ot as c};

window.inOKXExtension = true;
window.inMiniApp = false;
window.ASSETS_BUILD_TYPE = "publish";

//# sourceMappingURL=chunk-OMPMSPR2.js.map
