/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@sentry/browser/esm/client.js":
/*!****************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/client.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BrowserClient": () => (/* binding */ BrowserClient)
/* harmony export */ });
/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ "./node_modules/@sentry/core/esm/baseclient.js");
/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/core */ "./node_modules/@sentry/core/esm/utils/sdkMetadata.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/env.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/logger.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/clientreport.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/dsn.js");
/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./debug-build.js */ "./node_modules/@sentry/browser/esm/debug-build.js");
/* harmony import */ var _eventbuilder_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./eventbuilder.js */ "./node_modules/@sentry/browser/esm/eventbuilder.js");
/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers.js */ "./node_modules/@sentry/browser/esm/helpers.js");
/* harmony import */ var _userfeedback_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./userfeedback.js */ "./node_modules/@sentry/browser/esm/userfeedback.js");







/**
 * Configuration options for the Sentry Browser SDK.
 * @see @sentry/types Options for more information.
 */

/**
 * The Sentry Browser SDK Client.
 *
 * @see BrowserOptions for documentation on configuration options.
 * @see SentryClient for usage documentation.
 */
class BrowserClient extends _sentry_core__WEBPACK_IMPORTED_MODULE_0__.BaseClient {
  /**
   * Creates a new Browser SDK instance.
   *
   * @param options Configuration options for this SDK.
   */
   constructor(options) {
    const sdkSource = _helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.SENTRY_SDK_SOURCE || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.getSDKSource)();
    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.applySdkMetadata)(options, 'browser', ['browser'], sdkSource);

    super(options);

    if (options.sendClientReports && _helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.document) {
      _helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.document.addEventListener('visibilitychange', () => {
        if (_helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.document.visibilityState === 'hidden') {
          this._flushOutcomes();
        }
      });
    }
  }

  /**
   * @inheritDoc
   */
   eventFromException(exception, hint) {
    return (0,_eventbuilder_js__WEBPACK_IMPORTED_MODULE_4__.eventFromException)(this._options.stackParser, exception, hint, this._options.attachStacktrace);
  }

  /**
   * @inheritDoc
   */
   eventFromMessage(
    message,
    // eslint-disable-next-line deprecation/deprecation
    level = 'info',
    hint,
  ) {
    return (0,_eventbuilder_js__WEBPACK_IMPORTED_MODULE_4__.eventFromMessage)(this._options.stackParser, message, level, hint, this._options.attachStacktrace);
  }

  /**
   * Sends user feedback to Sentry.
   */
   captureUserFeedback(feedback) {
    if (!this._isEnabled()) {
      _debug_build_js__WEBPACK_IMPORTED_MODULE_5__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.warn('SDK not enabled, will not capture user feedback.');
      return;
    }

    const envelope = (0,_userfeedback_js__WEBPACK_IMPORTED_MODULE_7__.createUserFeedbackEnvelope)(feedback, {
      metadata: this.getSdkMetadata(),
      dsn: this.getDsn(),
      tunnel: this.getOptions().tunnel,
    });

    // _sendEnvelope should not throw
    // eslint-disable-next-line @typescript-eslint/no-floating-promises
    this._sendEnvelope(envelope);
  }

  /**
   * @inheritDoc
   */
   _prepareEvent(event, hint, scope) {
    event.platform = event.platform || 'javascript';
    return super._prepareEvent(event, hint, scope);
  }

  /**
   * Sends client reports as an envelope.
   */
   _flushOutcomes() {
    const outcomes = this._clearOutcomes();

    if (outcomes.length === 0) {
      _debug_build_js__WEBPACK_IMPORTED_MODULE_5__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.log('No outcomes to send');
      return;
    }

    // This is really the only place where we want to check for a DSN and only send outcomes then
    if (!this._dsn) {
      _debug_build_js__WEBPACK_IMPORTED_MODULE_5__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.log('No dsn provided, will not send outcomes');
      return;
    }

    _debug_build_js__WEBPACK_IMPORTED_MODULE_5__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.log('Sending outcomes:', outcomes);

    const envelope = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_8__.createClientReportEnvelope)(outcomes, this._options.tunnel && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_9__.dsnToString)(this._dsn));

    // _sendEnvelope should not throw
    // eslint-disable-next-line @typescript-eslint/no-floating-promises
    this._sendEnvelope(envelope);
  }
}


//# sourceMappingURL=client.js.map


/***/ }),

/***/ "./node_modules/@sentry/browser/esm/debug-build.js":
/*!*********************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/debug-build.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DEBUG_BUILD": () => (/* binding */ DEBUG_BUILD)
/* harmony export */ });
/**
 * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.
 *
 * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.
 */
const DEBUG_BUILD = (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__);


//# sourceMappingURL=debug-build.js.map


/***/ }),

/***/ "./node_modules/@sentry/browser/esm/eventbuilder.js":
/*!**********************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/eventbuilder.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "eventFromError": () => (/* binding */ eventFromError),
/* harmony export */   "eventFromException": () => (/* binding */ eventFromException),
/* harmony export */   "eventFromMessage": () => (/* binding */ eventFromMessage),
/* harmony export */   "eventFromPlainObject": () => (/* binding */ eventFromPlainObject),
/* harmony export */   "eventFromString": () => (/* binding */ eventFromString),
/* harmony export */   "eventFromUnknownInput": () => (/* binding */ eventFromUnknownInput),
/* harmony export */   "exceptionFromError": () => (/* binding */ exceptionFromError),
/* harmony export */   "parseStackFrames": () => (/* binding */ parseStackFrames)
/* harmony export */ });
/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ "./node_modules/@sentry/core/esm/exports.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/is.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/normalize.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/misc.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/syncpromise.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/object.js");



/**
 * This function creates an exception from a JavaScript Error
 */
function exceptionFromError(stackParser, ex) {
  // Get the frames first since Opera can lose the stack if we touch anything else first
  const frames = parseStackFrames(stackParser, ex);

  const exception = {
    type: ex && ex.name,
    value: extractMessage(ex),
  };

  if (frames.length) {
    exception.stacktrace = { frames };
  }

  if (exception.type === undefined && exception.value === '') {
    exception.value = 'Unrecoverable error caught';
  }

  return exception;
}

/**
 * @hidden
 */
function eventFromPlainObject(
  stackParser,
  exception,
  syntheticException,
  isUnhandledRejection,
) {
  const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getClient)();
  const normalizeDepth = client && client.getOptions().normalizeDepth;

  const event = {
    exception: {
      values: [
        {
          type: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isEvent)(exception) ? exception.constructor.name : isUnhandledRejection ? 'UnhandledRejection' : 'Error',
          value: getNonErrorObjectExceptionValue(exception, { isUnhandledRejection }),
        },
      ],
    },
    extra: {
      __serialized__: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.normalizeToSize)(exception, normalizeDepth),
    },
  };

  if (syntheticException) {
    const frames = parseStackFrames(stackParser, syntheticException);
    if (frames.length) {
      // event.exception.values[0] has been set above
      (event.exception ).values[0].stacktrace = { frames };
    }
  }

  return event;
}

/**
 * @hidden
 */
function eventFromError(stackParser, ex) {
  return {
    exception: {
      values: [exceptionFromError(stackParser, ex)],
    },
  };
}

/** Parses stack frames from an error */
function parseStackFrames(
  stackParser,
  ex,
) {
  // Access and store the stacktrace property before doing ANYTHING
  // else to it because Opera is not very good at providing it
  // reliably in other circumstances.
  const stacktrace = ex.stacktrace || ex.stack || '';

  const popSize = getPopSize(ex);

  try {
    return stackParser(stacktrace, popSize);
  } catch (e) {
    // no-empty
  }

  return [];
}

// Based on our own mapping pattern - https://github.com/getsentry/sentry/blob/9f08305e09866c8bd6d0c24f5b0aabdd7dd6c59c/src/sentry/lang/javascript/errormapping.py#L83-L108
const reactMinifiedRegexp = /Minified React error #\d+;/i;

function getPopSize(ex) {
  if (ex) {
    if (typeof ex.framesToPop === 'number') {
      return ex.framesToPop;
    }

    if (reactMinifiedRegexp.test(ex.message)) {
      return 1;
    }
  }

  return 0;
}

/**
 * There are cases where stacktrace.message is an Event object
 * https://github.com/getsentry/sentry-javascript/issues/1949
 * In this specific case we try to extract stacktrace.message.error.message
 */
function extractMessage(ex) {
  const message = ex && ex.message;
  if (!message) {
    return 'No error message';
  }
  if (message.error && typeof message.error.message === 'string') {
    return message.error.message;
  }
  return message;
}

/**
 * Creates an {@link Event} from all inputs to `captureException` and non-primitive inputs to `captureMessage`.
 * @hidden
 */
function eventFromException(
  stackParser,
  exception,
  hint,
  attachStacktrace,
) {
  const syntheticException = (hint && hint.syntheticException) || undefined;
  const event = eventFromUnknownInput(stackParser, exception, syntheticException, attachStacktrace);
  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.addExceptionMechanism)(event); // defaults to { type: 'generic', handled: true }
  event.level = 'error';
  if (hint && hint.event_id) {
    event.event_id = hint.event_id;
  }
  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.resolvedSyncPromise)(event);
}

/**
 * Builds and Event from a Message
 * @hidden
 */
function eventFromMessage(
  stackParser,
  message,
  // eslint-disable-next-line deprecation/deprecation
  level = 'info',
  hint,
  attachStacktrace,
) {
  const syntheticException = (hint && hint.syntheticException) || undefined;
  const event = eventFromString(stackParser, message, syntheticException, attachStacktrace);
  event.level = level;
  if (hint && hint.event_id) {
    event.event_id = hint.event_id;
  }
  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.resolvedSyncPromise)(event);
}

/**
 * @hidden
 */
function eventFromUnknownInput(
  stackParser,
  exception,
  syntheticException,
  attachStacktrace,
  isUnhandledRejection,
) {
  let event;

  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isErrorEvent)(exception ) && (exception ).error) {
    // If it is an ErrorEvent with `error` property, extract it to get actual Error
    const errorEvent = exception ;
    return eventFromError(stackParser, errorEvent.error );
  }

  // If it is a `DOMError` (which is a legacy API, but still supported in some browsers) then we just extract the name
  // and message, as it doesn't provide anything else. According to the spec, all `DOMExceptions` should also be
  // `Error`s, but that's not the case in IE11, so in that case we treat it the same as we do a `DOMError`.
  //
  // https://developer.mozilla.org/en-US/docs/Web/API/DOMError
  // https://developer.mozilla.org/en-US/docs/Web/API/DOMException
  // https://webidl.spec.whatwg.org/#es-DOMException-specialness
  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isDOMError)(exception) || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isDOMException)(exception )) {
    const domException = exception ;

    if ('stack' in (exception )) {
      event = eventFromError(stackParser, exception );
    } else {
      const name = domException.name || ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isDOMError)(domException) ? 'DOMError' : 'DOMException');
      const message = domException.message ? `${name}: ${domException.message}` : name;
      event = eventFromString(stackParser, message, syntheticException, attachStacktrace);
      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.addExceptionTypeValue)(event, message);
    }
    if ('code' in domException) {
      // eslint-disable-next-line deprecation/deprecation
      event.tags = { ...event.tags, 'DOMException.code': `${domException.code}` };
    }

    return event;
  }
  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isError)(exception)) {
    // we have a real Error object, do nothing
    return eventFromError(stackParser, exception);
  }
  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isPlainObject)(exception) || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isEvent)(exception)) {
    // If it's a plain object or an instance of `Event` (the built-in JS kind, not this SDK's `Event` type), serialize
    // it manually. This will allow us to group events based on top-level keys which is much better than creating a new
    // group on any key/value change.
    const objectException = exception ;
    event = eventFromPlainObject(stackParser, objectException, syntheticException, isUnhandledRejection);
    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.addExceptionMechanism)(event, {
      synthetic: true,
    });
    return event;
  }

  // If none of previous checks were valid, then it means that it's not:
  // - an instance of DOMError
  // - an instance of DOMException
  // - an instance of Event
  // - an instance of Error
  // - a valid ErrorEvent (one with an error property)
  // - a plain Object
  //
  // So bail out and capture it as a simple message:
  event = eventFromString(stackParser, exception , syntheticException, attachStacktrace);
  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.addExceptionTypeValue)(event, `${exception}`, undefined);
  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.addExceptionMechanism)(event, {
    synthetic: true,
  });

  return event;
}

/**
 * @hidden
 */
function eventFromString(
  stackParser,
  message,
  syntheticException,
  attachStacktrace,
) {
  const event = {};

  if (attachStacktrace && syntheticException) {
    const frames = parseStackFrames(stackParser, syntheticException);
    if (frames.length) {
      event.exception = {
        values: [{ value: message, stacktrace: { frames } }],
      };
    }
  }

  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isParameterizedString)(message)) {
    const { __sentry_template_string__, __sentry_template_values__ } = message;

    event.logentry = {
      message: __sentry_template_string__,
      params: __sentry_template_values__,
    };
    return event;
  }

  event.message = message;
  return event;
}

function getNonErrorObjectExceptionValue(
  exception,
  { isUnhandledRejection },
) {
  const keys = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.extractExceptionKeysForMessage)(exception);
  const captureType = isUnhandledRejection ? 'promise rejection' : 'exception';

  // Some ErrorEvent instances do not have an `error` property, which is why they are not handled before
  // We still want to try to get a decent message for these cases
  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isErrorEvent)(exception)) {
    return `Event \`ErrorEvent\` captured as ${captureType} with message \`${exception.message}\``;
  }

  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isEvent)(exception)) {
    const className = getObjectClassName(exception);
    return `Event \`${className}\` (type=${exception.type}) captured as ${captureType}`;
  }

  return `Object captured as ${captureType} with keys: ${keys}`;
}

function getObjectClassName(obj) {
  try {
    const prototype = Object.getPrototypeOf(obj);
    return prototype ? prototype.constructor.name : undefined;
  } catch (e) {
    // ignore errors here
  }
}


//# sourceMappingURL=eventbuilder.js.map


/***/ }),

/***/ "./node_modules/@sentry/browser/esm/helpers.js":
/*!*****************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/helpers.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "WINDOW": () => (/* binding */ WINDOW),
/* harmony export */   "ignoreNextOnError": () => (/* binding */ ignoreNextOnError),
/* harmony export */   "shouldIgnoreOnError": () => (/* binding */ shouldIgnoreOnError),
/* harmony export */   "wrap": () => (/* binding */ wrap)
/* harmony export */ });
/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ "./node_modules/@sentry/core/esm/exports.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/worldwide.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/object.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/misc.js");



const WINDOW = _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ ;

let ignoreOnError = 0;

/**
 * @hidden
 */
function shouldIgnoreOnError() {
  return ignoreOnError > 0;
}

/**
 * @hidden
 */
function ignoreNextOnError() {
  // onerror should trigger before setTimeout
  ignoreOnError++;
  setTimeout(() => {
    ignoreOnError--;
  });
}

/**
 * Instruments the given function and sends an event to Sentry every time the
 * function throws an exception.
 *
 * @param fn A function to wrap. It is generally safe to pass an unbound function, because the returned wrapper always
 * has a correct `this` context.
 * @returns The wrapped function.
 * @hidden
 */
function wrap(
  fn,
  options

 = {},
  before,
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
) {
  // for future readers what this does is wrap a function and then create
  // a bi-directional wrapping between them.
  //
  // example: wrapped = wrap(original);
  //  original.__sentry_wrapped__ -> wrapped
  //  wrapped.__sentry_original__ -> original

  if (typeof fn !== 'function') {
    return fn;
  }

  try {
    // if we're dealing with a function that was previously wrapped, return
    // the original wrapper.
    const wrapper = fn.__sentry_wrapped__;
    if (wrapper) {
      return wrapper;
    }

    // We don't wanna wrap it twice
    if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.getOriginalFunction)(fn)) {
      return fn;
    }
  } catch (e) {
    // Just accessing custom props in some Selenium environments
    // can cause a "Permission denied" exception (see raven-js#495).
    // Bail on wrapping and return the function as-is (defers to window.onerror).
    return fn;
  }

  /* eslint-disable prefer-rest-params */
  // It is important that `sentryWrapped` is not an arrow function to preserve the context of `this`
  const sentryWrapped = function () {
    const args = Array.prototype.slice.call(arguments);

    try {
      if (before && typeof before === 'function') {
        before.apply(this, arguments);
      }

      // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access
      const wrappedArguments = args.map((arg) => wrap(arg, options));

      // Attempt to invoke user-land function
      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it
      //       means the sentry.javascript SDK caught an error invoking your application code. This
      //       is expected behavior and NOT indicative of a bug with sentry.javascript.
      return fn.apply(this, wrappedArguments);
    } catch (ex) {
      ignoreNextOnError();

      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.withScope)(scope => {
        scope.addEventProcessor(event => {
          if (options.mechanism) {
            (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.addExceptionTypeValue)(event, undefined, undefined);
            (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.addExceptionMechanism)(event, options.mechanism);
          }

          event.extra = {
            ...event.extra,
            arguments: args,
          };

          return event;
        });

        (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.captureException)(ex);
      });

      throw ex;
    }
  };
  /* eslint-enable prefer-rest-params */

  // Accessing some objects may throw
  // ref: https://github.com/getsentry/sentry-javascript/issues/1168
  try {
    for (const property in fn) {
      if (Object.prototype.hasOwnProperty.call(fn, property)) {
        sentryWrapped[property] = fn[property];
      }
    }
  } catch (_oO) {} // eslint-disable-line no-empty

  // Signal that this function has been wrapped/filled already
  // for both debugging and to prevent it to being wrapped/filled twice
  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.markFunctionWrapped)(sentryWrapped, fn);

  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.addNonEnumerableProperty)(fn, '__sentry_wrapped__', sentryWrapped);

  // Restore original function name (not all browsers allow that)
  try {
    const descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name') ;
    if (descriptor.configurable) {
      Object.defineProperty(sentryWrapped, 'name', {
        get() {
          return fn.name;
        },
      });
    }
    // eslint-disable-next-line no-empty
  } catch (_oO) {}

  return sentryWrapped;
}

/**
 * All properties the report dialog supports
 *
 * @deprecated This type will be removed in the next major version of the Sentry SDK. `showReportDialog` will still be around, however the `eventId` option will now be required.
 */


//# sourceMappingURL=helpers.js.map


/***/ }),

/***/ "./node_modules/@sentry/browser/esm/integrations/breadcrumbs.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/integrations/breadcrumbs.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Breadcrumbs": () => (/* binding */ Breadcrumbs),
/* harmony export */   "breadcrumbsIntegration": () => (/* binding */ breadcrumbsIntegration)
/* harmony export */ });
/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/core */ "./node_modules/@sentry/core/esm/integration.js");
/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/core */ "./node_modules/@sentry/core/esm/exports.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/instrument/console.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/instrument/dom.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/instrument/xhr.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/instrument/fetch.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/instrument/history.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/misc.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/logger.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/browser.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/severity.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/string.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/url.js");
/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../debug-build.js */ "./node_modules/@sentry/browser/esm/debug-build.js");
/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../helpers.js */ "./node_modules/@sentry/browser/esm/helpers.js");





/* eslint-disable max-lines */

/** maxStringLength gets capped to prevent 100 breadcrumbs exceeding 1MB event payload size */
const MAX_ALLOWED_STRING_LENGTH = 1024;

const INTEGRATION_NAME = 'Breadcrumbs';

const _breadcrumbsIntegration = ((options = {}) => {
  const _options = {
    console: true,
    dom: true,
    fetch: true,
    history: true,
    sentry: true,
    xhr: true,
    ...options,
  };

  return {
    name: INTEGRATION_NAME,
    // TODO v8: Remove this
    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function
    setup(client) {
      if (_options.console) {
        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addConsoleInstrumentationHandler)(_getConsoleBreadcrumbHandler(client));
      }
      if (_options.dom) {
        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.addClickKeypressInstrumentationHandler)(_getDomBreadcrumbHandler(client, _options.dom));
      }
      if (_options.xhr) {
        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.addXhrInstrumentationHandler)(_getXhrBreadcrumbHandler(client));
      }
      if (_options.fetch) {
        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.addFetchInstrumentationHandler)(_getFetchBreadcrumbHandler(client));
      }
      if (_options.history) {
        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.addHistoryInstrumentationHandler)(_getHistoryBreadcrumbHandler(client));
      }
      if (_options.sentry && client.on) {
        client.on('beforeSendEvent', _getSentryBreadcrumbHandler(client));
      }
    },
  };
}) ;

const breadcrumbsIntegration = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_5__.defineIntegration)(_breadcrumbsIntegration);

/**
 * Default Breadcrumbs instrumentations
 *
 * @deprecated Use `breadcrumbsIntegration()` instead.
 */
// eslint-disable-next-line deprecation/deprecation
const Breadcrumbs = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_5__.convertIntegrationFnToClass)(INTEGRATION_NAME, breadcrumbsIntegration)

;

/**
 * Adds a breadcrumb for Sentry events or transactions if this option is enabled.
 */
function _getSentryBreadcrumbHandler(client) {
  return function addSentryBreadcrumb(event) {
    if ((0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.getClient)() !== client) {
      return;
    }

    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.addBreadcrumb)(
      {
        category: `sentry.${event.type === 'transaction' ? 'transaction' : 'event'}`,
        event_id: event.event_id,
        level: event.level,
        message: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_7__.getEventDescription)(event),
      },
      {
        event,
      },
    );
  };
}

/**
 * A HOC that creaes a function that creates breadcrumbs from DOM API calls.
 * This is a HOC so that we get access to dom options in the closure.
 */
function _getDomBreadcrumbHandler(
  client,
  dom,
) {
  return function _innerDomBreadcrumb(handlerData) {
    if ((0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.getClient)() !== client) {
      return;
    }

    let target;
    let componentName;
    let keyAttrs = typeof dom === 'object' ? dom.serializeAttribute : undefined;

    let maxStringLength =
      typeof dom === 'object' && typeof dom.maxStringLength === 'number' ? dom.maxStringLength : undefined;
    if (maxStringLength && maxStringLength > MAX_ALLOWED_STRING_LENGTH) {
      _debug_build_js__WEBPACK_IMPORTED_MODULE_8__.DEBUG_BUILD &&
        _sentry_utils__WEBPACK_IMPORTED_MODULE_9__.logger.warn(
          `\`dom.maxStringLength\` cannot exceed ${MAX_ALLOWED_STRING_LENGTH}, but a value of ${maxStringLength} was configured. Sentry will use ${MAX_ALLOWED_STRING_LENGTH} instead.`,
        );
      maxStringLength = MAX_ALLOWED_STRING_LENGTH;
    }

    if (typeof keyAttrs === 'string') {
      keyAttrs = [keyAttrs];
    }

    // Accessing event.target can throw (see getsentry/raven-js#838, #768)
    try {
      const event = handlerData.event ;
      const element = _isEvent(event) ? event.target : event;

      target = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_10__.htmlTreeAsString)(element, { keyAttrs, maxStringLength });
      componentName = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_10__.getComponentName)(element);
    } catch (e) {
      target = '<unknown>';
    }

    if (target.length === 0) {
      return;
    }

    const breadcrumb = {
      category: `ui.${handlerData.name}`,
      message: target,
    };

    if (componentName) {
      breadcrumb.data = { 'ui.component_name': componentName };
    }

    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.addBreadcrumb)(breadcrumb, {
      event: handlerData.event,
      name: handlerData.name,
      global: handlerData.global,
    });
  };
}

/**
 * Creates breadcrumbs from console API calls
 */
function _getConsoleBreadcrumbHandler(client) {
  return function _consoleBreadcrumb(handlerData) {
    if ((0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.getClient)() !== client) {
      return;
    }

    const breadcrumb = {
      category: 'console',
      data: {
        arguments: handlerData.args,
        logger: 'console',
      },
      level: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_11__.severityLevelFromString)(handlerData.level),
      message: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_12__.safeJoin)(handlerData.args, ' '),
    };

    if (handlerData.level === 'assert') {
      if (handlerData.args[0] === false) {
        breadcrumb.message = `Assertion failed: ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_12__.safeJoin)(handlerData.args.slice(1), ' ') || 'console.assert'}`;
        breadcrumb.data.arguments = handlerData.args.slice(1);
      } else {
        // Don't capture a breadcrumb for passed assertions
        return;
      }
    }

    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.addBreadcrumb)(breadcrumb, {
      input: handlerData.args,
      level: handlerData.level,
    });
  };
}

/**
 * Creates breadcrumbs from XHR API calls
 */
function _getXhrBreadcrumbHandler(client) {
  return function _xhrBreadcrumb(handlerData) {
    if ((0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.getClient)() !== client) {
      return;
    }

    const { startTimestamp, endTimestamp } = handlerData;

    const sentryXhrData = handlerData.xhr[_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.SENTRY_XHR_DATA_KEY];

    // We only capture complete, non-sentry requests
    if (!startTimestamp || !endTimestamp || !sentryXhrData) {
      return;
    }

    const { method, url, status_code, body } = sentryXhrData;

    const data = {
      method,
      url,
      status_code,
    };

    const hint = {
      xhr: handlerData.xhr,
      input: body,
      startTimestamp,
      endTimestamp,
    };

    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.addBreadcrumb)(
      {
        category: 'xhr',
        data,
        type: 'http',
      },
      hint,
    );
  };
}

/**
 * Creates breadcrumbs from fetch API calls
 */
function _getFetchBreadcrumbHandler(client) {
  return function _fetchBreadcrumb(handlerData) {
    if ((0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.getClient)() !== client) {
      return;
    }

    const { startTimestamp, endTimestamp } = handlerData;

    // We only capture complete fetch requests
    if (!endTimestamp) {
      return;
    }

    if (handlerData.fetchData.url.match(/sentry_key/) && handlerData.fetchData.method === 'POST') {
      // We will not create breadcrumbs for fetch requests that contain `sentry_key` (internal sentry requests)
      return;
    }

    if (handlerData.error) {
      const data = handlerData.fetchData;
      const hint = {
        data: handlerData.error,
        input: handlerData.args,
        startTimestamp,
        endTimestamp,
      };

      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.addBreadcrumb)(
        {
          category: 'fetch',
          data,
          level: 'error',
          type: 'http',
        },
        hint,
      );
    } else {
      const response = handlerData.response ;
      const data = {
        ...handlerData.fetchData,
        status_code: response && response.status,
      };
      const hint = {
        input: handlerData.args,
        response,
        startTimestamp,
        endTimestamp,
      };
      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.addBreadcrumb)(
        {
          category: 'fetch',
          data,
          type: 'http',
        },
        hint,
      );
    }
  };
}

/**
 * Creates breadcrumbs from history API calls
 */
function _getHistoryBreadcrumbHandler(client) {
  return function _historyBreadcrumb(handlerData) {
    if ((0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.getClient)() !== client) {
      return;
    }

    let from = handlerData.from;
    let to = handlerData.to;
    const parsedLoc = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_13__.parseUrl)(_helpers_js__WEBPACK_IMPORTED_MODULE_14__.WINDOW.location.href);
    let parsedFrom = from ? (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_13__.parseUrl)(from) : undefined;
    const parsedTo = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_13__.parseUrl)(to);

    // Initial pushState doesn't provide `from` information
    if (!parsedFrom || !parsedFrom.path) {
      parsedFrom = parsedLoc;
    }

    // Use only the path component of the URL if the URL matches the current
    // document (almost all the time when using pushState)
    if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {
      to = parsedTo.relative;
    }
    if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {
      from = parsedFrom.relative;
    }

    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.addBreadcrumb)({
      category: 'navigation',
      data: {
        from,
        to,
      },
    });
  };
}

function _isEvent(event) {
  return !!event && !!(event ).target;
}


//# sourceMappingURL=breadcrumbs.js.map


/***/ }),

/***/ "./node_modules/@sentry/browser/esm/integrations/dedupe.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/integrations/dedupe.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Dedupe": () => (/* binding */ Dedupe),
/* harmony export */   "dedupeIntegration": () => (/* binding */ dedupeIntegration)
/* harmony export */ });
/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ "./node_modules/@sentry/core/esm/integration.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/logger.js");
/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../debug-build.js */ "./node_modules/@sentry/browser/esm/debug-build.js");




const INTEGRATION_NAME = 'Dedupe';

const _dedupeIntegration = (() => {
  let previousEvent;

  return {
    name: INTEGRATION_NAME,
    // TODO v8: Remove this
    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function
    processEvent(currentEvent) {
      // We want to ignore any non-error type events, e.g. transactions or replays
      // These should never be deduped, and also not be compared against as _previousEvent.
      if (currentEvent.type) {
        return currentEvent;
      }

      // Juuust in case something goes wrong
      try {
        if (_shouldDropEvent(currentEvent, previousEvent)) {
          _debug_build_js__WEBPACK_IMPORTED_MODULE_0__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.warn('Event dropped due to being a duplicate of previously captured event.');
          return null;
        }
      } catch (_oO) {} // eslint-disable-line no-empty

      return (previousEvent = currentEvent);
    },
  };
}) ;

const dedupeIntegration = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.defineIntegration)(_dedupeIntegration);

/**
 * Deduplication filter.
 * @deprecated Use `dedupeIntegration()` instead.
 */
// eslint-disable-next-line deprecation/deprecation
const Dedupe = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.convertIntegrationFnToClass)(INTEGRATION_NAME, dedupeIntegration)

;

function _shouldDropEvent(currentEvent, previousEvent) {
  if (!previousEvent) {
    return false;
  }

  if (_isSameMessageEvent(currentEvent, previousEvent)) {
    return true;
  }

  if (_isSameExceptionEvent(currentEvent, previousEvent)) {
    return true;
  }

  return false;
}

function _isSameMessageEvent(currentEvent, previousEvent) {
  const currentMessage = currentEvent.message;
  const previousMessage = previousEvent.message;

  // If neither event has a message property, they were both exceptions, so bail out
  if (!currentMessage && !previousMessage) {
    return false;
  }

  // If only one event has a stacktrace, but not the other one, they are not the same
  if ((currentMessage && !previousMessage) || (!currentMessage && previousMessage)) {
    return false;
  }

  if (currentMessage !== previousMessage) {
    return false;
  }

  if (!_isSameFingerprint(currentEvent, previousEvent)) {
    return false;
  }

  if (!_isSameStacktrace(currentEvent, previousEvent)) {
    return false;
  }

  return true;
}

function _isSameExceptionEvent(currentEvent, previousEvent) {
  const previousException = _getExceptionFromEvent(previousEvent);
  const currentException = _getExceptionFromEvent(currentEvent);

  if (!previousException || !currentException) {
    return false;
  }

  if (previousException.type !== currentException.type || previousException.value !== currentException.value) {
    return false;
  }

  if (!_isSameFingerprint(currentEvent, previousEvent)) {
    return false;
  }

  if (!_isSameStacktrace(currentEvent, previousEvent)) {
    return false;
  }

  return true;
}

function _isSameStacktrace(currentEvent, previousEvent) {
  let currentFrames = _getFramesFromEvent(currentEvent);
  let previousFrames = _getFramesFromEvent(previousEvent);

  // If neither event has a stacktrace, they are assumed to be the same
  if (!currentFrames && !previousFrames) {
    return true;
  }

  // If only one event has a stacktrace, but not the other one, they are not the same
  if ((currentFrames && !previousFrames) || (!currentFrames && previousFrames)) {
    return false;
  }

  currentFrames = currentFrames ;
  previousFrames = previousFrames ;

  // If number of frames differ, they are not the same
  if (previousFrames.length !== currentFrames.length) {
    return false;
  }

  // Otherwise, compare the two
  for (let i = 0; i < previousFrames.length; i++) {
    const frameA = previousFrames[i];
    const frameB = currentFrames[i];

    if (
      frameA.filename !== frameB.filename ||
      frameA.lineno !== frameB.lineno ||
      frameA.colno !== frameB.colno ||
      frameA.function !== frameB.function
    ) {
      return false;
    }
  }

  return true;
}

function _isSameFingerprint(currentEvent, previousEvent) {
  let currentFingerprint = currentEvent.fingerprint;
  let previousFingerprint = previousEvent.fingerprint;

  // If neither event has a fingerprint, they are assumed to be the same
  if (!currentFingerprint && !previousFingerprint) {
    return true;
  }

  // If only one event has a fingerprint, but not the other one, they are not the same
  if ((currentFingerprint && !previousFingerprint) || (!currentFingerprint && previousFingerprint)) {
    return false;
  }

  currentFingerprint = currentFingerprint ;
  previousFingerprint = previousFingerprint ;

  // Otherwise, compare the two
  try {
    return !!(currentFingerprint.join('') === previousFingerprint.join(''));
  } catch (_oO) {
    return false;
  }
}

function _getExceptionFromEvent(event) {
  return event.exception && event.exception.values && event.exception.values[0];
}

function _getFramesFromEvent(event) {
  const exception = event.exception;

  if (exception) {
    try {
      // @ts-expect-error Object could be undefined
      return exception.values[0].stacktrace.frames;
    } catch (_oO) {
      return undefined;
    }
  }
  return undefined;
}


//# sourceMappingURL=dedupe.js.map


/***/ }),

/***/ "./node_modules/@sentry/browser/esm/integrations/globalhandlers.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/integrations/globalhandlers.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GlobalHandlers": () => (/* binding */ GlobalHandlers),
/* harmony export */   "globalHandlersIntegration": () => (/* binding */ globalHandlersIntegration)
/* harmony export */ });
/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ "./node_modules/@sentry/core/esm/integration.js");
/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ "./node_modules/@sentry/core/esm/exports.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/instrument/globalError.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/is.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/instrument/globalUnhandledRejection.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/browser.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/logger.js");
/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../debug-build.js */ "./node_modules/@sentry/browser/esm/debug-build.js");
/* harmony import */ var _eventbuilder_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../eventbuilder.js */ "./node_modules/@sentry/browser/esm/eventbuilder.js");
/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers.js */ "./node_modules/@sentry/browser/esm/helpers.js");






/* eslint-disable @typescript-eslint/no-unsafe-member-access */

const INTEGRATION_NAME = 'GlobalHandlers';

const _globalHandlersIntegration = ((options = {}) => {
  const _options = {
    onerror: true,
    onunhandledrejection: true,
    ...options,
  };

  return {
    name: INTEGRATION_NAME,
    setupOnce() {
      Error.stackTraceLimit = 50;
    },
    setup(client) {
      if (_options.onerror) {
        _installGlobalOnErrorHandler(client);
        globalHandlerLog('onerror');
      }
      if (_options.onunhandledrejection) {
        _installGlobalOnUnhandledRejectionHandler(client);
        globalHandlerLog('onunhandledrejection');
      }
    },
  };
}) ;

const globalHandlersIntegration = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.defineIntegration)(_globalHandlersIntegration);

/**
 * Global handlers.
 * @deprecated Use `globalHandlersIntegration()` instead.
 */
// eslint-disable-next-line deprecation/deprecation
const GlobalHandlers = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.convertIntegrationFnToClass)(
  INTEGRATION_NAME,
  globalHandlersIntegration,
)

;

function _installGlobalOnErrorHandler(client) {
  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.addGlobalErrorInstrumentationHandler)(data => {
    const { stackParser, attachStacktrace } = getOptions();

    if ((0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getClient)() !== client || (0,_helpers_js__WEBPACK_IMPORTED_MODULE_3__.shouldIgnoreOnError)()) {
      return;
    }

    const { msg, url, line, column, error } = data;

    const event =
      error === undefined && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.isString)(msg)
        ? _eventFromIncompleteOnError(msg, url, line, column)
        : _enhanceEventWithInitialFrame(
            (0,_eventbuilder_js__WEBPACK_IMPORTED_MODULE_5__.eventFromUnknownInput)(stackParser, error || msg, undefined, attachStacktrace, false),
            url,
            line,
            column,
          );

    event.level = 'error';

    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.captureEvent)(event, {
      originalException: error,
      mechanism: {
        handled: false,
        type: 'onerror',
      },
    });
  });
}

function _installGlobalOnUnhandledRejectionHandler(client) {
  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_6__.addGlobalUnhandledRejectionInstrumentationHandler)(e => {
    const { stackParser, attachStacktrace } = getOptions();

    if ((0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getClient)() !== client || (0,_helpers_js__WEBPACK_IMPORTED_MODULE_3__.shouldIgnoreOnError)()) {
      return;
    }

    const error = _getUnhandledRejectionError(e );

    const event = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.isPrimitive)(error)
      ? _eventFromRejectionWithPrimitive(error)
      : (0,_eventbuilder_js__WEBPACK_IMPORTED_MODULE_5__.eventFromUnknownInput)(stackParser, error, undefined, attachStacktrace, true);

    event.level = 'error';

    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.captureEvent)(event, {
      originalException: error,
      mechanism: {
        handled: false,
        type: 'onunhandledrejection',
      },
    });
  });
}

function _getUnhandledRejectionError(error) {
  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.isPrimitive)(error)) {
    return error;
  }

  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  const e = error ;

  // dig the object of the rejection out of known event types
  try {
    // PromiseRejectionEvents store the object of the rejection under 'reason'
    // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent
    if ('reason' in e) {
      return e.reason;
    }

    // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents
    // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into
    // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec
    // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and
    // https://github.com/getsentry/sentry-javascript/issues/2380
    else if ('detail' in e && 'reason' in e.detail) {
      return e.detail.reason;
    }
  } catch (e2) {} // eslint-disable-line no-empty

  return error;
}

/**
 * Create an event from a promise rejection where the `reason` is a primitive.
 *
 * @param reason: The `reason` property of the promise rejection
 * @returns An Event object with an appropriate `exception` value
 */
function _eventFromRejectionWithPrimitive(reason) {
  return {
    exception: {
      values: [
        {
          type: 'UnhandledRejection',
          // String() is needed because the Primitive type includes symbols (which can't be automatically stringified)
          value: `Non-Error promise rejection captured with value: ${String(reason)}`,
        },
      ],
    },
  };
}

/**
 * This function creates a stack from an old, error-less onerror handler.
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function _eventFromIncompleteOnError(msg, url, line, column) {
  const ERROR_TYPES_RE =
    /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;

  // If 'message' is ErrorEvent, get real message from inside
  let message = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.isErrorEvent)(msg) ? msg.message : msg;
  let name = 'Error';

  const groups = message.match(ERROR_TYPES_RE);
  if (groups) {
    name = groups[1];
    message = groups[2];
  }

  const event = {
    exception: {
      values: [
        {
          type: name,
          value: message,
        },
      ],
    },
  };

  return _enhanceEventWithInitialFrame(event, url, line, column);
}

// eslint-disable-next-line @typescript-eslint/no-explicit-any
function _enhanceEventWithInitialFrame(event, url, line, column) {
  // event.exception
  const e = (event.exception = event.exception || {});
  // event.exception.values
  const ev = (e.values = e.values || []);
  // event.exception.values[0]
  const ev0 = (ev[0] = ev[0] || {});
  // event.exception.values[0].stacktrace
  const ev0s = (ev0.stacktrace = ev0.stacktrace || {});
  // event.exception.values[0].stacktrace.frames
  const ev0sf = (ev0s.frames = ev0s.frames || []);

  const colno = isNaN(parseInt(column, 10)) ? undefined : column;
  const lineno = isNaN(parseInt(line, 10)) ? undefined : line;
  const filename = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.isString)(url) && url.length > 0 ? url : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_7__.getLocationHref)();

  // event.exception.values[0].stacktrace.frames
  if (ev0sf.length === 0) {
    ev0sf.push({
      colno,
      filename,
      function: '?',
      in_app: true,
      lineno,
    });
  }

  return event;
}

function globalHandlerLog(type) {
  _debug_build_js__WEBPACK_IMPORTED_MODULE_8__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_9__.logger.log(`Global Handler attached: ${type}`);
}

function getOptions() {
  const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getClient)();
  const options = (client && client.getOptions()) || {
    stackParser: () => [],
    attachStacktrace: false,
  };
  return options;
}


//# sourceMappingURL=globalhandlers.js.map


/***/ }),

/***/ "./node_modules/@sentry/browser/esm/integrations/httpcontext.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/integrations/httpcontext.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "HttpContext": () => (/* binding */ HttpContext),
/* harmony export */   "httpContextIntegration": () => (/* binding */ httpContextIntegration)
/* harmony export */ });
/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ "./node_modules/@sentry/core/esm/integration.js");
/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers.js */ "./node_modules/@sentry/browser/esm/helpers.js");



const INTEGRATION_NAME = 'HttpContext';

const _httpContextIntegration = (() => {
  return {
    name: INTEGRATION_NAME,
    // TODO v8: Remove this
    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function
    preprocessEvent(event) {
      // if none of the information we want exists, don't bother
      if (!_helpers_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.navigator && !_helpers_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.location && !_helpers_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document) {
        return;
      }

      // grab as much info as exists and add it to the event
      const url = (event.request && event.request.url) || (_helpers_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.location && _helpers_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.location.href);
      const { referrer } = _helpers_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document || {};
      const { userAgent } = _helpers_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.navigator || {};

      const headers = {
        ...(event.request && event.request.headers),
        ...(referrer && { Referer: referrer }),
        ...(userAgent && { 'User-Agent': userAgent }),
      };
      const request = { ...event.request, ...(url && { url }), headers };

      event.request = request;
    },
  };
}) ;

const httpContextIntegration = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.defineIntegration)(_httpContextIntegration);

/**
 * HttpContext integration collects information about HTTP request headers.
 * @deprecated Use `httpContextIntegration()` instead.
 */
// eslint-disable-next-line deprecation/deprecation
const HttpContext = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.convertIntegrationFnToClass)(INTEGRATION_NAME, httpContextIntegration)

;


//# sourceMappingURL=httpcontext.js.map


/***/ }),

/***/ "./node_modules/@sentry/browser/esm/integrations/linkederrors.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/integrations/linkederrors.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LinkedErrors": () => (/* binding */ LinkedErrors),
/* harmony export */   "linkedErrorsIntegration": () => (/* binding */ linkedErrorsIntegration)
/* harmony export */ });
/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ "./node_modules/@sentry/core/esm/integration.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/aggregate-errors.js");
/* harmony import */ var _eventbuilder_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../eventbuilder.js */ "./node_modules/@sentry/browser/esm/eventbuilder.js");




const DEFAULT_KEY = 'cause';
const DEFAULT_LIMIT = 5;

const INTEGRATION_NAME = 'LinkedErrors';

const _linkedErrorsIntegration = ((options = {}) => {
  const limit = options.limit || DEFAULT_LIMIT;
  const key = options.key || DEFAULT_KEY;

  return {
    name: INTEGRATION_NAME,
    // TODO v8: Remove this
    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function
    preprocessEvent(event, hint, client) {
      const options = client.getOptions();

      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.applyAggregateErrorsToEvent)(
        // This differs from the LinkedErrors integration in core by using a different exceptionFromError function
        _eventbuilder_js__WEBPACK_IMPORTED_MODULE_1__.exceptionFromError,
        options.stackParser,
        options.maxValueLength,
        key,
        limit,
        event,
        hint,
      );
    },
  };
}) ;

const linkedErrorsIntegration = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.defineIntegration)(_linkedErrorsIntegration);

/**
 * Aggregrate linked errors in an event.
 * @deprecated Use `linkedErrorsIntegration()` instead.
 */
// eslint-disable-next-line deprecation/deprecation
const LinkedErrors = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.convertIntegrationFnToClass)(INTEGRATION_NAME, linkedErrorsIntegration)

;


//# sourceMappingURL=linkederrors.js.map


/***/ }),

/***/ "./node_modules/@sentry/browser/esm/integrations/trycatch.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/integrations/trycatch.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TryCatch": () => (/* binding */ TryCatch),
/* harmony export */   "browserApiErrorsIntegration": () => (/* binding */ browserApiErrorsIntegration)
/* harmony export */ });
/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ "./node_modules/@sentry/core/esm/integration.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/object.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/stacktrace.js");
/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers.js */ "./node_modules/@sentry/browser/esm/helpers.js");




const DEFAULT_EVENT_TARGET = [
  'EventTarget',
  'Window',
  'Node',
  'ApplicationCache',
  'AudioTrackList',
  'BroadcastChannel',
  'ChannelMergerNode',
  'CryptoOperation',
  'EventSource',
  'FileReader',
  'HTMLUnknownElement',
  'IDBDatabase',
  'IDBRequest',
  'IDBTransaction',
  'KeyOperation',
  'MediaController',
  'MessagePort',
  'ModalWindow',
  'Notification',
  'SVGElementInstance',
  'Screen',
  'SharedWorker',
  'TextTrack',
  'TextTrackCue',
  'TextTrackList',
  'WebSocket',
  'WebSocketWorker',
  'Worker',
  'XMLHttpRequest',
  'XMLHttpRequestEventTarget',
  'XMLHttpRequestUpload',
];

const INTEGRATION_NAME = 'TryCatch';

const _browserApiErrorsIntegration = ((options = {}) => {
  const _options = {
    XMLHttpRequest: true,
    eventTarget: true,
    requestAnimationFrame: true,
    setInterval: true,
    setTimeout: true,
    ...options,
  };

  return {
    name: INTEGRATION_NAME,
    // TODO: This currently only works for the first client this is setup
    // We may want to adjust this to check for client etc.
    setupOnce() {
      if (_options.setTimeout) {
        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.fill)(_helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW, 'setTimeout', _wrapTimeFunction);
      }

      if (_options.setInterval) {
        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.fill)(_helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW, 'setInterval', _wrapTimeFunction);
      }

      if (_options.requestAnimationFrame) {
        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.fill)(_helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW, 'requestAnimationFrame', _wrapRAF);
      }

      if (_options.XMLHttpRequest && "XMLHttpRequest" in _helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW) {
        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.fill)(XMLHttpRequest.prototype, 'send', _wrapXHR);
      }

      const eventTargetOption = _options.eventTarget;
      if (eventTargetOption) {
        const eventTarget = Array.isArray(eventTargetOption) ? eventTargetOption : DEFAULT_EVENT_TARGET;
        eventTarget.forEach(_wrapEventTarget);
      }
    },
  };
}) ;

const browserApiErrorsIntegration = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.defineIntegration)(_browserApiErrorsIntegration);

/**
 * Wrap timer functions and event targets to catch errors and provide better meta data.
 * @deprecated Use `browserApiErrorsIntegration()` instead.
 */
// eslint-disable-next-line deprecation/deprecation
const TryCatch = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.convertIntegrationFnToClass)(
  INTEGRATION_NAME,
  browserApiErrorsIntegration,
)

;

function _wrapTimeFunction(original) {
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  return function ( ...args) {
    const originalCallback = args[0];
    args[0] = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_1__.wrap)(originalCallback, {
      mechanism: {
        data: { function: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.getFunctionName)(original) },
        handled: false,
        type: 'instrument',
      },
    });
    return original.apply(this, args);
  };
}

// eslint-disable-next-line @typescript-eslint/no-explicit-any
function _wrapRAF(original) {
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  return function ( callback) {
    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
    return original.apply(this, [
      (0,_helpers_js__WEBPACK_IMPORTED_MODULE_1__.wrap)(callback, {
        mechanism: {
          data: {
            function: 'requestAnimationFrame',
            handler: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.getFunctionName)(original),
          },
          handled: false,
          type: 'instrument',
        },
      }),
    ]);
  };
}

function _wrapXHR(originalSend) {
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  return function ( ...args) {
    // eslint-disable-next-line @typescript-eslint/no-this-alias
    const xhr = this;
    const xmlHttpRequestProps = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];

    xmlHttpRequestProps.forEach(prop => {
      if (prop in xhr && typeof xhr[prop] === 'function') {
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.fill)(xhr, prop, function (original) {
          const wrapOptions = {
            mechanism: {
              data: {
                function: prop,
                handler: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.getFunctionName)(original),
              },
              handled: false,
              type: 'instrument',
            },
          };

          // If Instrument integration has been called before TryCatch, get the name of original function
          const originalFunction = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getOriginalFunction)(original);
          if (originalFunction) {
            wrapOptions.mechanism.data.handler = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.getFunctionName)(originalFunction);
          }

          // Otherwise wrap directly
          return (0,_helpers_js__WEBPACK_IMPORTED_MODULE_1__.wrap)(original, wrapOptions);
        });
      }
    });

    return originalSend.apply(this, args);
  };
}

function _wrapEventTarget(target) {
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  const globalObject = _helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW ;
  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
  const proto = globalObject[target] && globalObject[target].prototype;

  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins
  if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {
    return;
  }

  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.fill)(proto, 'addEventListener', function (original,)

 {
    return function (
      // eslint-disable-next-line @typescript-eslint/no-explicit-any

      eventName,
      fn,
      options,
    ) {
      try {
        if (typeof fn.handleEvent === 'function') {
          // ESlint disable explanation:
          //  First, it is generally safe to call `wrap` with an unbound function. Furthermore, using `.bind()` would
          //  introduce a bug here, because bind returns a new function that doesn't have our
          //  flags(like __sentry_original__) attached. `wrap` checks for those flags to avoid unnecessary wrapping.
          //  Without those flags, every call to addEventListener wraps the function again, causing a memory leak.
          // eslint-disable-next-line @typescript-eslint/unbound-method
          fn.handleEvent = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_1__.wrap)(fn.handleEvent, {
            mechanism: {
              data: {
                function: 'handleEvent',
                handler: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.getFunctionName)(fn),
                target,
              },
              handled: false,
              type: 'instrument',
            },
          });
        }
      } catch (err) {
        // can sometimes get 'Permission denied to access property "handle Event'
      }

      return original.apply(this, [
        eventName,
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        (0,_helpers_js__WEBPACK_IMPORTED_MODULE_1__.wrap)(fn , {
          mechanism: {
            data: {
              function: 'addEventListener',
              handler: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.getFunctionName)(fn),
              target,
            },
            handled: false,
            type: 'instrument',
          },
        }),
        options,
      ]);
    };
  });

  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.fill)(
    proto,
    'removeEventListener',
    function (
      originalRemoveEventListener,
      // eslint-disable-next-line @typescript-eslint/no-explicit-any
    ) {
      return function (
        // eslint-disable-next-line @typescript-eslint/no-explicit-any

        eventName,
        fn,
        options,
      ) {
        /**
         * There are 2 possible scenarios here:
         *
         * 1. Someone passes a callback, which was attached prior to Sentry initialization, or by using unmodified
         * method, eg. `document.addEventListener.call(el, name, handler). In this case, we treat this function
         * as a pass-through, and call original `removeEventListener` with it.
         *
         * 2. Someone passes a callback, which was attached after Sentry was initialized, which means that it was using
         * our wrapped version of `addEventListener`, which internally calls `wrap` helper.
         * This helper "wraps" whole callback inside a try/catch statement, and attached appropriate metadata to it,
         * in order for us to make a distinction between wrapped/non-wrapped functions possible.
         * If a function was wrapped, it has additional property of `__sentry_wrapped__`, holding the handler.
         *
         * When someone adds a handler prior to initialization, and then do it again, but after,
         * then we have to detach both of them. Otherwise, if we'd detach only wrapped one, it'd be impossible
         * to get rid of the initial handler and it'd stick there forever.
         */
        const wrappedEventHandler = fn ;
        try {
          const originalEventHandler = wrappedEventHandler && wrappedEventHandler.__sentry_wrapped__;
          if (originalEventHandler) {
            originalRemoveEventListener.call(this, eventName, originalEventHandler, options);
          }
        } catch (e) {
          // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments
        }
        return originalRemoveEventListener.call(this, eventName, wrappedEventHandler, options);
      };
    },
  );
}


//# sourceMappingURL=trycatch.js.map


/***/ }),

/***/ "./node_modules/@sentry/browser/esm/sdk.js":
/*!*************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/sdk.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "captureUserFeedback": () => (/* binding */ captureUserFeedback),
/* harmony export */   "defaultIntegrations": () => (/* binding */ defaultIntegrations),
/* harmony export */   "forceLoad": () => (/* binding */ forceLoad),
/* harmony export */   "getDefaultIntegrations": () => (/* binding */ getDefaultIntegrations),
/* harmony export */   "init": () => (/* binding */ init),
/* harmony export */   "onLoad": () => (/* binding */ onLoad),
/* harmony export */   "showReportDialog": () => (/* binding */ showReportDialog),
/* harmony export */   "wrap": () => (/* binding */ wrap)
/* harmony export */ });
/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ "./node_modules/@sentry/core/esm/integrations/inboundfilters.js");
/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ "./node_modules/@sentry/core/esm/integrations/functiontostring.js");
/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @sentry/core */ "./node_modules/@sentry/core/esm/integration.js");
/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @sentry/core */ "./node_modules/@sentry/core/esm/sdk.js");
/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @sentry/core */ "./node_modules/@sentry/core/esm/hub.js");
/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @sentry/core */ "./node_modules/@sentry/core/esm/api.js");
/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @sentry/core */ "./node_modules/@sentry/core/esm/exports.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/stacktrace.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/supports.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/logger.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/instrument/history.js");
/* harmony import */ var _client_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./client.js */ "./node_modules/@sentry/browser/esm/client.js");
/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./debug-build.js */ "./node_modules/@sentry/browser/esm/debug-build.js");
/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./helpers.js */ "./node_modules/@sentry/browser/esm/helpers.js");
/* harmony import */ var _integrations_breadcrumbs_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./integrations/breadcrumbs.js */ "./node_modules/@sentry/browser/esm/integrations/breadcrumbs.js");
/* harmony import */ var _integrations_dedupe_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./integrations/dedupe.js */ "./node_modules/@sentry/browser/esm/integrations/dedupe.js");
/* harmony import */ var _integrations_globalhandlers_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./integrations/globalhandlers.js */ "./node_modules/@sentry/browser/esm/integrations/globalhandlers.js");
/* harmony import */ var _integrations_httpcontext_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./integrations/httpcontext.js */ "./node_modules/@sentry/browser/esm/integrations/httpcontext.js");
/* harmony import */ var _integrations_linkederrors_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./integrations/linkederrors.js */ "./node_modules/@sentry/browser/esm/integrations/linkederrors.js");
/* harmony import */ var _integrations_trycatch_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./integrations/trycatch.js */ "./node_modules/@sentry/browser/esm/integrations/trycatch.js");
/* harmony import */ var _stack_parsers_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./stack-parsers.js */ "./node_modules/@sentry/browser/esm/stack-parsers.js");
/* harmony import */ var _transports_fetch_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./transports/fetch.js */ "./node_modules/@sentry/browser/esm/transports/fetch.js");
/* harmony import */ var _transports_xhr_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./transports/xhr.js */ "./node_modules/@sentry/browser/esm/transports/xhr.js");















/** @deprecated Use `getDefaultIntegrations(options)` instead. */
const defaultIntegrations = [
  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.inboundFiltersIntegration)(),
  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.functionToStringIntegration)(),
  (0,_integrations_trycatch_js__WEBPACK_IMPORTED_MODULE_2__.browserApiErrorsIntegration)(),
  (0,_integrations_breadcrumbs_js__WEBPACK_IMPORTED_MODULE_3__.breadcrumbsIntegration)(),
  (0,_integrations_globalhandlers_js__WEBPACK_IMPORTED_MODULE_4__.globalHandlersIntegration)(),
  (0,_integrations_linkederrors_js__WEBPACK_IMPORTED_MODULE_5__.linkedErrorsIntegration)(),
  (0,_integrations_dedupe_js__WEBPACK_IMPORTED_MODULE_6__.dedupeIntegration)(),
  (0,_integrations_httpcontext_js__WEBPACK_IMPORTED_MODULE_7__.httpContextIntegration)(),
];

/** Get the default integrations for the browser SDK. */
function getDefaultIntegrations(_options) {
  // We return a copy of the defaultIntegrations here to avoid mutating this
  return [
    // eslint-disable-next-line deprecation/deprecation
    ...defaultIntegrations,
  ];
}

/**
 * A magic string that build tooling can leverage in order to inject a release value into the SDK.
 */

/**
 * The Sentry Browser SDK Client.
 *
 * To use this SDK, call the {@link init} function as early as possible when
 * loading the web page. To set context information or send manual events, use
 * the provided methods.
 *
 * @example
 *
 * ```
 *
 * import { init } from '@sentry/browser';
 *
 * init({
 *   dsn: '__DSN__',
 *   // ...
 * });
 * ```
 *
 * @example
 * ```
 *
 * import { configureScope } from '@sentry/browser';
 * configureScope((scope: Scope) => {
 *   scope.setExtra({ battery: 0.7 });
 *   scope.setTag({ user_mode: 'admin' });
 *   scope.setUser({ id: '4711' });
 * });
 * ```
 *
 * @example
 * ```
 *
 * import { addBreadcrumb } from '@sentry/browser';
 * addBreadcrumb({
 *   message: 'My Breadcrumb',
 *   // ...
 * });
 * ```
 *
 * @example
 *
 * ```
 *
 * import * as Sentry from '@sentry/browser';
 * Sentry.captureMessage('Hello, world!');
 * Sentry.captureException(new Error('Good bye'));
 * Sentry.captureEvent({
 *   message: 'Manual',
 *   stacktrace: [
 *     // ...
 *   ],
 * });
 * ```
 *
 * @see {@link BrowserOptions} for documentation on configuration options.
 */
function init(options = {}) {
  if (options.defaultIntegrations === undefined) {
    options.defaultIntegrations = getDefaultIntegrations();
  }
  if (options.release === undefined) {
    // This allows build tooling to find-and-replace __SENTRY_RELEASE__ to inject a release value
    if (typeof __SENTRY_RELEASE__ === 'string') {
      options.release = __SENTRY_RELEASE__;
    }

    // This supports the variable that sentry-webpack-plugin injects
    if (_helpers_js__WEBPACK_IMPORTED_MODULE_8__.WINDOW.SENTRY_RELEASE && _helpers_js__WEBPACK_IMPORTED_MODULE_8__.WINDOW.SENTRY_RELEASE.id) {
      options.release = _helpers_js__WEBPACK_IMPORTED_MODULE_8__.WINDOW.SENTRY_RELEASE.id;
    }
  }
  if (options.autoSessionTracking === undefined) {
    options.autoSessionTracking = true;
  }
  if (options.sendClientReports === undefined) {
    options.sendClientReports = true;
  }

  const clientOptions = {
    ...options,
    stackParser: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_9__.stackParserFromStackParserOptions)(options.stackParser || _stack_parsers_js__WEBPACK_IMPORTED_MODULE_10__.defaultStackParser),
    integrations: (0,_sentry_core__WEBPACK_IMPORTED_MODULE_11__.getIntegrationsToSetup)(options),
    transport: options.transport || ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_12__.supportsFetch)() ? _transports_fetch_js__WEBPACK_IMPORTED_MODULE_13__.makeFetchTransport : _transports_xhr_js__WEBPACK_IMPORTED_MODULE_14__.makeXHRTransport),
  };

  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_15__.initAndBind)(_client_js__WEBPACK_IMPORTED_MODULE_16__.BrowserClient, clientOptions);

  if (options.autoSessionTracking) {
    startSessionTracking();
  }
}

const showReportDialog = (
  // eslint-disable-next-line deprecation/deprecation
  options = {},
  // eslint-disable-next-line deprecation/deprecation
  hub = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_17__.getCurrentHub)(),
) => {
  // doesn't work without a document (React Native)
  if (!_helpers_js__WEBPACK_IMPORTED_MODULE_8__.WINDOW.document) {
    _debug_build_js__WEBPACK_IMPORTED_MODULE_18__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_19__.logger.error('Global document not defined in showReportDialog call');
    return;
  }

  // eslint-disable-next-line deprecation/deprecation
  const { client, scope } = hub.getStackTop();
  const dsn = options.dsn || (client && client.getDsn());
  if (!dsn) {
    _debug_build_js__WEBPACK_IMPORTED_MODULE_18__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_19__.logger.error('DSN not configured for showReportDialog call');
    return;
  }

  if (scope) {
    options.user = {
      ...scope.getUser(),
      ...options.user,
    };
  }

  // TODO(v8): Remove this entire if statement. `eventId` will be a required option.
  // eslint-disable-next-line deprecation/deprecation
  if (!options.eventId) {
    // eslint-disable-next-line deprecation/deprecation
    options.eventId = hub.lastEventId();
  }

  const script = _helpers_js__WEBPACK_IMPORTED_MODULE_8__.WINDOW.document.createElement('script');
  script.async = true;
  script.crossOrigin = 'anonymous';
  script.src = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_20__.getReportDialogEndpoint)(dsn, options);

  if (options.onLoad) {
    script.onload = options.onLoad;
  }

  const { onClose } = options;
  if (onClose) {
    const reportDialogClosedMessageHandler = (event) => {
      if (event.data === '__sentry_reportdialog_closed__') {
        try {
          onClose();
        } finally {
          _helpers_js__WEBPACK_IMPORTED_MODULE_8__.WINDOW.removeEventListener('message', reportDialogClosedMessageHandler);
        }
      }
    };
    _helpers_js__WEBPACK_IMPORTED_MODULE_8__.WINDOW.addEventListener('message', reportDialogClosedMessageHandler);
  }

  const injectionPoint = _helpers_js__WEBPACK_IMPORTED_MODULE_8__.WINDOW.document.head || _helpers_js__WEBPACK_IMPORTED_MODULE_8__.WINDOW.document.body;
  if (injectionPoint) {
    injectionPoint.appendChild(script);
  } else {
    _debug_build_js__WEBPACK_IMPORTED_MODULE_18__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_19__.logger.error('Not injecting report dialog. No injection point found in HTML');
  }
};

/**
 * This function is here to be API compatible with the loader.
 * @hidden
 */
function forceLoad() {
  // Noop
}

/**
 * This function is here to be API compatible with the loader.
 * @hidden
 */
function onLoad(callback) {
  callback();
}

/**
 * Wrap code within a try/catch block so the SDK is able to capture errors.
 *
 * @deprecated This function will be removed in v8.
 * It is not part of Sentry's official API and it's easily replaceable by using a try/catch block
 * and calling Sentry.captureException.
 *
 * @param fn A function to wrap.
 *
 * @returns The result of wrapped function call.
 */
// TODO(v8): Remove this function
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function wrap(fn) {
  return (0,_helpers_js__WEBPACK_IMPORTED_MODULE_8__.wrap)(fn)();
}

/**
 * Enable automatic Session Tracking for the initial page load.
 */
function startSessionTracking() {
  if (typeof _helpers_js__WEBPACK_IMPORTED_MODULE_8__.WINDOW.document === 'undefined') {
    _debug_build_js__WEBPACK_IMPORTED_MODULE_18__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_19__.logger.warn('Session tracking in non-browser environment with @sentry/browser is not supported.');
    return;
  }

  // The session duration for browser sessions does not track a meaningful
  // concept that can be used as a metric.
  // Automatically captured sessions are akin to page views, and thus we
  // discard their duration.
  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_21__.startSession)({ ignoreDuration: true });
  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_21__.captureSession)();

  // We want to create a session for every navigation as well
  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_22__.addHistoryInstrumentationHandler)(({ from, to }) => {
    // Don't create an additional session for the initial route or if the location did not change
    if (from !== undefined && from !== to) {
      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_21__.startSession)({ ignoreDuration: true });
      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_21__.captureSession)();
    }
  });
}

/**
 * Captures user feedback and sends it to Sentry.
 */
function captureUserFeedback(feedback) {
  const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_21__.getClient)();
  if (client) {
    client.captureUserFeedback(feedback);
  }
}


//# sourceMappingURL=sdk.js.map


/***/ }),

/***/ "./node_modules/@sentry/browser/esm/stack-parsers.js":
/*!***********************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/stack-parsers.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "chromeStackLineParser": () => (/* binding */ chromeStackLineParser),
/* harmony export */   "defaultStackLineParsers": () => (/* binding */ defaultStackLineParsers),
/* harmony export */   "defaultStackParser": () => (/* binding */ defaultStackParser),
/* harmony export */   "geckoStackLineParser": () => (/* binding */ geckoStackLineParser),
/* harmony export */   "opera10StackLineParser": () => (/* binding */ opera10StackLineParser),
/* harmony export */   "opera11StackLineParser": () => (/* binding */ opera11StackLineParser),
/* harmony export */   "winjsStackLineParser": () => (/* binding */ winjsStackLineParser)
/* harmony export */ });
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/stacktrace.js");


// global reference to slice
const UNKNOWN_FUNCTION = '?';

const OPERA10_PRIORITY = 10;
const OPERA11_PRIORITY = 20;
const CHROME_PRIORITY = 30;
const WINJS_PRIORITY = 40;
const GECKO_PRIORITY = 50;

function createFrame(filename, func, lineno, colno) {
  const frame = {
    filename,
    function: func,
    in_app: true, // All browser frames are considered in_app
  };

  if (lineno !== undefined) {
    frame.lineno = lineno;
  }

  if (colno !== undefined) {
    frame.colno = colno;
  }

  return frame;
}

// Chromium based browsers: Chrome, Brave, new Opera, new Edge
const chromeRegex =
  /^\s*at (?:(.+?\)(?: \[.+\])?|.*?) ?\((?:address at )?)?(?:async )?((?:<anonymous>|[-a-z]+:|.*bundle|\/)?.*?)(?::(\d+))?(?::(\d+))?\)?\s*$/i;
const chromeEvalRegex = /\((\S*)(?::(\d+))(?::(\d+))\)/;

const chrome = line => {
  const parts = chromeRegex.exec(line);

  if (parts) {
    const isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line

    if (isEval) {
      const subMatch = chromeEvalRegex.exec(parts[2]);

      if (subMatch) {
        // throw out eval line/column and use top-most line/column number
        parts[2] = subMatch[1]; // url
        parts[3] = subMatch[2]; // line
        parts[4] = subMatch[3]; // column
      }
    }

    // Kamil: One more hack won't hurt us right? Understanding and adding more rules on top of these regexps right now
    // would be way too time consuming. (TODO: Rewrite whole RegExp to be more readable)
    const [func, filename] = extractSafariExtensionDetails(parts[1] || UNKNOWN_FUNCTION, parts[2]);

    return createFrame(filename, func, parts[3] ? +parts[3] : undefined, parts[4] ? +parts[4] : undefined);
  }

  return;
};

const chromeStackLineParser = [CHROME_PRIORITY, chrome];

// gecko regex: `(?:bundle|\d+\.js)`: `bundle` is for react native, `\d+\.js` also but specifically for ram bundles because it
// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js
// We need this specific case for now because we want no other regex to match.
const geckoREgex =
  /^\s*(.*?)(?:\((.*?)\))?(?:^|@)?((?:[-a-z]+)?:\/.*?|\[native code\]|[^@]*(?:bundle|\d+\.js)|\/[\w\-. /=]+)(?::(\d+))?(?::(\d+))?\s*$/i;
const geckoEvalRegex = /(\S+) line (\d+)(?: > eval line \d+)* > eval/i;

const gecko = line => {
  const parts = geckoREgex.exec(line);

  if (parts) {
    const isEval = parts[3] && parts[3].indexOf(' > eval') > -1;
    if (isEval) {
      const subMatch = geckoEvalRegex.exec(parts[3]);

      if (subMatch) {
        // throw out eval line/column and use top-most line number
        parts[1] = parts[1] || 'eval';
        parts[3] = subMatch[1];
        parts[4] = subMatch[2];
        parts[5] = ''; // no column when eval
      }
    }

    let filename = parts[3];
    let func = parts[1] || UNKNOWN_FUNCTION;
    [func, filename] = extractSafariExtensionDetails(func, filename);

    return createFrame(filename, func, parts[4] ? +parts[4] : undefined, parts[5] ? +parts[5] : undefined);
  }

  return;
};

const geckoStackLineParser = [GECKO_PRIORITY, gecko];

const winjsRegex = /^\s*at (?:((?:\[object object\])?.+) )?\(?((?:[-a-z]+):.*?):(\d+)(?::(\d+))?\)?\s*$/i;

const winjs = line => {
  const parts = winjsRegex.exec(line);

  return parts
    ? createFrame(parts[2], parts[1] || UNKNOWN_FUNCTION, +parts[3], parts[4] ? +parts[4] : undefined)
    : undefined;
};

const winjsStackLineParser = [WINJS_PRIORITY, winjs];

const opera10Regex = / line (\d+).*script (?:in )?(\S+)(?:: in function (\S+))?$/i;

const opera10 = line => {
  const parts = opera10Regex.exec(line);
  return parts ? createFrame(parts[2], parts[3] || UNKNOWN_FUNCTION, +parts[1]) : undefined;
};

const opera10StackLineParser = [OPERA10_PRIORITY, opera10];

const opera11Regex =
  / line (\d+), column (\d+)\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\(.*\))? in (.*):\s*$/i;

const opera11 = line => {
  const parts = opera11Regex.exec(line);
  return parts ? createFrame(parts[5], parts[3] || parts[4] || UNKNOWN_FUNCTION, +parts[1], +parts[2]) : undefined;
};

const opera11StackLineParser = [OPERA11_PRIORITY, opera11];

const defaultStackLineParsers = [chromeStackLineParser, geckoStackLineParser, winjsStackLineParser];

const defaultStackParser = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.createStackParser)(...defaultStackLineParsers);

/**
 * Safari web extensions, starting version unknown, can produce "frames-only" stacktraces.
 * What it means, is that instead of format like:
 *
 * Error: wat
 *   at function@url:row:col
 *   at function@url:row:col
 *   at function@url:row:col
 *
 * it produces something like:
 *
 *   function@url:row:col
 *   function@url:row:col
 *   function@url:row:col
 *
 * Because of that, it won't be captured by `chrome` RegExp and will fall into `Gecko` branch.
 * This function is extracted so that we can use it in both places without duplicating the logic.
 * Unfortunately "just" changing RegExp is too complicated now and making it pass all tests
 * and fix this case seems like an impossible, or at least way too time-consuming task.
 */
const extractSafariExtensionDetails = (func, filename) => {
  const isSafariExtension = func.indexOf('safari-extension') !== -1;
  const isSafariWebExtension = func.indexOf('safari-web-extension') !== -1;

  return isSafariExtension || isSafariWebExtension
    ? [
        func.indexOf('@') !== -1 ? func.split('@')[0] : UNKNOWN_FUNCTION,
        isSafariExtension ? `safari-extension:${filename}` : `safari-web-extension:${filename}`,
      ]
    : [func, filename];
};


//# sourceMappingURL=stack-parsers.js.map


/***/ }),

/***/ "./node_modules/@sentry/browser/esm/transports/fetch.js":
/*!**************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/transports/fetch.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "makeFetchTransport": () => (/* binding */ makeFetchTransport)
/* harmony export */ });
/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ "./node_modules/@sentry/core/esm/transports/base.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/syncpromise.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ "./node_modules/@sentry/browser/esm/transports/utils.js");




/**
 * Creates a Transport that uses the Fetch API to send events to Sentry.
 */
function makeFetchTransport(
  options,
  nativeFetch = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getNativeFetchImplementation)(),
) {
  let pendingBodySize = 0;
  let pendingCount = 0;

  function makeRequest(request) {
    const requestSize = request.body.length;
    pendingBodySize += requestSize;
    pendingCount++;

    const requestOptions = {
      body: request.body,
      method: 'POST',
      referrerPolicy: 'origin',
      headers: options.headers,
      // Outgoing requests are usually cancelled when navigating to a different page, causing a "TypeError: Failed to
      // fetch" error and sending a "network_error" client-outcome - in Chrome, the request status shows "(cancelled)".
      // The `keepalive` flag keeps outgoing requests alive, even when switching pages. We want this since we're
      // frequently sending events right before the user is switching pages (eg. whenfinishing navigation transactions).
      // Gotchas:
      // - `keepalive` isn't supported by Firefox
      // - As per spec (https://fetch.spec.whatwg.org/#http-network-or-cache-fetch):
      //   If the sum of contentLength and inflightKeepaliveBytes is greater than 64 kibibytes, then return a network error.
      //   We will therefore only activate the flag when we're below that limit.
      // There is also a limit of requests that can be open at the same time, so we also limit this to 15
      // See https://github.com/getsentry/sentry-javascript/pull/7553 for details
      keepalive: pendingBodySize <= 60000 && pendingCount < 15,
      ...options.fetchOptions,
    };

    try {
      return nativeFetch(options.url, requestOptions).then(response => {
        pendingBodySize -= requestSize;
        pendingCount--;
        return {
          statusCode: response.status,
          headers: {
            'x-sentry-rate-limits': response.headers.get('X-Sentry-Rate-Limits'),
            'retry-after': response.headers.get('Retry-After'),
          },
        };
      });
    } catch (e) {
      (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.clearCachedFetchImplementation)();
      pendingBodySize -= requestSize;
      pendingCount--;
      return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.rejectedSyncPromise)(e);
    }
  }

  return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.createTransport)(options, makeRequest);
}


//# sourceMappingURL=fetch.js.map


/***/ }),

/***/ "./node_modules/@sentry/browser/esm/transports/utils.js":
/*!**************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/transports/utils.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "clearCachedFetchImplementation": () => (/* binding */ clearCachedFetchImplementation),
/* harmony export */   "getNativeFetchImplementation": () => (/* binding */ getNativeFetchImplementation)
/* harmony export */ });
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/supports.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/logger.js");
/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../debug-build.js */ "./node_modules/@sentry/browser/esm/debug-build.js");
/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers.js */ "./node_modules/@sentry/browser/esm/helpers.js");




let cachedFetchImpl = undefined;

/**
 * A special usecase for incorrectly wrapped Fetch APIs in conjunction with ad-blockers.
 * Whenever someone wraps the Fetch API and returns the wrong promise chain,
 * this chain becomes orphaned and there is no possible way to capture it's rejections
 * other than allowing it bubble up to this very handler. eg.
 *
 * const f = window.fetch;
 * window.fetch = function () {
 *   const p = f.apply(this, arguments);
 *
 *   p.then(function() {
 *     console.log('hi.');
 *   });
 *
 *   return p;
 * }
 *
 * `p.then(function () { ... })` is producing a completely separate promise chain,
 * however, what's returned is `p` - the result of original `fetch` call.
 *
 * This mean, that whenever we use the Fetch API to send our own requests, _and_
 * some ad-blocker blocks it, this orphaned chain will _always_ reject,
 * effectively causing another event to be captured.
 * This makes a whole process become an infinite loop, which we need to somehow
 * deal with, and break it in one way or another.
 *
 * To deal with this issue, we are making sure that we _always_ use the real
 * browser Fetch API, instead of relying on what `window.fetch` exposes.
 * The only downside to this would be missing our own requests as breadcrumbs,
 * but because we are already not doing this, it should be just fine.
 *
 * Possible failed fetch error messages per-browser:
 *
 * Chrome:  Failed to fetch
 * Edge:    Failed to Fetch
 * Firefox: NetworkError when attempting to fetch resource
 * Safari:  resource blocked by content blocker
 */
function getNativeFetchImplementation() {
  if (cachedFetchImpl) {
    return cachedFetchImpl;
  }

  /* eslint-disable @typescript-eslint/unbound-method */

  // Fast path to avoid DOM I/O
  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.isNativeFetch)(_helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.fetch)) {
    return (cachedFetchImpl = _helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.fetch.bind(_helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW));
  }

  const document = _helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.document;
  let fetchImpl = _helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.fetch;
  // eslint-disable-next-line deprecation/deprecation
  if (document && typeof document.createElement === 'function') {
    try {
      const sandbox = document.createElement('iframe');
      sandbox.hidden = true;
      document.head.appendChild(sandbox);
      const contentWindow = sandbox.contentWindow;
      if (contentWindow && contentWindow.fetch) {
        fetchImpl = contentWindow.fetch;
      }
      document.head.removeChild(sandbox);
    } catch (e) {
      _debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', e);
    }
  }

  return (cachedFetchImpl = fetchImpl.bind(_helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW));
  /* eslint-enable @typescript-eslint/unbound-method */
}

/** Clears cached fetch impl */
function clearCachedFetchImplementation() {
  cachedFetchImpl = undefined;
}


//# sourceMappingURL=utils.js.map


/***/ }),

/***/ "./node_modules/@sentry/browser/esm/transports/xhr.js":
/*!************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/transports/xhr.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "makeXHRTransport": () => (/* binding */ makeXHRTransport)
/* harmony export */ });
/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ "./node_modules/@sentry/core/esm/transports/base.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/syncpromise.js");



/**
 * The DONE ready state for XmlHttpRequest
 *
 * Defining it here as a constant b/c XMLHttpRequest.DONE is not always defined
 * (e.g. during testing, it is `undefined`)
 *
 * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/readyState}
 */
const XHR_READYSTATE_DONE = 4;

/**
 * Creates a Transport that uses the XMLHttpRequest API to send events to Sentry.
 */
function makeXHRTransport(options) {
  function makeRequest(request) {
    return new _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.SyncPromise((resolve, reject) => {
      const xhr = new XMLHttpRequest();

      xhr.onerror = reject;

      xhr.onreadystatechange = () => {
        if (xhr.readyState === XHR_READYSTATE_DONE) {
          resolve({
            statusCode: xhr.status,
            headers: {
              'x-sentry-rate-limits': xhr.getResponseHeader('X-Sentry-Rate-Limits'),
              'retry-after': xhr.getResponseHeader('Retry-After'),
            },
          });
        }
      };

      xhr.open('POST', options.url);

      for (const header in options.headers) {
        if (Object.prototype.hasOwnProperty.call(options.headers, header)) {
          xhr.setRequestHeader(header, options.headers[header]);
        }
      }

      xhr.send(request.body);
    });
  }

  return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.createTransport)(options, makeRequest);
}


//# sourceMappingURL=xhr.js.map


/***/ }),

/***/ "./node_modules/@sentry/browser/esm/userfeedback.js":
/*!**********************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/userfeedback.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createUserFeedbackEnvelope": () => (/* binding */ createUserFeedbackEnvelope)
/* harmony export */ });
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/dsn.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/envelope.js");


/**
 * Creates an envelope from a user feedback.
 */
function createUserFeedbackEnvelope(
  feedback,
  {
    metadata,
    tunnel,
    dsn,
  }

,
) {
  const headers = {
    event_id: feedback.event_id,
    sent_at: new Date().toISOString(),
    ...(metadata &&
      metadata.sdk && {
        sdk: {
          name: metadata.sdk.name,
          version: metadata.sdk.version,
        },
      }),
    ...(!!tunnel && !!dsn && { dsn: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dsnToString)(dsn) }),
  };
  const item = createUserFeedbackEnvelopeItem(feedback);

  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.createEnvelope)(headers, [item]);
}

function createUserFeedbackEnvelopeItem(feedback) {
  const feedbackHeaders = {
    type: 'user_report',
  };
  return [feedbackHeaders, feedback];
}


//# sourceMappingURL=userfeedback.js.map


/***/ }),

/***/ "./node_modules/@sentry/core/esm/api.js":
/*!**********************************************!*\
  !*** ./node_modules/@sentry/core/esm/api.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getEnvelopeEndpointWithUrlEncodedAuth": () => (/* binding */ getEnvelopeEndpointWithUrlEncodedAuth),
/* harmony export */   "getReportDialogEndpoint": () => (/* binding */ getReportDialogEndpoint)
/* harmony export */ });
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/object.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/dsn.js");


const SENTRY_API_VERSION = '7';

/** Returns the prefix to construct Sentry ingestion API endpoints. */
function getBaseApiEndpoint(dsn) {
  const protocol = dsn.protocol ? `${dsn.protocol}:` : '';
  const port = dsn.port ? `:${dsn.port}` : '';
  return `${protocol}//${dsn.host}${port}${dsn.path ? `/${dsn.path}` : ''}/api/`;
}

/** Returns the ingest API endpoint for target. */
function _getIngestEndpoint(dsn) {
  return `${getBaseApiEndpoint(dsn)}${dsn.projectId}/envelope/`;
}

/** Returns a URL-encoded string with auth config suitable for a query string. */
function _encodedAuth(dsn, sdkInfo) {
  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.urlEncode)({
    // We send only the minimum set of required information. See
    // https://github.com/getsentry/sentry-javascript/issues/2572.
    sentry_key: dsn.publicKey,
    sentry_version: SENTRY_API_VERSION,
    ...(sdkInfo && { sentry_client: `${sdkInfo.name}/${sdkInfo.version}` }),
  });
}

/**
 * Returns the envelope endpoint URL with auth in the query string.
 *
 * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.
 */
function getEnvelopeEndpointWithUrlEncodedAuth(
  dsn,
  // TODO (v8): Remove `tunnelOrOptions` in favor of `options`, and use the substitute code below
  // options: ClientOptions = {} as ClientOptions,
  tunnelOrOptions = {} ,
) {
  // TODO (v8): Use this code instead
  // const { tunnel, _metadata = {} } = options;
  // return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, _metadata.sdk)}`;

  const tunnel = typeof tunnelOrOptions === 'string' ? tunnelOrOptions : tunnelOrOptions.tunnel;
  const sdkInfo =
    typeof tunnelOrOptions === 'string' || !tunnelOrOptions._metadata ? undefined : tunnelOrOptions._metadata.sdk;

  return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, sdkInfo)}`;
}

/** Returns the url to the report dialog endpoint. */
function getReportDialogEndpoint(
  dsnLike,
  dialogOptions

,
) {
  const dsn = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.makeDsn)(dsnLike);
  if (!dsn) {
    return '';
  }

  const endpoint = `${getBaseApiEndpoint(dsn)}embed/error-page/`;

  let encodedOptions = `dsn=${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.dsnToString)(dsn)}`;
  for (const key in dialogOptions) {
    if (key === 'dsn') {
      continue;
    }

    if (key === 'onClose') {
      continue;
    }

    if (key === 'user') {
      const user = dialogOptions.user;
      if (!user) {
        continue;
      }
      if (user.name) {
        encodedOptions += `&name=${encodeURIComponent(user.name)}`;
      }
      if (user.email) {
        encodedOptions += `&email=${encodeURIComponent(user.email)}`;
      }
    } else {
      encodedOptions += `&${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] )}`;
    }
  }

  return `${endpoint}?${encodedOptions}`;
}


//# sourceMappingURL=api.js.map


/***/ }),

/***/ "./node_modules/@sentry/core/esm/baseclient.js":
/*!*****************************************************!*\
  !*** ./node_modules/@sentry/core/esm/baseclient.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BaseClient": () => (/* binding */ BaseClient),
/* harmony export */   "addEventProcessor": () => (/* binding */ addEventProcessor)
/* harmony export */ });
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/dsn.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/logger.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/misc.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/is.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/syncpromise.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/envelope.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/error.js");
/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./api.js */ "./node_modules/@sentry/core/esm/api.js");
/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./debug-build.js */ "./node_modules/@sentry/core/esm/debug-build.js");
/* harmony import */ var _envelope_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./envelope.js */ "./node_modules/@sentry/core/esm/envelope.js");
/* harmony import */ var _exports_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./exports.js */ "./node_modules/@sentry/core/esm/exports.js");
/* harmony import */ var _hub_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./hub.js */ "./node_modules/@sentry/core/esm/hub.js");
/* harmony import */ var _integration_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./integration.js */ "./node_modules/@sentry/core/esm/integration.js");
/* harmony import */ var _metrics_envelope_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./metrics/envelope.js */ "./node_modules/@sentry/core/esm/metrics/envelope.js");
/* harmony import */ var _session_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./session.js */ "./node_modules/@sentry/core/esm/session.js");
/* harmony import */ var _tracing_dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./tracing/dynamicSamplingContext.js */ "./node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js");
/* harmony import */ var _utils_prepareEvent_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./utils/prepareEvent.js */ "./node_modules/@sentry/core/esm/utils/prepareEvent.js");












const ALREADY_SEEN_ERROR = "Not capturing exception because it's already been captured.";

/**
 * Base implementation for all JavaScript SDK clients.
 *
 * Call the constructor with the corresponding options
 * specific to the client subclass. To access these options later, use
 * {@link Client.getOptions}.
 *
 * If a Dsn is specified in the options, it will be parsed and stored. Use
 * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is
 * invalid, the constructor will throw a {@link SentryException}. Note that
 * without a valid Dsn, the SDK will not send any events to Sentry.
 *
 * Before sending an event, it is passed through
 * {@link BaseClient._prepareEvent} to add SDK information and scope data
 * (breadcrumbs and context). To add more custom information, override this
 * method and extend the resulting prepared event.
 *
 * To issue automatically created events (e.g. via instrumentation), use
 * {@link Client.captureEvent}. It will prepare the event and pass it through
 * the callback lifecycle. To issue auto-breadcrumbs, use
 * {@link Client.addBreadcrumb}.
 *
 * @example
 * class NodeClient extends BaseClient<NodeOptions> {
 *   public constructor(options: NodeOptions) {
 *     super(options);
 *   }
 *
 *   // ...
 * }
 */
class BaseClient {
  /**
   * A reference to a metrics aggregator
   *
   * @experimental Note this is alpha API. It may experience breaking changes in the future.
   */

  /** Options passed to the SDK. */

  /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */

  /** Array of set up integrations. */

  /** Indicates whether this client's integrations have been set up. */

  /** Number of calls being processed */

  /** Holds flushable  */

  // eslint-disable-next-line @typescript-eslint/ban-types

  /**
   * Initializes this client instance.
   *
   * @param options Options for the client.
   */
   constructor(options) {
    this._options = options;
    this._integrations = {};
    this._integrationsInitialized = false;
    this._numProcessing = 0;
    this._outcomes = {};
    this._hooks = {};
    this._eventProcessors = [];

    if (options.dsn) {
      this._dsn = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.makeDsn)(options.dsn);
    } else {
      _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn('No DSN provided, client will not send events.');
    }

    if (this._dsn) {
      const url = (0,_api_js__WEBPACK_IMPORTED_MODULE_3__.getEnvelopeEndpointWithUrlEncodedAuth)(this._dsn, options);
      this._transport = options.transport({
        recordDroppedEvent: this.recordDroppedEvent.bind(this),
        ...options.transportOptions,
        url,
      });
    }
  }

  /**
   * @inheritDoc
   */
  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types
   captureException(exception, hint, scope) {
    // ensure we haven't captured this very object before
    if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.checkOrSetAlreadyCaught)(exception)) {
      _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log(ALREADY_SEEN_ERROR);
      return;
    }

    let eventId = hint && hint.event_id;

    this._process(
      this.eventFromException(exception, hint)
        .then(event => this._captureEvent(event, hint, scope))
        .then(result => {
          eventId = result;
        }),
    );

    return eventId;
  }

  /**
   * @inheritDoc
   */
   captureMessage(
    message,
    // eslint-disable-next-line deprecation/deprecation
    level,
    hint,
    scope,
  ) {
    let eventId = hint && hint.event_id;

    const eventMessage = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.isParameterizedString)(message) ? message : String(message);

    const promisedEvent = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.isPrimitive)(message)
      ? this.eventFromMessage(eventMessage, level, hint)
      : this.eventFromException(message, hint);

    this._process(
      promisedEvent
        .then(event => this._captureEvent(event, hint, scope))
        .then(result => {
          eventId = result;
        }),
    );

    return eventId;
  }

  /**
   * @inheritDoc
   */
   captureEvent(event, hint, scope) {
    // ensure we haven't captured this very object before
    if (hint && hint.originalException && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.checkOrSetAlreadyCaught)(hint.originalException)) {
      _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log(ALREADY_SEEN_ERROR);
      return;
    }

    let eventId = hint && hint.event_id;

    this._process(
      this._captureEvent(event, hint, scope).then(result => {
        eventId = result;
      }),
    );

    return eventId;
  }

  /**
   * @inheritDoc
   */
   captureSession(session) {
    if (!(typeof session.release === 'string')) {
      _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn('Discarded session because of missing or non-string release');
    } else {
      this.sendSession(session);
      // After sending, we set init false to indicate it's not the first occurrence
      (0,_session_js__WEBPACK_IMPORTED_MODULE_6__.updateSession)(session, { init: false });
    }
  }

  /**
   * @inheritDoc
   */
   getDsn() {
    return this._dsn;
  }

  /**
   * @inheritDoc
   */
   getOptions() {
    return this._options;
  }

  /**
   * @see SdkMetadata in @sentry/types
   *
   * @return The metadata of the SDK
   */
   getSdkMetadata() {
    return this._options._metadata;
  }

  /**
   * @inheritDoc
   */
   getTransport() {
    return this._transport;
  }

  /**
   * @inheritDoc
   */
   flush(timeout) {
    const transport = this._transport;
    if (transport) {
      if (this.metricsAggregator) {
        this.metricsAggregator.flush();
      }
      return this._isClientDoneProcessing(timeout).then(clientFinished => {
        return transport.flush(timeout).then(transportFlushed => clientFinished && transportFlushed);
      });
    } else {
      return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_7__.resolvedSyncPromise)(true);
    }
  }

  /**
   * @inheritDoc
   */
   close(timeout) {
    return this.flush(timeout).then(result => {
      this.getOptions().enabled = false;
      if (this.metricsAggregator) {
        this.metricsAggregator.close();
      }
      return result;
    });
  }

  /** Get all installed event processors. */
   getEventProcessors() {
    return this._eventProcessors;
  }

  /** @inheritDoc */
   addEventProcessor(eventProcessor) {
    this._eventProcessors.push(eventProcessor);
  }

  /**
   * This is an internal function to setup all integrations that should run on the client.
   * @deprecated Use `client.init()` instead.
   */
   setupIntegrations(forceInitialize) {
    if ((forceInitialize && !this._integrationsInitialized) || (this._isEnabled() && !this._integrationsInitialized)) {
      this._setupIntegrations();
    }
  }

  /** @inheritdoc */
   init() {
    if (this._isEnabled()) {
      this._setupIntegrations();
    }
  }

  /**
   * Gets an installed integration by its `id`.
   *
   * @returns The installed integration or `undefined` if no integration with that `id` was installed.
   * @deprecated Use `getIntegrationByName()` instead.
   */
   getIntegrationById(integrationId) {
    return this.getIntegrationByName(integrationId);
  }

  /**
   * Gets an installed integration by its name.
   *
   * @returns The installed integration or `undefined` if no integration with that `name` was installed.
   */
   getIntegrationByName(integrationName) {
    return this._integrations[integrationName] ;
  }

  /**
   * Returns the client's instance of the given integration class, it any.
   * @deprecated Use `getIntegrationByName()` instead.
   */
   getIntegration(integration) {
    try {
      return (this._integrations[integration.id] ) || null;
    } catch (_oO) {
      _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn(`Cannot retrieve integration ${integration.id} from the current Client`);
      return null;
    }
  }

  /**
   * @inheritDoc
   */
   addIntegration(integration) {
    (0,_integration_js__WEBPACK_IMPORTED_MODULE_8__.setupIntegration)(this, integration, this._integrations);
  }

  /**
   * @inheritDoc
   */
   sendEvent(event, hint = {}) {
    this.emit('beforeSendEvent', event, hint);

    let env = (0,_envelope_js__WEBPACK_IMPORTED_MODULE_9__.createEventEnvelope)(event, this._dsn, this._options._metadata, this._options.tunnel);

    for (const attachment of hint.attachments || []) {
      env = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_10__.addItemToEnvelope)(
        env,
        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_10__.createAttachmentEnvelopeItem)(
          attachment,
          this._options.transportOptions && this._options.transportOptions.textEncoder,
        ),
      );
    }

    const promise = this._sendEnvelope(env);
    if (promise) {
      promise.then(sendResponse => this.emit('afterSendEvent', event, sendResponse), null);
    }
  }

  /**
   * @inheritDoc
   */
   sendSession(session) {
    const env = (0,_envelope_js__WEBPACK_IMPORTED_MODULE_9__.createSessionEnvelope)(session, this._dsn, this._options._metadata, this._options.tunnel);

    // _sendEnvelope should not throw
    // eslint-disable-next-line @typescript-eslint/no-floating-promises
    this._sendEnvelope(env);
  }

  /**
   * @inheritDoc
   */
   recordDroppedEvent(reason, category, _event) {
    // Note: we use `event` in replay, where we overwrite this hook.

    if (this._options.sendClientReports) {
      // We want to track each category (error, transaction, session, replay_event) separately
      // but still keep the distinction between different type of outcomes.
      // We could use nested maps, but it's much easier to read and type this way.
      // A correct type for map-based implementation if we want to go that route
      // would be `Partial<Record<SentryRequestType, Partial<Record<Outcome, number>>>>`
      // With typescript 4.1 we could even use template literal types
      const key = `${reason}:${category}`;
      _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log(`Adding outcome: "${key}"`);

      // The following works because undefined + 1 === NaN and NaN is falsy
      this._outcomes[key] = this._outcomes[key] + 1 || 1;
    }
  }

  /**
   * @inheritDoc
   */
   captureAggregateMetrics(metricBucketItems) {
    _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log(`Flushing aggregated metrics, number of metrics: ${metricBucketItems.length}`);
    const metricsEnvelope = (0,_metrics_envelope_js__WEBPACK_IMPORTED_MODULE_11__.createMetricEnvelope)(
      metricBucketItems,
      this._dsn,
      this._options._metadata,
      this._options.tunnel,
    );

    // _sendEnvelope should not throw
    // eslint-disable-next-line @typescript-eslint/no-floating-promises
    this._sendEnvelope(metricsEnvelope);
  }

  // Keep on() & emit() signatures in sync with types' client.ts interface
  /* eslint-disable @typescript-eslint/unified-signatures */

  /** @inheritdoc */

  /** @inheritdoc */
   on(hook, callback) {
    if (!this._hooks[hook]) {
      this._hooks[hook] = [];
    }

    // @ts-expect-error We assue the types are correct
    this._hooks[hook].push(callback);
  }

  /** @inheritdoc */

  /** @inheritdoc */
   emit(hook, ...rest) {
    if (this._hooks[hook]) {
      this._hooks[hook].forEach(callback => callback(...rest));
    }
  }

  /* eslint-enable @typescript-eslint/unified-signatures */

  /** Setup integrations for this client. */
   _setupIntegrations() {
    this._integrations = (0,_integration_js__WEBPACK_IMPORTED_MODULE_8__.setupIntegrations)(this, this._options.integrations);
    // TODO v8: We don't need this flag anymore
    this._integrationsInitialized = true;
  }

  /** Updates existing session based on the provided event */
   _updateSessionFromEvent(session, event) {
    let crashed = false;
    let errored = false;
    const exceptions = event.exception && event.exception.values;

    if (exceptions) {
      errored = true;

      for (const ex of exceptions) {
        const mechanism = ex.mechanism;
        if (mechanism && mechanism.handled === false) {
          crashed = true;
          break;
        }
      }
    }

    // A session is updated and that session update is sent in only one of the two following scenarios:
    // 1. Session with non terminal status and 0 errors + an error occurred -> Will set error count to 1 and send update
    // 2. Session with non terminal status and 1 error + a crash occurred -> Will set status crashed and send update
    const sessionNonTerminal = session.status === 'ok';
    const shouldUpdateAndSend = (sessionNonTerminal && session.errors === 0) || (sessionNonTerminal && crashed);

    if (shouldUpdateAndSend) {
      (0,_session_js__WEBPACK_IMPORTED_MODULE_6__.updateSession)(session, {
        ...(crashed && { status: 'crashed' }),
        errors: session.errors || Number(errored || crashed),
      });
      this.captureSession(session);
    }
  }

  /**
   * Determine if the client is finished processing. Returns a promise because it will wait `timeout` ms before saying
   * "no" (resolving to `false`) in order to give the client a chance to potentially finish first.
   *
   * @param timeout The time, in ms, after which to resolve to `false` if the client is still busy. Passing `0` (or not
   * passing anything) will make the promise wait as long as it takes for processing to finish before resolving to
   * `true`.
   * @returns A promise which will resolve to `true` if processing is already done or finishes before the timeout, and
   * `false` otherwise
   */
   _isClientDoneProcessing(timeout) {
    return new _sentry_utils__WEBPACK_IMPORTED_MODULE_7__.SyncPromise(resolve => {
      let ticked = 0;
      const tick = 1;

      const interval = setInterval(() => {
        if (this._numProcessing == 0) {
          clearInterval(interval);
          resolve(true);
        } else {
          ticked += tick;
          if (timeout && ticked >= timeout) {
            clearInterval(interval);
            resolve(false);
          }
        }
      }, tick);
    });
  }

  /** Determines whether this SDK is enabled and a transport is present. */
   _isEnabled() {
    return this.getOptions().enabled !== false && this._transport !== undefined;
  }

  /**
   * Adds common information to events.
   *
   * The information includes release and environment from `options`,
   * breadcrumbs and context (extra, tags and user) from the scope.
   *
   * Information that is already present in the event is never overwritten. For
   * nested objects, such as the context, keys are merged.
   *
   * @param event The original event.
   * @param hint May contain additional information about the original exception.
   * @param scope A scope containing event metadata.
   * @returns A new event with more information.
   */
   _prepareEvent(
    event,
    hint,
    scope,
    isolationScope = (0,_hub_js__WEBPACK_IMPORTED_MODULE_12__.getIsolationScope)(),
  ) {
    const options = this.getOptions();
    const integrations = Object.keys(this._integrations);
    if (!hint.integrations && integrations.length > 0) {
      hint.integrations = integrations;
    }

    this.emit('preprocessEvent', event, hint);

    return (0,_utils_prepareEvent_js__WEBPACK_IMPORTED_MODULE_13__.prepareEvent)(options, event, hint, scope, this, isolationScope).then(evt => {
      if (evt === null) {
        return evt;
      }

      // If a trace context is not set on the event, we use the propagationContext set on the event to
      // generate a trace context. If the propagationContext does not have a dynamic sampling context, we
      // also generate one for it.
      const { propagationContext } = evt.sdkProcessingMetadata || {};
      const trace = evt.contexts && evt.contexts.trace;
      if (!trace && propagationContext) {
        const { traceId: trace_id, spanId, parentSpanId, dsc } = propagationContext ;
        evt.contexts = {
          trace: {
            trace_id,
            span_id: spanId,
            parent_span_id: parentSpanId,
          },
          ...evt.contexts,
        };

        const dynamicSamplingContext = dsc ? dsc : (0,_tracing_dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_14__.getDynamicSamplingContextFromClient)(trace_id, this, scope);

        evt.sdkProcessingMetadata = {
          dynamicSamplingContext,
          ...evt.sdkProcessingMetadata,
        };
      }
      return evt;
    });
  }

  /**
   * Processes the event and logs an error in case of rejection
   * @param event
   * @param hint
   * @param scope
   */
   _captureEvent(event, hint = {}, scope) {
    return this._processEvent(event, hint, scope).then(
      finalEvent => {
        return finalEvent.event_id;
      },
      reason => {
        if (_debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD) {
          // If something's gone wrong, log the error as a warning. If it's just us having used a `SentryError` for
          // control flow, log just the message (no stack) as a log-level log.
          const sentryError = reason ;
          if (sentryError.logLevel === 'log') {
            _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log(sentryError.message);
          } else {
            _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn(sentryError);
          }
        }
        return undefined;
      },
    );
  }

  /**
   * Processes an event (either error or message) and sends it to Sentry.
   *
   * This also adds breadcrumbs and context information to the event. However,
   * platform specific meta data (such as the User's IP address) must be added
   * by the SDK implementor.
   *
   *
   * @param event The event to send to Sentry.
   * @param hint May contain additional information about the original exception.
   * @param scope A scope containing event metadata.
   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.
   */
   _processEvent(event, hint, scope) {
    const options = this.getOptions();
    const { sampleRate } = options;

    const isTransaction = isTransactionEvent(event);
    const isError = isErrorEvent(event);
    const eventType = event.type || 'error';
    const beforeSendLabel = `before send for type \`${eventType}\``;

    // 1.0 === 100% events are sent
    // 0.0 === 0% events are sent
    // Sampling for transaction happens somewhere else
    if (isError && typeof sampleRate === 'number' && Math.random() > sampleRate) {
      this.recordDroppedEvent('sample_rate', 'error', event);
      return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_7__.rejectedSyncPromise)(
        new _sentry_utils__WEBPACK_IMPORTED_MODULE_15__.SentryError(
          `Discarding event because it's not included in the random sample (sampling rate = ${sampleRate})`,
          'log',
        ),
      );
    }

    const dataCategory = eventType === 'replay_event' ? 'replay' : eventType;

    return this._prepareEvent(event, hint, scope)
      .then(prepared => {
        if (prepared === null) {
          this.recordDroppedEvent('event_processor', dataCategory, event);
          throw new _sentry_utils__WEBPACK_IMPORTED_MODULE_15__.SentryError('An event processor returned `null`, will not send event.', 'log');
        }

        const isInternalException = hint.data && (hint.data ).__sentry__ === true;
        if (isInternalException) {
          return prepared;
        }

        const result = processBeforeSend(options, prepared, hint);
        return _validateBeforeSendResult(result, beforeSendLabel);
      })
      .then(processedEvent => {
        if (processedEvent === null) {
          this.recordDroppedEvent('before_send', dataCategory, event);
          throw new _sentry_utils__WEBPACK_IMPORTED_MODULE_15__.SentryError(`${beforeSendLabel} returned \`null\`, will not send event.`, 'log');
        }

        const session = scope && scope.getSession();
        if (!isTransaction && session) {
          this._updateSessionFromEvent(session, processedEvent);
        }

        // None of the Sentry built event processor will update transaction name,
        // so if the transaction name has been changed by an event processor, we know
        // it has to come from custom event processor added by a user
        const transactionInfo = processedEvent.transaction_info;
        if (isTransaction && transactionInfo && processedEvent.transaction !== event.transaction) {
          const source = 'custom';
          processedEvent.transaction_info = {
            ...transactionInfo,
            source,
          };
        }

        this.sendEvent(processedEvent, hint);
        return processedEvent;
      })
      .then(null, reason => {
        if (reason instanceof _sentry_utils__WEBPACK_IMPORTED_MODULE_15__.SentryError) {
          throw reason;
        }

        this.captureException(reason, {
          data: {
            __sentry__: true,
          },
          originalException: reason,
        });
        throw new _sentry_utils__WEBPACK_IMPORTED_MODULE_15__.SentryError(
          `Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\nReason: ${reason}`,
        );
      });
  }

  /**
   * Occupies the client with processing and event
   */
   _process(promise) {
    this._numProcessing++;
    void promise.then(
      value => {
        this._numProcessing--;
        return value;
      },
      reason => {
        this._numProcessing--;
        return reason;
      },
    );
  }

  /**
   * @inheritdoc
   */
   _sendEnvelope(envelope) {
    this.emit('beforeEnvelope', envelope);

    if (this._isEnabled() && this._transport) {
      return this._transport.send(envelope).then(null, reason => {
        _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.error('Error while sending event:', reason);
      });
    } else {
      _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.error('Transport disabled');
    }
  }

  /**
   * Clears outcomes on this client and returns them.
   */
   _clearOutcomes() {
    const outcomes = this._outcomes;
    this._outcomes = {};
    return Object.keys(outcomes).map(key => {
      const [reason, category] = key.split(':') ;
      return {
        reason,
        category,
        quantity: outcomes[key],
      };
    });
  }

  /**
   * @inheritDoc
   */
  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types

}

/**
 * Verifies that return value of configured `beforeSend` or `beforeSendTransaction` is of expected type, and returns the value if so.
 */
function _validateBeforeSendResult(
  beforeSendResult,
  beforeSendLabel,
) {
  const invalidValueError = `${beforeSendLabel} must return \`null\` or a valid event.`;
  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.isThenable)(beforeSendResult)) {
    return beforeSendResult.then(
      event => {
        if (!(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.isPlainObject)(event) && event !== null) {
          throw new _sentry_utils__WEBPACK_IMPORTED_MODULE_15__.SentryError(invalidValueError);
        }
        return event;
      },
      e => {
        throw new _sentry_utils__WEBPACK_IMPORTED_MODULE_15__.SentryError(`${beforeSendLabel} rejected with ${e}`);
      },
    );
  } else if (!(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.isPlainObject)(beforeSendResult) && beforeSendResult !== null) {
    throw new _sentry_utils__WEBPACK_IMPORTED_MODULE_15__.SentryError(invalidValueError);
  }
  return beforeSendResult;
}

/**
 * Process the matching `beforeSendXXX` callback.
 */
function processBeforeSend(
  options,
  event,
  hint,
) {
  const { beforeSend, beforeSendTransaction } = options;

  if (isErrorEvent(event) && beforeSend) {
    return beforeSend(event, hint);
  }

  if (isTransactionEvent(event) && beforeSendTransaction) {
    return beforeSendTransaction(event, hint);
  }

  return event;
}

function isErrorEvent(event) {
  return event.type === undefined;
}

function isTransactionEvent(event) {
  return event.type === 'transaction';
}

/**
 * Add an event processor to the current client.
 * This event processor will run for all events processed by this client.
 */
function addEventProcessor(callback) {
  const client = (0,_exports_js__WEBPACK_IMPORTED_MODULE_16__.getClient)();

  if (!client || !client.addEventProcessor) {
    return;
  }

  client.addEventProcessor(callback);
}


//# sourceMappingURL=baseclient.js.map


/***/ }),

/***/ "./node_modules/@sentry/core/esm/constants.js":
/*!****************************************************!*\
  !*** ./node_modules/@sentry/core/esm/constants.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DEFAULT_ENVIRONMENT": () => (/* binding */ DEFAULT_ENVIRONMENT)
/* harmony export */ });
const DEFAULT_ENVIRONMENT = 'production';


//# sourceMappingURL=constants.js.map


/***/ }),

/***/ "./node_modules/@sentry/core/esm/debug-build.js":
/*!******************************************************!*\
  !*** ./node_modules/@sentry/core/esm/debug-build.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DEBUG_BUILD": () => (/* binding */ DEBUG_BUILD)
/* harmony export */ });
/**
 * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.
 *
 * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.
 */
const DEBUG_BUILD = (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__);


//# sourceMappingURL=debug-build.js.map


/***/ }),

/***/ "./node_modules/@sentry/core/esm/envelope.js":
/*!***************************************************!*\
  !*** ./node_modules/@sentry/core/esm/envelope.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createEventEnvelope": () => (/* binding */ createEventEnvelope),
/* harmony export */   "createSessionEnvelope": () => (/* binding */ createSessionEnvelope)
/* harmony export */ });
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/envelope.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/dsn.js");


/**
 * Apply SdkInfo (name, version, packages, integrations) to the corresponding event key.
 * Merge with existing data if any.
 **/
function enhanceEventWithSdkInfo(event, sdkInfo) {
  if (!sdkInfo) {
    return event;
  }
  event.sdk = event.sdk || {};
  event.sdk.name = event.sdk.name || sdkInfo.name;
  event.sdk.version = event.sdk.version || sdkInfo.version;
  event.sdk.integrations = [...(event.sdk.integrations || []), ...(sdkInfo.integrations || [])];
  event.sdk.packages = [...(event.sdk.packages || []), ...(sdkInfo.packages || [])];
  return event;
}

/** Creates an envelope from a Session */
function createSessionEnvelope(
  session,
  dsn,
  metadata,
  tunnel,
) {
  const sdkInfo = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getSdkMetadataForEnvelopeHeader)(metadata);
  const envelopeHeaders = {
    sent_at: new Date().toISOString(),
    ...(sdkInfo && { sdk: sdkInfo }),
    ...(!!tunnel && dsn && { dsn: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.dsnToString)(dsn) }),
  };

  const envelopeItem =
    'aggregates' in session ? [{ type: 'sessions' }, session] : [{ type: 'session' }, session.toJSON()];

  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.createEnvelope)(envelopeHeaders, [envelopeItem]);
}

/**
 * Create an Envelope from an event.
 */
function createEventEnvelope(
  event,
  dsn,
  metadata,
  tunnel,
) {
  const sdkInfo = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getSdkMetadataForEnvelopeHeader)(metadata);

  /*
    Note: Due to TS, event.type may be `replay_event`, theoretically.
    In practice, we never call `createEventEnvelope` with `replay_event` type,
    and we'd have to adjut a looot of types to make this work properly.
    We want to avoid casting this around, as that could lead to bugs (e.g. when we add another type)
    So the safe choice is to really guard against the replay_event type here.
  */
  const eventType = event.type && event.type !== 'replay_event' ? event.type : 'event';

  enhanceEventWithSdkInfo(event, metadata && metadata.sdk);

  const envelopeHeaders = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.createEventEnvelopeHeaders)(event, sdkInfo, tunnel, dsn);

  // Prevent this data (which, if it exists, was used in earlier steps in the processing pipeline) from being sent to
  // sentry. (Note: Our use of this property comes and goes with whatever we might be debugging, whatever hacks we may
  // have temporarily added, etc. Even if we don't happen to be using it at some point in the future, let's not get rid
  // of this `delete`, lest we miss putting it back in the next time the property is in use.)
  delete event.sdkProcessingMetadata;

  const eventItem = [{ type: eventType }, event];
  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.createEnvelope)(envelopeHeaders, [eventItem]);
}


//# sourceMappingURL=envelope.js.map


/***/ }),

/***/ "./node_modules/@sentry/core/esm/eventProcessors.js":
/*!**********************************************************!*\
  !*** ./node_modules/@sentry/core/esm/eventProcessors.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "addGlobalEventProcessor": () => (/* binding */ addGlobalEventProcessor),
/* harmony export */   "getGlobalEventProcessors": () => (/* binding */ getGlobalEventProcessors),
/* harmony export */   "notifyEventProcessors": () => (/* binding */ notifyEventProcessors)
/* harmony export */ });
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/worldwide.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/syncpromise.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/logger.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/is.js");
/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./debug-build.js */ "./node_modules/@sentry/core/esm/debug-build.js");



/**
 * Returns the global event processors.
 * @deprecated Global event processors will be removed in v8.
 */
function getGlobalEventProcessors() {
  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getGlobalSingleton)('globalEventProcessors', () => []);
}

/**
 * Add a EventProcessor to be kept globally.
 * @deprecated Use `addEventProcessor` instead. Global event processors will be removed in v8.
 */
function addGlobalEventProcessor(callback) {
  // eslint-disable-next-line deprecation/deprecation
  getGlobalEventProcessors().push(callback);
}

/**
 * Process an array of event processors, returning the processed event (or `null` if the event was dropped).
 */
function notifyEventProcessors(
  processors,
  event,
  hint,
  index = 0,
) {
  return new _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.SyncPromise((resolve, reject) => {
    const processor = processors[index];
    if (event === null || typeof processor !== 'function') {
      resolve(event);
    } else {
      const result = processor({ ...event }, hint) ;

      _debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD && processor.id && result === null && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.log(`Event processor "${processor.id}" dropped event`);

      if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.isThenable)(result)) {
        void result
          .then(final => notifyEventProcessors(processors, final, hint, index + 1).then(resolve))
          .then(null, reject);
      } else {
        void notifyEventProcessors(processors, result, hint, index + 1)
          .then(resolve)
          .then(null, reject);
      }
    }
  });
}


//# sourceMappingURL=eventProcessors.js.map


/***/ }),

/***/ "./node_modules/@sentry/core/esm/exports.js":
/*!**************************************************!*\
  !*** ./node_modules/@sentry/core/esm/exports.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "addBreadcrumb": () => (/* binding */ addBreadcrumb),
/* harmony export */   "captureCheckIn": () => (/* binding */ captureCheckIn),
/* harmony export */   "captureEvent": () => (/* binding */ captureEvent),
/* harmony export */   "captureException": () => (/* binding */ captureException),
/* harmony export */   "captureMessage": () => (/* binding */ captureMessage),
/* harmony export */   "captureSession": () => (/* binding */ captureSession),
/* harmony export */   "close": () => (/* binding */ close),
/* harmony export */   "configureScope": () => (/* binding */ configureScope),
/* harmony export */   "endSession": () => (/* binding */ endSession),
/* harmony export */   "flush": () => (/* binding */ flush),
/* harmony export */   "getClient": () => (/* binding */ getClient),
/* harmony export */   "getCurrentScope": () => (/* binding */ getCurrentScope),
/* harmony export */   "isInitialized": () => (/* binding */ isInitialized),
/* harmony export */   "lastEventId": () => (/* binding */ lastEventId),
/* harmony export */   "setContext": () => (/* binding */ setContext),
/* harmony export */   "setExtra": () => (/* binding */ setExtra),
/* harmony export */   "setExtras": () => (/* binding */ setExtras),
/* harmony export */   "setTag": () => (/* binding */ setTag),
/* harmony export */   "setTags": () => (/* binding */ setTags),
/* harmony export */   "setUser": () => (/* binding */ setUser),
/* harmony export */   "startSession": () => (/* binding */ startSession),
/* harmony export */   "startTransaction": () => (/* binding */ startTransaction),
/* harmony export */   "withActiveSpan": () => (/* binding */ withActiveSpan),
/* harmony export */   "withIsolationScope": () => (/* binding */ withIsolationScope),
/* harmony export */   "withMonitor": () => (/* binding */ withMonitor),
/* harmony export */   "withScope": () => (/* binding */ withScope)
/* harmony export */ });
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/logger.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/misc.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/time.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/is.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/worldwide.js");
/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./constants.js */ "./node_modules/@sentry/core/esm/constants.js");
/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./debug-build.js */ "./node_modules/@sentry/core/esm/debug-build.js");
/* harmony import */ var _hub_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hub.js */ "./node_modules/@sentry/core/esm/hub.js");
/* harmony import */ var _session_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./session.js */ "./node_modules/@sentry/core/esm/session.js");
/* harmony import */ var _utils_prepareEvent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/prepareEvent.js */ "./node_modules/@sentry/core/esm/utils/prepareEvent.js");







/**
 * Captures an exception event and sends it to Sentry.
 *
 * @param exception The exception to capture.
 * @param hint Optional additional data to attach to the Sentry event.
 * @returns the id of the captured Sentry event.
 */
function captureException(
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  exception,
  hint,
) {
  // eslint-disable-next-line deprecation/deprecation
  return (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().captureException(exception, (0,_utils_prepareEvent_js__WEBPACK_IMPORTED_MODULE_1__.parseEventHintOrCaptureContext)(hint));
}

/**
 * Captures a message event and sends it to Sentry.
 *
 * @param exception The exception to capture.
 * @param captureContext Define the level of the message or pass in additional data to attach to the message.
 * @returns the id of the captured message.
 */
function captureMessage(
  message,
  // eslint-disable-next-line deprecation/deprecation
  captureContext,
) {
  // This is necessary to provide explicit scopes upgrade, without changing the original
  // arity of the `captureMessage(message, level)` method.
  const level = typeof captureContext === 'string' ? captureContext : undefined;
  const context = typeof captureContext !== 'string' ? { captureContext } : undefined;
  // eslint-disable-next-line deprecation/deprecation
  return (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().captureMessage(message, level, context);
}

/**
 * Captures a manually created event and sends it to Sentry.
 *
 * @param exception The event to send to Sentry.
 * @param hint Optional additional data to attach to the Sentry event.
 * @returns the id of the captured event.
 */
function captureEvent(event, hint) {
  // eslint-disable-next-line deprecation/deprecation
  return (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().captureEvent(event, hint);
}

/**
 * Callback to set context information onto the scope.
 * @param callback Callback function that receives Scope.
 *
 * @deprecated Use getCurrentScope() directly.
 */
function configureScope(callback) {
  // eslint-disable-next-line deprecation/deprecation
  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().configureScope(callback);
}

/**
 * Records a new breadcrumb which will be attached to future events.
 *
 * Breadcrumbs will be added to subsequent events to provide more context on
 * user's actions prior to an error or crash.
 *
 * @param breadcrumb The breadcrumb to record.
 */
function addBreadcrumb(breadcrumb, hint) {
  // eslint-disable-next-line deprecation/deprecation
  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().addBreadcrumb(breadcrumb, hint);
}

/**
 * Sets context data with the given name.
 * @param name of the context
 * @param context Any kind of data. This data will be normalized.
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function setContext(name, context) {
  // eslint-disable-next-line deprecation/deprecation
  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().setContext(name, context);
}

/**
 * Set an object that will be merged sent as extra data with the event.
 * @param extras Extras object to merge into current context.
 */
function setExtras(extras) {
  // eslint-disable-next-line deprecation/deprecation
  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().setExtras(extras);
}

/**
 * Set key:value that will be sent as extra data with the event.
 * @param key String of extra
 * @param extra Any kind of data. This data will be normalized.
 */
function setExtra(key, extra) {
  // eslint-disable-next-line deprecation/deprecation
  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().setExtra(key, extra);
}

/**
 * Set an object that will be merged sent as tags data with the event.
 * @param tags Tags context object to merge into current context.
 */
function setTags(tags) {
  // eslint-disable-next-line deprecation/deprecation
  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().setTags(tags);
}

/**
 * Set key:value that will be sent as tags data with the event.
 *
 * Can also be used to unset a tag, by passing `undefined`.
 *
 * @param key String key of tag
 * @param value Value of tag
 */
function setTag(key, value) {
  // eslint-disable-next-line deprecation/deprecation
  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().setTag(key, value);
}

/**
 * Updates user context information for future events.
 *
 * @param user User context object to be set in the current context. Pass `null` to unset the user.
 */
function setUser(user) {
  // eslint-disable-next-line deprecation/deprecation
  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().setUser(user);
}

/**
 * Creates a new scope with and executes the given operation within.
 * The scope is automatically removed once the operation
 * finishes or throws.
 *
 * This is essentially a convenience function for:
 *
 *     pushScope();
 *     callback();
 *     popScope();
 */

/**
 * Either creates a new active scope, or sets the given scope as active scope in the given callback.
 */
function withScope(
  ...rest
) {
  // eslint-disable-next-line deprecation/deprecation
  const hub = (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)();

  // If a scope is defined, we want to make this the active scope instead of the default one
  if (rest.length === 2) {
    const [scope, callback] = rest;
    if (!scope) {
      // eslint-disable-next-line deprecation/deprecation
      return hub.withScope(callback);
    }

    // eslint-disable-next-line deprecation/deprecation
    return hub.withScope(() => {
      // eslint-disable-next-line deprecation/deprecation
      hub.getStackTop().scope = scope ;
      return callback(scope );
    });
  }

  // eslint-disable-next-line deprecation/deprecation
  return hub.withScope(rest[0]);
}

/**
 * Attempts to fork the current isolation scope and the current scope based on the current async context strategy. If no
 * async context strategy is set, the isolation scope and the current scope will not be forked (this is currently the
 * case, for example, in the browser).
 *
 * Usage of this function in environments without async context strategy is discouraged and may lead to unexpected behaviour.
 *
 * This function is intended for Sentry SDK and SDK integration development. It is not recommended to be used in "normal"
 * applications directly because it comes with pitfalls. Use at your own risk!
 *
 * @param callback The callback in which the passed isolation scope is active. (Note: In environments without async
 * context strategy, the currently active isolation scope may change within execution of the callback.)
 * @returns The same value that `callback` returns.
 */
function withIsolationScope(callback) {
  return (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.runWithAsyncContext)(() => {
    return callback((0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getIsolationScope)());
  });
}

/**
 * Forks the current scope and sets the provided span as active span in the context of the provided callback.
 *
 * @param span Spans started in the context of the provided callback will be children of this span.
 * @param callback Execution context in which the provided span will be active. Is passed the newly forked scope.
 * @returns the value returned from the provided callback function.
 */
function withActiveSpan(span, callback) {
  return withScope(scope => {
    // eslint-disable-next-line deprecation/deprecation
    scope.setSpan(span);
    return callback(scope);
  });
}

/**
 * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.
 *
 * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a
 * new child span within the transaction or any span, call the respective `.startChild()` method.
 *
 * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.
 *
 * The transaction must be finished with a call to its `.end()` method, at which point the transaction with all its
 * finished child spans will be sent to Sentry.
 *
 * NOTE: This function should only be used for *manual* instrumentation. Auto-instrumentation should call
 * `startTransaction` directly on the hub.
 *
 * @param context Properties of the new `Transaction`.
 * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent
 * default values). See {@link Options.tracesSampler}.
 *
 * @returns The transaction which was just started
 *
 * @deprecated Use `startSpan()`, `startSpanManual()` or `startInactiveSpan()` instead.
 */
function startTransaction(
  context,
  customSamplingContext,
) {
  // eslint-disable-next-line deprecation/deprecation
  return (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().startTransaction({ ...context }, customSamplingContext);
}

/**
 * Create a cron monitor check in and send it to Sentry.
 *
 * @param checkIn An object that describes a check in.
 * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want
 * to create a monitor automatically when sending a check in.
 */
function captureCheckIn(checkIn, upsertMonitorConfig) {
  const scope = getCurrentScope();
  const client = getClient();
  if (!client) {
    _debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.warn('Cannot capture check-in. No client defined.');
  } else if (!client.captureCheckIn) {
    _debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.warn('Cannot capture check-in. Client does not support sending check-ins.');
  } else {
    return client.captureCheckIn(checkIn, upsertMonitorConfig, scope);
  }

  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.uuid4)();
}

/**
 * Wraps a callback with a cron monitor check in. The check in will be sent to Sentry when the callback finishes.
 *
 * @param monitorSlug The distinct slug of the monitor.
 * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want
 * to create a monitor automatically when sending a check in.
 */
function withMonitor(
  monitorSlug,
  callback,
  upsertMonitorConfig,
) {
  const checkInId = captureCheckIn({ monitorSlug, status: 'in_progress' }, upsertMonitorConfig);
  const now = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.timestampInSeconds)();

  function finishCheckIn(status) {
    captureCheckIn({ monitorSlug, status, checkInId, duration: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.timestampInSeconds)() - now });
  }

  let maybePromiseResult;
  try {
    maybePromiseResult = callback();
  } catch (e) {
    finishCheckIn('error');
    throw e;
  }

  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_6__.isThenable)(maybePromiseResult)) {
    Promise.resolve(maybePromiseResult).then(
      () => {
        finishCheckIn('ok');
      },
      () => {
        finishCheckIn('error');
      },
    );
  } else {
    finishCheckIn('ok');
  }

  return maybePromiseResult;
}

/**
 * Call `flush()` on the current client, if there is one. See {@link Client.flush}.
 *
 * @param timeout Maximum time in ms the client should wait to flush its event queue. Omitting this parameter will cause
 * the client to wait until all events are sent before resolving the promise.
 * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it
 * doesn't (or if there's no client defined).
 */
async function flush(timeout) {
  const client = getClient();
  if (client) {
    return client.flush(timeout);
  }
  _debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.warn('Cannot flush events. No client defined.');
  return Promise.resolve(false);
}

/**
 * Call `close()` on the current client, if there is one. See {@link Client.close}.
 *
 * @param timeout Maximum time in ms the client should wait to flush its event queue before shutting down. Omitting this
 * parameter will cause the client to wait until all events are sent before disabling itself.
 * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it
 * doesn't (or if there's no client defined).
 */
async function close(timeout) {
  const client = getClient();
  if (client) {
    return client.close(timeout);
  }
  _debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.warn('Cannot flush events and disable SDK. No client defined.');
  return Promise.resolve(false);
}

/**
 * This is the getter for lastEventId.
 *
 * @returns The last event id of a captured event.
 * @deprecated This function will be removed in the next major version of the Sentry SDK.
 */
function lastEventId() {
  // eslint-disable-next-line deprecation/deprecation
  return (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().lastEventId();
}

/**
 * Get the currently active client.
 */
function getClient() {
  // eslint-disable-next-line deprecation/deprecation
  return (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().getClient();
}

/**
 * Returns true if Sentry has been properly initialized.
 */
function isInitialized() {
  return !!getClient();
}

/**
 * Get the currently active scope.
 */
function getCurrentScope() {
  // eslint-disable-next-line deprecation/deprecation
  return (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().getScope();
}

/**
 * Start a session on the current isolation scope.
 *
 * @param context (optional) additional properties to be applied to the returned session object
 *
 * @returns the new active session
 */
function startSession(context) {
  const client = getClient();
  const isolationScope = (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getIsolationScope)();
  const currentScope = getCurrentScope();

  const { release, environment = _constants_js__WEBPACK_IMPORTED_MODULE_7__.DEFAULT_ENVIRONMENT } = (client && client.getOptions()) || {};

  // Will fetch userAgent if called from browser sdk
  const { userAgent } = _sentry_utils__WEBPACK_IMPORTED_MODULE_8__.GLOBAL_OBJ.navigator || {};

  const session = (0,_session_js__WEBPACK_IMPORTED_MODULE_9__.makeSession)({
    release,
    environment,
    user: currentScope.getUser() || isolationScope.getUser(),
    ...(userAgent && { userAgent }),
    ...context,
  });

  // End existing session if there's one
  const currentSession = isolationScope.getSession();
  if (currentSession && currentSession.status === 'ok') {
    (0,_session_js__WEBPACK_IMPORTED_MODULE_9__.updateSession)(currentSession, { status: 'exited' });
  }

  endSession();

  // Afterwards we set the new session on the scope
  isolationScope.setSession(session);

  // TODO (v8): Remove this and only use the isolation scope(?).
  // For v7 though, we can't "soft-break" people using getCurrentHub().getScope().setSession()
  currentScope.setSession(session);

  return session;
}

/**
 * End the session on the current isolation scope.
 */
function endSession() {
  const isolationScope = (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getIsolationScope)();
  const currentScope = getCurrentScope();

  const session = currentScope.getSession() || isolationScope.getSession();
  if (session) {
    (0,_session_js__WEBPACK_IMPORTED_MODULE_9__.closeSession)(session);
  }
  _sendSessionUpdate();

  // the session is over; take it off of the scope
  isolationScope.setSession();

  // TODO (v8): Remove this and only use the isolation scope(?).
  // For v7 though, we can't "soft-break" people using getCurrentHub().getScope().setSession()
  currentScope.setSession();
}

/**
 * Sends the current Session on the scope
 */
function _sendSessionUpdate() {
  const isolationScope = (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getIsolationScope)();
  const currentScope = getCurrentScope();
  const client = getClient();
  // TODO (v8): Remove currentScope and only use the isolation scope(?).
  // For v7 though, we can't "soft-break" people using getCurrentHub().getScope().setSession()
  const session = currentScope.getSession() || isolationScope.getSession();
  if (session && client && client.captureSession) {
    client.captureSession(session);
  }
}

/**
 * Sends the current session on the scope to Sentry
 *
 * @param end If set the session will be marked as exited and removed from the scope.
 *            Defaults to `false`.
 */
function captureSession(end = false) {
  // both send the update and pull the session from the scope
  if (end) {
    endSession();
    return;
  }

  // only send the update
  _sendSessionUpdate();
}


//# sourceMappingURL=exports.js.map


/***/ }),

/***/ "./node_modules/@sentry/core/esm/hub.js":
/*!**********************************************!*\
  !*** ./node_modules/@sentry/core/esm/hub.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "API_VERSION": () => (/* binding */ API_VERSION),
/* harmony export */   "Hub": () => (/* binding */ Hub),
/* harmony export */   "ensureHubOnCarrier": () => (/* binding */ ensureHubOnCarrier),
/* harmony export */   "getCurrentHub": () => (/* binding */ getCurrentHub),
/* harmony export */   "getHubFromCarrier": () => (/* binding */ getHubFromCarrier),
/* harmony export */   "getIsolationScope": () => (/* binding */ getIsolationScope),
/* harmony export */   "getMainCarrier": () => (/* binding */ getMainCarrier),
/* harmony export */   "makeMain": () => (/* binding */ makeMain),
/* harmony export */   "runWithAsyncContext": () => (/* binding */ runWithAsyncContext),
/* harmony export */   "setAsyncContextStrategy": () => (/* binding */ setAsyncContextStrategy),
/* harmony export */   "setHubOnCarrier": () => (/* binding */ setHubOnCarrier)
/* harmony export */ });
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/is.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/misc.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/time.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/logger.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/worldwide.js");
/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./constants.js */ "./node_modules/@sentry/core/esm/constants.js");
/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./debug-build.js */ "./node_modules/@sentry/core/esm/debug-build.js");
/* harmony import */ var _scope_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scope.js */ "./node_modules/@sentry/core/esm/scope.js");
/* harmony import */ var _session_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./session.js */ "./node_modules/@sentry/core/esm/session.js");
/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./version.js */ "./node_modules/@sentry/core/esm/version.js");







/**
 * API compatibility version of this hub.
 *
 * WARNING: This number should only be increased when the global interface
 * changes and new methods are introduced.
 *
 * @hidden
 */
const API_VERSION = parseFloat(_version_js__WEBPACK_IMPORTED_MODULE_0__.SDK_VERSION);

/**
 * Default maximum number of breadcrumbs added to an event. Can be overwritten
 * with {@link Options.maxBreadcrumbs}.
 */
const DEFAULT_BREADCRUMBS = 100;

/**
 * @inheritDoc
 */
class Hub  {
  /** Is a {@link Layer}[] containing the client and scope */

  /** Contains the last event id of a captured event.  */

  /**
   * Creates a new instance of the hub, will push one {@link Layer} into the
   * internal stack on creation.
   *
   * @param client bound to the hub.
   * @param scope bound to the hub.
   * @param version number, higher number means higher priority.
   */
   constructor(
    client,
    scope,
    isolationScope,
      _version = API_VERSION,
  ) {this._version = _version;
    let assignedScope;
    if (!scope) {
      assignedScope = new _scope_js__WEBPACK_IMPORTED_MODULE_1__.Scope();
      assignedScope.setClient(client);
    } else {
      assignedScope = scope;
    }

    let assignedIsolationScope;
    if (!isolationScope) {
      assignedIsolationScope = new _scope_js__WEBPACK_IMPORTED_MODULE_1__.Scope();
      assignedIsolationScope.setClient(client);
    } else {
      assignedIsolationScope = isolationScope;
    }

    this._stack = [{ scope: assignedScope }];

    if (client) {
      // eslint-disable-next-line deprecation/deprecation
      this.bindClient(client);
    }

    this._isolationScope = assignedIsolationScope;
  }

  /**
   * Checks if this hub's version is older than the given version.
   *
   * @param version A version number to compare to.
   * @return True if the given version is newer; otherwise false.
   *
   * @deprecated This will be removed in v8.
   */
   isOlderThan(version) {
    return this._version < version;
  }

  /**
   * This binds the given client to the current scope.
   * @param client An SDK client (client) instance.
   *
   * @deprecated Use `initAndBind()` directly, or `setCurrentClient()` and/or `client.init()` instead.
   */
   bindClient(client) {
    // eslint-disable-next-line deprecation/deprecation
    const top = this.getStackTop();
    top.client = client;
    top.scope.setClient(client);
    // eslint-disable-next-line deprecation/deprecation
    if (client && client.setupIntegrations) {
      // eslint-disable-next-line deprecation/deprecation
      client.setupIntegrations();
    }
  }

  /**
   * @inheritDoc
   *
   * @deprecated Use `withScope` instead.
   */
   pushScope() {
    // We want to clone the content of prev scope
    // eslint-disable-next-line deprecation/deprecation
    const scope = this.getScope().clone();
    // eslint-disable-next-line deprecation/deprecation
    this.getStack().push({
      // eslint-disable-next-line deprecation/deprecation
      client: this.getClient(),
      scope,
    });
    return scope;
  }

  /**
   * @inheritDoc
   *
   * @deprecated Use `withScope` instead.
   */
   popScope() {
    // eslint-disable-next-line deprecation/deprecation
    if (this.getStack().length <= 1) return false;
    // eslint-disable-next-line deprecation/deprecation
    return !!this.getStack().pop();
  }

  /**
   * @inheritDoc
   *
   * @deprecated Use `Sentry.withScope()` instead.
   */
   withScope(callback) {
    // eslint-disable-next-line deprecation/deprecation
    const scope = this.pushScope();

    let maybePromiseResult;
    try {
      maybePromiseResult = callback(scope);
    } catch (e) {
      // eslint-disable-next-line deprecation/deprecation
      this.popScope();
      throw e;
    }

    if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.isThenable)(maybePromiseResult)) {
      // @ts-expect-error - isThenable returns the wrong type
      return maybePromiseResult.then(
        res => {
          // eslint-disable-next-line deprecation/deprecation
          this.popScope();
          return res;
        },
        e => {
          // eslint-disable-next-line deprecation/deprecation
          this.popScope();
          throw e;
        },
      );
    }

    // eslint-disable-next-line deprecation/deprecation
    this.popScope();
    return maybePromiseResult;
  }

  /**
   * @inheritDoc
   *
   * @deprecated Use `Sentry.getClient()` instead.
   */
   getClient() {
    // eslint-disable-next-line deprecation/deprecation
    return this.getStackTop().client ;
  }

  /**
   * Returns the scope of the top stack.
   *
   * @deprecated Use `Sentry.getCurrentScope()` instead.
   */
   getScope() {
    // eslint-disable-next-line deprecation/deprecation
    return this.getStackTop().scope;
  }

  /**
   * @deprecated Use `Sentry.getIsolationScope()` instead.
   */
   getIsolationScope() {
    return this._isolationScope;
  }

  /**
   * Returns the scope stack for domains or the process.
   * @deprecated This will be removed in v8.
   */
   getStack() {
    return this._stack;
  }

  /**
   * Returns the topmost scope layer in the order domain > local > process.
   * @deprecated This will be removed in v8.
   */
   getStackTop() {
    return this._stack[this._stack.length - 1];
  }

  /**
   * @inheritDoc
   *
   * @deprecated Use `Sentry.captureException()` instead.
   */
   captureException(exception, hint) {
    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.uuid4)());
    const syntheticException = new Error('Sentry syntheticException');
    // eslint-disable-next-line deprecation/deprecation
    this.getScope().captureException(exception, {
      originalException: exception,
      syntheticException,
      ...hint,
      event_id: eventId,
    });

    return eventId;
  }

  /**
   * @inheritDoc
   *
   * @deprecated Use  `Sentry.captureMessage()` instead.
   */
   captureMessage(
    message,
    // eslint-disable-next-line deprecation/deprecation
    level,
    hint,
  ) {
    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.uuid4)());
    const syntheticException = new Error(message);
    // eslint-disable-next-line deprecation/deprecation
    this.getScope().captureMessage(message, level, {
      originalException: message,
      syntheticException,
      ...hint,
      event_id: eventId,
    });

    return eventId;
  }

  /**
   * @inheritDoc
   *
   * @deprecated Use `Sentry.captureEvent()` instead.
   */
   captureEvent(event, hint) {
    const eventId = hint && hint.event_id ? hint.event_id : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.uuid4)();
    if (!event.type) {
      this._lastEventId = eventId;
    }
    // eslint-disable-next-line deprecation/deprecation
    this.getScope().captureEvent(event, { ...hint, event_id: eventId });
    return eventId;
  }

  /**
   * @inheritDoc
   *
   * @deprecated This will be removed in v8.
   */
   lastEventId() {
    return this._lastEventId;
  }

  /**
   * @inheritDoc
   *
   * @deprecated Use `Sentry.addBreadcrumb()` instead.
   */
   addBreadcrumb(breadcrumb, hint) {
    // eslint-disable-next-line deprecation/deprecation
    const { scope, client } = this.getStackTop();

    if (!client) return;

    const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =
      (client.getOptions && client.getOptions()) || {};

    if (maxBreadcrumbs <= 0) return;

    const timestamp = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.dateTimestampInSeconds)();
    const mergedBreadcrumb = { timestamp, ...breadcrumb };
    const finalBreadcrumb = beforeBreadcrumb
      ? ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.consoleSandbox)(() => beforeBreadcrumb(mergedBreadcrumb, hint)) )
      : mergedBreadcrumb;

    if (finalBreadcrumb === null) return;

    if (client.emit) {
      client.emit('beforeAddBreadcrumb', finalBreadcrumb, hint);
    }

    // TODO(v8): I know this comment doesn't make much sense because the hub will be deprecated but I still wanted to
    // write it down. In theory, we would have to add the breadcrumbs to the isolation scope here, however, that would
    // duplicate all of the breadcrumbs. There was the possibility of adding breadcrumbs to both, the isolation scope
    // and the normal scope, and deduplicating it down the line in the event processing pipeline. However, that would
    // have been very fragile, because the breadcrumb objects would have needed to keep their identity all throughout
    // the event processing pipeline.
    // In the new implementation, the top level `Sentry.addBreadcrumb()` should ONLY write to the isolation scope.

    scope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);
  }

  /**
   * @inheritDoc
   * @deprecated Use `Sentry.setUser()` instead.
   */
   setUser(user) {
    // TODO(v8): The top level `Sentry.setUser()` function should write ONLY to the isolation scope.
    // eslint-disable-next-line deprecation/deprecation
    this.getScope().setUser(user);
    // eslint-disable-next-line deprecation/deprecation
    this.getIsolationScope().setUser(user);
  }

  /**
   * @inheritDoc
   * @deprecated Use `Sentry.setTags()` instead.
   */
   setTags(tags) {
    // TODO(v8): The top level `Sentry.setTags()` function should write ONLY to the isolation scope.
    // eslint-disable-next-line deprecation/deprecation
    this.getScope().setTags(tags);
    // eslint-disable-next-line deprecation/deprecation
    this.getIsolationScope().setTags(tags);
  }

  /**
   * @inheritDoc
   * @deprecated Use `Sentry.setExtras()` instead.
   */
   setExtras(extras) {
    // TODO(v8): The top level `Sentry.setExtras()` function should write ONLY to the isolation scope.
    // eslint-disable-next-line deprecation/deprecation
    this.getScope().setExtras(extras);
    // eslint-disable-next-line deprecation/deprecation
    this.getIsolationScope().setExtras(extras);
  }

  /**
   * @inheritDoc
   * @deprecated Use `Sentry.setTag()` instead.
   */
   setTag(key, value) {
    // TODO(v8): The top level `Sentry.setTag()` function should write ONLY to the isolation scope.
    // eslint-disable-next-line deprecation/deprecation
    this.getScope().setTag(key, value);
    // eslint-disable-next-line deprecation/deprecation
    this.getIsolationScope().setTag(key, value);
  }

  /**
   * @inheritDoc
   * @deprecated Use `Sentry.setExtra()` instead.
   */
   setExtra(key, extra) {
    // TODO(v8): The top level `Sentry.setExtra()` function should write ONLY to the isolation scope.
    // eslint-disable-next-line deprecation/deprecation
    this.getScope().setExtra(key, extra);
    // eslint-disable-next-line deprecation/deprecation
    this.getIsolationScope().setExtra(key, extra);
  }

  /**
   * @inheritDoc
   * @deprecated Use `Sentry.setContext()` instead.
   */
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
   setContext(name, context) {
    // TODO(v8): The top level `Sentry.setContext()` function should write ONLY to the isolation scope.
    // eslint-disable-next-line deprecation/deprecation
    this.getScope().setContext(name, context);
    // eslint-disable-next-line deprecation/deprecation
    this.getIsolationScope().setContext(name, context);
  }

  /**
   * @inheritDoc
   *
   * @deprecated Use `getScope()` directly.
   */
   configureScope(callback) {
    // eslint-disable-next-line deprecation/deprecation
    const { scope, client } = this.getStackTop();
    if (client) {
      callback(scope);
    }
  }

  /**
   * @inheritDoc
   */
   run(callback) {
    // eslint-disable-next-line deprecation/deprecation
    const oldHub = makeMain(this);
    try {
      callback(this);
    } finally {
      // eslint-disable-next-line deprecation/deprecation
      makeMain(oldHub);
    }
  }

  /**
   * @inheritDoc
   * @deprecated Use `Sentry.getClient().getIntegrationByName()` instead.
   */
   getIntegration(integration) {
    // eslint-disable-next-line deprecation/deprecation
    const client = this.getClient();
    if (!client) return null;
    try {
      // eslint-disable-next-line deprecation/deprecation
      return client.getIntegration(integration);
    } catch (_oO) {
      _debug_build_js__WEBPACK_IMPORTED_MODULE_6__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);
      return null;
    }
  }

  /**
   * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.
   *
   * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a
   * new child span within the transaction or any span, call the respective `.startChild()` method.
   *
   * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.
   *
   * The transaction must be finished with a call to its `.end()` method, at which point the transaction with all its
   * finished child spans will be sent to Sentry.
   *
   * @param context Properties of the new `Transaction`.
   * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent
   * default values). See {@link Options.tracesSampler}.
   *
   * @returns The transaction which was just started
   *
   * @deprecated Use `startSpan()`, `startSpanManual()` or `startInactiveSpan()` instead.
   */
   startTransaction(context, customSamplingContext) {
    const result = this._callExtensionMethod('startTransaction', context, customSamplingContext);

    if (_debug_build_js__WEBPACK_IMPORTED_MODULE_6__.DEBUG_BUILD && !result) {
      // eslint-disable-next-line deprecation/deprecation
      const client = this.getClient();
      if (!client) {
        _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.warn(
          "Tracing extension 'startTransaction' is missing. You should 'init' the SDK before calling 'startTransaction'",
        );
      } else {
        _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.warn(`Tracing extension 'startTransaction' has not been added. Call 'addTracingExtensions' before calling 'init':
Sentry.addTracingExtensions();
Sentry.init({...});
`);
      }
    }

    return result;
  }

  /**
   * @inheritDoc
   * @deprecated Use `spanToTraceHeader()` instead.
   */
   traceHeaders() {
    return this._callExtensionMethod('traceHeaders');
  }

  /**
   * @inheritDoc
   *
   * @deprecated Use top level `captureSession` instead.
   */
   captureSession(endSession = false) {
    // both send the update and pull the session from the scope
    if (endSession) {
      // eslint-disable-next-line deprecation/deprecation
      return this.endSession();
    }

    // only send the update
    this._sendSessionUpdate();
  }

  /**
   * @inheritDoc
   * @deprecated Use top level `endSession` instead.
   */
   endSession() {
    // eslint-disable-next-line deprecation/deprecation
    const layer = this.getStackTop();
    const scope = layer.scope;
    const session = scope.getSession();
    if (session) {
      (0,_session_js__WEBPACK_IMPORTED_MODULE_7__.closeSession)(session);
    }
    this._sendSessionUpdate();

    // the session is over; take it off of the scope
    scope.setSession();
  }

  /**
   * @inheritDoc
   * @deprecated Use top level `startSession` instead.
   */
   startSession(context) {
    // eslint-disable-next-line deprecation/deprecation
    const { scope, client } = this.getStackTop();
    const { release, environment = _constants_js__WEBPACK_IMPORTED_MODULE_8__.DEFAULT_ENVIRONMENT } = (client && client.getOptions()) || {};

    // Will fetch userAgent if called from browser sdk
    const { userAgent } = _sentry_utils__WEBPACK_IMPORTED_MODULE_9__.GLOBAL_OBJ.navigator || {};

    const session = (0,_session_js__WEBPACK_IMPORTED_MODULE_7__.makeSession)({
      release,
      environment,
      user: scope.getUser(),
      ...(userAgent && { userAgent }),
      ...context,
    });

    // End existing session if there's one
    const currentSession = scope.getSession && scope.getSession();
    if (currentSession && currentSession.status === 'ok') {
      (0,_session_js__WEBPACK_IMPORTED_MODULE_7__.updateSession)(currentSession, { status: 'exited' });
    }
    // eslint-disable-next-line deprecation/deprecation
    this.endSession();

    // Afterwards we set the new session on the scope
    scope.setSession(session);

    return session;
  }

  /**
   * Returns if default PII should be sent to Sentry and propagated in ourgoing requests
   * when Tracing is used.
   *
   * @deprecated Use top-level `getClient().getOptions().sendDefaultPii` instead. This function
   * only unnecessarily increased API surface but only wrapped accessing the option.
   */
   shouldSendDefaultPii() {
    // eslint-disable-next-line deprecation/deprecation
    const client = this.getClient();
    const options = client && client.getOptions();
    return Boolean(options && options.sendDefaultPii);
  }

  /**
   * Sends the current Session on the scope
   */
   _sendSessionUpdate() {
    // eslint-disable-next-line deprecation/deprecation
    const { scope, client } = this.getStackTop();

    const session = scope.getSession();
    if (session && client && client.captureSession) {
      client.captureSession(session);
    }
  }

  /**
   * Calls global extension method and binding current instance to the function call
   */
  // @ts-expect-error Function lacks ending return statement and return type does not include 'undefined'. ts(2366)
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
   _callExtensionMethod(method, ...args) {
    const carrier = getMainCarrier();
    const sentry = carrier.__SENTRY__;
    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {
      return sentry.extensions[method].apply(this, args);
    }
    _debug_build_js__WEBPACK_IMPORTED_MODULE_6__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.warn(`Extension method ${method} couldn't be found, doing nothing.`);
  }
}

/**
 * Returns the global shim registry.
 *
 * FIXME: This function is problematic, because despite always returning a valid Carrier,
 * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check
 * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.
 **/
function getMainCarrier() {
  _sentry_utils__WEBPACK_IMPORTED_MODULE_9__.GLOBAL_OBJ.__SENTRY__ = _sentry_utils__WEBPACK_IMPORTED_MODULE_9__.GLOBAL_OBJ.__SENTRY__ || {
    extensions: {},
    hub: undefined,
  };
  return _sentry_utils__WEBPACK_IMPORTED_MODULE_9__.GLOBAL_OBJ;
}

/**
 * Replaces the current main hub with the passed one on the global object
 *
 * @returns The old replaced hub
 *
 * @deprecated Use `setCurrentClient()` instead.
 */
function makeMain(hub) {
  const registry = getMainCarrier();
  const oldHub = getHubFromCarrier(registry);
  setHubOnCarrier(registry, hub);
  return oldHub;
}

/**
 * Returns the default hub instance.
 *
 * If a hub is already registered in the global carrier but this module
 * contains a more recent version, it replaces the registered version.
 * Otherwise, the currently registered hub will be returned.
 *
 * @deprecated Use the respective replacement method directly instead.
 */
function getCurrentHub() {
  // Get main carrier (global for every environment)
  const registry = getMainCarrier();

  if (registry.__SENTRY__ && registry.__SENTRY__.acs) {
    const hub = registry.__SENTRY__.acs.getCurrentHub();

    if (hub) {
      return hub;
    }
  }

  // Return hub that lives on a global object
  return getGlobalHub(registry);
}

/**
 * Get the currently active isolation scope.
 * The isolation scope is active for the current exection context,
 * meaning that it will remain stable for the same Hub.
 */
function getIsolationScope() {
  // eslint-disable-next-line deprecation/deprecation
  return getCurrentHub().getIsolationScope();
}

function getGlobalHub(registry = getMainCarrier()) {
  // If there's no hub, or its an old API, assign a new one

  if (
    !hasHubOnCarrier(registry) ||
    // eslint-disable-next-line deprecation/deprecation
    getHubFromCarrier(registry).isOlderThan(API_VERSION)
  ) {
    setHubOnCarrier(registry, new Hub());
  }

  // Return hub that lives on a global object
  return getHubFromCarrier(registry);
}

/**
 * @private Private API with no semver guarantees!
 *
 * If the carrier does not contain a hub, a new hub is created with the global hub client and scope.
 */
function ensureHubOnCarrier(carrier, parent = getGlobalHub()) {
  // If there's no hub on current domain, or it's an old API, assign a new one
  if (
    !hasHubOnCarrier(carrier) ||
    // eslint-disable-next-line deprecation/deprecation
    getHubFromCarrier(carrier).isOlderThan(API_VERSION)
  ) {
    // eslint-disable-next-line deprecation/deprecation
    const client = parent.getClient();
    // eslint-disable-next-line deprecation/deprecation
    const scope = parent.getScope();
    // eslint-disable-next-line deprecation/deprecation
    const isolationScope = parent.getIsolationScope();
    setHubOnCarrier(carrier, new Hub(client, scope.clone(), isolationScope.clone()));
  }
}

/**
 * @private Private API with no semver guarantees!
 *
 * Sets the global async context strategy
 */
function setAsyncContextStrategy(strategy) {
  // Get main carrier (global for every environment)
  const registry = getMainCarrier();
  registry.__SENTRY__ = registry.__SENTRY__ || {};
  registry.__SENTRY__.acs = strategy;
}

/**
 * Runs the supplied callback in its own async context. Async Context strategies are defined per SDK.
 *
 * @param callback The callback to run in its own async context
 * @param options Options to pass to the async context strategy
 * @returns The result of the callback
 */
function runWithAsyncContext(callback, options = {}) {
  const registry = getMainCarrier();

  if (registry.__SENTRY__ && registry.__SENTRY__.acs) {
    return registry.__SENTRY__.acs.runWithAsyncContext(callback, options);
  }

  // if there was no strategy, fallback to just calling the callback
  return callback();
}

/**
 * This will tell whether a carrier has a hub on it or not
 * @param carrier object
 */
function hasHubOnCarrier(carrier) {
  return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);
}

/**
 * This will create a new {@link Hub} and add to the passed object on
 * __SENTRY__.hub.
 * @param carrier object
 * @hidden
 */
function getHubFromCarrier(carrier) {
  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_9__.getGlobalSingleton)('hub', () => new Hub(), carrier);
}

/**
 * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute
 * @param carrier object
 * @param hub Hub
 * @returns A boolean indicating success or failure
 */
function setHubOnCarrier(carrier, hub) {
  if (!carrier) return false;
  const __SENTRY__ = (carrier.__SENTRY__ = carrier.__SENTRY__ || {});
  __SENTRY__.hub = hub;
  return true;
}


//# sourceMappingURL=hub.js.map


/***/ }),

/***/ "./node_modules/@sentry/core/esm/integration.js":
/*!******************************************************!*\
  !*** ./node_modules/@sentry/core/esm/integration.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "addIntegration": () => (/* binding */ addIntegration),
/* harmony export */   "convertIntegrationFnToClass": () => (/* binding */ convertIntegrationFnToClass),
/* harmony export */   "defineIntegration": () => (/* binding */ defineIntegration),
/* harmony export */   "getIntegrationsToSetup": () => (/* binding */ getIntegrationsToSetup),
/* harmony export */   "installedIntegrations": () => (/* binding */ installedIntegrations),
/* harmony export */   "setupIntegration": () => (/* binding */ setupIntegration),
/* harmony export */   "setupIntegrations": () => (/* binding */ setupIntegrations)
/* harmony export */ });
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/misc.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/logger.js");
/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./debug-build.js */ "./node_modules/@sentry/core/esm/debug-build.js");
/* harmony import */ var _eventProcessors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./eventProcessors.js */ "./node_modules/@sentry/core/esm/eventProcessors.js");
/* harmony import */ var _exports_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./exports.js */ "./node_modules/@sentry/core/esm/exports.js");
/* harmony import */ var _hub_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./hub.js */ "./node_modules/@sentry/core/esm/hub.js");






const installedIntegrations = [];

/** Map of integrations assigned to a client */

/**
 * Remove duplicates from the given array, preferring the last instance of any duplicate. Not guaranteed to
 * preseve the order of integrations in the array.
 *
 * @private
 */
function filterDuplicates(integrations) {
  const integrationsByName = {};

  integrations.forEach(currentInstance => {
    const { name } = currentInstance;

    const existingInstance = integrationsByName[name];

    // We want integrations later in the array to overwrite earlier ones of the same type, except that we never want a
    // default instance to overwrite an existing user instance
    if (existingInstance && !existingInstance.isDefaultInstance && currentInstance.isDefaultInstance) {
      return;
    }

    integrationsByName[name] = currentInstance;
  });

  return Object.keys(integrationsByName).map(k => integrationsByName[k]);
}

/** Gets integrations to install */
function getIntegrationsToSetup(options) {
  const defaultIntegrations = options.defaultIntegrations || [];
  const userIntegrations = options.integrations;

  // We flag default instances, so that later we can tell them apart from any user-created instances of the same class
  defaultIntegrations.forEach(integration => {
    integration.isDefaultInstance = true;
  });

  let integrations;

  if (Array.isArray(userIntegrations)) {
    integrations = [...defaultIntegrations, ...userIntegrations];
  } else if (typeof userIntegrations === 'function') {
    integrations = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.arrayify)(userIntegrations(defaultIntegrations));
  } else {
    integrations = defaultIntegrations;
  }

  const finalIntegrations = filterDuplicates(integrations);

  // The `Debug` integration prints copies of the `event` and `hint` which will be passed to `beforeSend` or
  // `beforeSendTransaction`. It therefore has to run after all other integrations, so that the changes of all event
  // processors will be reflected in the printed values. For lack of a more elegant way to guarantee that, we therefore
  // locate it and, assuming it exists, pop it out of its current spot and shove it onto the end of the array.
  const debugIndex = findIndex(finalIntegrations, integration => integration.name === 'Debug');
  if (debugIndex !== -1) {
    const [debugInstance] = finalIntegrations.splice(debugIndex, 1);
    finalIntegrations.push(debugInstance);
  }

  return finalIntegrations;
}

/**
 * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default
 * integrations are added unless they were already provided before.
 * @param integrations array of integration instances
 * @param withDefault should enable default integrations
 */
function setupIntegrations(client, integrations) {
  const integrationIndex = {};

  integrations.forEach(integration => {
    // guard against empty provided integrations
    if (integration) {
      setupIntegration(client, integration, integrationIndex);
    }
  });

  return integrationIndex;
}

/** Setup a single integration.  */
function setupIntegration(client, integration, integrationIndex) {
  if (integrationIndex[integration.name]) {
    _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log(`Integration skipped because it was already installed: ${integration.name}`);
    return;
  }
  integrationIndex[integration.name] = integration;

  // `setupOnce` is only called the first time
  if (installedIntegrations.indexOf(integration.name) === -1) {
    // eslint-disable-next-line deprecation/deprecation
    integration.setupOnce(_eventProcessors_js__WEBPACK_IMPORTED_MODULE_3__.addGlobalEventProcessor, _hub_js__WEBPACK_IMPORTED_MODULE_4__.getCurrentHub);
    installedIntegrations.push(integration.name);
  }

  // `setup` is run for each client
  if (integration.setup && typeof integration.setup === 'function') {
    integration.setup(client);
  }

  if (client.on && typeof integration.preprocessEvent === 'function') {
    const callback = integration.preprocessEvent.bind(integration) ;
    client.on('preprocessEvent', (event, hint) => callback(event, hint, client));
  }

  if (client.addEventProcessor && typeof integration.processEvent === 'function') {
    const callback = integration.processEvent.bind(integration) ;

    const processor = Object.assign((event, hint) => callback(event, hint, client), {
      id: integration.name,
    });

    client.addEventProcessor(processor);
  }

  _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log(`Integration installed: ${integration.name}`);
}

/** Add an integration to the current hub's client. */
function addIntegration(integration) {
  const client = (0,_exports_js__WEBPACK_IMPORTED_MODULE_5__.getClient)();

  if (!client || !client.addIntegration) {
    _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn(`Cannot add integration "${integration.name}" because no SDK Client is available.`);
    return;
  }

  client.addIntegration(integration);
}

// Polyfill for Array.findIndex(), which is not supported in ES5
function findIndex(arr, callback) {
  for (let i = 0; i < arr.length; i++) {
    if (callback(arr[i]) === true) {
      return i;
    }
  }

  return -1;
}

/**
 * Convert a new integration function to the legacy class syntax.
 * In v8, we can remove this and instead export the integration functions directly.
 *
 * @deprecated This will be removed in v8!
 */
function convertIntegrationFnToClass(
  name,
  fn,
) {
  return Object.assign(
    function ConvertedIntegration(...args) {
      return fn(...args);
    },
    { id: name },
  ) ;
}

/**
 * Define an integration function that can be used to create an integration instance.
 * Note that this by design hides the implementation details of the integration, as they are considered internal.
 */
function defineIntegration(fn) {
  return fn;
}


//# sourceMappingURL=integration.js.map


/***/ }),

/***/ "./node_modules/@sentry/core/esm/integrations/functiontostring.js":
/*!************************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/integrations/functiontostring.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FunctionToString": () => (/* binding */ FunctionToString),
/* harmony export */   "functionToStringIntegration": () => (/* binding */ functionToStringIntegration)
/* harmony export */ });
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/object.js");
/* harmony import */ var _integration_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../integration.js */ "./node_modules/@sentry/core/esm/integration.js");



let originalFunctionToString;

const INTEGRATION_NAME = 'FunctionToString';

const _functionToStringIntegration = (() => {
  return {
    name: INTEGRATION_NAME,
    setupOnce() {
      // eslint-disable-next-line @typescript-eslint/unbound-method
      originalFunctionToString = Function.prototype.toString;

      // intrinsics (like Function.prototype) might be immutable in some environments
      // e.g. Node with --frozen-intrinsics, XS (an embedded JavaScript engine) or SES (a JavaScript proposal)
      try {
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        Function.prototype.toString = function ( ...args) {
          const context = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getOriginalFunction)(this) || this;
          return originalFunctionToString.apply(context, args);
        };
      } catch (e) {
        // ignore errors here, just don't patch this
      }
    },
  };
}) ;

const functionToStringIntegration = (0,_integration_js__WEBPACK_IMPORTED_MODULE_1__.defineIntegration)(_functionToStringIntegration);

/**
 * Patch toString calls to return proper name for wrapped functions.
 * @deprecated Use `functionToStringIntegration()` instead.
 */
// eslint-disable-next-line deprecation/deprecation
const FunctionToString = (0,_integration_js__WEBPACK_IMPORTED_MODULE_1__.convertIntegrationFnToClass)(
  INTEGRATION_NAME,
  functionToStringIntegration,
) ;


//# sourceMappingURL=functiontostring.js.map


/***/ }),

/***/ "./node_modules/@sentry/core/esm/integrations/inboundfilters.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/integrations/inboundfilters.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "InboundFilters": () => (/* binding */ InboundFilters),
/* harmony export */   "inboundFiltersIntegration": () => (/* binding */ inboundFiltersIntegration)
/* harmony export */ });
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/logger.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/misc.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/string.js");
/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../debug-build.js */ "./node_modules/@sentry/core/esm/debug-build.js");
/* harmony import */ var _integration_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../integration.js */ "./node_modules/@sentry/core/esm/integration.js");




// "Script error." is hard coded into browsers for errors that it can't read.
// this is the result of a script being pulled in from an external domain and CORS.
const DEFAULT_IGNORE_ERRORS = [/^Script error\.?$/, /^Javascript error: Script error\.? on line 0$/];

const DEFAULT_IGNORE_TRANSACTIONS = [
  /^.*\/healthcheck$/,
  /^.*\/healthy$/,
  /^.*\/live$/,
  /^.*\/ready$/,
  /^.*\/heartbeat$/,
  /^.*\/health$/,
  /^.*\/healthz$/,
];

/** Options for the InboundFilters integration */

const INTEGRATION_NAME = 'InboundFilters';
const _inboundFiltersIntegration = ((options = {}) => {
  return {
    name: INTEGRATION_NAME,
    // TODO v8: Remove this
    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function
    processEvent(event, _hint, client) {
      const clientOptions = client.getOptions();
      const mergedOptions = _mergeOptions(options, clientOptions);
      return _shouldDropEvent(event, mergedOptions) ? null : event;
    },
  };
}) ;

const inboundFiltersIntegration = (0,_integration_js__WEBPACK_IMPORTED_MODULE_0__.defineIntegration)(_inboundFiltersIntegration);

/**
 * Inbound filters configurable by the user.
 * @deprecated Use `inboundFiltersIntegration()` instead.
 */
// eslint-disable-next-line deprecation/deprecation
const InboundFilters = (0,_integration_js__WEBPACK_IMPORTED_MODULE_0__.convertIntegrationFnToClass)(
  INTEGRATION_NAME,
  inboundFiltersIntegration,
)

;

function _mergeOptions(
  internalOptions = {},
  clientOptions = {},
) {
  return {
    allowUrls: [...(internalOptions.allowUrls || []), ...(clientOptions.allowUrls || [])],
    denyUrls: [...(internalOptions.denyUrls || []), ...(clientOptions.denyUrls || [])],
    ignoreErrors: [
      ...(internalOptions.ignoreErrors || []),
      ...(clientOptions.ignoreErrors || []),
      ...(internalOptions.disableErrorDefaults ? [] : DEFAULT_IGNORE_ERRORS),
    ],
    ignoreTransactions: [
      ...(internalOptions.ignoreTransactions || []),
      ...(clientOptions.ignoreTransactions || []),
      ...(internalOptions.disableTransactionDefaults ? [] : DEFAULT_IGNORE_TRANSACTIONS),
    ],
    ignoreInternal: internalOptions.ignoreInternal !== undefined ? internalOptions.ignoreInternal : true,
  };
}

function _shouldDropEvent(event, options) {
  if (options.ignoreInternal && _isSentryError(event)) {
    _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD &&
      _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn(`Event dropped due to being internal Sentry Error.\nEvent: ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.getEventDescription)(event)}`);
    return true;
  }
  if (_isIgnoredError(event, options.ignoreErrors)) {
    _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD &&
      _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn(
        `Event dropped due to being matched by \`ignoreErrors\` option.\nEvent: ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.getEventDescription)(event)}`,
      );
    return true;
  }
  if (_isIgnoredTransaction(event, options.ignoreTransactions)) {
    _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD &&
      _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn(
        `Event dropped due to being matched by \`ignoreTransactions\` option.\nEvent: ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.getEventDescription)(event)}`,
      );
    return true;
  }
  if (_isDeniedUrl(event, options.denyUrls)) {
    _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD &&
      _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn(
        `Event dropped due to being matched by \`denyUrls\` option.\nEvent: ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.getEventDescription)(
          event,
        )}.\nUrl: ${_getEventFilterUrl(event)}`,
      );
    return true;
  }
  if (!_isAllowedUrl(event, options.allowUrls)) {
    _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD &&
      _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn(
        `Event dropped due to not being matched by \`allowUrls\` option.\nEvent: ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.getEventDescription)(
          event,
        )}.\nUrl: ${_getEventFilterUrl(event)}`,
      );
    return true;
  }
  return false;
}

function _isIgnoredError(event, ignoreErrors) {
  // If event.type, this is not an error
  if (event.type || !ignoreErrors || !ignoreErrors.length) {
    return false;
  }

  return _getPossibleEventMessages(event).some(message => (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.stringMatchesSomePattern)(message, ignoreErrors));
}

function _isIgnoredTransaction(event, ignoreTransactions) {
  if (event.type !== 'transaction' || !ignoreTransactions || !ignoreTransactions.length) {
    return false;
  }

  const name = event.transaction;
  return name ? (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.stringMatchesSomePattern)(name, ignoreTransactions) : false;
}

function _isDeniedUrl(event, denyUrls) {
  // TODO: Use Glob instead?
  if (!denyUrls || !denyUrls.length) {
    return false;
  }
  const url = _getEventFilterUrl(event);
  return !url ? false : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.stringMatchesSomePattern)(url, denyUrls);
}

function _isAllowedUrl(event, allowUrls) {
  // TODO: Use Glob instead?
  if (!allowUrls || !allowUrls.length) {
    return true;
  }
  const url = _getEventFilterUrl(event);
  return !url ? true : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.stringMatchesSomePattern)(url, allowUrls);
}

function _getPossibleEventMessages(event) {
  const possibleMessages = [];

  if (event.message) {
    possibleMessages.push(event.message);
  }

  let lastException;
  try {
    // @ts-expect-error Try catching to save bundle size
    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
    lastException = event.exception.values[event.exception.values.length - 1];
  } catch (e) {
    // try catching to save bundle size checking existence of variables
  }

  if (lastException) {
    if (lastException.value) {
      possibleMessages.push(lastException.value);
      if (lastException.type) {
        possibleMessages.push(`${lastException.type}: ${lastException.value}`);
      }
    }
  }

  if (_debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && possibleMessages.length === 0) {
    _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.error(`Could not extract message for event ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.getEventDescription)(event)}`);
  }

  return possibleMessages;
}

function _isSentryError(event) {
  try {
    // @ts-expect-error can't be a sentry error if undefined
    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
    return event.exception.values[0].type === 'SentryError';
  } catch (e) {
    // ignore
  }
  return false;
}

function _getLastValidUrl(frames = []) {
  for (let i = frames.length - 1; i >= 0; i--) {
    const frame = frames[i];

    if (frame && frame.filename !== '<anonymous>' && frame.filename !== '[native code]') {
      return frame.filename || null;
    }
  }

  return null;
}

function _getEventFilterUrl(event) {
  try {
    let frames;
    try {
      // @ts-expect-error we only care about frames if the whole thing here is defined
      frames = event.exception.values[0].stacktrace.frames;
    } catch (e) {
      // ignore
    }
    return frames ? _getLastValidUrl(frames) : null;
  } catch (oO) {
    _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.error(`Cannot extract url for event ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.getEventDescription)(event)}`);
    return null;
  }
}


//# sourceMappingURL=inboundfilters.js.map


/***/ }),

/***/ "./node_modules/@sentry/core/esm/metrics/constants.js":
/*!************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/metrics/constants.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "COUNTER_METRIC_TYPE": () => (/* binding */ COUNTER_METRIC_TYPE),
/* harmony export */   "DEFAULT_BROWSER_FLUSH_INTERVAL": () => (/* binding */ DEFAULT_BROWSER_FLUSH_INTERVAL),
/* harmony export */   "DEFAULT_FLUSH_INTERVAL": () => (/* binding */ DEFAULT_FLUSH_INTERVAL),
/* harmony export */   "DISTRIBUTION_METRIC_TYPE": () => (/* binding */ DISTRIBUTION_METRIC_TYPE),
/* harmony export */   "GAUGE_METRIC_TYPE": () => (/* binding */ GAUGE_METRIC_TYPE),
/* harmony export */   "MAX_WEIGHT": () => (/* binding */ MAX_WEIGHT),
/* harmony export */   "NAME_AND_TAG_KEY_NORMALIZATION_REGEX": () => (/* binding */ NAME_AND_TAG_KEY_NORMALIZATION_REGEX),
/* harmony export */   "SET_METRIC_TYPE": () => (/* binding */ SET_METRIC_TYPE),
/* harmony export */   "TAG_VALUE_NORMALIZATION_REGEX": () => (/* binding */ TAG_VALUE_NORMALIZATION_REGEX)
/* harmony export */ });
const COUNTER_METRIC_TYPE = 'c' ;
const GAUGE_METRIC_TYPE = 'g' ;
const SET_METRIC_TYPE = 's' ;
const DISTRIBUTION_METRIC_TYPE = 'd' ;

/**
 * Normalization regex for metric names and metric tag names.
 *
 * This enforces that names and tag keys only contain alphanumeric characters,
 * underscores, forward slashes, periods, and dashes.
 *
 * See: https://develop.sentry.dev/sdk/metrics/#normalization
 */
const NAME_AND_TAG_KEY_NORMALIZATION_REGEX = /[^a-zA-Z0-9_/.-]+/g;

/**
 * Normalization regex for metric tag values.
 *
 * This enforces that values only contain words, digits, or the following
 * special characters: _:/@.{}[\]$-
 *
 * See: https://develop.sentry.dev/sdk/metrics/#normalization
 */
const TAG_VALUE_NORMALIZATION_REGEX = /[^\w\d_:/@.{}[\]$-]+/g;

/**
 * This does not match spec in https://develop.sentry.dev/sdk/metrics
 * but was chosen to optimize for the most common case in browser environments.
 */
const DEFAULT_BROWSER_FLUSH_INTERVAL = 5000;

/**
 * SDKs are required to bucket into 10 second intervals (rollup in seconds)
 * which is the current lower bound of metric accuracy.
 */
const DEFAULT_FLUSH_INTERVAL = 10000;

/**
 * The maximum number of metrics that should be stored in memory.
 */
const MAX_WEIGHT = 10000;


//# sourceMappingURL=constants.js.map


/***/ }),

/***/ "./node_modules/@sentry/core/esm/metrics/envelope.js":
/*!***********************************************************!*\
  !*** ./node_modules/@sentry/core/esm/metrics/envelope.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createMetricEnvelope": () => (/* binding */ createMetricEnvelope)
/* harmony export */ });
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/dsn.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/envelope.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ "./node_modules/@sentry/core/esm/metrics/utils.js");



/**
 * Create envelope from a metric aggregate.
 */
function createMetricEnvelope(
  metricBucketItems,
  dsn,
  metadata,
  tunnel,
) {
  const headers = {
    sent_at: new Date().toISOString(),
  };

  if (metadata && metadata.sdk) {
    headers.sdk = {
      name: metadata.sdk.name,
      version: metadata.sdk.version,
    };
  }

  if (!!tunnel && dsn) {
    headers.dsn = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dsnToString)(dsn);
  }

  const item = createMetricEnvelopeItem(metricBucketItems);
  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.createEnvelope)(headers, [item]);
}

function createMetricEnvelopeItem(metricBucketItems) {
  const payload = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.serializeMetricBuckets)(metricBucketItems);
  const metricHeaders = {
    type: 'statsd',
    length: payload.length,
  };
  return [metricHeaders, payload];
}


//# sourceMappingURL=envelope.js.map


/***/ }),

/***/ "./node_modules/@sentry/core/esm/metrics/utils.js":
/*!********************************************************!*\
  !*** ./node_modules/@sentry/core/esm/metrics/utils.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getBucketKey": () => (/* binding */ getBucketKey),
/* harmony export */   "sanitizeTags": () => (/* binding */ sanitizeTags),
/* harmony export */   "serializeMetricBuckets": () => (/* binding */ serializeMetricBuckets),
/* harmony export */   "simpleHash": () => (/* binding */ simpleHash)
/* harmony export */ });
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/object.js");
/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants.js */ "./node_modules/@sentry/core/esm/metrics/constants.js");



/**
 * Generate bucket key from metric properties.
 */
function getBucketKey(
  metricType,
  name,
  unit,
  tags,
) {
  const stringifiedTags = Object.entries((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dropUndefinedKeys)(tags)).sort((a, b) => a[0].localeCompare(b[0]));
  return `${metricType}${name}${unit}${stringifiedTags}`;
}

/* eslint-disable no-bitwise */
/**
 * Simple hash function for strings.
 */
function simpleHash(s) {
  let rv = 0;
  for (let i = 0; i < s.length; i++) {
    const c = s.charCodeAt(i);
    rv = (rv << 5) - rv + c;
    rv &= rv;
  }
  return rv >>> 0;
}
/* eslint-enable no-bitwise */

/**
 * Serialize metrics buckets into a string based on statsd format.
 *
 * Example of format:
 * metric.name@second:1:1.2|d|#a:value,b:anothervalue|T12345677
 * Segments:
 * name: metric.name
 * unit: second
 * value: [1, 1.2]
 * type of metric: d (distribution)
 * tags: { a: value, b: anothervalue }
 * timestamp: 12345677
 */
function serializeMetricBuckets(metricBucketItems) {
  let out = '';
  for (const item of metricBucketItems) {
    const tagEntries = Object.entries(item.tags);
    const maybeTags = tagEntries.length > 0 ? `|#${tagEntries.map(([key, value]) => `${key}:${value}`).join(',')}` : '';
    out += `${item.name}@${item.unit}:${item.metric}|${item.metricType}${maybeTags}|T${item.timestamp}\n`;
  }
  return out;
}

/**
 * Sanitizes tags.
 */
function sanitizeTags(unsanitizedTags) {
  const tags = {};
  for (const key in unsanitizedTags) {
    if (Object.prototype.hasOwnProperty.call(unsanitizedTags, key)) {
      const sanitizedKey = key.replace(_constants_js__WEBPACK_IMPORTED_MODULE_1__.NAME_AND_TAG_KEY_NORMALIZATION_REGEX, '_');
      tags[sanitizedKey] = String(unsanitizedTags[key]).replace(_constants_js__WEBPACK_IMPORTED_MODULE_1__.TAG_VALUE_NORMALIZATION_REGEX, '_');
    }
  }
  return tags;
}


//# sourceMappingURL=utils.js.map


/***/ }),

/***/ "./node_modules/@sentry/core/esm/scope.js":
/*!************************************************!*\
  !*** ./node_modules/@sentry/core/esm/scope.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Scope": () => (/* binding */ Scope),
/* harmony export */   "getGlobalScope": () => (/* binding */ getGlobalScope),
/* harmony export */   "setGlobalScope": () => (/* binding */ setGlobalScope)
/* harmony export */ });
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/is.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/time.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/misc.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/logger.js");
/* harmony import */ var _eventProcessors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./eventProcessors.js */ "./node_modules/@sentry/core/esm/eventProcessors.js");
/* harmony import */ var _session_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./session.js */ "./node_modules/@sentry/core/esm/session.js");
/* harmony import */ var _utils_applyScopeDataToEvent_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/applyScopeDataToEvent.js */ "./node_modules/@sentry/core/esm/utils/applyScopeDataToEvent.js");





/**
 * Default value for maximum number of breadcrumbs added to an event.
 */
const DEFAULT_MAX_BREADCRUMBS = 100;

/**
 * The global scope is kept in this module.
 * When accessing this via `getGlobalScope()` we'll make sure to set one if none is currently present.
 */
let globalScope;

/**
 * Holds additional event information. {@link Scope.applyToEvent} will be
 * called by the client before an event will be sent.
 */
class Scope  {
  /** Flag if notifying is happening. */

  /** Callback for client to receive scope changes. */

  /** Callback list that will be called after {@link applyToEvent}. */

  /** Array of breadcrumbs. */

  /** User */

  /** Tags */

  /** Extra */

  /** Contexts */

  /** Attachments */

  /** Propagation Context for distributed tracing */

  /**
   * A place to stash data which is needed at some point in the SDK's event processing pipeline but which shouldn't get
   * sent to Sentry
   */

  /** Fingerprint */

  /** Severity */
  // eslint-disable-next-line deprecation/deprecation

  /**
   * Transaction Name
   */

  /** Span */

  /** Session */

  /** Request Mode Session Status */

  /** The client on this scope */

  // NOTE: Any field which gets added here should get added not only to the constructor but also to the `clone` method.

   constructor() {
    this._notifyingListeners = false;
    this._scopeListeners = [];
    this._eventProcessors = [];
    this._breadcrumbs = [];
    this._attachments = [];
    this._user = {};
    this._tags = {};
    this._extra = {};
    this._contexts = {};
    this._sdkProcessingMetadata = {};
    this._propagationContext = generatePropagationContext();
  }

  /**
   * Inherit values from the parent scope.
   * @deprecated Use `scope.clone()` and `new Scope()` instead.
   */
   static clone(scope) {
    return scope ? scope.clone() : new Scope();
  }

  /**
   * Clone this scope instance.
   */
   clone() {
    const newScope = new Scope();
    newScope._breadcrumbs = [...this._breadcrumbs];
    newScope._tags = { ...this._tags };
    newScope._extra = { ...this._extra };
    newScope._contexts = { ...this._contexts };
    newScope._user = this._user;
    newScope._level = this._level;
    newScope._span = this._span;
    newScope._session = this._session;
    newScope._transactionName = this._transactionName;
    newScope._fingerprint = this._fingerprint;
    newScope._eventProcessors = [...this._eventProcessors];
    newScope._requestSession = this._requestSession;
    newScope._attachments = [...this._attachments];
    newScope._sdkProcessingMetadata = { ...this._sdkProcessingMetadata };
    newScope._propagationContext = { ...this._propagationContext };
    newScope._client = this._client;

    return newScope;
  }

  /** Update the client on the scope. */
   setClient(client) {
    this._client = client;
  }

  /**
   * Get the client assigned to this scope.
   *
   * It is generally recommended to use the global function `Sentry.getClient()` instead, unless you know what you are doing.
   */
   getClient() {
    return this._client;
  }

  /**
   * Add internal on change listener. Used for sub SDKs that need to store the scope.
   * @hidden
   */
   addScopeListener(callback) {
    this._scopeListeners.push(callback);
  }

  /**
   * @inheritDoc
   */
   addEventProcessor(callback) {
    this._eventProcessors.push(callback);
    return this;
  }

  /**
   * @inheritDoc
   */
   setUser(user) {
    // If null is passed we want to unset everything, but still define keys,
    // so that later down in the pipeline any existing values are cleared.
    this._user = user || {
      email: undefined,
      id: undefined,
      ip_address: undefined,
      segment: undefined,
      username: undefined,
    };

    if (this._session) {
      (0,_session_js__WEBPACK_IMPORTED_MODULE_0__.updateSession)(this._session, { user });
    }

    this._notifyScopeListeners();
    return this;
  }

  /**
   * @inheritDoc
   */
   getUser() {
    return this._user;
  }

  /**
   * @inheritDoc
   */
   getRequestSession() {
    return this._requestSession;
  }

  /**
   * @inheritDoc
   */
   setRequestSession(requestSession) {
    this._requestSession = requestSession;
    return this;
  }

  /**
   * @inheritDoc
   */
   setTags(tags) {
    this._tags = {
      ...this._tags,
      ...tags,
    };
    this._notifyScopeListeners();
    return this;
  }

  /**
   * @inheritDoc
   */
   setTag(key, value) {
    this._tags = { ...this._tags, [key]: value };
    this._notifyScopeListeners();
    return this;
  }

  /**
   * @inheritDoc
   */
   setExtras(extras) {
    this._extra = {
      ...this._extra,
      ...extras,
    };
    this._notifyScopeListeners();
    return this;
  }

  /**
   * @inheritDoc
   */
   setExtra(key, extra) {
    this._extra = { ...this._extra, [key]: extra };
    this._notifyScopeListeners();
    return this;
  }

  /**
   * @inheritDoc
   */
   setFingerprint(fingerprint) {
    this._fingerprint = fingerprint;
    this._notifyScopeListeners();
    return this;
  }

  /**
   * @inheritDoc
   */
   setLevel(
    // eslint-disable-next-line deprecation/deprecation
    level,
  ) {
    this._level = level;
    this._notifyScopeListeners();
    return this;
  }

  /**
   * Sets the transaction name on the scope for future events.
   * @deprecated Use extra or tags instead.
   */
   setTransactionName(name) {
    this._transactionName = name;
    this._notifyScopeListeners();
    return this;
  }

  /**
   * @inheritDoc
   */
   setContext(key, context) {
    if (context === null) {
      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete
      delete this._contexts[key];
    } else {
      this._contexts[key] = context;
    }

    this._notifyScopeListeners();
    return this;
  }

  /**
   * Sets the Span on the scope.
   * @param span Span
   * @deprecated Instead of setting a span on a scope, use `startSpan()`/`startSpanManual()` instead.
   */
   setSpan(span) {
    this._span = span;
    this._notifyScopeListeners();
    return this;
  }

  /**
   * Returns the `Span` if there is one.
   * @deprecated Use `getActiveSpan()` instead.
   */
   getSpan() {
    return this._span;
  }

  /**
   * Returns the `Transaction` attached to the scope (if there is one).
   * @deprecated You should not rely on the transaction, but just use `startSpan()` APIs instead.
   */
   getTransaction() {
    // Often, this span (if it exists at all) will be a transaction, but it's not guaranteed to be. Regardless, it will
    // have a pointer to the currently-active transaction.
    const span = this._span;
    // Cannot replace with getRootSpan because getRootSpan returns a span, not a transaction
    // Also, this method will be removed anyway.
    // eslint-disable-next-line deprecation/deprecation
    return span && span.transaction;
  }

  /**
   * @inheritDoc
   */
   setSession(session) {
    if (!session) {
      delete this._session;
    } else {
      this._session = session;
    }
    this._notifyScopeListeners();
    return this;
  }

  /**
   * @inheritDoc
   */
   getSession() {
    return this._session;
  }

  /**
   * @inheritDoc
   */
   update(captureContext) {
    if (!captureContext) {
      return this;
    }

    if (typeof captureContext === 'function') {
      const updatedScope = (captureContext )(this);
      return updatedScope instanceof Scope ? updatedScope : this;
    }

    if (captureContext instanceof Scope) {
      this._tags = { ...this._tags, ...captureContext._tags };
      this._extra = { ...this._extra, ...captureContext._extra };
      this._contexts = { ...this._contexts, ...captureContext._contexts };
      if (captureContext._user && Object.keys(captureContext._user).length) {
        this._user = captureContext._user;
      }
      if (captureContext._level) {
        this._level = captureContext._level;
      }
      if (captureContext._fingerprint) {
        this._fingerprint = captureContext._fingerprint;
      }
      if (captureContext._requestSession) {
        this._requestSession = captureContext._requestSession;
      }
      if (captureContext._propagationContext) {
        this._propagationContext = captureContext._propagationContext;
      }
    } else if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isPlainObject)(captureContext)) {
      // eslint-disable-next-line no-param-reassign
      captureContext = captureContext ;
      this._tags = { ...this._tags, ...captureContext.tags };
      this._extra = { ...this._extra, ...captureContext.extra };
      this._contexts = { ...this._contexts, ...captureContext.contexts };
      if (captureContext.user) {
        this._user = captureContext.user;
      }
      if (captureContext.level) {
        this._level = captureContext.level;
      }
      if (captureContext.fingerprint) {
        this._fingerprint = captureContext.fingerprint;
      }
      if (captureContext.requestSession) {
        this._requestSession = captureContext.requestSession;
      }
      if (captureContext.propagationContext) {
        this._propagationContext = captureContext.propagationContext;
      }
    }

    return this;
  }

  /**
   * @inheritDoc
   */
   clear() {
    this._breadcrumbs = [];
    this._tags = {};
    this._extra = {};
    this._user = {};
    this._contexts = {};
    this._level = undefined;
    this._transactionName = undefined;
    this._fingerprint = undefined;
    this._requestSession = undefined;
    this._span = undefined;
    this._session = undefined;
    this._notifyScopeListeners();
    this._attachments = [];
    this._propagationContext = generatePropagationContext();
    return this;
  }

  /**
   * @inheritDoc
   */
   addBreadcrumb(breadcrumb, maxBreadcrumbs) {
    const maxCrumbs = typeof maxBreadcrumbs === 'number' ? maxBreadcrumbs : DEFAULT_MAX_BREADCRUMBS;

    // No data has been changed, so don't notify scope listeners
    if (maxCrumbs <= 0) {
      return this;
    }

    const mergedBreadcrumb = {
      timestamp: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.dateTimestampInSeconds)(),
      ...breadcrumb,
    };

    const breadcrumbs = this._breadcrumbs;
    breadcrumbs.push(mergedBreadcrumb);
    this._breadcrumbs = breadcrumbs.length > maxCrumbs ? breadcrumbs.slice(-maxCrumbs) : breadcrumbs;

    this._notifyScopeListeners();

    return this;
  }

  /**
   * @inheritDoc
   */
   getLastBreadcrumb() {
    return this._breadcrumbs[this._breadcrumbs.length - 1];
  }

  /**
   * @inheritDoc
   */
   clearBreadcrumbs() {
    this._breadcrumbs = [];
    this._notifyScopeListeners();
    return this;
  }

  /**
   * @inheritDoc
   */
   addAttachment(attachment) {
    this._attachments.push(attachment);
    return this;
  }

  /**
   * @inheritDoc
   * @deprecated Use `getScopeData()` instead.
   */
   getAttachments() {
    const data = this.getScopeData();

    return data.attachments;
  }

  /**
   * @inheritDoc
   */
   clearAttachments() {
    this._attachments = [];
    return this;
  }

  /** @inheritDoc */
   getScopeData() {
    const {
      _breadcrumbs,
      _attachments,
      _contexts,
      _tags,
      _extra,
      _user,
      _level,
      _fingerprint,
      _eventProcessors,
      _propagationContext,
      _sdkProcessingMetadata,
      _transactionName,
      _span,
    } = this;

    return {
      breadcrumbs: _breadcrumbs,
      attachments: _attachments,
      contexts: _contexts,
      tags: _tags,
      extra: _extra,
      user: _user,
      level: _level,
      fingerprint: _fingerprint || [],
      eventProcessors: _eventProcessors,
      propagationContext: _propagationContext,
      sdkProcessingMetadata: _sdkProcessingMetadata,
      transactionName: _transactionName,
      span: _span,
    };
  }

  /**
   * Applies data from the scope to the event and runs all event processors on it.
   *
   * @param event Event
   * @param hint Object containing additional information about the original exception, for use by the event processors.
   * @hidden
   * @deprecated Use `applyScopeDataToEvent()` directly
   */
   applyToEvent(
    event,
    hint = {},
    additionalEventProcessors = [],
  ) {
    (0,_utils_applyScopeDataToEvent_js__WEBPACK_IMPORTED_MODULE_3__.applyScopeDataToEvent)(event, this.getScopeData());

    // TODO (v8): Update this order to be: Global > Client > Scope
    const eventProcessors = [
      ...additionalEventProcessors,
      // eslint-disable-next-line deprecation/deprecation
      ...(0,_eventProcessors_js__WEBPACK_IMPORTED_MODULE_4__.getGlobalEventProcessors)(),
      ...this._eventProcessors,
    ];

    return (0,_eventProcessors_js__WEBPACK_IMPORTED_MODULE_4__.notifyEventProcessors)(eventProcessors, event, hint);
  }

  /**
   * Add data which will be accessible during event processing but won't get sent to Sentry
   */
   setSDKProcessingMetadata(newData) {
    this._sdkProcessingMetadata = { ...this._sdkProcessingMetadata, ...newData };

    return this;
  }

  /**
   * @inheritDoc
   */
   setPropagationContext(context) {
    this._propagationContext = context;
    return this;
  }

  /**
   * @inheritDoc
   */
   getPropagationContext() {
    return this._propagationContext;
  }

  /**
   * Capture an exception for this scope.
   *
   * @param exception The exception to capture.
   * @param hint Optinal additional data to attach to the Sentry event.
   * @returns the id of the captured Sentry event.
   */
   captureException(exception, hint) {
    const eventId = hint && hint.event_id ? hint.event_id : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.uuid4)();

    if (!this._client) {
      _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.warn('No client configured on scope - will not capture exception!');
      return eventId;
    }

    const syntheticException = new Error('Sentry syntheticException');

    this._client.captureException(
      exception,
      {
        originalException: exception,
        syntheticException,
        ...hint,
        event_id: eventId,
      },
      this,
    );

    return eventId;
  }

  /**
   * Capture a message for this scope.
   *
   * @param message The message to capture.
   * @param level An optional severity level to report the message with.
   * @param hint Optional additional data to attach to the Sentry event.
   * @returns the id of the captured message.
   */
   captureMessage(message, level, hint) {
    const eventId = hint && hint.event_id ? hint.event_id : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.uuid4)();

    if (!this._client) {
      _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.warn('No client configured on scope - will not capture message!');
      return eventId;
    }

    const syntheticException = new Error(message);

    this._client.captureMessage(
      message,
      level,
      {
        originalException: message,
        syntheticException,
        ...hint,
        event_id: eventId,
      },
      this,
    );

    return eventId;
  }

  /**
   * Captures a manually created event for this scope and sends it to Sentry.
   *
   * @param exception The event to capture.
   * @param hint Optional additional data to attach to the Sentry event.
   * @returns the id of the captured event.
   */
   captureEvent(event, hint) {
    const eventId = hint && hint.event_id ? hint.event_id : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.uuid4)();

    if (!this._client) {
      _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.warn('No client configured on scope - will not capture event!');
      return eventId;
    }

    this._client.captureEvent(event, { ...hint, event_id: eventId }, this);

    return eventId;
  }

  /**
   * This will be called on every set call.
   */
   _notifyScopeListeners() {
    // We need this check for this._notifyingListeners to be able to work on scope during updates
    // If this check is not here we'll produce endless recursion when something is done with the scope
    // during the callback.
    if (!this._notifyingListeners) {
      this._notifyingListeners = true;
      this._scopeListeners.forEach(callback => {
        callback(this);
      });
      this._notifyingListeners = false;
    }
  }
}

/**
 * Get the global scope.
 * This scope is applied to _all_ events.
 */
function getGlobalScope() {
  if (!globalScope) {
    globalScope = new Scope();
  }

  return globalScope;
}

/**
 * This is mainly needed for tests.
 * DO NOT USE this, as this is an internal API and subject to change.
 * @hidden
 */
function setGlobalScope(scope) {
  globalScope = scope;
}

function generatePropagationContext() {
  return {
    traceId: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.uuid4)(),
    spanId: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.uuid4)().substring(16),
  };
}


//# sourceMappingURL=scope.js.map


/***/ }),

/***/ "./node_modules/@sentry/core/esm/sdk.js":
/*!**********************************************!*\
  !*** ./node_modules/@sentry/core/esm/sdk.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "initAndBind": () => (/* binding */ initAndBind),
/* harmony export */   "setCurrentClient": () => (/* binding */ setCurrentClient)
/* harmony export */ });
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/logger.js");
/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./debug-build.js */ "./node_modules/@sentry/core/esm/debug-build.js");
/* harmony import */ var _exports_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./exports.js */ "./node_modules/@sentry/core/esm/exports.js");
/* harmony import */ var _hub_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./hub.js */ "./node_modules/@sentry/core/esm/hub.js");





/** A class object that can instantiate Client objects. */

/**
 * Internal function to create a new SDK client instance. The client is
 * installed and then bound to the current scope.
 *
 * @param clientClass The client class to instantiate.
 * @param options Options to pass to the client.
 */
function initAndBind(
  clientClass,
  options,
) {
  if (options.debug === true) {
    if (_debug_build_js__WEBPACK_IMPORTED_MODULE_0__.DEBUG_BUILD) {
      _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.enable();
    } else {
      // use `console.warn` rather than `logger.warn` since by non-debug bundles have all `logger.x` statements stripped
      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.consoleSandbox)(() => {
        // eslint-disable-next-line no-console
        console.warn('[Sentry] Cannot initialize SDK with `debug` option using a non-debug bundle.');
      });
    }
  }
  const scope = (0,_exports_js__WEBPACK_IMPORTED_MODULE_2__.getCurrentScope)();
  scope.update(options.initialScope);

  const client = new clientClass(options);
  setCurrentClient(client);
  initializeClient(client);
}

/**
 * Make the given client the current client.
 */
function setCurrentClient(client) {
  // eslint-disable-next-line deprecation/deprecation
  const hub = (0,_hub_js__WEBPACK_IMPORTED_MODULE_3__.getCurrentHub)();
  // eslint-disable-next-line deprecation/deprecation
  const top = hub.getStackTop();
  top.client = client;
  top.scope.setClient(client);
}

/**
 * Initialize the client for the current scope.
 * Make sure to call this after `setCurrentClient()`.
 */
function initializeClient(client) {
  if (client.init) {
    client.init();
    // TODO v8: Remove this fallback
    // eslint-disable-next-line deprecation/deprecation
  } else if (client.setupIntegrations) {
    // eslint-disable-next-line deprecation/deprecation
    client.setupIntegrations();
  }
}


//# sourceMappingURL=sdk.js.map


/***/ }),

/***/ "./node_modules/@sentry/core/esm/session.js":
/*!**************************************************!*\
  !*** ./node_modules/@sentry/core/esm/session.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "closeSession": () => (/* binding */ closeSession),
/* harmony export */   "makeSession": () => (/* binding */ makeSession),
/* harmony export */   "updateSession": () => (/* binding */ updateSession)
/* harmony export */ });
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/time.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/misc.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/object.js");


/**
 * Creates a new `Session` object by setting certain default parameters. If optional @param context
 * is passed, the passed properties are applied to the session object.
 *
 * @param context (optional) additional properties to be applied to the returned session object
 *
 * @returns a new `Session` object
 */
function makeSession(context) {
  // Both timestamp and started are in seconds since the UNIX epoch.
  const startingTime = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.timestampInSeconds)();

  const session = {
    sid: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.uuid4)(),
    init: true,
    timestamp: startingTime,
    started: startingTime,
    duration: 0,
    status: 'ok',
    errors: 0,
    ignoreDuration: false,
    toJSON: () => sessionToJSON(session),
  };

  if (context) {
    updateSession(session, context);
  }

  return session;
}

/**
 * Updates a session object with the properties passed in the context.
 *
 * Note that this function mutates the passed object and returns void.
 * (Had to do this instead of returning a new and updated session because closing and sending a session
 * makes an update to the session after it was passed to the sending logic.
 * @see BaseClient.captureSession )
 *
 * @param session the `Session` to update
 * @param context the `SessionContext` holding the properties that should be updated in @param session
 */
// eslint-disable-next-line complexity
function updateSession(session, context = {}) {
  if (context.user) {
    if (!session.ipAddress && context.user.ip_address) {
      session.ipAddress = context.user.ip_address;
    }

    if (!session.did && !context.did) {
      session.did = context.user.id || context.user.email || context.user.username;
    }
  }

  session.timestamp = context.timestamp || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.timestampInSeconds)();

  if (context.abnormal_mechanism) {
    session.abnormal_mechanism = context.abnormal_mechanism;
  }

  if (context.ignoreDuration) {
    session.ignoreDuration = context.ignoreDuration;
  }
  if (context.sid) {
    // Good enough uuid validation. — Kamil
    session.sid = context.sid.length === 32 ? context.sid : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.uuid4)();
  }
  if (context.init !== undefined) {
    session.init = context.init;
  }
  if (!session.did && context.did) {
    session.did = `${context.did}`;
  }
  if (typeof context.started === 'number') {
    session.started = context.started;
  }
  if (session.ignoreDuration) {
    session.duration = undefined;
  } else if (typeof context.duration === 'number') {
    session.duration = context.duration;
  } else {
    const duration = session.timestamp - session.started;
    session.duration = duration >= 0 ? duration : 0;
  }
  if (context.release) {
    session.release = context.release;
  }
  if (context.environment) {
    session.environment = context.environment;
  }
  if (!session.ipAddress && context.ipAddress) {
    session.ipAddress = context.ipAddress;
  }
  if (!session.userAgent && context.userAgent) {
    session.userAgent = context.userAgent;
  }
  if (typeof context.errors === 'number') {
    session.errors = context.errors;
  }
  if (context.status) {
    session.status = context.status;
  }
}

/**
 * Closes a session by setting its status and updating the session object with it.
 * Internally calls `updateSession` to update the passed session object.
 *
 * Note that this function mutates the passed session (@see updateSession for explanation).
 *
 * @param session the `Session` object to be closed
 * @param status the `SessionStatus` with which the session was closed. If you don't pass a status,
 *               this function will keep the previously set status, unless it was `'ok'` in which case
 *               it is changed to `'exited'`.
 */
function closeSession(session, status) {
  let context = {};
  if (status) {
    context = { status };
  } else if (session.status === 'ok') {
    context = { status: 'exited' };
  }

  updateSession(session, context);
}

/**
 * Serializes a passed session object to a JSON object with a slightly different structure.
 * This is necessary because the Sentry backend requires a slightly different schema of a session
 * than the one the JS SDKs use internally.
 *
 * @param session the session to be converted
 *
 * @returns a JSON object of the passed session
 */
function sessionToJSON(session) {
  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.dropUndefinedKeys)({
    sid: `${session.sid}`,
    init: session.init,
    // Make sure that sec is converted to ms for date constructor
    started: new Date(session.started * 1000).toISOString(),
    timestamp: new Date(session.timestamp * 1000).toISOString(),
    status: session.status,
    errors: session.errors,
    did: typeof session.did === 'number' || typeof session.did === 'string' ? `${session.did}` : undefined,
    duration: session.duration,
    abnormal_mechanism: session.abnormal_mechanism,
    attrs: {
      release: session.release,
      environment: session.environment,
      ip_address: session.ipAddress,
      user_agent: session.userAgent,
    },
  });
}


//# sourceMappingURL=session.js.map


/***/ }),

/***/ "./node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getDynamicSamplingContextFromClient": () => (/* binding */ getDynamicSamplingContextFromClient),
/* harmony export */   "getDynamicSamplingContextFromSpan": () => (/* binding */ getDynamicSamplingContextFromSpan)
/* harmony export */ });
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/object.js");
/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants.js */ "./node_modules/@sentry/core/esm/constants.js");
/* harmony import */ var _exports_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../exports.js */ "./node_modules/@sentry/core/esm/exports.js");
/* harmony import */ var _utils_getRootSpan_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/getRootSpan.js */ "./node_modules/@sentry/core/esm/utils/getRootSpan.js");
/* harmony import */ var _utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/spanUtils.js */ "./node_modules/@sentry/core/esm/utils/spanUtils.js");






/**
 * Creates a dynamic sampling context from a client.
 *
 * Dispatches the `createDsc` lifecycle hook as a side effect.
 */
function getDynamicSamplingContextFromClient(
  trace_id,
  client,
  scope,
) {
  const options = client.getOptions();

  const { publicKey: public_key } = client.getDsn() || {};
  // TODO(v8): Remove segment from User
  // eslint-disable-next-line deprecation/deprecation
  const { segment: user_segment } = (scope && scope.getUser()) || {};

  const dsc = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dropUndefinedKeys)({
    environment: options.environment || _constants_js__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_ENVIRONMENT,
    release: options.release,
    user_segment,
    public_key,
    trace_id,
  }) ;

  client.emit && client.emit('createDsc', dsc);

  return dsc;
}

/**
 * A Span with a frozen dynamic sampling context.
 */

/**
 * Creates a dynamic sampling context from a span (and client and scope)
 *
 * @param span the span from which a few values like the root span name and sample rate are extracted.
 *
 * @returns a dynamic sampling context
 */
function getDynamicSamplingContextFromSpan(span) {
  const client = (0,_exports_js__WEBPACK_IMPORTED_MODULE_2__.getClient)();
  if (!client) {
    return {};
  }

  // passing emit=false here to only emit later once the DSC is actually populated
  const dsc = getDynamicSamplingContextFromClient((0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_3__.spanToJSON)(span).trace_id || '', client, (0,_exports_js__WEBPACK_IMPORTED_MODULE_2__.getCurrentScope)());

  // TODO (v8): Remove v7FrozenDsc as a Transaction will no longer have _frozenDynamicSamplingContext
  const txn = (0,_utils_getRootSpan_js__WEBPACK_IMPORTED_MODULE_4__.getRootSpan)(span) ;
  if (!txn) {
    return dsc;
  }

  // TODO (v8): Remove v7FrozenDsc as a Transaction will no longer have _frozenDynamicSamplingContext
  // For now we need to avoid breaking users who directly created a txn with a DSC, where this field is still set.
  // @see Transaction class constructor
  const v7FrozenDsc = txn && txn._frozenDynamicSamplingContext;
  if (v7FrozenDsc) {
    return v7FrozenDsc;
  }

  // TODO (v8): Replace txn.metadata with txn.attributes[]
  // We can't do this yet because attributes aren't always set yet.
  // eslint-disable-next-line deprecation/deprecation
  const { sampleRate: maybeSampleRate, source } = txn.metadata;
  if (maybeSampleRate != null) {
    dsc.sample_rate = `${maybeSampleRate}`;
  }

  // We don't want to have a transaction name in the DSC if the source is "url" because URLs might contain PII
  const jsonSpan = (0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_3__.spanToJSON)(txn);

  // after JSON conversion, txn.name becomes jsonSpan.description
  if (source && source !== 'url') {
    dsc.transaction = jsonSpan.description;
  }

  dsc.sampled = String((0,_utils_spanUtils_js__WEBPACK_IMPORTED_MODULE_3__.spanIsSampled)(txn));

  client.emit && client.emit('createDsc', dsc);

  return dsc;
}


//# sourceMappingURL=dynamicSamplingContext.js.map


/***/ }),

/***/ "./node_modules/@sentry/core/esm/transports/base.js":
/*!**********************************************************!*\
  !*** ./node_modules/@sentry/core/esm/transports/base.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DEFAULT_TRANSPORT_BUFFER_SIZE": () => (/* binding */ DEFAULT_TRANSPORT_BUFFER_SIZE),
/* harmony export */   "createTransport": () => (/* binding */ createTransport)
/* harmony export */ });
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/promisebuffer.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/envelope.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/ratelimit.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/syncpromise.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/logger.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/error.js");
/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../debug-build.js */ "./node_modules/@sentry/core/esm/debug-build.js");



const DEFAULT_TRANSPORT_BUFFER_SIZE = 30;

/**
 * Creates an instance of a Sentry `Transport`
 *
 * @param options
 * @param makeRequest
 */
function createTransport(
  options,
  makeRequest,
  buffer = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.makePromiseBuffer)(
    options.bufferSize || DEFAULT_TRANSPORT_BUFFER_SIZE,
  ),
) {
  let rateLimits = {};
  const flush = (timeout) => buffer.drain(timeout);

  function send(envelope) {
    const filteredEnvelopeItems = [];

    // Drop rate limited items from envelope
    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.forEachEnvelopeItem)(envelope, (item, type) => {
      const envelopeItemDataCategory = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.envelopeItemTypeToDataCategory)(type);
      if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.isRateLimited)(rateLimits, envelopeItemDataCategory)) {
        const event = getEventForEnvelopeItem(item, type);
        options.recordDroppedEvent('ratelimit_backoff', envelopeItemDataCategory, event);
      } else {
        filteredEnvelopeItems.push(item);
      }
    });

    // Skip sending if envelope is empty after filtering out rate limited events
    if (filteredEnvelopeItems.length === 0) {
      return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.resolvedSyncPromise)();
    }

    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    const filteredEnvelope = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.createEnvelope)(envelope[0], filteredEnvelopeItems );

    // Creates client report for each item in an envelope
    const recordEnvelopeLoss = (reason) => {
      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.forEachEnvelopeItem)(filteredEnvelope, (item, type) => {
        const event = getEventForEnvelopeItem(item, type);
        options.recordDroppedEvent(reason, (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.envelopeItemTypeToDataCategory)(type), event);
      });
    };

    const requestTask = () =>
      makeRequest({ body: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.serializeEnvelope)(filteredEnvelope, options.textEncoder) }).then(
        response => {
          // We don't want to throw on NOK responses, but we want to at least log them
          if (response.statusCode !== undefined && (response.statusCode < 200 || response.statusCode >= 300)) {
            _debug_build_js__WEBPACK_IMPORTED_MODULE_4__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.warn(`Sentry responded with status code ${response.statusCode} to sent event.`);
          }

          rateLimits = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.updateRateLimits)(rateLimits, response);
          return response;
        },
        error => {
          recordEnvelopeLoss('network_error');
          throw error;
        },
      );

    return buffer.add(requestTask).then(
      result => result,
      error => {
        if (error instanceof _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.SentryError) {
          _debug_build_js__WEBPACK_IMPORTED_MODULE_4__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.error('Skipped sending event because buffer is full.');
          recordEnvelopeLoss('queue_overflow');
          return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.resolvedSyncPromise)();
        } else {
          throw error;
        }
      },
    );
  }

  // We use this to identifify if the transport is the base transport
  // TODO (v8): Remove this again as we'll no longer need it
  send.__sentry__baseTransport__ = true;

  return {
    send,
    flush,
  };
}

function getEventForEnvelopeItem(item, type) {
  if (type !== 'event' && type !== 'transaction') {
    return undefined;
  }

  return Array.isArray(item) ? (item )[1] : undefined;
}


//# sourceMappingURL=base.js.map


/***/ }),

/***/ "./node_modules/@sentry/core/esm/utils/applyScopeDataToEvent.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/utils/applyScopeDataToEvent.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "applyScopeDataToEvent": () => (/* binding */ applyScopeDataToEvent),
/* harmony export */   "mergeAndOverwriteScopeData": () => (/* binding */ mergeAndOverwriteScopeData),
/* harmony export */   "mergeScopeData": () => (/* binding */ mergeScopeData)
/* harmony export */ });
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/object.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/misc.js");
/* harmony import */ var _tracing_dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../tracing/dynamicSamplingContext.js */ "./node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js");
/* harmony import */ var _getRootSpan_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getRootSpan.js */ "./node_modules/@sentry/core/esm/utils/getRootSpan.js");
/* harmony import */ var _spanUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./spanUtils.js */ "./node_modules/@sentry/core/esm/utils/spanUtils.js");





/**
 * Applies data from the scope to the event and runs all event processors on it.
 */
function applyScopeDataToEvent(event, data) {
  const { fingerprint, span, breadcrumbs, sdkProcessingMetadata, propagationContext } = data;

  // Apply general data
  applyDataToEvent(event, data);

  // We want to set the trace context for normal events only if there isn't already
  // a trace context on the event. There is a product feature in place where we link
  // errors with transaction and it relies on that.
  if (span) {
    applySpanToEvent(event, span);
  }

  applyFingerprintToEvent(event, fingerprint);
  applyBreadcrumbsToEvent(event, breadcrumbs);
  applySdkMetadataToEvent(event, sdkProcessingMetadata, propagationContext);
}

/** Merge data of two scopes together. */
function mergeScopeData(data, mergeData) {
  const {
    extra,
    tags,
    user,
    contexts,
    level,
    sdkProcessingMetadata,
    breadcrumbs,
    fingerprint,
    eventProcessors,
    attachments,
    propagationContext,
    // eslint-disable-next-line deprecation/deprecation
    transactionName,
    span,
  } = mergeData;

  mergeAndOverwriteScopeData(data, 'extra', extra);
  mergeAndOverwriteScopeData(data, 'tags', tags);
  mergeAndOverwriteScopeData(data, 'user', user);
  mergeAndOverwriteScopeData(data, 'contexts', contexts);
  mergeAndOverwriteScopeData(data, 'sdkProcessingMetadata', sdkProcessingMetadata);

  if (level) {
    data.level = level;
  }

  if (transactionName) {
    // eslint-disable-next-line deprecation/deprecation
    data.transactionName = transactionName;
  }

  if (span) {
    data.span = span;
  }

  if (breadcrumbs.length) {
    data.breadcrumbs = [...data.breadcrumbs, ...breadcrumbs];
  }

  if (fingerprint.length) {
    data.fingerprint = [...data.fingerprint, ...fingerprint];
  }

  if (eventProcessors.length) {
    data.eventProcessors = [...data.eventProcessors, ...eventProcessors];
  }

  if (attachments.length) {
    data.attachments = [...data.attachments, ...attachments];
  }

  data.propagationContext = { ...data.propagationContext, ...propagationContext };
}

/**
 * Merges certain scope data. Undefined values will overwrite any existing values.
 * Exported only for tests.
 */
function mergeAndOverwriteScopeData

(data, prop, mergeVal) {
  if (mergeVal && Object.keys(mergeVal).length) {
    // Clone object
    data[prop] = { ...data[prop] };
    for (const key in mergeVal) {
      if (Object.prototype.hasOwnProperty.call(mergeVal, key)) {
        data[prop][key] = mergeVal[key];
      }
    }
  }
}

function applyDataToEvent(event, data) {
  const {
    extra,
    tags,
    user,
    contexts,
    level,
    // eslint-disable-next-line deprecation/deprecation
    transactionName,
  } = data;

  const cleanedExtra = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dropUndefinedKeys)(extra);
  if (cleanedExtra && Object.keys(cleanedExtra).length) {
    event.extra = { ...cleanedExtra, ...event.extra };
  }

  const cleanedTags = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dropUndefinedKeys)(tags);
  if (cleanedTags && Object.keys(cleanedTags).length) {
    event.tags = { ...cleanedTags, ...event.tags };
  }

  const cleanedUser = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dropUndefinedKeys)(user);
  if (cleanedUser && Object.keys(cleanedUser).length) {
    event.user = { ...cleanedUser, ...event.user };
  }

  const cleanedContexts = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dropUndefinedKeys)(contexts);
  if (cleanedContexts && Object.keys(cleanedContexts).length) {
    event.contexts = { ...cleanedContexts, ...event.contexts };
  }

  if (level) {
    event.level = level;
  }

  if (transactionName) {
    event.transaction = transactionName;
  }
}

function applyBreadcrumbsToEvent(event, breadcrumbs) {
  const mergedBreadcrumbs = [...(event.breadcrumbs || []), ...breadcrumbs];
  event.breadcrumbs = mergedBreadcrumbs.length ? mergedBreadcrumbs : undefined;
}

function applySdkMetadataToEvent(
  event,
  sdkProcessingMetadata,
  propagationContext,
) {
  event.sdkProcessingMetadata = {
    ...event.sdkProcessingMetadata,
    ...sdkProcessingMetadata,
    propagationContext: propagationContext,
  };
}

function applySpanToEvent(event, span) {
  event.contexts = { trace: (0,_spanUtils_js__WEBPACK_IMPORTED_MODULE_1__.spanToTraceContext)(span), ...event.contexts };
  const rootSpan = (0,_getRootSpan_js__WEBPACK_IMPORTED_MODULE_2__.getRootSpan)(span);
  if (rootSpan) {
    event.sdkProcessingMetadata = {
      dynamicSamplingContext: (0,_tracing_dynamicSamplingContext_js__WEBPACK_IMPORTED_MODULE_3__.getDynamicSamplingContextFromSpan)(span),
      ...event.sdkProcessingMetadata,
    };
    const transactionName = (0,_spanUtils_js__WEBPACK_IMPORTED_MODULE_1__.spanToJSON)(rootSpan).description;
    if (transactionName) {
      event.tags = { transaction: transactionName, ...event.tags };
    }
  }
}

/**
 * Applies fingerprint from the scope to the event if there's one,
 * uses message if there's one instead or get rid of empty fingerprint
 */
function applyFingerprintToEvent(event, fingerprint) {
  // Make sure it's an array first and we actually have something in place
  event.fingerprint = event.fingerprint ? (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.arrayify)(event.fingerprint) : [];

  // If we have something on the scope, then merge it with event
  if (fingerprint) {
    event.fingerprint = event.fingerprint.concat(fingerprint);
  }

  // If we have no data at all, remove empty array default
  if (event.fingerprint && !event.fingerprint.length) {
    delete event.fingerprint;
  }
}


//# sourceMappingURL=applyScopeDataToEvent.js.map


/***/ }),

/***/ "./node_modules/@sentry/core/esm/utils/getRootSpan.js":
/*!************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/utils/getRootSpan.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getRootSpan": () => (/* binding */ getRootSpan)
/* harmony export */ });
/**
 * Returns the root span of a given span.
 *
 * As long as we use `Transaction`s internally, the returned root span
 * will be a `Transaction` but be aware that this might change in the future.
 *
 * If the given span has no root span or transaction, `undefined` is returned.
 */
function getRootSpan(span) {
  // TODO (v8): Remove this check and just return span
  // eslint-disable-next-line deprecation/deprecation
  return span.transaction;
}


//# sourceMappingURL=getRootSpan.js.map


/***/ }),

/***/ "./node_modules/@sentry/core/esm/utils/prepareEvent.js":
/*!*************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/utils/prepareEvent.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "applyDebugIds": () => (/* binding */ applyDebugIds),
/* harmony export */   "applyDebugMeta": () => (/* binding */ applyDebugMeta),
/* harmony export */   "parseEventHintOrCaptureContext": () => (/* binding */ parseEventHintOrCaptureContext),
/* harmony export */   "prepareEvent": () => (/* binding */ prepareEvent)
/* harmony export */ });
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/misc.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/time.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/string.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/worldwide.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/normalize.js");
/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../constants.js */ "./node_modules/@sentry/core/esm/constants.js");
/* harmony import */ var _eventProcessors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../eventProcessors.js */ "./node_modules/@sentry/core/esm/eventProcessors.js");
/* harmony import */ var _scope_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../scope.js */ "./node_modules/@sentry/core/esm/scope.js");
/* harmony import */ var _applyScopeDataToEvent_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./applyScopeDataToEvent.js */ "./node_modules/@sentry/core/esm/utils/applyScopeDataToEvent.js");
/* harmony import */ var _spanUtils_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./spanUtils.js */ "./node_modules/@sentry/core/esm/utils/spanUtils.js");







/**
 * This type makes sure that we get either a CaptureContext, OR an EventHint.
 * It does not allow mixing them, which could lead to unexpected outcomes, e.g. this is disallowed:
 * { user: { id: '123' }, mechanism: { handled: false } }
 */

/**
 * Adds common information to events.
 *
 * The information includes release and environment from `options`,
 * breadcrumbs and context (extra, tags and user) from the scope.
 *
 * Information that is already present in the event is never overwritten. For
 * nested objects, such as the context, keys are merged.
 *
 * Note: This also triggers callbacks for `addGlobalEventProcessor`, but not `beforeSend`.
 *
 * @param event The original event.
 * @param hint May contain additional information about the original exception.
 * @param scope A scope containing event metadata.
 * @returns A new event with more information.
 * @hidden
 */
function prepareEvent(
  options,
  event,
  hint,
  scope,
  client,
  isolationScope,
) {
  const { normalizeDepth = 3, normalizeMaxBreadth = 1000 } = options;
  const prepared = {
    ...event,
    event_id: event.event_id || hint.event_id || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.uuid4)(),
    timestamp: event.timestamp || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.dateTimestampInSeconds)(),
  };
  const integrations = hint.integrations || options.integrations.map(i => i.name);

  applyClientOptions(prepared, options);
  applyIntegrationsMetadata(prepared, integrations);

  // Only put debug IDs onto frames for error events.
  if (event.type === undefined) {
    applyDebugIds(prepared, options.stackParser);
  }

  // If we have scope given to us, use it as the base for further modifications.
  // This allows us to prevent unnecessary copying of data if `captureContext` is not provided.
  const finalScope = getFinalScope(scope, hint.captureContext);

  if (hint.mechanism) {
    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addExceptionMechanism)(prepared, hint.mechanism);
  }

  const clientEventProcessors = client && client.getEventProcessors ? client.getEventProcessors() : [];

  // This should be the last thing called, since we want that
  // {@link Hub.addEventProcessor} gets the finished prepared event.
  // Merge scope data together
  const data = (0,_scope_js__WEBPACK_IMPORTED_MODULE_2__.getGlobalScope)().getScopeData();

  if (isolationScope) {
    const isolationData = isolationScope.getScopeData();
    (0,_applyScopeDataToEvent_js__WEBPACK_IMPORTED_MODULE_3__.mergeScopeData)(data, isolationData);
  }

  if (finalScope) {
    const finalScopeData = finalScope.getScopeData();
    (0,_applyScopeDataToEvent_js__WEBPACK_IMPORTED_MODULE_3__.mergeScopeData)(data, finalScopeData);
  }

  const attachments = [...(hint.attachments || []), ...data.attachments];
  if (attachments.length) {
    hint.attachments = attachments;
  }

  (0,_applyScopeDataToEvent_js__WEBPACK_IMPORTED_MODULE_3__.applyScopeDataToEvent)(prepared, data);

  // TODO (v8): Update this order to be: Global > Client > Scope
  const eventProcessors = [
    ...clientEventProcessors,
    // eslint-disable-next-line deprecation/deprecation
    ...(0,_eventProcessors_js__WEBPACK_IMPORTED_MODULE_4__.getGlobalEventProcessors)(),
    // Run scope event processors _after_ all other processors
    ...data.eventProcessors,
  ];

  const result = (0,_eventProcessors_js__WEBPACK_IMPORTED_MODULE_4__.notifyEventProcessors)(eventProcessors, prepared, hint);

  return result.then(evt => {
    if (evt) {
      // We apply the debug_meta field only after all event processors have ran, so that if any event processors modified
      // file names (e.g.the RewriteFrames integration) the filename -> debug ID relationship isn't destroyed.
      // This should not cause any PII issues, since we're only moving data that is already on the event and not adding
      // any new data
      applyDebugMeta(evt);
    }

    if (typeof normalizeDepth === 'number' && normalizeDepth > 0) {
      return normalizeEvent(evt, normalizeDepth, normalizeMaxBreadth);
    }
    return evt;
  });
}

/**
 *  Enhances event using the client configuration.
 *  It takes care of all "static" values like environment, release and `dist`,
 *  as well as truncating overly long values.
 * @param event event instance to be enhanced
 */
function applyClientOptions(event, options) {
  const { environment, release, dist, maxValueLength = 250 } = options;

  if (!('environment' in event)) {
    event.environment = 'environment' in options ? environment : _constants_js__WEBPACK_IMPORTED_MODULE_5__.DEFAULT_ENVIRONMENT;
  }

  if (event.release === undefined && release !== undefined) {
    event.release = release;
  }

  if (event.dist === undefined && dist !== undefined) {
    event.dist = dist;
  }

  if (event.message) {
    event.message = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_6__.truncate)(event.message, maxValueLength);
  }

  const exception = event.exception && event.exception.values && event.exception.values[0];
  if (exception && exception.value) {
    exception.value = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_6__.truncate)(exception.value, maxValueLength);
  }

  const request = event.request;
  if (request && request.url) {
    request.url = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_6__.truncate)(request.url, maxValueLength);
  }
}

const debugIdStackParserCache = new WeakMap();

/**
 * Puts debug IDs into the stack frames of an error event.
 */
function applyDebugIds(event, stackParser) {
  const debugIdMap = _sentry_utils__WEBPACK_IMPORTED_MODULE_7__.GLOBAL_OBJ._sentryDebugIds;

  if (!debugIdMap) {
    return;
  }

  let debugIdStackFramesCache;
  const cachedDebugIdStackFrameCache = debugIdStackParserCache.get(stackParser);
  if (cachedDebugIdStackFrameCache) {
    debugIdStackFramesCache = cachedDebugIdStackFrameCache;
  } else {
    debugIdStackFramesCache = new Map();
    debugIdStackParserCache.set(stackParser, debugIdStackFramesCache);
  }

  // Build a map of filename -> debug_id
  const filenameDebugIdMap = Object.keys(debugIdMap).reduce((acc, debugIdStackTrace) => {
    let parsedStack;
    const cachedParsedStack = debugIdStackFramesCache.get(debugIdStackTrace);
    if (cachedParsedStack) {
      parsedStack = cachedParsedStack;
    } else {
      parsedStack = stackParser(debugIdStackTrace);
      debugIdStackFramesCache.set(debugIdStackTrace, parsedStack);
    }

    for (let i = parsedStack.length - 1; i >= 0; i--) {
      const stackFrame = parsedStack[i];
      if (stackFrame.filename) {
        acc[stackFrame.filename] = debugIdMap[debugIdStackTrace];
        break;
      }
    }
    return acc;
  }, {});

  try {
    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
    event.exception.values.forEach(exception => {
      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
      exception.stacktrace.frames.forEach(frame => {
        if (frame.filename) {
          frame.debug_id = filenameDebugIdMap[frame.filename];
        }
      });
    });
  } catch (e) {
    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.
  }
}

/**
 * Moves debug IDs from the stack frames of an error event into the debug_meta field.
 */
function applyDebugMeta(event) {
  // Extract debug IDs and filenames from the stack frames on the event.
  const filenameDebugIdMap = {};
  try {
    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
    event.exception.values.forEach(exception => {
      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
      exception.stacktrace.frames.forEach(frame => {
        if (frame.debug_id) {
          if (frame.abs_path) {
            filenameDebugIdMap[frame.abs_path] = frame.debug_id;
          } else if (frame.filename) {
            filenameDebugIdMap[frame.filename] = frame.debug_id;
          }
          delete frame.debug_id;
        }
      });
    });
  } catch (e) {
    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.
  }

  if (Object.keys(filenameDebugIdMap).length === 0) {
    return;
  }

  // Fill debug_meta information
  event.debug_meta = event.debug_meta || {};
  event.debug_meta.images = event.debug_meta.images || [];
  const images = event.debug_meta.images;
  Object.keys(filenameDebugIdMap).forEach(filename => {
    images.push({
      type: 'sourcemap',
      code_file: filename,
      debug_id: filenameDebugIdMap[filename],
    });
  });
}

/**
 * This function adds all used integrations to the SDK info in the event.
 * @param event The event that will be filled with all integrations.
 */
function applyIntegrationsMetadata(event, integrationNames) {
  if (integrationNames.length > 0) {
    event.sdk = event.sdk || {};
    event.sdk.integrations = [...(event.sdk.integrations || []), ...integrationNames];
  }
}

/**
 * Applies `normalize` function on necessary `Event` attributes to make them safe for serialization.
 * Normalized keys:
 * - `breadcrumbs.data`
 * - `user`
 * - `contexts`
 * - `extra`
 * @param event Event
 * @returns Normalized event
 */
function normalizeEvent(event, depth, maxBreadth) {
  if (!event) {
    return null;
  }

  const normalized = {
    ...event,
    ...(event.breadcrumbs && {
      breadcrumbs: event.breadcrumbs.map(b => ({
        ...b,
        ...(b.data && {
          data: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_8__.normalize)(b.data, depth, maxBreadth),
        }),
      })),
    }),
    ...(event.user && {
      user: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_8__.normalize)(event.user, depth, maxBreadth),
    }),
    ...(event.contexts && {
      contexts: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_8__.normalize)(event.contexts, depth, maxBreadth),
    }),
    ...(event.extra && {
      extra: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_8__.normalize)(event.extra, depth, maxBreadth),
    }),
  };

  // event.contexts.trace stores information about a Transaction. Similarly,
  // event.spans[] stores information about child Spans. Given that a
  // Transaction is conceptually a Span, normalization should apply to both
  // Transactions and Spans consistently.
  // For now the decision is to skip normalization of Transactions and Spans,
  // so this block overwrites the normalized event to add back the original
  // Transaction information prior to normalization.
  if (event.contexts && event.contexts.trace && normalized.contexts) {
    normalized.contexts.trace = event.contexts.trace;

    // event.contexts.trace.data may contain circular/dangerous data so we need to normalize it
    if (event.contexts.trace.data) {
      normalized.contexts.trace.data = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_8__.normalize)(event.contexts.trace.data, depth, maxBreadth);
    }
  }

  // event.spans[].data may contain circular/dangerous data so we need to normalize it
  if (event.spans) {
    normalized.spans = event.spans.map(span => {
      const data = (0,_spanUtils_js__WEBPACK_IMPORTED_MODULE_9__.spanToJSON)(span).data;

      if (data) {
        // This is a bit weird, as we generally have `Span` instances here, but to be safe we do not assume so
        // eslint-disable-next-line deprecation/deprecation
        span.data = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_8__.normalize)(data, depth, maxBreadth);
      }

      return span;
    });
  }

  return normalized;
}

function getFinalScope(scope, captureContext) {
  if (!captureContext) {
    return scope;
  }

  const finalScope = scope ? scope.clone() : new _scope_js__WEBPACK_IMPORTED_MODULE_2__.Scope();
  finalScope.update(captureContext);
  return finalScope;
}

/**
 * Parse either an `EventHint` directly, or convert a `CaptureContext` to an `EventHint`.
 * This is used to allow to update method signatures that used to accept a `CaptureContext` but should now accept an `EventHint`.
 */
function parseEventHintOrCaptureContext(
  hint,
) {
  if (!hint) {
    return undefined;
  }

  // If you pass a Scope or `() => Scope` as CaptureContext, we just return this as captureContext
  if (hintIsScopeOrFunction(hint)) {
    return { captureContext: hint };
  }

  if (hintIsScopeContext(hint)) {
    return {
      captureContext: hint,
    };
  }

  return hint;
}

function hintIsScopeOrFunction(
  hint,
) {
  return hint instanceof _scope_js__WEBPACK_IMPORTED_MODULE_2__.Scope || typeof hint === 'function';
}

const captureContextKeys = [
  'user',
  'level',
  'extra',
  'contexts',
  'tags',
  'fingerprint',
  'requestSession',
  'propagationContext',
] ;

function hintIsScopeContext(hint) {
  return Object.keys(hint).some(key => captureContextKeys.includes(key ));
}


//# sourceMappingURL=prepareEvent.js.map


/***/ }),

/***/ "./node_modules/@sentry/core/esm/utils/sdkMetadata.js":
/*!************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/utils/sdkMetadata.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "applySdkMetadata": () => (/* binding */ applySdkMetadata)
/* harmony export */ });
/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../version.js */ "./node_modules/@sentry/core/esm/version.js");


/**
 * A builder for the SDK metadata in the options for the SDK initialization.
 *
 * Note: This function is identical to `buildMetadata` in Remix and NextJS and SvelteKit.
 * We don't extract it for bundle size reasons.
 * @see https://github.com/getsentry/sentry-javascript/pull/7404
 * @see https://github.com/getsentry/sentry-javascript/pull/4196
 *
 * If you make changes to this function consider updating the others as well.
 *
 * @param options SDK options object that gets mutated
 * @param names list of package names
 */
function applySdkMetadata(options, name, names = [name], source = 'npm') {
  const metadata = options._metadata || {};

  if (!metadata.sdk) {
    metadata.sdk = {
      name: `sentry.javascript.${name}`,
      packages: names.map(name => ({
        name: `${source}:@sentry/${name}`,
        version: _version_js__WEBPACK_IMPORTED_MODULE_0__.SDK_VERSION,
      })),
      version: _version_js__WEBPACK_IMPORTED_MODULE_0__.SDK_VERSION,
    };
  }

  options._metadata = metadata;
}


//# sourceMappingURL=sdkMetadata.js.map


/***/ }),

/***/ "./node_modules/@sentry/core/esm/utils/spanUtils.js":
/*!**********************************************************!*\
  !*** ./node_modules/@sentry/core/esm/utils/spanUtils.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TRACE_FLAG_NONE": () => (/* binding */ TRACE_FLAG_NONE),
/* harmony export */   "TRACE_FLAG_SAMPLED": () => (/* binding */ TRACE_FLAG_SAMPLED),
/* harmony export */   "spanIsSampled": () => (/* binding */ spanIsSampled),
/* harmony export */   "spanTimeInputToSeconds": () => (/* binding */ spanTimeInputToSeconds),
/* harmony export */   "spanToJSON": () => (/* binding */ spanToJSON),
/* harmony export */   "spanToTraceContext": () => (/* binding */ spanToTraceContext),
/* harmony export */   "spanToTraceHeader": () => (/* binding */ spanToTraceHeader)
/* harmony export */ });
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/object.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/tracing.js");
/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ "./node_modules/@sentry/utils/esm/time.js");


// These are aligned with OpenTelemetry trace flags
const TRACE_FLAG_NONE = 0x0;
const TRACE_FLAG_SAMPLED = 0x1;

/**
 * Convert a span to a trace context, which can be sent as the `trace` context in an event.
 */
function spanToTraceContext(span) {
  const { spanId: span_id, traceId: trace_id } = span.spanContext();
  const { data, op, parent_span_id, status, tags, origin } = spanToJSON(span);

  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dropUndefinedKeys)({
    data,
    op,
    parent_span_id,
    span_id,
    status,
    tags,
    trace_id,
    origin,
  });
}

/**
 * Convert a Span to a Sentry trace header.
 */
function spanToTraceHeader(span) {
  const { traceId, spanId } = span.spanContext();
  const sampled = spanIsSampled(span);
  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.generateSentryTraceHeader)(traceId, spanId, sampled);
}

/**
 * Convert a span time input intp a timestamp in seconds.
 */
function spanTimeInputToSeconds(input) {
  if (typeof input === 'number') {
    return ensureTimestampInSeconds(input);
  }

  if (Array.isArray(input)) {
    // See {@link HrTime} for the array-based time format
    return input[0] + input[1] / 1e9;
  }

  if (input instanceof Date) {
    return ensureTimestampInSeconds(input.getTime());
  }

  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.timestampInSeconds)();
}

/**
 * Converts a timestamp to second, if it was in milliseconds, or keeps it as second.
 */
function ensureTimestampInSeconds(timestamp) {
  const isMs = timestamp > 9999999999;
  return isMs ? timestamp / 1000 : timestamp;
}

/**
 * Convert a span to a JSON representation.
 * Note that all fields returned here are optional and need to be guarded against.
 *
 * Note: Because of this, we currently have a circular type dependency (which we opted out of in package.json).
 * This is not avoidable as we need `spanToJSON` in `spanUtils.ts`, which in turn is needed by `span.ts` for backwards compatibility.
 * And `spanToJSON` needs the Span class from `span.ts` to check here.
 * TODO v8: When we remove the deprecated stuff from `span.ts`, we can remove the circular dependency again.
 */
function spanToJSON(span) {
  if (spanIsSpanClass(span)) {
    return span.getSpanJSON();
  }

  // Fallback: We also check for `.toJSON()` here...
  // eslint-disable-next-line deprecation/deprecation
  if (typeof span.toJSON === 'function') {
    // eslint-disable-next-line deprecation/deprecation
    return span.toJSON();
  }

  return {};
}

/**
 * Sadly, due to circular dependency checks we cannot actually import the Span class here and check for instanceof.
 * :( So instead we approximate this by checking if it has the `getSpanJSON` method.
 */
function spanIsSpanClass(span) {
  return typeof (span ).getSpanJSON === 'function';
}

/**
 * Returns true if a span is sampled.
 * In most cases, you should just use `span.isRecording()` instead.
 * However, this has a slightly different semantic, as it also returns false if the span is finished.
 * So in the case where this distinction is important, use this method.
 */
function spanIsSampled(span) {
  // We align our trace flags with the ones OpenTelemetry use
  // So we also check for sampled the same way they do.
  const { traceFlags } = span.spanContext();
  // eslint-disable-next-line no-bitwise
  return Boolean(traceFlags & TRACE_FLAG_SAMPLED);
}


//# sourceMappingURL=spanUtils.js.map


/***/ }),

/***/ "./node_modules/@sentry/core/esm/version.js":
/*!**************************************************!*\
  !*** ./node_modules/@sentry/core/esm/version.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SDK_VERSION": () => (/* binding */ SDK_VERSION)
/* harmony export */ });
const SDK_VERSION = '7.98.0';


//# sourceMappingURL=version.js.map


/***/ }),

/***/ "./node_modules/@sentry/utils/esm/aggregate-errors.js":
/*!************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/aggregate-errors.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "applyAggregateErrorsToEvent": () => (/* binding */ applyAggregateErrorsToEvent)
/* harmony export */ });
/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is.js */ "./node_modules/@sentry/utils/esm/is.js");
/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./string.js */ "./node_modules/@sentry/utils/esm/string.js");



/**
 * Creates exceptions inside `event.exception.values` for errors that are nested on properties based on the `key` parameter.
 */
function applyAggregateErrorsToEvent(
  exceptionFromErrorImplementation,
  parser,
  maxValueLimit = 250,
  key,
  limit,
  event,
  hint,
) {
  if (!event.exception || !event.exception.values || !hint || !(0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isInstanceOf)(hint.originalException, Error)) {
    return;
  }

  // Generally speaking the last item in `event.exception.values` is the exception originating from the original Error
  const originalException =
    event.exception.values.length > 0 ? event.exception.values[event.exception.values.length - 1] : undefined;

  // We only create exception grouping if there is an exception in the event.
  if (originalException) {
    event.exception.values = truncateAggregateExceptions(
      aggregateExceptionsFromError(
        exceptionFromErrorImplementation,
        parser,
        limit,
        hint.originalException ,
        key,
        event.exception.values,
        originalException,
        0,
      ),
      maxValueLimit,
    );
  }
}

function aggregateExceptionsFromError(
  exceptionFromErrorImplementation,
  parser,
  limit,
  error,
  key,
  prevExceptions,
  exception,
  exceptionId,
) {
  if (prevExceptions.length >= limit + 1) {
    return prevExceptions;
  }

  let newExceptions = [...prevExceptions];

  if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isInstanceOf)(error[key], Error)) {
    applyExceptionGroupFieldsForParentException(exception, exceptionId);
    const newException = exceptionFromErrorImplementation(parser, error[key]);
    const newExceptionId = newExceptions.length;
    applyExceptionGroupFieldsForChildException(newException, key, newExceptionId, exceptionId);
    newExceptions = aggregateExceptionsFromError(
      exceptionFromErrorImplementation,
      parser,
      limit,
      error[key],
      key,
      [newException, ...newExceptions],
      newException,
      newExceptionId,
    );
  }

  // This will create exception grouping for AggregateErrors
  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/AggregateError
  if (Array.isArray(error.errors)) {
    error.errors.forEach((childError, i) => {
      if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isInstanceOf)(childError, Error)) {
        applyExceptionGroupFieldsForParentException(exception, exceptionId);
        const newException = exceptionFromErrorImplementation(parser, childError);
        const newExceptionId = newExceptions.length;
        applyExceptionGroupFieldsForChildException(newException, `errors[${i}]`, newExceptionId, exceptionId);
        newExceptions = aggregateExceptionsFromError(
          exceptionFromErrorImplementation,
          parser,
          limit,
          childError,
          key,
          [newException, ...newExceptions],
          newException,
          newExceptionId,
        );
      }
    });
  }

  return newExceptions;
}

function applyExceptionGroupFieldsForParentException(exception, exceptionId) {
  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.
  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };

  exception.mechanism = {
    ...exception.mechanism,
    is_exception_group: true,
    exception_id: exceptionId,
  };
}

function applyExceptionGroupFieldsForChildException(
  exception,
  source,
  exceptionId,
  parentId,
) {
  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.
  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };

  exception.mechanism = {
    ...exception.mechanism,
    type: 'chained',
    source,
    exception_id: exceptionId,
    parent_id: parentId,
  };
}

/**
 * Truncate the message (exception.value) of all exceptions in the event.
 * Because this event processor is ran after `applyClientOptions`,
 * we need to truncate the message of the added exceptions here.
 */
function truncateAggregateExceptions(exceptions, maxValueLength) {
  return exceptions.map(exception => {
    if (exception.value) {
      exception.value = (0,_string_js__WEBPACK_IMPORTED_MODULE_1__.truncate)(exception.value, maxValueLength);
    }
    return exception;
  });
}


//# sourceMappingURL=aggregate-errors.js.map


/***/ }),

/***/ "./node_modules/@sentry/utils/esm/baggage.js":
/*!***************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/baggage.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BAGGAGE_HEADER_NAME": () => (/* binding */ BAGGAGE_HEADER_NAME),
/* harmony export */   "MAX_BAGGAGE_STRING_LENGTH": () => (/* binding */ MAX_BAGGAGE_STRING_LENGTH),
/* harmony export */   "SENTRY_BAGGAGE_KEY_PREFIX": () => (/* binding */ SENTRY_BAGGAGE_KEY_PREFIX),
/* harmony export */   "SENTRY_BAGGAGE_KEY_PREFIX_REGEX": () => (/* binding */ SENTRY_BAGGAGE_KEY_PREFIX_REGEX),
/* harmony export */   "baggageHeaderToDynamicSamplingContext": () => (/* binding */ baggageHeaderToDynamicSamplingContext),
/* harmony export */   "dynamicSamplingContextToSentryBaggageHeader": () => (/* binding */ dynamicSamplingContextToSentryBaggageHeader)
/* harmony export */ });
/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./debug-build.js */ "./node_modules/@sentry/utils/esm/debug-build.js");
/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is.js */ "./node_modules/@sentry/utils/esm/is.js");
/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./logger.js */ "./node_modules/@sentry/utils/esm/logger.js");




const BAGGAGE_HEADER_NAME = 'baggage';

const SENTRY_BAGGAGE_KEY_PREFIX = 'sentry-';

const SENTRY_BAGGAGE_KEY_PREFIX_REGEX = /^sentry-/;

/**
 * Max length of a serialized baggage string
 *
 * https://www.w3.org/TR/baggage/#limits
 */
const MAX_BAGGAGE_STRING_LENGTH = 8192;

/**
 * Takes a baggage header and turns it into Dynamic Sampling Context, by extracting all the "sentry-" prefixed values
 * from it.
 *
 * @param baggageHeader A very bread definition of a baggage header as it might appear in various frameworks.
 * @returns The Dynamic Sampling Context that was found on `baggageHeader`, if there was any, `undefined` otherwise.
 */
function baggageHeaderToDynamicSamplingContext(
  // Very liberal definition of what any incoming header might look like
  baggageHeader,
) {
  if (!(0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isString)(baggageHeader) && !Array.isArray(baggageHeader)) {
    return undefined;
  }

  // Intermediary object to store baggage key value pairs of incoming baggage headers on.
  // It is later used to read Sentry-DSC-values from.
  let baggageObject = {};

  if (Array.isArray(baggageHeader)) {
    // Combine all baggage headers into one object containing the baggage values so we can later read the Sentry-DSC-values from it
    baggageObject = baggageHeader.reduce((acc, curr) => {
      const currBaggageObject = baggageHeaderToObject(curr);
      for (const key of Object.keys(currBaggageObject)) {
        acc[key] = currBaggageObject[key];
      }
      return acc;
    }, {});
  } else {
    // Return undefined if baggage header is an empty string (technically an empty baggage header is not spec conform but
    // this is how we choose to handle it)
    if (!baggageHeader) {
      return undefined;
    }

    baggageObject = baggageHeaderToObject(baggageHeader);
  }

  // Read all "sentry-" prefixed values out of the baggage object and put it onto a dynamic sampling context object.
  const dynamicSamplingContext = Object.entries(baggageObject).reduce((acc, [key, value]) => {
    if (key.match(SENTRY_BAGGAGE_KEY_PREFIX_REGEX)) {
      const nonPrefixedKey = key.slice(SENTRY_BAGGAGE_KEY_PREFIX.length);
      acc[nonPrefixedKey] = value;
    }
    return acc;
  }, {});

  // Only return a dynamic sampling context object if there are keys in it.
  // A keyless object means there were no sentry values on the header, which means that there is no DSC.
  if (Object.keys(dynamicSamplingContext).length > 0) {
    return dynamicSamplingContext ;
  } else {
    return undefined;
  }
}

/**
 * Turns a Dynamic Sampling Object into a baggage header by prefixing all the keys on the object with "sentry-".
 *
 * @param dynamicSamplingContext The Dynamic Sampling Context to turn into a header. For convenience and compatibility
 * with the `getDynamicSamplingContext` method on the Transaction class ,this argument can also be `undefined`. If it is
 * `undefined` the function will return `undefined`.
 * @returns a baggage header, created from `dynamicSamplingContext`, or `undefined` either if `dynamicSamplingContext`
 * was `undefined`, or if `dynamicSamplingContext` didn't contain any values.
 */
function dynamicSamplingContextToSentryBaggageHeader(
  // this also takes undefined for convenience and bundle size in other places
  dynamicSamplingContext,
) {
  if (!dynamicSamplingContext) {
    return undefined;
  }

  // Prefix all DSC keys with "sentry-" and put them into a new object
  const sentryPrefixedDSC = Object.entries(dynamicSamplingContext).reduce(
    (acc, [dscKey, dscValue]) => {
      if (dscValue) {
        acc[`${SENTRY_BAGGAGE_KEY_PREFIX}${dscKey}`] = dscValue;
      }
      return acc;
    },
    {},
  );

  return objectToBaggageHeader(sentryPrefixedDSC);
}

/**
 * Will parse a baggage header, which is a simple key-value map, into a flat object.
 *
 * @param baggageHeader The baggage header to parse.
 * @returns a flat object containing all the key-value pairs from `baggageHeader`.
 */
function baggageHeaderToObject(baggageHeader) {
  return baggageHeader
    .split(',')
    .map(baggageEntry => baggageEntry.split('=').map(keyOrValue => decodeURIComponent(keyOrValue.trim())))
    .reduce((acc, [key, value]) => {
      acc[key] = value;
      return acc;
    }, {});
}

/**
 * Turns a flat object (key-value pairs) into a baggage header, which is also just key-value pairs.
 *
 * @param object The object to turn into a baggage header.
 * @returns a baggage header string, or `undefined` if the object didn't have any values, since an empty baggage header
 * is not spec compliant.
 */
function objectToBaggageHeader(object) {
  if (Object.keys(object).length === 0) {
    // An empty baggage header is not spec compliant: We return undefined.
    return undefined;
  }

  return Object.entries(object).reduce((baggageHeader, [objectKey, objectValue], currentIndex) => {
    const baggageEntry = `${encodeURIComponent(objectKey)}=${encodeURIComponent(objectValue)}`;
    const newBaggageHeader = currentIndex === 0 ? baggageEntry : `${baggageHeader},${baggageEntry}`;
    if (newBaggageHeader.length > MAX_BAGGAGE_STRING_LENGTH) {
      _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD &&
        _logger_js__WEBPACK_IMPORTED_MODULE_2__.logger.warn(
          `Not adding key: ${objectKey} with val: ${objectValue} to baggage header due to exceeding baggage size limits.`,
        );
      return baggageHeader;
    } else {
      return newBaggageHeader;
    }
  }, '');
}


//# sourceMappingURL=baggage.js.map


/***/ }),

/***/ "./node_modules/@sentry/utils/esm/browser.js":
/*!***************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/browser.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getComponentName": () => (/* binding */ getComponentName),
/* harmony export */   "getDomElement": () => (/* binding */ getDomElement),
/* harmony export */   "getLocationHref": () => (/* binding */ getLocationHref),
/* harmony export */   "htmlTreeAsString": () => (/* binding */ htmlTreeAsString)
/* harmony export */ });
/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./is.js */ "./node_modules/@sentry/utils/esm/is.js");
/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./worldwide.js */ "./node_modules/@sentry/utils/esm/worldwide.js");



// eslint-disable-next-line deprecation/deprecation
const WINDOW = (0,_worldwide_js__WEBPACK_IMPORTED_MODULE_0__.getGlobalObject)();

const DEFAULT_MAX_STRING_LENGTH = 80;

/**
 * Given a child DOM element, returns a query-selector statement describing that
 * and its ancestors
 * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]
 * @returns generated DOM path
 */
function htmlTreeAsString(
  elem,
  options = {},
) {
  if (!elem) {
    return '<unknown>';
  }

  // try/catch both:
  // - accessing event.target (see getsentry/raven-js#838, #768)
  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly
  // - can throw an exception in some circumstances.
  try {
    let currentElem = elem ;
    const MAX_TRAVERSE_HEIGHT = 5;
    const out = [];
    let height = 0;
    let len = 0;
    const separator = ' > ';
    const sepLength = separator.length;
    let nextStr;
    const keyAttrs = Array.isArray(options) ? options : options.keyAttrs;
    const maxStringLength = (!Array.isArray(options) && options.maxStringLength) || DEFAULT_MAX_STRING_LENGTH;

    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {
      nextStr = _htmlElementAsString(currentElem, keyAttrs);
      // bail out if
      // - nextStr is the 'html' element
      // - the length of the string that would be created exceeds maxStringLength
      //   (ignore this limit if we are on the first iteration)
      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= maxStringLength)) {
        break;
      }

      out.push(nextStr);

      len += nextStr.length;
      currentElem = currentElem.parentNode;
    }

    return out.reverse().join(separator);
  } catch (_oO) {
    return '<unknown>';
  }
}

/**
 * Returns a simple, query-selector representation of a DOM element
 * e.g. [HTMLElement] => input#foo.btn[name=baz]
 * @returns generated DOM path
 */
function _htmlElementAsString(el, keyAttrs) {
  const elem = el

;

  const out = [];
  let className;
  let classes;
  let key;
  let attr;
  let i;

  if (!elem || !elem.tagName) {
    return '';
  }

  // @ts-expect-error WINDOW has HTMLElement
  if (WINDOW.HTMLElement) {
    // If using the component name annotation plugin, this value may be available on the DOM node
    if (elem instanceof HTMLElement && elem.dataset && elem.dataset['sentryComponent']) {
      return elem.dataset['sentryComponent'];
    }
  }

  out.push(elem.tagName.toLowerCase());

  // Pairs of attribute keys defined in `serializeAttribute` and their values on element.
  const keyAttrPairs =
    keyAttrs && keyAttrs.length
      ? keyAttrs.filter(keyAttr => elem.getAttribute(keyAttr)).map(keyAttr => [keyAttr, elem.getAttribute(keyAttr)])
      : null;

  if (keyAttrPairs && keyAttrPairs.length) {
    keyAttrPairs.forEach(keyAttrPair => {
      out.push(`[${keyAttrPair[0]}="${keyAttrPair[1]}"]`);
    });
  } else {
    if (elem.id) {
      out.push(`#${elem.id}`);
    }

    // eslint-disable-next-line prefer-const
    className = elem.className;
    if (className && (0,_is_js__WEBPACK_IMPORTED_MODULE_1__.isString)(className)) {
      classes = className.split(/\s+/);
      for (i = 0; i < classes.length; i++) {
        out.push(`.${classes[i]}`);
      }
    }
  }
  const allowedAttrs = ['aria-label', 'type', 'name', 'title', 'alt'];
  for (i = 0; i < allowedAttrs.length; i++) {
    key = allowedAttrs[i];
    attr = elem.getAttribute(key);
    if (attr) {
      out.push(`[${key}="${attr}"]`);
    }
  }
  return out.join('');
}

/**
 * A safe form of location.href
 */
function getLocationHref() {
  try {
    return WINDOW.document.location.href;
  } catch (oO) {
    return '';
  }
}

/**
 * Gets a DOM element by using document.querySelector.
 *
 * This wrapper will first check for the existance of the function before
 * actually calling it so that we don't have to take care of this check,
 * every time we want to access the DOM.
 *
 * Reason: DOM/querySelector is not available in all environments.
 *
 * We have to cast to any because utils can be consumed by a variety of environments,
 * and we don't want to break TS users. If you know what element will be selected by
 * `document.querySelector`, specify it as part of the generic call. For example,
 * `const element = getDomElement<Element>('selector');`
 *
 * @param selector the selector string passed on to document.querySelector
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function getDomElement(selector) {
  if (WINDOW.document && WINDOW.document.querySelector) {
    return WINDOW.document.querySelector(selector) ;
  }
  return null;
}

/**
 * Given a DOM element, traverses up the tree until it finds the first ancestor node
 * that has the `data-sentry-component` attribute. This attribute is added at build-time
 * by projects that have the component name annotation plugin installed.
 *
 * @returns a string representation of the component for the provided DOM element, or `null` if not found
 */
function getComponentName(elem) {
  // @ts-expect-error WINDOW has HTMLElement
  if (!WINDOW.HTMLElement) {
    return null;
  }

  let currentElem = elem ;
  const MAX_TRAVERSE_HEIGHT = 5;
  for (let i = 0; i < MAX_TRAVERSE_HEIGHT; i++) {
    if (!currentElem) {
      return null;
    }

    if (currentElem instanceof HTMLElement && currentElem.dataset['sentryComponent']) {
      return currentElem.dataset['sentryComponent'];
    }

    currentElem = currentElem.parentNode;
  }

  return null;
}


//# sourceMappingURL=browser.js.map


/***/ }),

/***/ "./node_modules/@sentry/utils/esm/clientreport.js":
/*!********************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/clientreport.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createClientReportEnvelope": () => (/* binding */ createClientReportEnvelope)
/* harmony export */ });
/* harmony import */ var _envelope_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./envelope.js */ "./node_modules/@sentry/utils/esm/envelope.js");
/* harmony import */ var _time_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./time.js */ "./node_modules/@sentry/utils/esm/time.js");



/**
 * Creates client report envelope
 * @param discarded_events An array of discard events
 * @param dsn A DSN that can be set on the header. Optional.
 */
function createClientReportEnvelope(
  discarded_events,
  dsn,
  timestamp,
) {
  const clientReportItem = [
    { type: 'client_report' },
    {
      timestamp: timestamp || (0,_time_js__WEBPACK_IMPORTED_MODULE_0__.dateTimestampInSeconds)(),
      discarded_events,
    },
  ];
  return (0,_envelope_js__WEBPACK_IMPORTED_MODULE_1__.createEnvelope)(dsn ? { dsn } : {}, [clientReportItem]);
}


//# sourceMappingURL=clientreport.js.map


/***/ }),

/***/ "./node_modules/@sentry/utils/esm/debug-build.js":
/*!*******************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/debug-build.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DEBUG_BUILD": () => (/* binding */ DEBUG_BUILD)
/* harmony export */ });
/**
 * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.
 *
 * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.
 */
const DEBUG_BUILD = (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__);


//# sourceMappingURL=debug-build.js.map


/***/ }),

/***/ "./node_modules/@sentry/utils/esm/dsn.js":
/*!***********************************************!*\
  !*** ./node_modules/@sentry/utils/esm/dsn.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "dsnFromString": () => (/* binding */ dsnFromString),
/* harmony export */   "dsnToString": () => (/* binding */ dsnToString),
/* harmony export */   "makeDsn": () => (/* binding */ makeDsn)
/* harmony export */ });
/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./debug-build.js */ "./node_modules/@sentry/utils/esm/debug-build.js");
/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./logger.js */ "./node_modules/@sentry/utils/esm/logger.js");



/** Regular expression used to parse a Dsn. */
const DSN_REGEX = /^(?:(\w+):)\/\/(?:(\w+)(?::(\w+)?)?@)([\w.-]+)(?::(\d+))?\/(.+)/;

function isValidProtocol(protocol) {
  return protocol === 'http' || protocol === 'https';
}

/**
 * Renders the string representation of this Dsn.
 *
 * By default, this will render the public representation without the password
 * component. To get the deprecated private representation, set `withPassword`
 * to true.
 *
 * @param withPassword When set to true, the password will be included.
 */
function dsnToString(dsn, withPassword = false) {
  const { host, path, pass, port, projectId, protocol, publicKey } = dsn;
  return (
    `${protocol}://${publicKey}${withPassword && pass ? `:${pass}` : ''}` +
    `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`
  );
}

/**
 * Parses a Dsn from a given string.
 *
 * @param str A Dsn as string
 * @returns Dsn as DsnComponents or undefined if @param str is not a valid DSN string
 */
function dsnFromString(str) {
  const match = DSN_REGEX.exec(str);

  if (!match) {
    // This should be logged to the console
    (0,_logger_js__WEBPACK_IMPORTED_MODULE_0__.consoleSandbox)(() => {
      // eslint-disable-next-line no-console
      console.error(`Invalid Sentry Dsn: ${str}`);
    });
    return undefined;
  }

  const [protocol, publicKey, pass = '', host, port = '', lastPath] = match.slice(1);
  let path = '';
  let projectId = lastPath;

  const split = projectId.split('/');
  if (split.length > 1) {
    path = split.slice(0, -1).join('/');
    projectId = split.pop() ;
  }

  if (projectId) {
    const projectMatch = projectId.match(/^\d+/);
    if (projectMatch) {
      projectId = projectMatch[0];
    }
  }

  return dsnFromComponents({ host, pass, path, projectId, port, protocol: protocol , publicKey });
}

function dsnFromComponents(components) {
  return {
    protocol: components.protocol,
    publicKey: components.publicKey || '',
    pass: components.pass || '',
    host: components.host,
    port: components.port || '',
    path: components.path || '',
    projectId: components.projectId,
  };
}

function validateDsn(dsn) {
  if (!_debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD) {
    return true;
  }

  const { port, projectId, protocol } = dsn;

  const requiredComponents = ['protocol', 'publicKey', 'host', 'projectId'];
  const hasMissingRequiredComponent = requiredComponents.find(component => {
    if (!dsn[component]) {
      _logger_js__WEBPACK_IMPORTED_MODULE_0__.logger.error(`Invalid Sentry Dsn: ${component} missing`);
      return true;
    }
    return false;
  });

  if (hasMissingRequiredComponent) {
    return false;
  }

  if (!projectId.match(/^\d+$/)) {
    _logger_js__WEBPACK_IMPORTED_MODULE_0__.logger.error(`Invalid Sentry Dsn: Invalid projectId ${projectId}`);
    return false;
  }

  if (!isValidProtocol(protocol)) {
    _logger_js__WEBPACK_IMPORTED_MODULE_0__.logger.error(`Invalid Sentry Dsn: Invalid protocol ${protocol}`);
    return false;
  }

  if (port && isNaN(parseInt(port, 10))) {
    _logger_js__WEBPACK_IMPORTED_MODULE_0__.logger.error(`Invalid Sentry Dsn: Invalid port ${port}`);
    return false;
  }

  return true;
}

/**
 * Creates a valid Sentry Dsn object, identifying a Sentry instance and project.
 * @returns a valid DsnComponents object or `undefined` if @param from is an invalid DSN source
 */
function makeDsn(from) {
  const components = typeof from === 'string' ? dsnFromString(from) : dsnFromComponents(from);
  if (!components || !validateDsn(components)) {
    return undefined;
  }
  return components;
}


//# sourceMappingURL=dsn.js.map


/***/ }),

/***/ "./node_modules/@sentry/utils/esm/env.js":
/*!***********************************************!*\
  !*** ./node_modules/@sentry/utils/esm/env.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getSDKSource": () => (/* binding */ getSDKSource),
/* harmony export */   "isBrowserBundle": () => (/* binding */ isBrowserBundle)
/* harmony export */ });
/*
 * This module exists for optimizations in the build process through rollup and terser.  We define some global
 * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these
 * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will
 * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to
 * `logger` and preventing node-related code from appearing in browser bundles.
 *
 * Attention:
 * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by
 * users. These flags should live in their respective packages, as we identified user tooling (specifically webpack)
 * having issues tree-shaking these constants across package boundaries.
 * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want
 * users to be able to shake away expressions that it guards.
 */

/**
 * Figures out if we're building a browser bundle.
 *
 * @returns true if this is a browser bundle build.
 */
function isBrowserBundle() {
  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;
}

/**
 * Get source of SDK.
 */
function getSDKSource() {
  // @ts-expect-error "npm" is injected by rollup during build process
  return "npm";
}


//# sourceMappingURL=env.js.map


/***/ }),

/***/ "./node_modules/@sentry/utils/esm/envelope.js":
/*!****************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/envelope.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "addItemToEnvelope": () => (/* binding */ addItemToEnvelope),
/* harmony export */   "createAttachmentEnvelopeItem": () => (/* binding */ createAttachmentEnvelopeItem),
/* harmony export */   "createEnvelope": () => (/* binding */ createEnvelope),
/* harmony export */   "createEventEnvelopeHeaders": () => (/* binding */ createEventEnvelopeHeaders),
/* harmony export */   "envelopeContainsItemType": () => (/* binding */ envelopeContainsItemType),
/* harmony export */   "envelopeItemTypeToDataCategory": () => (/* binding */ envelopeItemTypeToDataCategory),
/* harmony export */   "forEachEnvelopeItem": () => (/* binding */ forEachEnvelopeItem),
/* harmony export */   "getSdkMetadataForEnvelopeHeader": () => (/* binding */ getSdkMetadataForEnvelopeHeader),
/* harmony export */   "parseEnvelope": () => (/* binding */ parseEnvelope),
/* harmony export */   "serializeEnvelope": () => (/* binding */ serializeEnvelope)
/* harmony export */ });
/* harmony import */ var _dsn_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dsn.js */ "./node_modules/@sentry/utils/esm/dsn.js");
/* harmony import */ var _normalize_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./normalize.js */ "./node_modules/@sentry/utils/esm/normalize.js");
/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./object.js */ "./node_modules/@sentry/utils/esm/object.js");




/**
 * Creates an envelope.
 * Make sure to always explicitly provide the generic to this function
 * so that the envelope types resolve correctly.
 */
function createEnvelope(headers, items = []) {
  return [headers, items] ;
}

/**
 * Add an item to an envelope.
 * Make sure to always explicitly provide the generic to this function
 * so that the envelope types resolve correctly.
 */
function addItemToEnvelope(envelope, newItem) {
  const [headers, items] = envelope;
  return [headers, [...items, newItem]] ;
}

/**
 * Convenience function to loop through the items and item types of an envelope.
 * (This function was mostly created because working with envelope types is painful at the moment)
 *
 * If the callback returns true, the rest of the items will be skipped.
 */
function forEachEnvelopeItem(
  envelope,
  callback,
) {
  const envelopeItems = envelope[1];

  for (const envelopeItem of envelopeItems) {
    const envelopeItemType = envelopeItem[0].type;
    const result = callback(envelopeItem, envelopeItemType);

    if (result) {
      return true;
    }
  }

  return false;
}

/**
 * Returns true if the envelope contains any of the given envelope item types
 */
function envelopeContainsItemType(envelope, types) {
  return forEachEnvelopeItem(envelope, (_, type) => types.includes(type));
}

/**
 * Encode a string to UTF8.
 */
function encodeUTF8(input, textEncoder) {
  const utf8 = textEncoder || new TextEncoder();
  return utf8.encode(input);
}

/**
 * Serializes an envelope.
 */
function serializeEnvelope(envelope, textEncoder) {
  const [envHeaders, items] = envelope;

  // Initially we construct our envelope as a string and only convert to binary chunks if we encounter binary data
  let parts = JSON.stringify(envHeaders);

  function append(next) {
    if (typeof parts === 'string') {
      parts = typeof next === 'string' ? parts + next : [encodeUTF8(parts, textEncoder), next];
    } else {
      parts.push(typeof next === 'string' ? encodeUTF8(next, textEncoder) : next);
    }
  }

  for (const item of items) {
    const [itemHeaders, payload] = item;

    append(`\n${JSON.stringify(itemHeaders)}\n`);

    if (typeof payload === 'string' || payload instanceof Uint8Array) {
      append(payload);
    } else {
      let stringifiedPayload;
      try {
        stringifiedPayload = JSON.stringify(payload);
      } catch (e) {
        // In case, despite all our efforts to keep `payload` circular-dependency-free, `JSON.strinify()` still
        // fails, we try again after normalizing it again with infinite normalization depth. This of course has a
        // performance impact but in this case a performance hit is better than throwing.
        stringifiedPayload = JSON.stringify((0,_normalize_js__WEBPACK_IMPORTED_MODULE_0__.normalize)(payload));
      }
      append(stringifiedPayload);
    }
  }

  return typeof parts === 'string' ? parts : concatBuffers(parts);
}

function concatBuffers(buffers) {
  const totalLength = buffers.reduce((acc, buf) => acc + buf.length, 0);

  const merged = new Uint8Array(totalLength);
  let offset = 0;
  for (const buffer of buffers) {
    merged.set(buffer, offset);
    offset += buffer.length;
  }

  return merged;
}

/**
 * Parses an envelope
 */
function parseEnvelope(
  env,
  textEncoder,
  textDecoder,
) {
  let buffer = typeof env === 'string' ? textEncoder.encode(env) : env;

  function readBinary(length) {
    const bin = buffer.subarray(0, length);
    // Replace the buffer with the remaining data excluding trailing newline
    buffer = buffer.subarray(length + 1);
    return bin;
  }

  function readJson() {
    let i = buffer.indexOf(0xa);
    // If we couldn't find a newline, we must have found the end of the buffer
    if (i < 0) {
      i = buffer.length;
    }

    return JSON.parse(textDecoder.decode(readBinary(i))) ;
  }

  const envelopeHeader = readJson();
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  const items = [];

  while (buffer.length) {
    const itemHeader = readJson();
    const binaryLength = typeof itemHeader.length === 'number' ? itemHeader.length : undefined;

    items.push([itemHeader, binaryLength ? readBinary(binaryLength) : readJson()]);
  }

  return [envelopeHeader, items];
}

/**
 * Creates attachment envelope items
 */
function createAttachmentEnvelopeItem(
  attachment,
  textEncoder,
) {
  const buffer = typeof attachment.data === 'string' ? encodeUTF8(attachment.data, textEncoder) : attachment.data;

  return [
    (0,_object_js__WEBPACK_IMPORTED_MODULE_1__.dropUndefinedKeys)({
      type: 'attachment',
      length: buffer.length,
      filename: attachment.filename,
      content_type: attachment.contentType,
      attachment_type: attachment.attachmentType,
    }),
    buffer,
  ];
}

const ITEM_TYPE_TO_DATA_CATEGORY_MAP = {
  session: 'session',
  sessions: 'session',
  attachment: 'attachment',
  transaction: 'transaction',
  event: 'error',
  client_report: 'internal',
  user_report: 'default',
  profile: 'profile',
  replay_event: 'replay',
  replay_recording: 'replay',
  check_in: 'monitor',
  feedback: 'feedback',
  // TODO: This is a temporary workaround until we have a proper data category for metrics
  statsd: 'unknown',
};

/**
 * Maps the type of an envelope item to a data category.
 */
function envelopeItemTypeToDataCategory(type) {
  return ITEM_TYPE_TO_DATA_CATEGORY_MAP[type];
}

/** Extracts the minimal SDK info from from the metadata or an events */
function getSdkMetadataForEnvelopeHeader(metadataOrEvent) {
  if (!metadataOrEvent || !metadataOrEvent.sdk) {
    return;
  }
  const { name, version } = metadataOrEvent.sdk;
  return { name, version };
}

/**
 * Creates event envelope headers, based on event, sdk info and tunnel
 * Note: This function was extracted from the core package to make it available in Replay
 */
function createEventEnvelopeHeaders(
  event,
  sdkInfo,
  tunnel,
  dsn,
) {
  const dynamicSamplingContext = event.sdkProcessingMetadata && event.sdkProcessingMetadata.dynamicSamplingContext;
  return {
    event_id: event.event_id ,
    sent_at: new Date().toISOString(),
    ...(sdkInfo && { sdk: sdkInfo }),
    ...(!!tunnel && dsn && { dsn: (0,_dsn_js__WEBPACK_IMPORTED_MODULE_2__.dsnToString)(dsn) }),
    ...(dynamicSamplingContext && {
      trace: (0,_object_js__WEBPACK_IMPORTED_MODULE_1__.dropUndefinedKeys)({ ...dynamicSamplingContext }),
    }),
  };
}


//# sourceMappingURL=envelope.js.map


/***/ }),

/***/ "./node_modules/@sentry/utils/esm/error.js":
/*!*************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/error.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SentryError": () => (/* binding */ SentryError)
/* harmony export */ });
/** An error emitted by Sentry SDKs and related utilities. */
class SentryError extends Error {
  /** Display name of this error instance. */

   constructor( message, logLevel = 'warn') {
    super(message);this.message = message;
    this.name = new.target.prototype.constructor.name;
    // This sets the prototype to be `Error`, not `SentryError`. It's unclear why we do this, but commenting this line
    // out causes various (seemingly totally unrelated) playwright tests consistently time out. FYI, this makes
    // instances of `SentryError` fail `obj instanceof SentryError` checks.
    Object.setPrototypeOf(this, new.target.prototype);
    this.logLevel = logLevel;
  }
}


//# sourceMappingURL=error.js.map


/***/ }),

/***/ "./node_modules/@sentry/utils/esm/instrument/_handlers.js":
/*!****************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/instrument/_handlers.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "addHandler": () => (/* binding */ addHandler),
/* harmony export */   "maybeInstrument": () => (/* binding */ maybeInstrument),
/* harmony export */   "resetInstrumentationHandlers": () => (/* binding */ resetInstrumentationHandlers),
/* harmony export */   "triggerHandlers": () => (/* binding */ triggerHandlers)
/* harmony export */ });
/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../debug-build.js */ "./node_modules/@sentry/utils/esm/debug-build.js");
/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../logger.js */ "./node_modules/@sentry/utils/esm/logger.js");
/* harmony import */ var _stacktrace_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../stacktrace.js */ "./node_modules/@sentry/utils/esm/stacktrace.js");




// We keep the handlers globally
const handlers = {};
const instrumented = {};

/** Add a handler function. */
function addHandler(type, handler) {
  handlers[type] = handlers[type] || [];
  (handlers[type] ).push(handler);
}

/**
 * Reset all instrumentation handlers.
 * This can be used by tests to ensure we have a clean slate of instrumentation handlers.
 */
function resetInstrumentationHandlers() {
  Object.keys(handlers).forEach(key => {
    handlers[key ] = undefined;
  });
}

/** Maybe run an instrumentation function, unless it was already called. */
function maybeInstrument(type, instrumentFn) {
  if (!instrumented[type]) {
    instrumentFn();
    instrumented[type] = true;
  }
}

/** Trigger handlers for a given instrumentation type. */
function triggerHandlers(type, data) {
  const typeHandlers = type && handlers[type];
  if (!typeHandlers) {
    return;
  }

  for (const handler of typeHandlers) {
    try {
      handler(data);
    } catch (e) {
      _debug_build_js__WEBPACK_IMPORTED_MODULE_0__.DEBUG_BUILD &&
        _logger_js__WEBPACK_IMPORTED_MODULE_1__.logger.error(
          `Error while triggering instrumentation handler.\nType: ${type}\nName: ${(0,_stacktrace_js__WEBPACK_IMPORTED_MODULE_2__.getFunctionName)(handler)}\nError:`,
          e,
        );
    }
  }
}


//# sourceMappingURL=_handlers.js.map


/***/ }),

/***/ "./node_modules/@sentry/utils/esm/instrument/console.js":
/*!**************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/instrument/console.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "addConsoleInstrumentationHandler": () => (/* binding */ addConsoleInstrumentationHandler)
/* harmony export */ });
/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../logger.js */ "./node_modules/@sentry/utils/esm/logger.js");
/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../object.js */ "./node_modules/@sentry/utils/esm/object.js");
/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../worldwide.js */ "./node_modules/@sentry/utils/esm/worldwide.js");
/* harmony import */ var _handlers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_handlers.js */ "./node_modules/@sentry/utils/esm/instrument/_handlers.js");





/**
 * Add an instrumentation handler for when a console.xxx method is called.
 *
 * Use at your own risk, this might break without changelog notice, only used internally.
 * @hidden
 */
function addConsoleInstrumentationHandler(handler) {
  const type = 'console';
  (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.addHandler)(type, handler);
  (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.maybeInstrument)(type, instrumentConsole);
}

function instrumentConsole() {
  if (!("console" in _worldwide_js__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ)) {
    return;
  }

  _logger_js__WEBPACK_IMPORTED_MODULE_2__.CONSOLE_LEVELS.forEach(function (level) {
    if (!(level in _worldwide_js__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ.console)) {
      return;
    }

    (0,_object_js__WEBPACK_IMPORTED_MODULE_3__.fill)(_worldwide_js__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ.console, level, function (originalConsoleMethod) {
      _logger_js__WEBPACK_IMPORTED_MODULE_2__.originalConsoleMethods[level] = originalConsoleMethod;

      return function (...args) {
        const handlerData = { args, level };
        (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.triggerHandlers)('console', handlerData);

        const log = _logger_js__WEBPACK_IMPORTED_MODULE_2__.originalConsoleMethods[level];
        log && log.apply(_worldwide_js__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ.console, args);
      };
    });
  });
}


//# sourceMappingURL=console.js.map


/***/ }),

/***/ "./node_modules/@sentry/utils/esm/instrument/dom.js":
/*!**********************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/instrument/dom.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "addClickKeypressInstrumentationHandler": () => (/* binding */ addClickKeypressInstrumentationHandler),
/* harmony export */   "instrumentDOM": () => (/* binding */ instrumentDOM)
/* harmony export */ });
/* harmony import */ var _misc_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../misc.js */ "./node_modules/@sentry/utils/esm/misc.js");
/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../object.js */ "./node_modules/@sentry/utils/esm/object.js");
/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../worldwide.js */ "./node_modules/@sentry/utils/esm/worldwide.js");
/* harmony import */ var _handlers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_handlers.js */ "./node_modules/@sentry/utils/esm/instrument/_handlers.js");





const WINDOW = _worldwide_js__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ ;
const DEBOUNCE_DURATION = 1000;

let debounceTimerID;
let lastCapturedEventType;
let lastCapturedEventTargetId;

/**
 * Add an instrumentation handler for when a click or a keypress happens.
 *
 * Use at your own risk, this might break without changelog notice, only used internally.
 * @hidden
 */
function addClickKeypressInstrumentationHandler(handler) {
  const type = 'dom';
  (0,_handlers_js__WEBPACK_IMPORTED_MODULE_1__.addHandler)(type, handler);
  (0,_handlers_js__WEBPACK_IMPORTED_MODULE_1__.maybeInstrument)(type, instrumentDOM);
}

/** Exported for tests only. */
function instrumentDOM() {
  if (!WINDOW.document) {
    return;
  }

  // Make it so that any click or keypress that is unhandled / bubbled up all the way to the document triggers our dom
  // handlers. (Normally we have only one, which captures a breadcrumb for each click or keypress.) Do this before
  // we instrument `addEventListener` so that we don't end up attaching this handler twice.
  const triggerDOMHandler = _handlers_js__WEBPACK_IMPORTED_MODULE_1__.triggerHandlers.bind(null, 'dom');
  const globalDOMEventHandler = makeDOMEventHandler(triggerDOMHandler, true);
  WINDOW.document.addEventListener('click', globalDOMEventHandler, false);
  WINDOW.document.addEventListener('keypress', globalDOMEventHandler, false);

  // After hooking into click and keypress events bubbled up to `document`, we also hook into user-handled
  // clicks & keypresses, by adding an event listener of our own to any element to which they add a listener. That
  // way, whenever one of their handlers is triggered, ours will be, too. (This is needed because their handler
  // could potentially prevent the event from bubbling up to our global listeners. This way, our handler are still
  // guaranteed to fire at least once.)
  ['EventTarget', 'Node'].forEach((target) => {
    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
    const proto = (WINDOW )[target] && (WINDOW )[target].prototype;
    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins
    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {
      return;
    }

    (0,_object_js__WEBPACK_IMPORTED_MODULE_2__.fill)(proto, 'addEventListener', function (originalAddEventListener) {
      return function (

        type,
        listener,
        options,
      ) {
        if (type === 'click' || type == 'keypress') {
          try {
            const el = this ;
            const handlers = (el.__sentry_instrumentation_handlers__ = el.__sentry_instrumentation_handlers__ || {});
            const handlerForType = (handlers[type] = handlers[type] || { refCount: 0 });

            if (!handlerForType.handler) {
              const handler = makeDOMEventHandler(triggerDOMHandler);
              handlerForType.handler = handler;
              originalAddEventListener.call(this, type, handler, options);
            }

            handlerForType.refCount++;
          } catch (e) {
            // Accessing dom properties is always fragile.
            // Also allows us to skip `addEventListenrs` calls with no proper `this` context.
          }
        }

        return originalAddEventListener.call(this, type, listener, options);
      };
    });

    (0,_object_js__WEBPACK_IMPORTED_MODULE_2__.fill)(
      proto,
      'removeEventListener',
      function (originalRemoveEventListener) {
        return function (

          type,
          listener,
          options,
        ) {
          if (type === 'click' || type == 'keypress') {
            try {
              const el = this ;
              const handlers = el.__sentry_instrumentation_handlers__ || {};
              const handlerForType = handlers[type];

              if (handlerForType) {
                handlerForType.refCount--;
                // If there are no longer any custom handlers of the current type on this element, we can remove ours, too.
                if (handlerForType.refCount <= 0) {
                  originalRemoveEventListener.call(this, type, handlerForType.handler, options);
                  handlerForType.handler = undefined;
                  delete handlers[type]; // eslint-disable-line @typescript-eslint/no-dynamic-delete
                }

                // If there are no longer any custom handlers of any type on this element, cleanup everything.
                if (Object.keys(handlers).length === 0) {
                  delete el.__sentry_instrumentation_handlers__;
                }
              }
            } catch (e) {
              // Accessing dom properties is always fragile.
              // Also allows us to skip `addEventListenrs` calls with no proper `this` context.
            }
          }

          return originalRemoveEventListener.call(this, type, listener, options);
        };
      },
    );
  });
}

/**
 * Check whether the event is similar to the last captured one. For example, two click events on the same button.
 */
function isSimilarToLastCapturedEvent(event) {
  // If both events have different type, then user definitely performed two separate actions. e.g. click + keypress.
  if (event.type !== lastCapturedEventType) {
    return false;
  }

  try {
    // If both events have the same type, it's still possible that actions were performed on different targets.
    // e.g. 2 clicks on different buttons.
    if (!event.target || (event.target )._sentryId !== lastCapturedEventTargetId) {
      return false;
    }
  } catch (e) {
    // just accessing `target` property can throw an exception in some rare circumstances
    // see: https://github.com/getsentry/sentry-javascript/issues/838
  }

  // If both events have the same type _and_ same `target` (an element which triggered an event, _not necessarily_
  // to which an event listener was attached), we treat them as the same action, as we want to capture
  // only one breadcrumb. e.g. multiple clicks on the same button, or typing inside a user input box.
  return true;
}

/**
 * Decide whether an event should be captured.
 * @param event event to be captured
 */
function shouldSkipDOMEvent(eventType, target) {
  // We are only interested in filtering `keypress` events for now.
  if (eventType !== 'keypress') {
    return false;
  }

  if (!target || !target.tagName) {
    return true;
  }

  // Only consider keypress events on actual input elements. This will disregard keypresses targeting body
  // e.g.tabbing through elements, hotkeys, etc.
  if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {
    return false;
  }

  return true;
}

/**
 * Wraps addEventListener to capture UI breadcrumbs
 */
function makeDOMEventHandler(
  handler,
  globalListener = false,
) {
  return (event) => {
    // It's possible this handler might trigger multiple times for the same
    // event (e.g. event propagation through node ancestors).
    // Ignore if we've already captured that event.
    if (!event || event['_sentryCaptured']) {
      return;
    }

    const target = getEventTarget(event);

    // We always want to skip _some_ events.
    if (shouldSkipDOMEvent(event.type, target)) {
      return;
    }

    // Mark event as "seen"
    (0,_object_js__WEBPACK_IMPORTED_MODULE_2__.addNonEnumerableProperty)(event, '_sentryCaptured', true);

    if (target && !target._sentryId) {
      // Add UUID to event target so we can identify if
      (0,_object_js__WEBPACK_IMPORTED_MODULE_2__.addNonEnumerableProperty)(target, '_sentryId', (0,_misc_js__WEBPACK_IMPORTED_MODULE_3__.uuid4)());
    }

    const name = event.type === 'keypress' ? 'input' : event.type;

    // If there is no last captured event, it means that we can safely capture the new event and store it for future comparisons.
    // If there is a last captured event, see if the new event is different enough to treat it as a unique one.
    // If that's the case, emit the previous event and store locally the newly-captured DOM event.
    if (!isSimilarToLastCapturedEvent(event)) {
      const handlerData = { event, name, global: globalListener };
      handler(handlerData);
      lastCapturedEventType = event.type;
      lastCapturedEventTargetId = target ? target._sentryId : undefined;
    }

    // Start a new debounce timer that will prevent us from capturing multiple events that should be grouped together.
    clearTimeout(debounceTimerID);
    debounceTimerID = WINDOW.setTimeout(() => {
      lastCapturedEventTargetId = undefined;
      lastCapturedEventType = undefined;
    }, DEBOUNCE_DURATION);
  };
}

function getEventTarget(event) {
  try {
    return event.target ;
  } catch (e) {
    // just accessing `target` property can throw an exception in some rare circumstances
    // see: https://github.com/getsentry/sentry-javascript/issues/838
    return null;
  }
}


//# sourceMappingURL=dom.js.map


/***/ }),

/***/ "./node_modules/@sentry/utils/esm/instrument/fetch.js":
/*!************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/instrument/fetch.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "addFetchInstrumentationHandler": () => (/* binding */ addFetchInstrumentationHandler),
/* harmony export */   "parseFetchArgs": () => (/* binding */ parseFetchArgs)
/* harmony export */ });
/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../object.js */ "./node_modules/@sentry/utils/esm/object.js");
/* harmony import */ var _supports_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../supports.js */ "./node_modules/@sentry/utils/esm/supports.js");
/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../worldwide.js */ "./node_modules/@sentry/utils/esm/worldwide.js");
/* harmony import */ var _handlers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_handlers.js */ "./node_modules/@sentry/utils/esm/instrument/_handlers.js");





/**
 * Add an instrumentation handler for when a fetch request happens.
 * The handler function is called once when the request starts and once when it ends,
 * which can be identified by checking if it has an `endTimestamp`.
 *
 * Use at your own risk, this might break without changelog notice, only used internally.
 * @hidden
 */
function addFetchInstrumentationHandler(handler) {
  const type = 'fetch';
  (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.addHandler)(type, handler);
  (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.maybeInstrument)(type, instrumentFetch);
}

function instrumentFetch() {
  if (!(0,_supports_js__WEBPACK_IMPORTED_MODULE_1__.supportsNativeFetch)()) {
    return;
  }

  (0,_object_js__WEBPACK_IMPORTED_MODULE_2__.fill)(_worldwide_js__WEBPACK_IMPORTED_MODULE_3__.GLOBAL_OBJ, 'fetch', function (originalFetch) {
    return function (...args) {
      const { method, url } = parseFetchArgs(args);

      const handlerData = {
        args,
        fetchData: {
          method,
          url,
        },
        startTimestamp: Date.now(),
      };

      (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.triggerHandlers)('fetch', {
        ...handlerData,
      });

      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
      return originalFetch.apply(_worldwide_js__WEBPACK_IMPORTED_MODULE_3__.GLOBAL_OBJ, args).then(
        (response) => {
          const finishedHandlerData = {
            ...handlerData,
            endTimestamp: Date.now(),
            response,
          };

          (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.triggerHandlers)('fetch', finishedHandlerData);
          return response;
        },
        (error) => {
          const erroredHandlerData = {
            ...handlerData,
            endTimestamp: Date.now(),
            error,
          };

          (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.triggerHandlers)('fetch', erroredHandlerData);
          // NOTE: If you are a Sentry user, and you are seeing this stack frame,
          //       it means the sentry.javascript SDK caught an error invoking your application code.
          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.
          throw error;
        },
      );
    };
  });
}

function hasProp(obj, prop) {
  return !!obj && typeof obj === 'object' && !!(obj )[prop];
}

function getUrlFromResource(resource) {
  if (typeof resource === 'string') {
    return resource;
  }

  if (!resource) {
    return '';
  }

  if (hasProp(resource, 'url')) {
    return resource.url;
  }

  if (resource.toString) {
    return resource.toString();
  }

  return '';
}

/**
 * Parses the fetch arguments to find the used Http method and the url of the request.
 * Exported for tests only.
 */
function parseFetchArgs(fetchArgs) {
  if (fetchArgs.length === 0) {
    return { method: 'GET', url: '' };
  }

  if (fetchArgs.length === 2) {
    const [url, options] = fetchArgs ;

    return {
      url: getUrlFromResource(url),
      method: hasProp(options, 'method') ? String(options.method).toUpperCase() : 'GET',
    };
  }

  const arg = fetchArgs[0];
  return {
    url: getUrlFromResource(arg ),
    method: hasProp(arg, 'method') ? String(arg.method).toUpperCase() : 'GET',
  };
}


//# sourceMappingURL=fetch.js.map


/***/ }),

/***/ "./node_modules/@sentry/utils/esm/instrument/globalError.js":
/*!******************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/instrument/globalError.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "addGlobalErrorInstrumentationHandler": () => (/* binding */ addGlobalErrorInstrumentationHandler)
/* harmony export */ });
/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../worldwide.js */ "./node_modules/@sentry/utils/esm/worldwide.js");
/* harmony import */ var _handlers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_handlers.js */ "./node_modules/@sentry/utils/esm/instrument/_handlers.js");



let _oldOnErrorHandler = null;

/**
 * Add an instrumentation handler for when an error is captured by the global error handler.
 *
 * Use at your own risk, this might break without changelog notice, only used internally.
 * @hidden
 */
function addGlobalErrorInstrumentationHandler(handler) {
  const type = 'error';
  (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.addHandler)(type, handler);
  (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.maybeInstrument)(type, instrumentError);
}

function instrumentError() {
  _oldOnErrorHandler = _worldwide_js__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ.onerror;

  _worldwide_js__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ.onerror = function (
    msg,
    url,
    line,
    column,
    error,
  ) {
    const handlerData = {
      column,
      error,
      line,
      msg,
      url,
    };
    (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.triggerHandlers)('error', handlerData);

    if (_oldOnErrorHandler && !_oldOnErrorHandler.__SENTRY_LOADER__) {
      // eslint-disable-next-line prefer-rest-params
      return _oldOnErrorHandler.apply(this, arguments);
    }

    return false;
  };

  _worldwide_js__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ.onerror.__SENTRY_INSTRUMENTED__ = true;
}


//# sourceMappingURL=globalError.js.map


/***/ }),

/***/ "./node_modules/@sentry/utils/esm/instrument/globalUnhandledRejection.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/instrument/globalUnhandledRejection.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "addGlobalUnhandledRejectionInstrumentationHandler": () => (/* binding */ addGlobalUnhandledRejectionInstrumentationHandler)
/* harmony export */ });
/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../worldwide.js */ "./node_modules/@sentry/utils/esm/worldwide.js");
/* harmony import */ var _handlers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_handlers.js */ "./node_modules/@sentry/utils/esm/instrument/_handlers.js");



let _oldOnUnhandledRejectionHandler = null;

/**
 * Add an instrumentation handler for when an unhandled promise rejection is captured.
 *
 * Use at your own risk, this might break without changelog notice, only used internally.
 * @hidden
 */
function addGlobalUnhandledRejectionInstrumentationHandler(
  handler,
) {
  const type = 'unhandledrejection';
  (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.addHandler)(type, handler);
  (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.maybeInstrument)(type, instrumentUnhandledRejection);
}

function instrumentUnhandledRejection() {
  _oldOnUnhandledRejectionHandler = _worldwide_js__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ.onunhandledrejection;

  _worldwide_js__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ.onunhandledrejection = function (e) {
    const handlerData = e;
    (0,_handlers_js__WEBPACK_IMPORTED_MODULE_0__.triggerHandlers)('unhandledrejection', handlerData);

    if (_oldOnUnhandledRejectionHandler && !_oldOnUnhandledRejectionHandler.__SENTRY_LOADER__) {
      // eslint-disable-next-line prefer-rest-params
      return _oldOnUnhandledRejectionHandler.apply(this, arguments);
    }

    return true;
  };

  _worldwide_js__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ.onunhandledrejection.__SENTRY_INSTRUMENTED__ = true;
}


//# sourceMappingURL=globalUnhandledRejection.js.map


/***/ }),

/***/ "./node_modules/@sentry/utils/esm/instrument/history.js":
/*!**************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/instrument/history.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "addHistoryInstrumentationHandler": () => (/* binding */ addHistoryInstrumentationHandler)
/* harmony export */ });
/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../object.js */ "./node_modules/@sentry/utils/esm/object.js");
/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../worldwide.js */ "./node_modules/@sentry/utils/esm/worldwide.js");
/* harmony import */ var _vendor_supportsHistory_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../vendor/supportsHistory.js */ "./node_modules/@sentry/utils/esm/vendor/supportsHistory.js");
/* harmony import */ var _handlers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_handlers.js */ "./node_modules/@sentry/utils/esm/instrument/_handlers.js");







const WINDOW = _worldwide_js__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ ;

let lastHref;

/**
 * Add an instrumentation handler for when a fetch request happens.
 * The handler function is called once when the request starts and once when it ends,
 * which can be identified by checking if it has an `endTimestamp`.
 *
 * Use at your own risk, this might break without changelog notice, only used internally.
 * @hidden
 */
function addHistoryInstrumentationHandler(handler) {
  const type = 'history';
  (0,_handlers_js__WEBPACK_IMPORTED_MODULE_1__.addHandler)(type, handler);
  (0,_handlers_js__WEBPACK_IMPORTED_MODULE_1__.maybeInstrument)(type, instrumentHistory);
}

function instrumentHistory() {
  if (!(0,_vendor_supportsHistory_js__WEBPACK_IMPORTED_MODULE_2__.supportsHistory)()) {
    return;
  }

  const oldOnPopState = WINDOW.onpopstate;
  WINDOW.onpopstate = function ( ...args) {
    const to = WINDOW.location.href;
    // keep track of the current URL state, as we always receive only the updated state
    const from = lastHref;
    lastHref = to;
    const handlerData = { from, to };
    (0,_handlers_js__WEBPACK_IMPORTED_MODULE_1__.triggerHandlers)('history', handlerData);
    if (oldOnPopState) {
      // Apparently this can throw in Firefox when incorrectly implemented plugin is installed.
      // https://github.com/getsentry/sentry-javascript/issues/3344
      // https://github.com/bugsnag/bugsnag-js/issues/469
      try {
        return oldOnPopState.apply(this, args);
      } catch (_oO) {
        // no-empty
      }
    }
  };

  function historyReplacementFunction(originalHistoryFunction) {
    return function ( ...args) {
      const url = args.length > 2 ? args[2] : undefined;
      if (url) {
        // coerce to string (this is what pushState does)
        const from = lastHref;
        const to = String(url);
        // keep track of the current URL state, as we always receive only the updated state
        lastHref = to;
        const handlerData = { from, to };
        (0,_handlers_js__WEBPACK_IMPORTED_MODULE_1__.triggerHandlers)('history', handlerData);
      }
      return originalHistoryFunction.apply(this, args);
    };
  }

  (0,_object_js__WEBPACK_IMPORTED_MODULE_3__.fill)(WINDOW.history, 'pushState', historyReplacementFunction);
  (0,_object_js__WEBPACK_IMPORTED_MODULE_3__.fill)(WINDOW.history, 'replaceState', historyReplacementFunction);
}


//# sourceMappingURL=history.js.map


/***/ }),

/***/ "./node_modules/@sentry/utils/esm/instrument/xhr.js":
/*!**********************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/instrument/xhr.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SENTRY_XHR_DATA_KEY": () => (/* binding */ SENTRY_XHR_DATA_KEY),
/* harmony export */   "addXhrInstrumentationHandler": () => (/* binding */ addXhrInstrumentationHandler),
/* harmony export */   "instrumentXHR": () => (/* binding */ instrumentXHR)
/* harmony export */ });
/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../is.js */ "./node_modules/@sentry/utils/esm/is.js");
/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../object.js */ "./node_modules/@sentry/utils/esm/object.js");
/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../worldwide.js */ "./node_modules/@sentry/utils/esm/worldwide.js");
/* harmony import */ var _handlers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_handlers.js */ "./node_modules/@sentry/utils/esm/instrument/_handlers.js");





const WINDOW = _worldwide_js__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ ;

const SENTRY_XHR_DATA_KEY = '__sentry_xhr_v3__';

/**
 * Add an instrumentation handler for when an XHR request happens.
 * The handler function is called once when the request starts and once when it ends,
 * which can be identified by checking if it has an `endTimestamp`.
 *
 * Use at your own risk, this might break without changelog notice, only used internally.
 * @hidden
 */
function addXhrInstrumentationHandler(handler) {
  const type = 'xhr';
  (0,_handlers_js__WEBPACK_IMPORTED_MODULE_1__.addHandler)(type, handler);
  (0,_handlers_js__WEBPACK_IMPORTED_MODULE_1__.maybeInstrument)(type, instrumentXHR);
}

/** Exported only for tests. */
function instrumentXHR() {
  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
  if (!(WINDOW ).XMLHttpRequest) {
    return;
  }

  const xhrproto = XMLHttpRequest.prototype;

  (0,_object_js__WEBPACK_IMPORTED_MODULE_2__.fill)(xhrproto, 'open', function (originalOpen) {
    return function ( ...args) {
      const startTimestamp = Date.now();

      // open() should always be called with two or more arguments
      // But to be on the safe side, we actually validate this and bail out if we don't have a method & url
      const method = (0,_is_js__WEBPACK_IMPORTED_MODULE_3__.isString)(args[0]) ? args[0].toUpperCase() : undefined;
      const url = parseUrl(args[1]);

      if (!method || !url) {
        return originalOpen.apply(this, args);
      }

      this[SENTRY_XHR_DATA_KEY] = {
        method,
        url,
        request_headers: {},
      };

      // if Sentry key appears in URL, don't capture it as a request
      if (method === 'POST' && url.match(/sentry_key/)) {
        this.__sentry_own_request__ = true;
      }

      const onreadystatechangeHandler = () => {
        // For whatever reason, this is not the same instance here as from the outer method
        const xhrInfo = this[SENTRY_XHR_DATA_KEY];

        if (!xhrInfo) {
          return;
        }

        if (this.readyState === 4) {
          try {
            // touching statusCode in some platforms throws
            // an exception
            xhrInfo.status_code = this.status;
          } catch (e) {
            /* do nothing */
          }

          const handlerData = {
            args: [method, url],
            endTimestamp: Date.now(),
            startTimestamp,
            xhr: this,
          };
          (0,_handlers_js__WEBPACK_IMPORTED_MODULE_1__.triggerHandlers)('xhr', handlerData);
        }
      };

      if ('onreadystatechange' in this && typeof this.onreadystatechange === 'function') {
        (0,_object_js__WEBPACK_IMPORTED_MODULE_2__.fill)(this, 'onreadystatechange', function (original) {
          return function ( ...readyStateArgs) {
            onreadystatechangeHandler();
            return original.apply(this, readyStateArgs);
          };
        });
      } else {
        this.addEventListener('readystatechange', onreadystatechangeHandler);
      }

      // Intercepting `setRequestHeader` to access the request headers of XHR instance.
      // This will only work for user/library defined headers, not for the default/browser-assigned headers.
      // Request cookies are also unavailable for XHR, as `Cookie` header can't be defined by `setRequestHeader`.
      (0,_object_js__WEBPACK_IMPORTED_MODULE_2__.fill)(this, 'setRequestHeader', function (original) {
        return function ( ...setRequestHeaderArgs) {
          const [header, value] = setRequestHeaderArgs;

          const xhrInfo = this[SENTRY_XHR_DATA_KEY];

          if (xhrInfo && (0,_is_js__WEBPACK_IMPORTED_MODULE_3__.isString)(header) && (0,_is_js__WEBPACK_IMPORTED_MODULE_3__.isString)(value)) {
            xhrInfo.request_headers[header.toLowerCase()] = value;
          }

          return original.apply(this, setRequestHeaderArgs);
        };
      });

      return originalOpen.apply(this, args);
    };
  });

  (0,_object_js__WEBPACK_IMPORTED_MODULE_2__.fill)(xhrproto, 'send', function (originalSend) {
    return function ( ...args) {
      const sentryXhrData = this[SENTRY_XHR_DATA_KEY];

      if (!sentryXhrData) {
        return originalSend.apply(this, args);
      }

      if (args[0] !== undefined) {
        sentryXhrData.body = args[0];
      }

      const handlerData = {
        args: [sentryXhrData.method, sentryXhrData.url],
        startTimestamp: Date.now(),
        xhr: this,
      };
      (0,_handlers_js__WEBPACK_IMPORTED_MODULE_1__.triggerHandlers)('xhr', handlerData);

      return originalSend.apply(this, args);
    };
  });
}

function parseUrl(url) {
  if ((0,_is_js__WEBPACK_IMPORTED_MODULE_3__.isString)(url)) {
    return url;
  }

  try {
    // url can be a string or URL
    // but since URL is not available in IE11, we do not check for it,
    // but simply assume it is an URL and return `toString()` from it (which returns the full URL)
    // If that fails, we just return undefined
    return (url ).toString();
  } catch (e2) {} // eslint-disable-line no-empty

  return undefined;
}


//# sourceMappingURL=xhr.js.map


/***/ }),

/***/ "./node_modules/@sentry/utils/esm/is.js":
/*!**********************************************!*\
  !*** ./node_modules/@sentry/utils/esm/is.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isDOMError": () => (/* binding */ isDOMError),
/* harmony export */   "isDOMException": () => (/* binding */ isDOMException),
/* harmony export */   "isElement": () => (/* binding */ isElement),
/* harmony export */   "isError": () => (/* binding */ isError),
/* harmony export */   "isErrorEvent": () => (/* binding */ isErrorEvent),
/* harmony export */   "isEvent": () => (/* binding */ isEvent),
/* harmony export */   "isInstanceOf": () => (/* binding */ isInstanceOf),
/* harmony export */   "isNaN": () => (/* binding */ isNaN),
/* harmony export */   "isParameterizedString": () => (/* binding */ isParameterizedString),
/* harmony export */   "isPlainObject": () => (/* binding */ isPlainObject),
/* harmony export */   "isPrimitive": () => (/* binding */ isPrimitive),
/* harmony export */   "isRegExp": () => (/* binding */ isRegExp),
/* harmony export */   "isString": () => (/* binding */ isString),
/* harmony export */   "isSyntheticEvent": () => (/* binding */ isSyntheticEvent),
/* harmony export */   "isThenable": () => (/* binding */ isThenable),
/* harmony export */   "isVueViewModel": () => (/* binding */ isVueViewModel)
/* harmony export */ });
// eslint-disable-next-line @typescript-eslint/unbound-method
const objectToString = Object.prototype.toString;

/**
 * Checks whether given value's type is one of a few Error or Error-like
 * {@link isError}.
 *
 * @param wat A value to be checked.
 * @returns A boolean representing the result.
 */
function isError(wat) {
  switch (objectToString.call(wat)) {
    case '[object Error]':
    case '[object Exception]':
    case '[object DOMException]':
      return true;
    default:
      return isInstanceOf(wat, Error);
  }
}
/**
 * Checks whether given value is an instance of the given built-in class.
 *
 * @param wat The value to be checked
 * @param className
 * @returns A boolean representing the result.
 */
function isBuiltin(wat, className) {
  return objectToString.call(wat) === `[object ${className}]`;
}

/**
 * Checks whether given value's type is ErrorEvent
 * {@link isErrorEvent}.
 *
 * @param wat A value to be checked.
 * @returns A boolean representing the result.
 */
function isErrorEvent(wat) {
  return isBuiltin(wat, 'ErrorEvent');
}

/**
 * Checks whether given value's type is DOMError
 * {@link isDOMError}.
 *
 * @param wat A value to be checked.
 * @returns A boolean representing the result.
 */
function isDOMError(wat) {
  return isBuiltin(wat, 'DOMError');
}

/**
 * Checks whether given value's type is DOMException
 * {@link isDOMException}.
 *
 * @param wat A value to be checked.
 * @returns A boolean representing the result.
 */
function isDOMException(wat) {
  return isBuiltin(wat, 'DOMException');
}

/**
 * Checks whether given value's type is a string
 * {@link isString}.
 *
 * @param wat A value to be checked.
 * @returns A boolean representing the result.
 */
function isString(wat) {
  return isBuiltin(wat, 'String');
}

/**
 * Checks whether given string is parameterized
 * {@link isParameterizedString}.
 *
 * @param wat A value to be checked.
 * @returns A boolean representing the result.
 */
function isParameterizedString(wat) {
  return (
    typeof wat === 'object' &&
    wat !== null &&
    '__sentry_template_string__' in wat &&
    '__sentry_template_values__' in wat
  );
}

/**
 * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)
 * {@link isPrimitive}.
 *
 * @param wat A value to be checked.
 * @returns A boolean representing the result.
 */
function isPrimitive(wat) {
  return wat === null || isParameterizedString(wat) || (typeof wat !== 'object' && typeof wat !== 'function');
}

/**
 * Checks whether given value's type is an object literal, or a class instance.
 * {@link isPlainObject}.
 *
 * @param wat A value to be checked.
 * @returns A boolean representing the result.
 */
function isPlainObject(wat) {
  return isBuiltin(wat, 'Object');
}

/**
 * Checks whether given value's type is an Event instance
 * {@link isEvent}.
 *
 * @param wat A value to be checked.
 * @returns A boolean representing the result.
 */
function isEvent(wat) {
  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);
}

/**
 * Checks whether given value's type is an Element instance
 * {@link isElement}.
 *
 * @param wat A value to be checked.
 * @returns A boolean representing the result.
 */
function isElement(wat) {
  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);
}

/**
 * Checks whether given value's type is an regexp
 * {@link isRegExp}.
 *
 * @param wat A value to be checked.
 * @returns A boolean representing the result.
 */
function isRegExp(wat) {
  return isBuiltin(wat, 'RegExp');
}

/**
 * Checks whether given value has a then function.
 * @param wat A value to be checked.
 */
function isThenable(wat) {
  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
  return Boolean(wat && wat.then && typeof wat.then === 'function');
}

/**
 * Checks whether given value's type is a SyntheticEvent
 * {@link isSyntheticEvent}.
 *
 * @param wat A value to be checked.
 * @returns A boolean representing the result.
 */
function isSyntheticEvent(wat) {
  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;
}

/**
 * Checks whether given value is NaN
 * {@link isNaN}.
 *
 * @param wat A value to be checked.
 * @returns A boolean representing the result.
 */
function isNaN(wat) {
  return typeof wat === 'number' && wat !== wat;
}

/**
 * Checks whether given value's type is an instance of provided constructor.
 * {@link isInstanceOf}.
 *
 * @param wat A value to be checked.
 * @param base A constructor to be used in a check.
 * @returns A boolean representing the result.
 */
function isInstanceOf(wat, base) {
  try {
    return wat instanceof base;
  } catch (_e) {
    return false;
  }
}

/**
 * Checks whether given value's type is a Vue ViewModel.
 *
 * @param wat A value to be checked.
 * @returns A boolean representing the result.
 */
function isVueViewModel(wat) {
  // Not using Object.prototype.toString because in Vue 3 it would read the instance's Symbol(Symbol.toStringTag) property.
  return !!(typeof wat === 'object' && wat !== null && ((wat ).__isVue || (wat )._isVue));
}


//# sourceMappingURL=is.js.map


/***/ }),

/***/ "./node_modules/@sentry/utils/esm/logger.js":
/*!**************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/logger.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CONSOLE_LEVELS": () => (/* binding */ CONSOLE_LEVELS),
/* harmony export */   "consoleSandbox": () => (/* binding */ consoleSandbox),
/* harmony export */   "logger": () => (/* binding */ logger),
/* harmony export */   "originalConsoleMethods": () => (/* binding */ originalConsoleMethods)
/* harmony export */ });
/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./debug-build.js */ "./node_modules/@sentry/utils/esm/debug-build.js");
/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./worldwide.js */ "./node_modules/@sentry/utils/esm/worldwide.js");



/** Prefix for logging strings */
const PREFIX = 'Sentry Logger ';

const CONSOLE_LEVELS = [
  'debug',
  'info',
  'warn',
  'error',
  'log',
  'assert',
  'trace',
] ;

/** This may be mutated by the console instrumentation. */
const originalConsoleMethods

 = {};

/** JSDoc */

/**
 * Temporarily disable sentry console instrumentations.
 *
 * @param callback The function to run against the original `console` messages
 * @returns The results of the callback
 */
function consoleSandbox(callback) {
  if (!("console" in _worldwide_js__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ)) {
    return callback();
  }

  const console = _worldwide_js__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ.console ;
  const wrappedFuncs = {};

  const wrappedLevels = Object.keys(originalConsoleMethods) ;

  // Restore all wrapped console methods
  wrappedLevels.forEach(level => {
    const originalConsoleMethod = originalConsoleMethods[level] ;
    wrappedFuncs[level] = console[level] ;
    console[level] = originalConsoleMethod;
  });

  try {
    return callback();
  } finally {
    // Revert restoration to wrapped state
    wrappedLevels.forEach(level => {
      console[level] = wrappedFuncs[level] ;
    });
  }
}

function makeLogger() {
  let enabled = false;
  const logger = {
    enable: () => {
      enabled = true;
    },
    disable: () => {
      enabled = false;
    },
    isEnabled: () => enabled,
  };

  if (_debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD) {
    CONSOLE_LEVELS.forEach(name => {
      // eslint-disable-next-line @typescript-eslint/no-explicit-any
      logger[name] = (...args) => {
        if (enabled) {
          consoleSandbox(() => {
            _worldwide_js__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ.console[name](`${PREFIX}[${name}]:`, ...args);
          });
        }
      };
    });
  } else {
    CONSOLE_LEVELS.forEach(name => {
      logger[name] = () => undefined;
    });
  }

  return logger ;
}

const logger = makeLogger();


//# sourceMappingURL=logger.js.map


/***/ }),

/***/ "./node_modules/@sentry/utils/esm/memo.js":
/*!************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/memo.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "memoBuilder": () => (/* binding */ memoBuilder)
/* harmony export */ });
/* eslint-disable @typescript-eslint/no-unsafe-member-access */
/* eslint-disable @typescript-eslint/no-explicit-any */

/**
 * Helper to decycle json objects
 */
function memoBuilder() {
  const hasWeakSet = typeof WeakSet === 'function';
  const inner = hasWeakSet ? new WeakSet() : [];
  function memoize(obj) {
    if (hasWeakSet) {
      if (inner.has(obj)) {
        return true;
      }
      inner.add(obj);
      return false;
    }
    // eslint-disable-next-line @typescript-eslint/prefer-for-of
    for (let i = 0; i < inner.length; i++) {
      const value = inner[i];
      if (value === obj) {
        return true;
      }
    }
    inner.push(obj);
    return false;
  }

  function unmemoize(obj) {
    if (hasWeakSet) {
      inner.delete(obj);
    } else {
      for (let i = 0; i < inner.length; i++) {
        if (inner[i] === obj) {
          inner.splice(i, 1);
          break;
        }
      }
    }
  }
  return [memoize, unmemoize];
}


//# sourceMappingURL=memo.js.map


/***/ }),

/***/ "./node_modules/@sentry/utils/esm/misc.js":
/*!************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/misc.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "addContextToFrame": () => (/* binding */ addContextToFrame),
/* harmony export */   "addExceptionMechanism": () => (/* binding */ addExceptionMechanism),
/* harmony export */   "addExceptionTypeValue": () => (/* binding */ addExceptionTypeValue),
/* harmony export */   "arrayify": () => (/* binding */ arrayify),
/* harmony export */   "checkOrSetAlreadyCaught": () => (/* binding */ checkOrSetAlreadyCaught),
/* harmony export */   "getEventDescription": () => (/* binding */ getEventDescription),
/* harmony export */   "parseSemver": () => (/* binding */ parseSemver),
/* harmony export */   "uuid4": () => (/* binding */ uuid4)
/* harmony export */ });
/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./object.js */ "./node_modules/@sentry/utils/esm/object.js");
/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./string.js */ "./node_modules/@sentry/utils/esm/string.js");
/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./worldwide.js */ "./node_modules/@sentry/utils/esm/worldwide.js");




/**
 * UUID4 generator
 *
 * @returns string Generated UUID4.
 */
function uuid4() {
  const gbl = _worldwide_js__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ ;
  const crypto = gbl.crypto || gbl.msCrypto;

  let getRandomByte = () => Math.random() * 16;
  try {
    if (crypto && crypto.randomUUID) {
      return crypto.randomUUID().replace(/-/g, '');
    }
    if (crypto && crypto.getRandomValues) {
      getRandomByte = () => {
        // crypto.getRandomValues might return undefined instead of the typed array
        // in old Chromium versions (e.g. 23.0.1235.0 (151422))
        // However, `typedArray` is still filled in-place.
        // @see https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues#typedarray
        const typedArray = new Uint8Array(1);
        crypto.getRandomValues(typedArray);
        return typedArray[0];
      };
    }
  } catch (_) {
    // some runtimes can crash invoking crypto
    // https://github.com/getsentry/sentry-javascript/issues/8935
  }

  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523
  // Concatenating the following numbers as strings results in '10000000100040008000100000000000'
  return (([1e7] ) + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, c =>
    // eslint-disable-next-line no-bitwise
    ((c ) ^ ((getRandomByte() & 15) >> ((c ) / 4))).toString(16),
  );
}

function getFirstException(event) {
  return event.exception && event.exception.values ? event.exception.values[0] : undefined;
}

/**
 * Extracts either message or type+value from an event that can be used for user-facing logs
 * @returns event's description
 */
function getEventDescription(event) {
  const { message, event_id: eventId } = event;
  if (message) {
    return message;
  }

  const firstException = getFirstException(event);
  if (firstException) {
    if (firstException.type && firstException.value) {
      return `${firstException.type}: ${firstException.value}`;
    }
    return firstException.type || firstException.value || eventId || '<unknown>';
  }
  return eventId || '<unknown>';
}

/**
 * Adds exception values, type and value to an synthetic Exception.
 * @param event The event to modify.
 * @param value Value of the exception.
 * @param type Type of the exception.
 * @hidden
 */
function addExceptionTypeValue(event, value, type) {
  const exception = (event.exception = event.exception || {});
  const values = (exception.values = exception.values || []);
  const firstException = (values[0] = values[0] || {});
  if (!firstException.value) {
    firstException.value = value || '';
  }
  if (!firstException.type) {
    firstException.type = type || 'Error';
  }
}

/**
 * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.
 *
 * @param event The event to modify.
 * @param newMechanism Mechanism data to add to the event.
 * @hidden
 */
function addExceptionMechanism(event, newMechanism) {
  const firstException = getFirstException(event);
  if (!firstException) {
    return;
  }

  const defaultMechanism = { type: 'generic', handled: true };
  const currentMechanism = firstException.mechanism;
  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };

  if (newMechanism && 'data' in newMechanism) {
    const mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };
    firstException.mechanism.data = mergedData;
  }
}

// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string
const SEMVER_REGEXP =
  /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$/;

/**
 * Represents Semantic Versioning object
 */

/**
 * Parses input into a SemVer interface
 * @param input string representation of a semver version
 */
function parseSemver(input) {
  const match = input.match(SEMVER_REGEXP) || [];
  const major = parseInt(match[1], 10);
  const minor = parseInt(match[2], 10);
  const patch = parseInt(match[3], 10);
  return {
    buildmetadata: match[5],
    major: isNaN(major) ? undefined : major,
    minor: isNaN(minor) ? undefined : minor,
    patch: isNaN(patch) ? undefined : patch,
    prerelease: match[4],
  };
}

/**
 * This function adds context (pre/post/line) lines to the provided frame
 *
 * @param lines string[] containing all lines
 * @param frame StackFrame that will be mutated
 * @param linesOfContext number of context lines we want to add pre/post
 */
function addContextToFrame(lines, frame, linesOfContext = 5) {
  // When there is no line number in the frame, attaching context is nonsensical and will even break grouping
  if (frame.lineno === undefined) {
    return;
  }

  const maxLines = lines.length;
  const sourceLine = Math.max(Math.min(maxLines - 1, frame.lineno - 1), 0);

  frame.pre_context = lines
    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)
    .map((line) => (0,_string_js__WEBPACK_IMPORTED_MODULE_1__.snipLine)(line, 0));

  frame.context_line = (0,_string_js__WEBPACK_IMPORTED_MODULE_1__.snipLine)(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);

  frame.post_context = lines
    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)
    .map((line) => (0,_string_js__WEBPACK_IMPORTED_MODULE_1__.snipLine)(line, 0));
}

/**
 * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object
 * in question), and marks it captured if not.
 *
 * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and
 * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so
 * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because
 * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not
 * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This
 * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we
 * see it.
 *
 * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on
 * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent
 * object wrapper forms so that this check will always work. However, because we need to flag the exact object which
 * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification
 * must be done before the exception captured.
 *
 * @param A thrown exception to check or flag as having been seen
 * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)
 */
function checkOrSetAlreadyCaught(exception) {
  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
  if (exception && (exception ).__sentry_captured__) {
    return true;
  }

  try {
    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the
    // `ExtraErrorData` integration
    (0,_object_js__WEBPACK_IMPORTED_MODULE_2__.addNonEnumerableProperty)(exception , '__sentry_captured__', true);
  } catch (err) {
    // `exception` is a primitive, so we can't mark it seen
  }

  return false;
}

/**
 * Checks whether the given input is already an array, and if it isn't, wraps it in one.
 *
 * @param maybeArray Input to turn into an array, if necessary
 * @returns The input, if already an array, or an array with the input as the only element, if not
 */
function arrayify(maybeArray) {
  return Array.isArray(maybeArray) ? maybeArray : [maybeArray];
}


//# sourceMappingURL=misc.js.map


/***/ }),

/***/ "./node_modules/@sentry/utils/esm/node-stack-trace.js":
/*!************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/node-stack-trace.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "filenameIsInApp": () => (/* binding */ filenameIsInApp),
/* harmony export */   "node": () => (/* binding */ node)
/* harmony export */ });
/**
 * Does this filename look like it's part of the app code?
 */
function filenameIsInApp(filename, isNative = false) {
  const isInternal =
    isNative ||
    (filename &&
      // It's not internal if it's an absolute linux path
      !filename.startsWith('/') &&
      // It's not internal if it's an absolute windows path
      !filename.match(/^[A-Z]:/) &&
      // It's not internal if the path is starting with a dot
      !filename.startsWith('.') &&
      // It's not internal if the frame has a protocol. In node, this is usually the case if the file got pre-processed with a bundler like webpack
      !filename.match(/^[a-zA-Z]([a-zA-Z0-9.\-+])*:\/\//)); // Schema from: https://stackoverflow.com/a/3641782

  // in_app is all that's not an internal Node function or a module within node_modules
  // note that isNative appears to return true even for node core libraries
  // see https://github.com/getsentry/raven-node/issues/176

  return !isInternal && filename !== undefined && !filename.includes('node_modules/');
}

/** Node Stack line parser */
// eslint-disable-next-line complexity
function node(getModule) {
  const FILENAME_MATCH = /^\s*[-]{4,}$/;
  const FULL_MATCH = /at (?:async )?(?:(.+?)\s+\()?(?:(.+):(\d+):(\d+)?|([^)]+))\)?/;

  // eslint-disable-next-line complexity
  return (line) => {
    const lineMatch = line.match(FULL_MATCH);

    if (lineMatch) {
      let object;
      let method;
      let functionName;
      let typeName;
      let methodName;

      if (lineMatch[1]) {
        functionName = lineMatch[1];

        let methodStart = functionName.lastIndexOf('.');
        if (functionName[methodStart - 1] === '.') {
          methodStart--;
        }

        if (methodStart > 0) {
          object = functionName.slice(0, methodStart);
          method = functionName.slice(methodStart + 1);
          const objectEnd = object.indexOf('.Module');
          if (objectEnd > 0) {
            functionName = functionName.slice(objectEnd + 1);
            object = object.slice(0, objectEnd);
          }
        }
        typeName = undefined;
      }

      if (method) {
        typeName = object;
        methodName = method;
      }

      if (method === '<anonymous>') {
        methodName = undefined;
        functionName = undefined;
      }

      if (functionName === undefined) {
        methodName = methodName || '<anonymous>';
        functionName = typeName ? `${typeName}.${methodName}` : methodName;
      }

      let filename = lineMatch[2] && lineMatch[2].startsWith('file://') ? lineMatch[2].slice(7) : lineMatch[2];
      const isNative = lineMatch[5] === 'native';

      // If it's a Windows path, trim the leading slash so that `/C:/foo` becomes `C:/foo`
      if (filename && filename.match(/\/[A-Z]:/)) {
        filename = filename.slice(1);
      }

      if (!filename && lineMatch[5] && !isNative) {
        filename = lineMatch[5];
      }

      return {
        filename,
        module: getModule ? getModule(filename) : undefined,
        function: functionName,
        lineno: parseInt(lineMatch[3], 10) || undefined,
        colno: parseInt(lineMatch[4], 10) || undefined,
        in_app: filenameIsInApp(filename, isNative),
      };
    }

    if (line.match(FILENAME_MATCH)) {
      return {
        filename: line,
      };
    }

    return undefined;
  };
}


//# sourceMappingURL=node-stack-trace.js.map


/***/ }),

/***/ "./node_modules/@sentry/utils/esm/normalize.js":
/*!*****************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/normalize.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "normalize": () => (/* binding */ normalize),
/* harmony export */   "normalizeToSize": () => (/* binding */ normalizeToSize),
/* harmony export */   "normalizeUrlToBase": () => (/* binding */ normalizeUrlToBase),
/* harmony export */   "walk": () => (/* binding */ visit)
/* harmony export */ });
/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./is.js */ "./node_modules/@sentry/utils/esm/is.js");
/* harmony import */ var _memo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./memo.js */ "./node_modules/@sentry/utils/esm/memo.js");
/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./object.js */ "./node_modules/@sentry/utils/esm/object.js");
/* harmony import */ var _stacktrace_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./stacktrace.js */ "./node_modules/@sentry/utils/esm/stacktrace.js");





/**
 * Recursively normalizes the given object.
 *
 * - Creates a copy to prevent original input mutation
 * - Skips non-enumerable properties
 * - When stringifying, calls `toJSON` if implemented
 * - Removes circular references
 * - Translates non-serializable values (`undefined`/`NaN`/functions) to serializable format
 * - Translates known global objects/classes to a string representations
 * - Takes care of `Error` object serialization
 * - Optionally limits depth of final output
 * - Optionally limits number of properties/elements included in any single object/array
 *
 * @param input The object to be normalized.
 * @param depth The max depth to which to normalize the object. (Anything deeper stringified whole.)
 * @param maxProperties The max number of elements or properties to be included in any single array or
 * object in the normallized output.
 * @returns A normalized version of the object, or `"**non-serializable**"` if any errors are thrown during normalization.
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function normalize(input, depth = 100, maxProperties = +Infinity) {
  try {
    // since we're at the outermost level, we don't provide a key
    return visit('', input, depth, maxProperties);
  } catch (err) {
    return { ERROR: `**non-serializable** (${err})` };
  }
}

/** JSDoc */
function normalizeToSize(
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  object,
  // Default Node.js REPL depth
  depth = 3,
  // 100kB, as 200kB is max payload size, so half sounds reasonable
  maxSize = 100 * 1024,
) {
  const normalized = normalize(object, depth);

  if (jsonSize(normalized) > maxSize) {
    return normalizeToSize(object, depth - 1, maxSize);
  }

  return normalized ;
}

/**
 * Visits a node to perform normalization on it
 *
 * @param key The key corresponding to the given node
 * @param value The node to be visited
 * @param depth Optional number indicating the maximum recursion depth
 * @param maxProperties Optional maximum number of properties/elements included in any single object/array
 * @param memo Optional Memo class handling decycling
 */
function visit(
  key,
  value,
  depth = +Infinity,
  maxProperties = +Infinity,
  memo = (0,_memo_js__WEBPACK_IMPORTED_MODULE_0__.memoBuilder)(),
) {
  const [memoize, unmemoize] = memo;

  // Get the simple cases out of the way first
  if (
    value == null || // this matches null and undefined -> eqeq not eqeqeq
    (['number', 'boolean', 'string'].includes(typeof value) && !(0,_is_js__WEBPACK_IMPORTED_MODULE_1__.isNaN)(value))
  ) {
    return value ;
  }

  const stringified = stringifyValue(key, value);

  // Anything we could potentially dig into more (objects or arrays) will have come back as `"[object XXXX]"`.
  // Everything else will have already been serialized, so if we don't see that pattern, we're done.
  if (!stringified.startsWith('[object ')) {
    return stringified;
  }

  // From here on, we can assert that `value` is either an object or an array.

  // Do not normalize objects that we know have already been normalized. As a general rule, the
  // "__sentry_skip_normalization__" property should only be used sparingly and only should only be set on objects that
  // have already been normalized.
  if ((value )['__sentry_skip_normalization__']) {
    return value ;
  }

  // We can set `__sentry_override_normalization_depth__` on an object to ensure that from there
  // We keep a certain amount of depth.
  // This should be used sparingly, e.g. we use it for the redux integration to ensure we get a certain amount of state.
  const remainingDepth =
    typeof (value )['__sentry_override_normalization_depth__'] === 'number'
      ? ((value )['__sentry_override_normalization_depth__'] )
      : depth;

  // We're also done if we've reached the max depth
  if (remainingDepth === 0) {
    // At this point we know `serialized` is a string of the form `"[object XXXX]"`. Clean it up so it's just `"[XXXX]"`.
    return stringified.replace('object ', '');
  }

  // If we've already visited this branch, bail out, as it's circular reference. If not, note that we're seeing it now.
  if (memoize(value)) {
    return '[Circular ~]';
  }

  // If the value has a `toJSON` method, we call it to extract more information
  const valueWithToJSON = value ;
  if (valueWithToJSON && typeof valueWithToJSON.toJSON === 'function') {
    try {
      const jsonValue = valueWithToJSON.toJSON();
      // We need to normalize the return value of `.toJSON()` in case it has circular references
      return visit('', jsonValue, remainingDepth - 1, maxProperties, memo);
    } catch (err) {
      // pass (The built-in `toJSON` failed, but we can still try to do it ourselves)
    }
  }

  // At this point we know we either have an object or an array, we haven't seen it before, and we're going to recurse
  // because we haven't yet reached the max depth. Create an accumulator to hold the results of visiting each
  // property/entry, and keep track of the number of items we add to it.
  const normalized = (Array.isArray(value) ? [] : {}) ;
  let numAdded = 0;

  // Before we begin, convert`Error` and`Event` instances into plain objects, since some of each of their relevant
  // properties are non-enumerable and otherwise would get missed.
  const visitable = (0,_object_js__WEBPACK_IMPORTED_MODULE_2__.convertToPlainObject)(value );

  for (const visitKey in visitable) {
    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.
    if (!Object.prototype.hasOwnProperty.call(visitable, visitKey)) {
      continue;
    }

    if (numAdded >= maxProperties) {
      normalized[visitKey] = '[MaxProperties ~]';
      break;
    }

    // Recursively visit all the child nodes
    const visitValue = visitable[visitKey];
    normalized[visitKey] = visit(visitKey, visitValue, remainingDepth - 1, maxProperties, memo);

    numAdded++;
  }

  // Once we've visited all the branches, remove the parent from memo storage
  unmemoize(value);

  // Return accumulated values
  return normalized;
}

/* eslint-disable complexity */
/**
 * Stringify the given value. Handles various known special values and types.
 *
 * Not meant to be used on simple primitives which already have a string representation, as it will, for example, turn
 * the number 1231 into "[Object Number]", nor on `null`, as it will throw.
 *
 * @param value The value to stringify
 * @returns A stringified representation of the given value
 */
function stringifyValue(
  key,
  // this type is a tiny bit of a cheat, since this function does handle NaN (which is technically a number), but for
  // our internal use, it'll do
  value,
) {
  try {
    if (key === 'domain' && value && typeof value === 'object' && (value )._events) {
      return '[Domain]';
    }

    if (key === 'domainEmitter') {
      return '[DomainEmitter]';
    }

    // It's safe to use `global`, `window`, and `document` here in this manner, as we are asserting using `typeof` first
    // which won't throw if they are not present.

    if (typeof __webpack_require__.g !== 'undefined' && value === __webpack_require__.g) {
      return '[Global]';
    }

    // eslint-disable-next-line no-restricted-globals
    if (typeof window !== 'undefined' && value === window) {
      return '[Window]';
    }

    // eslint-disable-next-line no-restricted-globals
    if (typeof document !== 'undefined' && value === document) {
      return '[Document]';
    }

    if ((0,_is_js__WEBPACK_IMPORTED_MODULE_1__.isVueViewModel)(value)) {
      return '[VueViewModel]';
    }

    // React's SyntheticEvent thingy
    if ((0,_is_js__WEBPACK_IMPORTED_MODULE_1__.isSyntheticEvent)(value)) {
      return '[SyntheticEvent]';
    }

    if (typeof value === 'number' && value !== value) {
      return '[NaN]';
    }

    if (typeof value === 'function') {
      return `[Function: ${(0,_stacktrace_js__WEBPACK_IMPORTED_MODULE_3__.getFunctionName)(value)}]`;
    }

    if (typeof value === 'symbol') {
      return `[${String(value)}]`;
    }

    // stringified BigInts are indistinguishable from regular numbers, so we need to label them to avoid confusion
    if (typeof value === 'bigint') {
      return `[BigInt: ${String(value)}]`;
    }

    // Now that we've knocked out all the special cases and the primitives, all we have left are objects. Simply casting
    // them to strings means that instances of classes which haven't defined their `toStringTag` will just come out as
    // `"[object Object]"`. If we instead look at the constructor's name (which is the same as the name of the class),
    // we can make sure that only plain objects come out that way.
    const objName = getConstructorName(value);

    // Handle HTML Elements
    if (/^HTML(\w*)Element$/.test(objName)) {
      return `[HTMLElement: ${objName}]`;
    }

    return `[object ${objName}]`;
  } catch (err) {
    return `**non-serializable** (${err})`;
  }
}
/* eslint-enable complexity */

function getConstructorName(value) {
  const prototype = Object.getPrototypeOf(value);

  return prototype ? prototype.constructor.name : 'null prototype';
}

/** Calculates bytes size of input string */
function utf8Length(value) {
  // eslint-disable-next-line no-bitwise
  return ~-encodeURI(value).split(/%..|./).length;
}

/** Calculates bytes size of input object */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function jsonSize(value) {
  return utf8Length(JSON.stringify(value));
}

/**
 * Normalizes URLs in exceptions and stacktraces to a base path so Sentry can fingerprint
 * across platforms and working directory.
 *
 * @param url The URL to be normalized.
 * @param basePath The application base path.
 * @returns The normalized URL.
 */
function normalizeUrlToBase(url, basePath) {
  const escapedBase = basePath
    // Backslash to forward
    .replace(/\\/g, '/')
    // Escape RegExp special characters
    .replace(/[|\\{}()[\]^$+*?.]/g, '\\$&');

  let newUrl = url;
  try {
    newUrl = decodeURI(url);
  } catch (_Oo) {
    // Sometime this breaks
  }
  return (
    newUrl
      .replace(/\\/g, '/')
      .replace(/webpack:\/?/g, '') // Remove intermediate base path
      // eslint-disable-next-line @sentry-internal/sdk/no-regexp-constructor
      .replace(new RegExp(`(file://)?/*${escapedBase}/*`, 'ig'), 'app:///')
  );
}


//# sourceMappingURL=normalize.js.map


/***/ }),

/***/ "./node_modules/@sentry/utils/esm/object.js":
/*!**************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/object.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "addNonEnumerableProperty": () => (/* binding */ addNonEnumerableProperty),
/* harmony export */   "convertToPlainObject": () => (/* binding */ convertToPlainObject),
/* harmony export */   "dropUndefinedKeys": () => (/* binding */ dropUndefinedKeys),
/* harmony export */   "extractExceptionKeysForMessage": () => (/* binding */ extractExceptionKeysForMessage),
/* harmony export */   "fill": () => (/* binding */ fill),
/* harmony export */   "getOriginalFunction": () => (/* binding */ getOriginalFunction),
/* harmony export */   "markFunctionWrapped": () => (/* binding */ markFunctionWrapped),
/* harmony export */   "objectify": () => (/* binding */ objectify),
/* harmony export */   "urlEncode": () => (/* binding */ urlEncode)
/* harmony export */ });
/* harmony import */ var _browser_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./browser.js */ "./node_modules/@sentry/utils/esm/browser.js");
/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./debug-build.js */ "./node_modules/@sentry/utils/esm/debug-build.js");
/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./is.js */ "./node_modules/@sentry/utils/esm/is.js");
/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./logger.js */ "./node_modules/@sentry/utils/esm/logger.js");
/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./string.js */ "./node_modules/@sentry/utils/esm/string.js");






/**
 * Replace a method in an object with a wrapped version of itself.
 *
 * @param source An object that contains a method to be wrapped.
 * @param name The name of the method to be wrapped.
 * @param replacementFactory A higher-order function that takes the original version of the given method and returns a
 * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to
 * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other
 * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.
 * @returns void
 */
function fill(source, name, replacementFactory) {
  if (!(name in source)) {
    return;
  }

  const original = source[name] ;
  const wrapped = replacementFactory(original) ;

  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work
  // otherwise it'll throw "TypeError: Object.defineProperties called on non-object"
  if (typeof wrapped === 'function') {
    markFunctionWrapped(wrapped, original);
  }

  source[name] = wrapped;
}

/**
 * Defines a non-enumerable property on the given object.
 *
 * @param obj The object on which to set the property
 * @param name The name of the property to be set
 * @param value The value to which to set the property
 */
function addNonEnumerableProperty(obj, name, value) {
  try {
    Object.defineProperty(obj, name, {
      // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it
      value: value,
      writable: true,
      configurable: true,
    });
  } catch (o_O) {
    _debug_build_js__WEBPACK_IMPORTED_MODULE_0__.DEBUG_BUILD && _logger_js__WEBPACK_IMPORTED_MODULE_1__.logger.log(`Failed to add non-enumerable property "${name}" to object`, obj);
  }
}

/**
 * Remembers the original function on the wrapped function and
 * patches up the prototype.
 *
 * @param wrapped the wrapper function
 * @param original the original function that gets wrapped
 */
function markFunctionWrapped(wrapped, original) {
  try {
    const proto = original.prototype || {};
    wrapped.prototype = original.prototype = proto;
    addNonEnumerableProperty(wrapped, '__sentry_original__', original);
  } catch (o_O) {} // eslint-disable-line no-empty
}

/**
 * This extracts the original function if available.  See
 * `markFunctionWrapped` for more information.
 *
 * @param func the function to unwrap
 * @returns the unwrapped version of the function if available.
 */
function getOriginalFunction(func) {
  return func.__sentry_original__;
}

/**
 * Encodes given object into url-friendly format
 *
 * @param object An object that contains serializable values
 * @returns string Encoded
 */
function urlEncode(object) {
  return Object.keys(object)
    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`)
    .join('&');
}

/**
 * Transforms any `Error` or `Event` into a plain object with all of their enumerable properties, and some of their
 * non-enumerable properties attached.
 *
 * @param value Initial source that we have to transform in order for it to be usable by the serializer
 * @returns An Event or Error turned into an object - or the value argurment itself, when value is neither an Event nor
 *  an Error.
 */
function convertToPlainObject(
  value,
)

 {
  if ((0,_is_js__WEBPACK_IMPORTED_MODULE_2__.isError)(value)) {
    return {
      message: value.message,
      name: value.name,
      stack: value.stack,
      ...getOwnProperties(value),
    };
  } else if ((0,_is_js__WEBPACK_IMPORTED_MODULE_2__.isEvent)(value)) {
    const newObj

 = {
      type: value.type,
      target: serializeEventTarget(value.target),
      currentTarget: serializeEventTarget(value.currentTarget),
      ...getOwnProperties(value),
    };

    if (typeof CustomEvent !== 'undefined' && (0,_is_js__WEBPACK_IMPORTED_MODULE_2__.isInstanceOf)(value, CustomEvent)) {
      newObj.detail = value.detail;
    }

    return newObj;
  } else {
    return value;
  }
}

/** Creates a string representation of the target of an `Event` object */
function serializeEventTarget(target) {
  try {
    return (0,_is_js__WEBPACK_IMPORTED_MODULE_2__.isElement)(target) ? (0,_browser_js__WEBPACK_IMPORTED_MODULE_3__.htmlTreeAsString)(target) : Object.prototype.toString.call(target);
  } catch (_oO) {
    return '<unknown>';
  }
}

/** Filters out all but an object's own properties */
function getOwnProperties(obj) {
  if (typeof obj === 'object' && obj !== null) {
    const extractedProps = {};
    for (const property in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, property)) {
        extractedProps[property] = (obj )[property];
      }
    }
    return extractedProps;
  } else {
    return {};
  }
}

/**
 * Given any captured exception, extract its keys and create a sorted
 * and truncated list that will be used inside the event message.
 * eg. `Non-error exception captured with keys: foo, bar, baz`
 */
function extractExceptionKeysForMessage(exception, maxLength = 40) {
  const keys = Object.keys(convertToPlainObject(exception));
  keys.sort();

  if (!keys.length) {
    return '[object has no keys]';
  }

  if (keys[0].length >= maxLength) {
    return (0,_string_js__WEBPACK_IMPORTED_MODULE_4__.truncate)(keys[0], maxLength);
  }

  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {
    const serialized = keys.slice(0, includedKeys).join(', ');
    if (serialized.length > maxLength) {
      continue;
    }
    if (includedKeys === keys.length) {
      return serialized;
    }
    return (0,_string_js__WEBPACK_IMPORTED_MODULE_4__.truncate)(serialized, maxLength);
  }

  return '';
}

/**
 * Given any object, return a new object having removed all fields whose value was `undefined`.
 * Works recursively on objects and arrays.
 *
 * Attention: This function keeps circular references in the returned object.
 */
function dropUndefinedKeys(inputValue) {
  // This map keeps track of what already visited nodes map to.
  // Our Set - based memoBuilder doesn't work here because we want to the output object to have the same circular
  // references as the input object.
  const memoizationMap = new Map();

  // This function just proxies `_dropUndefinedKeys` to keep the `memoBuilder` out of this function's API
  return _dropUndefinedKeys(inputValue, memoizationMap);
}

function _dropUndefinedKeys(inputValue, memoizationMap) {
  if (isPojo(inputValue)) {
    // If this node has already been visited due to a circular reference, return the object it was mapped to in the new object
    const memoVal = memoizationMap.get(inputValue);
    if (memoVal !== undefined) {
      return memoVal ;
    }

    const returnValue = {};
    // Store the mapping of this value in case we visit it again, in case of circular data
    memoizationMap.set(inputValue, returnValue);

    for (const key of Object.keys(inputValue)) {
      if (typeof inputValue[key] !== 'undefined') {
        returnValue[key] = _dropUndefinedKeys(inputValue[key], memoizationMap);
      }
    }

    return returnValue ;
  }

  if (Array.isArray(inputValue)) {
    // If this node has already been visited due to a circular reference, return the array it was mapped to in the new object
    const memoVal = memoizationMap.get(inputValue);
    if (memoVal !== undefined) {
      return memoVal ;
    }

    const returnValue = [];
    // Store the mapping of this value in case we visit it again, in case of circular data
    memoizationMap.set(inputValue, returnValue);

    inputValue.forEach((item) => {
      returnValue.push(_dropUndefinedKeys(item, memoizationMap));
    });

    return returnValue ;
  }

  return inputValue;
}

function isPojo(input) {
  if (!(0,_is_js__WEBPACK_IMPORTED_MODULE_2__.isPlainObject)(input)) {
    return false;
  }

  try {
    const name = (Object.getPrototypeOf(input) ).constructor.name;
    return !name || name === 'Object';
  } catch (e) {
    return true;
  }
}

/**
 * Ensure that something is an object.
 *
 * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper
 * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.
 *
 * @param wat The subject of the objectification
 * @returns A version of `wat` which can safely be used with `Object` class methods
 */
function objectify(wat) {
  let objectified;
  switch (true) {
    case wat === undefined || wat === null:
      objectified = new String(wat);
      break;

    // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason
    // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as
    // an object in order to wrap it.
    case typeof wat === 'symbol' || typeof wat === 'bigint':
      objectified = Object(wat);
      break;

    // this will catch the remaining primitives: `String`, `Number`, and `Boolean`
    case (0,_is_js__WEBPACK_IMPORTED_MODULE_2__.isPrimitive)(wat):
      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
      objectified = new (wat ).constructor(wat);
      break;

    // by process of elimination, at this point we know that `wat` must already be an object
    default:
      objectified = wat;
      break;
  }
  return objectified;
}


//# sourceMappingURL=object.js.map


/***/ }),

/***/ "./node_modules/@sentry/utils/esm/promisebuffer.js":
/*!*********************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/promisebuffer.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "makePromiseBuffer": () => (/* binding */ makePromiseBuffer)
/* harmony export */ });
/* harmony import */ var _error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./error.js */ "./node_modules/@sentry/utils/esm/error.js");
/* harmony import */ var _syncpromise_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./syncpromise.js */ "./node_modules/@sentry/utils/esm/syncpromise.js");



/**
 * Creates an new PromiseBuffer object with the specified limit
 * @param limit max number of promises that can be stored in the buffer
 */
function makePromiseBuffer(limit) {
  const buffer = [];

  function isReady() {
    return limit === undefined || buffer.length < limit;
  }

  /**
   * Remove a promise from the queue.
   *
   * @param task Can be any PromiseLike<T>
   * @returns Removed promise.
   */
  function remove(task) {
    return buffer.splice(buffer.indexOf(task), 1)[0];
  }

  /**
   * Add a promise (representing an in-flight action) to the queue, and set it to remove itself on fulfillment.
   *
   * @param taskProducer A function producing any PromiseLike<T>; In previous versions this used to be `task:
   *        PromiseLike<T>`, but under that model, Promises were instantly created on the call-site and their executor
   *        functions therefore ran immediately. Thus, even if the buffer was full, the action still happened. By
   *        requiring the promise to be wrapped in a function, we can defer promise creation until after the buffer
   *        limit check.
   * @returns The original promise.
   */
  function add(taskProducer) {
    if (!isReady()) {
      return (0,_syncpromise_js__WEBPACK_IMPORTED_MODULE_0__.rejectedSyncPromise)(new _error_js__WEBPACK_IMPORTED_MODULE_1__.SentryError('Not adding Promise because buffer limit was reached.'));
    }

    // start the task and add its promise to the queue
    const task = taskProducer();
    if (buffer.indexOf(task) === -1) {
      buffer.push(task);
    }
    void task
      .then(() => remove(task))
      // Use `then(null, rejectionHandler)` rather than `catch(rejectionHandler)` so that we can use `PromiseLike`
      // rather than `Promise`. `PromiseLike` doesn't have a `.catch` method, making its polyfill smaller. (ES5 didn't
      // have promises, so TS has to polyfill when down-compiling.)
      .then(null, () =>
        remove(task).then(null, () => {
          // We have to add another catch here because `remove()` starts a new promise chain.
        }),
      );
    return task;
  }

  /**
   * Wait for all promises in the queue to resolve or for timeout to expire, whichever comes first.
   *
   * @param timeout The time, in ms, after which to resolve to `false` if the queue is still non-empty. Passing `0` (or
   * not passing anything) will make the promise wait as long as it takes for the queue to drain before resolving to
   * `true`.
   * @returns A promise which will resolve to `true` if the queue is already empty or drains before the timeout, and
   * `false` otherwise
   */
  function drain(timeout) {
    return new _syncpromise_js__WEBPACK_IMPORTED_MODULE_0__.SyncPromise((resolve, reject) => {
      let counter = buffer.length;

      if (!counter) {
        return resolve(true);
      }

      // wait for `timeout` ms and then resolve to `false` (if not cancelled first)
      const capturedSetTimeout = setTimeout(() => {
        if (timeout && timeout > 0) {
          resolve(false);
        }
      }, timeout);

      // if all promises resolve in time, cancel the timer and resolve to `true`
      buffer.forEach(item => {
        void (0,_syncpromise_js__WEBPACK_IMPORTED_MODULE_0__.resolvedSyncPromise)(item).then(() => {
          if (!--counter) {
            clearTimeout(capturedSetTimeout);
            resolve(true);
          }
        }, reject);
      });
    });
  }

  return {
    $: buffer,
    add,
    drain,
  };
}


//# sourceMappingURL=promisebuffer.js.map


/***/ }),

/***/ "./node_modules/@sentry/utils/esm/ratelimit.js":
/*!*****************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/ratelimit.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DEFAULT_RETRY_AFTER": () => (/* binding */ DEFAULT_RETRY_AFTER),
/* harmony export */   "disabledUntil": () => (/* binding */ disabledUntil),
/* harmony export */   "isRateLimited": () => (/* binding */ isRateLimited),
/* harmony export */   "parseRetryAfterHeader": () => (/* binding */ parseRetryAfterHeader),
/* harmony export */   "updateRateLimits": () => (/* binding */ updateRateLimits)
/* harmony export */ });
// Intentionally keeping the key broad, as we don't know for sure what rate limit headers get returned from backend

const DEFAULT_RETRY_AFTER = 60 * 1000; // 60 seconds

/**
 * Extracts Retry-After value from the request header or returns default value
 * @param header string representation of 'Retry-After' header
 * @param now current unix timestamp
 *
 */
function parseRetryAfterHeader(header, now = Date.now()) {
  const headerDelay = parseInt(`${header}`, 10);
  if (!isNaN(headerDelay)) {
    return headerDelay * 1000;
  }

  const headerDate = Date.parse(`${header}`);
  if (!isNaN(headerDate)) {
    return headerDate - now;
  }

  return DEFAULT_RETRY_AFTER;
}

/**
 * Gets the time that the given category is disabled until for rate limiting.
 * In case no category-specific limit is set but a general rate limit across all categories is active,
 * that time is returned.
 *
 * @return the time in ms that the category is disabled until or 0 if there's no active rate limit.
 */
function disabledUntil(limits, category) {
  return limits[category] || limits.all || 0;
}

/**
 * Checks if a category is rate limited
 */
function isRateLimited(limits, category, now = Date.now()) {
  return disabledUntil(limits, category) > now;
}

/**
 * Update ratelimits from incoming headers.
 *
 * @return the updated RateLimits object.
 */
function updateRateLimits(
  limits,
  { statusCode, headers },
  now = Date.now(),
) {
  const updatedRateLimits = {
    ...limits,
  };

  // "The name is case-insensitive."
  // https://developer.mozilla.org/en-US/docs/Web/API/Headers/get
  const rateLimitHeader = headers && headers['x-sentry-rate-limits'];
  const retryAfterHeader = headers && headers['retry-after'];

  if (rateLimitHeader) {
    /**
     * rate limit headers are of the form
     *     <header>,<header>,..
     * where each <header> is of the form
     *     <retry_after>: <categories>: <scope>: <reason_code>
     * where
     *     <retry_after> is a delay in seconds
     *     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form
     *         <category>;<category>;...
     *     <scope> is what's being limited (org, project, or key) - ignored by SDK
     *     <reason_code> is an arbitrary string like "org_quota" - ignored by SDK
     */
    for (const limit of rateLimitHeader.trim().split(',')) {
      const [retryAfter, categories] = limit.split(':', 2);
      const headerDelay = parseInt(retryAfter, 10);
      const delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default
      if (!categories) {
        updatedRateLimits.all = now + delay;
      } else {
        for (const category of categories.split(';')) {
          updatedRateLimits[category] = now + delay;
        }
      }
    }
  } else if (retryAfterHeader) {
    updatedRateLimits.all = now + parseRetryAfterHeader(retryAfterHeader, now);
  } else if (statusCode === 429) {
    updatedRateLimits.all = now + 60 * 1000;
  }

  return updatedRateLimits;
}


//# sourceMappingURL=ratelimit.js.map


/***/ }),

/***/ "./node_modules/@sentry/utils/esm/severity.js":
/*!****************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/severity.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "severityFromString": () => (/* binding */ severityFromString),
/* harmony export */   "severityLevelFromString": () => (/* binding */ severityLevelFromString),
/* harmony export */   "validSeverityLevels": () => (/* binding */ validSeverityLevels)
/* harmony export */ });
// Note: Ideally the `SeverityLevel` type would be derived from `validSeverityLevels`, but that would mean either
//
// a) moving `validSeverityLevels` to `@sentry/types`,
// b) moving the`SeverityLevel` type here, or
// c) importing `validSeverityLevels` from here into `@sentry/types`.
//
// Option A would make `@sentry/types` a runtime dependency of `@sentry/utils` (not good), and options B and C would
// create a circular dependency between `@sentry/types` and `@sentry/utils` (also not good). So a TODO accompanying the
// type, reminding anyone who changes it to change this list also, will have to do.

const validSeverityLevels = ['fatal', 'error', 'warning', 'log', 'info', 'debug'];

/**
 * Converts a string-based level into a member of the deprecated {@link Severity} enum.
 *
 * @deprecated `severityFromString` is deprecated. Please use `severityLevelFromString` instead.
 *
 * @param level String representation of Severity
 * @returns Severity
 */
function severityFromString(level) {
  return severityLevelFromString(level) ;
}

/**
 * Converts a string-based level into a `SeverityLevel`, normalizing it along the way.
 *
 * @param level String representation of desired `SeverityLevel`.
 * @returns The `SeverityLevel` corresponding to the given string, or 'log' if the string isn't a valid level.
 */
function severityLevelFromString(level) {
  return (level === 'warn' ? 'warning' : validSeverityLevels.includes(level) ? level : 'log') ;
}


//# sourceMappingURL=severity.js.map


/***/ }),

/***/ "./node_modules/@sentry/utils/esm/stacktrace.js":
/*!******************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/stacktrace.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createStackParser": () => (/* binding */ createStackParser),
/* harmony export */   "filenameIsInApp": () => (/* reexport safe */ _node_stack_trace_js__WEBPACK_IMPORTED_MODULE_0__.filenameIsInApp),
/* harmony export */   "getFunctionName": () => (/* binding */ getFunctionName),
/* harmony export */   "nodeStackLineParser": () => (/* binding */ nodeStackLineParser),
/* harmony export */   "stackParserFromStackParserOptions": () => (/* binding */ stackParserFromStackParserOptions),
/* harmony export */   "stripSentryFramesAndReverse": () => (/* binding */ stripSentryFramesAndReverse)
/* harmony export */ });
/* harmony import */ var _node_stack_trace_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node-stack-trace.js */ "./node_modules/@sentry/utils/esm/node-stack-trace.js");



const STACKTRACE_FRAME_LIMIT = 50;
// Used to sanitize webpack (error: *) wrapped stack errors
const WEBPACK_ERROR_REGEXP = /\(error: (.*)\)/;
const STRIP_FRAME_REGEXP = /captureMessage|captureException/;

/**
 * Creates a stack parser with the supplied line parsers
 *
 * StackFrames are returned in the correct order for Sentry Exception
 * frames and with Sentry SDK internal frames removed from the top and bottom
 *
 */
function createStackParser(...parsers) {
  const sortedParsers = parsers.sort((a, b) => a[0] - b[0]).map(p => p[1]);

  return (stack, skipFirst = 0) => {
    const frames = [];
    const lines = stack.split('\n');

    for (let i = skipFirst; i < lines.length; i++) {
      const line = lines[i];
      // Ignore lines over 1kb as they are unlikely to be stack frames.
      // Many of the regular expressions use backtracking which results in run time that increases exponentially with
      // input size. Huge strings can result in hangs/Denial of Service:
      // https://github.com/getsentry/sentry-javascript/issues/2286
      if (line.length > 1024) {
        continue;
      }

      // https://github.com/getsentry/sentry-javascript/issues/5459
      // Remove webpack (error: *) wrappers
      const cleanedLine = WEBPACK_ERROR_REGEXP.test(line) ? line.replace(WEBPACK_ERROR_REGEXP, '$1') : line;

      // https://github.com/getsentry/sentry-javascript/issues/7813
      // Skip Error: lines
      if (cleanedLine.match(/\S*Error: /)) {
        continue;
      }

      for (const parser of sortedParsers) {
        const frame = parser(cleanedLine);

        if (frame) {
          frames.push(frame);
          break;
        }
      }

      if (frames.length >= STACKTRACE_FRAME_LIMIT) {
        break;
      }
    }

    return stripSentryFramesAndReverse(frames);
  };
}

/**
 * Gets a stack parser implementation from Options.stackParser
 * @see Options
 *
 * If options contains an array of line parsers, it is converted into a parser
 */
function stackParserFromStackParserOptions(stackParser) {
  if (Array.isArray(stackParser)) {
    return createStackParser(...stackParser);
  }
  return stackParser;
}

/**
 * Removes Sentry frames from the top and bottom of the stack if present and enforces a limit of max number of frames.
 * Assumes stack input is ordered from top to bottom and returns the reverse representation so call site of the
 * function that caused the crash is the last frame in the array.
 * @hidden
 */
function stripSentryFramesAndReverse(stack) {
  if (!stack.length) {
    return [];
  }

  const localStack = Array.from(stack);

  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)
  if (/sentryWrapped/.test(localStack[localStack.length - 1].function || '')) {
    localStack.pop();
  }

  // Reversing in the middle of the procedure allows us to just pop the values off the stack
  localStack.reverse();

  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)
  if (STRIP_FRAME_REGEXP.test(localStack[localStack.length - 1].function || '')) {
    localStack.pop();

    // When using synthetic events, we will have a 2 levels deep stack, as `new Error('Sentry syntheticException')`
    // is produced within the hub itself, making it:
    //
    //   Sentry.captureException()
    //   getCurrentHub().captureException()
    //
    // instead of just the top `Sentry` call itself.
    // This forces us to possibly strip an additional frame in the exact same was as above.
    if (STRIP_FRAME_REGEXP.test(localStack[localStack.length - 1].function || '')) {
      localStack.pop();
    }
  }

  return localStack.slice(0, STACKTRACE_FRAME_LIMIT).map(frame => ({
    ...frame,
    filename: frame.filename || localStack[localStack.length - 1].filename,
    function: frame.function || '?',
  }));
}

const defaultFunctionName = '<anonymous>';

/**
 * Safely extract function name from itself
 */
function getFunctionName(fn) {
  try {
    if (!fn || typeof fn !== 'function') {
      return defaultFunctionName;
    }
    return fn.name || defaultFunctionName;
  } catch (e) {
    // Just accessing custom props in some Selenium environments
    // can cause a "Permission denied" exception (see raven-js#495).
    return defaultFunctionName;
  }
}

/**
 * Node.js stack line parser
 *
 * This is in @sentry/utils so it can be used from the Electron SDK in the browser for when `nodeIntegration == true`.
 * This allows it to be used without referencing or importing any node specific code which causes bundlers to complain
 */
function nodeStackLineParser(getModule) {
  return [90, (0,_node_stack_trace_js__WEBPACK_IMPORTED_MODULE_0__.node)(getModule)];
}


//# sourceMappingURL=stacktrace.js.map


/***/ }),

/***/ "./node_modules/@sentry/utils/esm/string.js":
/*!**************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/string.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isMatchingPattern": () => (/* binding */ isMatchingPattern),
/* harmony export */   "safeJoin": () => (/* binding */ safeJoin),
/* harmony export */   "snipLine": () => (/* binding */ snipLine),
/* harmony export */   "stringMatchesSomePattern": () => (/* binding */ stringMatchesSomePattern),
/* harmony export */   "truncate": () => (/* binding */ truncate)
/* harmony export */ });
/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is.js */ "./node_modules/@sentry/utils/esm/is.js");


/**
 * Truncates given string to the maximum characters count
 *
 * @param str An object that contains serializable values
 * @param max Maximum number of characters in truncated string (0 = unlimited)
 * @returns string Encoded
 */
function truncate(str, max = 0) {
  if (typeof str !== 'string' || max === 0) {
    return str;
  }
  return str.length <= max ? str : `${str.slice(0, max)}...`;
}

/**
 * This is basically just `trim_line` from
 * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67
 *
 * @param str An object that contains serializable values
 * @param max Maximum number of characters in truncated string
 * @returns string Encoded
 */
function snipLine(line, colno) {
  let newLine = line;
  const lineLength = newLine.length;
  if (lineLength <= 150) {
    return newLine;
  }
  if (colno > lineLength) {
    // eslint-disable-next-line no-param-reassign
    colno = lineLength;
  }

  let start = Math.max(colno - 60, 0);
  if (start < 5) {
    start = 0;
  }

  let end = Math.min(start + 140, lineLength);
  if (end > lineLength - 5) {
    end = lineLength;
  }
  if (end === lineLength) {
    start = Math.max(end - 140, 0);
  }

  newLine = newLine.slice(start, end);
  if (start > 0) {
    newLine = `'{snip} ${newLine}`;
  }
  if (end < lineLength) {
    newLine += ' {snip}';
  }

  return newLine;
}

/**
 * Join values in array
 * @param input array of values to be joined together
 * @param delimiter string to be placed in-between values
 * @returns Joined values
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function safeJoin(input, delimiter) {
  if (!Array.isArray(input)) {
    return '';
  }

  const output = [];
  // eslint-disable-next-line @typescript-eslint/prefer-for-of
  for (let i = 0; i < input.length; i++) {
    const value = input[i];
    try {
      // This is a hack to fix a Vue3-specific bug that causes an infinite loop of
      // console warnings. This happens when a Vue template is rendered with
      // an undeclared variable, which we try to stringify, ultimately causing
      // Vue to issue another warning which repeats indefinitely.
      // see: https://github.com/getsentry/sentry-javascript/pull/8981
      if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isVueViewModel)(value)) {
        output.push('[VueViewModel]');
      } else {
        output.push(String(value));
      }
    } catch (e) {
      output.push('[value cannot be serialized]');
    }
  }

  return output.join(delimiter);
}

/**
 * Checks if the given value matches a regex or string
 *
 * @param value The string to test
 * @param pattern Either a regex or a string against which `value` will be matched
 * @param requireExactStringMatch If true, `value` must match `pattern` exactly. If false, `value` will match
 * `pattern` if it contains `pattern`. Only applies to string-type patterns.
 */
function isMatchingPattern(
  value,
  pattern,
  requireExactStringMatch = false,
) {
  if (!(0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isString)(value)) {
    return false;
  }

  if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isRegExp)(pattern)) {
    return pattern.test(value);
  }
  if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isString)(pattern)) {
    return requireExactStringMatch ? value === pattern : value.includes(pattern);
  }

  return false;
}

/**
 * Test the given string against an array of strings and regexes. By default, string matching is done on a
 * substring-inclusion basis rather than a strict equality basis
 *
 * @param testString The string to test
 * @param patterns The patterns against which to test the string
 * @param requireExactStringMatch If true, `testString` must match one of the given string patterns exactly in order to
 * count. If false, `testString` will match a string pattern if it contains that pattern.
 * @returns
 */
function stringMatchesSomePattern(
  testString,
  patterns = [],
  requireExactStringMatch = false,
) {
  return patterns.some(pattern => isMatchingPattern(testString, pattern, requireExactStringMatch));
}


//# sourceMappingURL=string.js.map


/***/ }),

/***/ "./node_modules/@sentry/utils/esm/supports.js":
/*!****************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/supports.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isNativeFetch": () => (/* binding */ isNativeFetch),
/* harmony export */   "supportsDOMError": () => (/* binding */ supportsDOMError),
/* harmony export */   "supportsDOMException": () => (/* binding */ supportsDOMException),
/* harmony export */   "supportsErrorEvent": () => (/* binding */ supportsErrorEvent),
/* harmony export */   "supportsFetch": () => (/* binding */ supportsFetch),
/* harmony export */   "supportsNativeFetch": () => (/* binding */ supportsNativeFetch),
/* harmony export */   "supportsReferrerPolicy": () => (/* binding */ supportsReferrerPolicy),
/* harmony export */   "supportsReportingObserver": () => (/* binding */ supportsReportingObserver)
/* harmony export */ });
/* harmony import */ var _debug_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./debug-build.js */ "./node_modules/@sentry/utils/esm/debug-build.js");
/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./logger.js */ "./node_modules/@sentry/utils/esm/logger.js");
/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./worldwide.js */ "./node_modules/@sentry/utils/esm/worldwide.js");




// eslint-disable-next-line deprecation/deprecation
const WINDOW = (0,_worldwide_js__WEBPACK_IMPORTED_MODULE_0__.getGlobalObject)();

/**
 * Tells whether current environment supports ErrorEvent objects
 * {@link supportsErrorEvent}.
 *
 * @returns Answer to the given question.
 */
function supportsErrorEvent() {
  try {
    new ErrorEvent('');
    return true;
  } catch (e) {
    return false;
  }
}

/**
 * Tells whether current environment supports DOMError objects
 * {@link supportsDOMError}.
 *
 * @returns Answer to the given question.
 */
function supportsDOMError() {
  try {
    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':
    // 1 argument required, but only 0 present.
    // @ts-expect-error It really needs 1 argument, not 0.
    new DOMError('');
    return true;
  } catch (e) {
    return false;
  }
}

/**
 * Tells whether current environment supports DOMException objects
 * {@link supportsDOMException}.
 *
 * @returns Answer to the given question.
 */
function supportsDOMException() {
  try {
    new DOMException('');
    return true;
  } catch (e) {
    return false;
  }
}

/**
 * Tells whether current environment supports Fetch API
 * {@link supportsFetch}.
 *
 * @returns Answer to the given question.
 */
function supportsFetch() {
  if (!('fetch' in WINDOW)) {
    return false;
  }

  try {
    new Headers();
    new Request('http://www.example.com');
    new Response();
    return true;
  } catch (e) {
    return false;
  }
}
/**
 * isNativeFetch checks if the given function is a native implementation of fetch()
 */
// eslint-disable-next-line @typescript-eslint/ban-types
function isNativeFetch(func) {
  return func && /^function fetch\(\)\s+\{\s+\[native code\]\s+\}$/.test(func.toString());
}

/**
 * Tells whether current environment supports Fetch API natively
 * {@link supportsNativeFetch}.
 *
 * @returns true if `window.fetch` is natively implemented, false otherwise
 */
function supportsNativeFetch() {
  if (typeof EdgeRuntime === 'string') {
    return true;
  }

  if (!supportsFetch()) {
    return false;
  }

  // Fast path to avoid DOM I/O
  // eslint-disable-next-line @typescript-eslint/unbound-method
  if (isNativeFetch(WINDOW.fetch)) {
    return true;
  }

  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)
  // so create a "pure" iframe to see if that has native fetch
  let result = false;
  const doc = WINDOW.document;
  // eslint-disable-next-line deprecation/deprecation
  if (doc && typeof (doc.createElement ) === 'function') {
    try {
      const sandbox = doc.createElement('iframe');
      sandbox.hidden = true;
      doc.head.appendChild(sandbox);
      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {
        // eslint-disable-next-line @typescript-eslint/unbound-method
        result = isNativeFetch(sandbox.contentWindow.fetch);
      }
      doc.head.removeChild(sandbox);
    } catch (err) {
      _debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD &&
        _logger_js__WEBPACK_IMPORTED_MODULE_2__.logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);
    }
  }

  return result;
}

/**
 * Tells whether current environment supports ReportingObserver API
 * {@link supportsReportingObserver}.
 *
 * @returns Answer to the given question.
 */
function supportsReportingObserver() {
  return 'ReportingObserver' in WINDOW;
}

/**
 * Tells whether current environment supports Referrer Policy API
 * {@link supportsReferrerPolicy}.
 *
 * @returns Answer to the given question.
 */
function supportsReferrerPolicy() {
  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default'
  // (see https://caniuse.com/#feat=referrer-policy),
  // it doesn't. And it throws an exception instead of ignoring this parameter...
  // REF: https://github.com/getsentry/raven-js/issues/1233

  if (!supportsFetch()) {
    return false;
  }

  try {
    new Request('_', {
      referrerPolicy: 'origin' ,
    });
    return true;
  } catch (e) {
    return false;
  }
}


//# sourceMappingURL=supports.js.map


/***/ }),

/***/ "./node_modules/@sentry/utils/esm/syncpromise.js":
/*!*******************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/syncpromise.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SyncPromise": () => (/* binding */ SyncPromise),
/* harmony export */   "rejectedSyncPromise": () => (/* binding */ rejectedSyncPromise),
/* harmony export */   "resolvedSyncPromise": () => (/* binding */ resolvedSyncPromise)
/* harmony export */ });
/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is.js */ "./node_modules/@sentry/utils/esm/is.js");


/* eslint-disable @typescript-eslint/explicit-function-return-type */

/** SyncPromise internal states */
var States; (function (States) {
  /** Pending */
  const PENDING = 0; States[States["PENDING"] = PENDING] = "PENDING";
  /** Resolved / OK */
  const RESOLVED = 1; States[States["RESOLVED"] = RESOLVED] = "RESOLVED";
  /** Rejected / Error */
  const REJECTED = 2; States[States["REJECTED"] = REJECTED] = "REJECTED";
})(States || (States = {}));

// Overloads so we can call resolvedSyncPromise without arguments and generic argument

/**
 * Creates a resolved sync promise.
 *
 * @param value the value to resolve the promise with
 * @returns the resolved sync promise
 */
function resolvedSyncPromise(value) {
  return new SyncPromise(resolve => {
    resolve(value);
  });
}

/**
 * Creates a rejected sync promise.
 *
 * @param value the value to reject the promise with
 * @returns the rejected sync promise
 */
function rejectedSyncPromise(reason) {
  return new SyncPromise((_, reject) => {
    reject(reason);
  });
}

/**
 * Thenable class that behaves like a Promise and follows it's interface
 * but is not async internally
 */
class SyncPromise {

   constructor(
    executor,
  ) {SyncPromise.prototype.__init.call(this);SyncPromise.prototype.__init2.call(this);SyncPromise.prototype.__init3.call(this);SyncPromise.prototype.__init4.call(this);
    this._state = States.PENDING;
    this._handlers = [];

    try {
      executor(this._resolve, this._reject);
    } catch (e) {
      this._reject(e);
    }
  }

  /** JSDoc */
   then(
    onfulfilled,
    onrejected,
  ) {
    return new SyncPromise((resolve, reject) => {
      this._handlers.push([
        false,
        result => {
          if (!onfulfilled) {
            // TODO: ¯\_(ツ)_/¯
            // TODO: FIXME
            resolve(result );
          } else {
            try {
              resolve(onfulfilled(result));
            } catch (e) {
              reject(e);
            }
          }
        },
        reason => {
          if (!onrejected) {
            reject(reason);
          } else {
            try {
              resolve(onrejected(reason));
            } catch (e) {
              reject(e);
            }
          }
        },
      ]);
      this._executeHandlers();
    });
  }

  /** JSDoc */
   catch(
    onrejected,
  ) {
    return this.then(val => val, onrejected);
  }

  /** JSDoc */
   finally(onfinally) {
    return new SyncPromise((resolve, reject) => {
      let val;
      let isRejected;

      return this.then(
        value => {
          isRejected = false;
          val = value;
          if (onfinally) {
            onfinally();
          }
        },
        reason => {
          isRejected = true;
          val = reason;
          if (onfinally) {
            onfinally();
          }
        },
      ).then(() => {
        if (isRejected) {
          reject(val);
          return;
        }

        resolve(val );
      });
    });
  }

  /** JSDoc */
    __init() {this._resolve = (value) => {
    this._setResult(States.RESOLVED, value);
  };}

  /** JSDoc */
    __init2() {this._reject = (reason) => {
    this._setResult(States.REJECTED, reason);
  };}

  /** JSDoc */
    __init3() {this._setResult = (state, value) => {
    if (this._state !== States.PENDING) {
      return;
    }

    if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isThenable)(value)) {
      void (value ).then(this._resolve, this._reject);
      return;
    }

    this._state = state;
    this._value = value;

    this._executeHandlers();
  };}

  /** JSDoc */
    __init4() {this._executeHandlers = () => {
    if (this._state === States.PENDING) {
      return;
    }

    const cachedHandlers = this._handlers.slice();
    this._handlers = [];

    cachedHandlers.forEach(handler => {
      if (handler[0]) {
        return;
      }

      if (this._state === States.RESOLVED) {
        // eslint-disable-next-line @typescript-eslint/no-floating-promises
        handler[1](this._value );
      }

      if (this._state === States.REJECTED) {
        handler[2](this._value);
      }

      handler[0] = true;
    });
  };}
}


//# sourceMappingURL=syncpromise.js.map


/***/ }),

/***/ "./node_modules/@sentry/utils/esm/time.js":
/*!************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/time.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "_browserPerformanceTimeOriginMode": () => (/* binding */ _browserPerformanceTimeOriginMode),
/* harmony export */   "browserPerformanceTimeOrigin": () => (/* binding */ browserPerformanceTimeOrigin),
/* harmony export */   "dateTimestampInSeconds": () => (/* binding */ dateTimestampInSeconds),
/* harmony export */   "timestampInSeconds": () => (/* binding */ timestampInSeconds),
/* harmony export */   "timestampWithMs": () => (/* binding */ timestampWithMs)
/* harmony export */ });
/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./worldwide.js */ "./node_modules/@sentry/utils/esm/worldwide.js");


const ONE_SECOND_IN_MS = 1000;

/**
 * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}
 * for accessing a high-resolution monotonic clock.
 */

/**
 * Returns a timestamp in seconds since the UNIX epoch using the Date API.
 *
 * TODO(v8): Return type should be rounded.
 */
function dateTimestampInSeconds() {
  return Date.now() / ONE_SECOND_IN_MS;
}

/**
 * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not
 * support the API.
 *
 * Wrapping the native API works around differences in behavior from different browsers.
 */
function createUnixTimestampInSecondsFunc() {
  const { performance } = _worldwide_js__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ ;
  if (!performance || !performance.now) {
    return dateTimestampInSeconds;
  }

  // Some browser and environments don't have a timeOrigin, so we fallback to
  // using Date.now() to compute the starting time.
  const approxStartingTimeOrigin = Date.now() - performance.now();
  const timeOrigin = performance.timeOrigin == undefined ? approxStartingTimeOrigin : performance.timeOrigin;

  // performance.now() is a monotonic clock, which means it starts at 0 when the process begins. To get the current
  // wall clock time (actual UNIX timestamp), we need to add the starting time origin and the current time elapsed.
  //
  // TODO: This does not account for the case where the monotonic clock that powers performance.now() drifts from the
  // wall clock time, which causes the returned timestamp to be inaccurate. We should investigate how to detect and
  // correct for this.
  // See: https://github.com/getsentry/sentry-javascript/issues/2590
  // See: https://github.com/mdn/content/issues/4713
  // See: https://dev.to/noamr/when-a-millisecond-is-not-a-millisecond-3h6
  return () => {
    return (timeOrigin + performance.now()) / ONE_SECOND_IN_MS;
  };
}

/**
 * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the
 * availability of the Performance API.
 *
 * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is
 * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The
 * skew can grow to arbitrary amounts like days, weeks or months.
 * See https://github.com/getsentry/sentry-javascript/issues/2590.
 */
const timestampInSeconds = createUnixTimestampInSecondsFunc();

/**
 * Re-exported with an old name for backwards-compatibility.
 * TODO (v8): Remove this
 *
 * @deprecated Use `timestampInSeconds` instead.
 */
const timestampWithMs = timestampInSeconds;

/**
 * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.
 */
let _browserPerformanceTimeOriginMode;

/**
 * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the
 * performance API is available.
 */
const browserPerformanceTimeOrigin = (() => {
  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or
  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin
  // data as reliable if they are within a reasonable threshold of the current time.

  const { performance } = _worldwide_js__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ ;
  if (!performance || !performance.now) {
    _browserPerformanceTimeOriginMode = 'none';
    return undefined;
  }

  const threshold = 3600 * 1000;
  const performanceNow = performance.now();
  const dateNow = Date.now();

  // if timeOrigin isn't available set delta to threshold so it isn't used
  const timeOriginDelta = performance.timeOrigin
    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)
    : threshold;
  const timeOriginIsReliable = timeOriginDelta < threshold;

  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin
  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.
  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always
  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the
  // Date API.
  // eslint-disable-next-line deprecation/deprecation
  const navigationStart = performance.timing && performance.timing.navigationStart;
  const hasNavigationStart = typeof navigationStart === 'number';
  // if navigationStart isn't available set delta to threshold so it isn't used
  const navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;
  const navigationStartIsReliable = navigationStartDelta < threshold;

  if (timeOriginIsReliable || navigationStartIsReliable) {
    // Use the more reliable time origin
    if (timeOriginDelta <= navigationStartDelta) {
      _browserPerformanceTimeOriginMode = 'timeOrigin';
      return performance.timeOrigin;
    } else {
      _browserPerformanceTimeOriginMode = 'navigationStart';
      return navigationStart;
    }
  }

  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.
  _browserPerformanceTimeOriginMode = 'dateNow';
  return dateNow;
})();


//# sourceMappingURL=time.js.map


/***/ }),

/***/ "./node_modules/@sentry/utils/esm/tracing.js":
/*!***************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/tracing.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TRACEPARENT_REGEXP": () => (/* binding */ TRACEPARENT_REGEXP),
/* harmony export */   "extractTraceparentData": () => (/* binding */ extractTraceparentData),
/* harmony export */   "generateSentryTraceHeader": () => (/* binding */ generateSentryTraceHeader),
/* harmony export */   "tracingContextFromHeaders": () => (/* binding */ tracingContextFromHeaders)
/* harmony export */ });
/* harmony import */ var _baggage_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./baggage.js */ "./node_modules/@sentry/utils/esm/baggage.js");
/* harmony import */ var _misc_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./misc.js */ "./node_modules/@sentry/utils/esm/misc.js");



// eslint-disable-next-line @sentry-internal/sdk/no-regexp-constructor -- RegExp is used for readability here
const TRACEPARENT_REGEXP = new RegExp(
  '^[ \\t]*' + // whitespace
    '([0-9a-f]{32})?' + // trace_id
    '-?([0-9a-f]{16})?' + // span_id
    '-?([01])?' + // sampled
    '[ \\t]*$', // whitespace
);

/**
 * Extract transaction context data from a `sentry-trace` header.
 *
 * @param traceparent Traceparent string
 *
 * @returns Object containing data from the header, or undefined if traceparent string is malformed
 */
function extractTraceparentData(traceparent) {
  if (!traceparent) {
    return undefined;
  }

  const matches = traceparent.match(TRACEPARENT_REGEXP);
  if (!matches) {
    return undefined;
  }

  let parentSampled;
  if (matches[3] === '1') {
    parentSampled = true;
  } else if (matches[3] === '0') {
    parentSampled = false;
  }

  return {
    traceId: matches[1],
    parentSampled,
    parentSpanId: matches[2],
  };
}

/**
 * Create tracing context from incoming headers.
 */
function tracingContextFromHeaders(
  sentryTrace,
  baggage,
)

 {
  const traceparentData = extractTraceparentData(sentryTrace);
  const dynamicSamplingContext = (0,_baggage_js__WEBPACK_IMPORTED_MODULE_0__.baggageHeaderToDynamicSamplingContext)(baggage);

  const { traceId, parentSpanId, parentSampled } = traceparentData || {};

  const propagationContext = {
    traceId: traceId || (0,_misc_js__WEBPACK_IMPORTED_MODULE_1__.uuid4)(),
    spanId: (0,_misc_js__WEBPACK_IMPORTED_MODULE_1__.uuid4)().substring(16),
    sampled: parentSampled,
  };

  if (parentSpanId) {
    propagationContext.parentSpanId = parentSpanId;
  }

  if (dynamicSamplingContext) {
    propagationContext.dsc = dynamicSamplingContext ;
  }

  return {
    traceparentData,
    dynamicSamplingContext,
    propagationContext,
  };
}

/**
 * Create sentry-trace header from span context values.
 */
function generateSentryTraceHeader(
  traceId = (0,_misc_js__WEBPACK_IMPORTED_MODULE_1__.uuid4)(),
  spanId = (0,_misc_js__WEBPACK_IMPORTED_MODULE_1__.uuid4)().substring(16),
  sampled,
) {
  let sampledString = '';
  if (sampled !== undefined) {
    sampledString = sampled ? '-1' : '-0';
  }
  return `${traceId}-${spanId}${sampledString}`;
}


//# sourceMappingURL=tracing.js.map


/***/ }),

/***/ "./node_modules/@sentry/utils/esm/url.js":
/*!***********************************************!*\
  !*** ./node_modules/@sentry/utils/esm/url.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getNumberOfUrlSegments": () => (/* binding */ getNumberOfUrlSegments),
/* harmony export */   "getSanitizedUrlString": () => (/* binding */ getSanitizedUrlString),
/* harmony export */   "parseUrl": () => (/* binding */ parseUrl),
/* harmony export */   "stripUrlQueryAndFragment": () => (/* binding */ stripUrlQueryAndFragment)
/* harmony export */ });
/**
 * Parses string form of URL into an object
 * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B
 * // intentionally using regex and not <a/> href parsing trick because React Native and other
 * // environments where DOM might not be available
 * @returns parsed URL object
 */
function parseUrl(url) {
  if (!url) {
    return {};
  }

  const match = url.match(/^(([^:/?#]+):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?$/);

  if (!match) {
    return {};
  }

  // coerce to undefined values to empty string so we don't get 'undefined'
  const query = match[6] || '';
  const fragment = match[8] || '';
  return {
    host: match[4],
    path: match[5],
    protocol: match[2],
    search: query,
    hash: fragment,
    relative: match[5] + query + fragment, // everything minus origin
  };
}

/**
 * Strip the query string and fragment off of a given URL or path (if present)
 *
 * @param urlPath Full URL or path, including possible query string and/or fragment
 * @returns URL or path without query string or fragment
 */
function stripUrlQueryAndFragment(urlPath) {
  // eslint-disable-next-line no-useless-escape
  return urlPath.split(/[\?#]/, 1)[0];
}

/**
 * Returns number of URL segments of a passed string URL.
 */
function getNumberOfUrlSegments(url) {
  // split at '/' or at '\/' to split regex urls correctly
  return url.split(/\\?\//).filter(s => s.length > 0 && s !== ',').length;
}

/**
 * Takes a URL object and returns a sanitized string which is safe to use as span description
 * see: https://develop.sentry.dev/sdk/data-handling/#structuring-data
 */
function getSanitizedUrlString(url) {
  const { protocol, host, path } = url;

  const filteredHost =
    (host &&
      host
        // Always filter out authority
        .replace(/^.*@/, '[filtered]:[filtered]@')
        // Don't show standard :80 (http) and :443 (https) ports to reduce the noise
        // TODO: Use new URL global if it exists
        .replace(/(:80)$/, '')
        .replace(/(:443)$/, '')) ||
    '';

  return `${protocol ? `${protocol}://` : ''}${filteredHost}${path}`;
}


//# sourceMappingURL=url.js.map


/***/ }),

/***/ "./node_modules/@sentry/utils/esm/vendor/supportsHistory.js":
/*!******************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/vendor/supportsHistory.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "supportsHistory": () => (/* binding */ supportsHistory)
/* harmony export */ });
/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../worldwide.js */ "./node_modules/@sentry/utils/esm/worldwide.js");


// Based on https://github.com/angular/angular.js/pull/13945/files

// eslint-disable-next-line deprecation/deprecation
const WINDOW = (0,_worldwide_js__WEBPACK_IMPORTED_MODULE_0__.getGlobalObject)();

/**
 * Tells whether current environment supports History API
 * {@link supportsHistory}.
 *
 * @returns Answer to the given question.
 */
function supportsHistory() {
  // NOTE: in Chrome App environment, touching history.pushState, *even inside
  //       a try/catch block*, will cause Chrome to output an error to console.error
  // borrowed from: https://github.com/angular/angular.js/pull/13945/files
  /* eslint-disable @typescript-eslint/no-unsafe-member-access */
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  const chrome = (WINDOW ).chrome;
  const isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;
  /* eslint-enable @typescript-eslint/no-unsafe-member-access */
  const hasHistoryApi = 'history' in WINDOW && !!WINDOW.history.pushState && !!WINDOW.history.replaceState;

  return !isChromePackagedApp && hasHistoryApi;
}


//# sourceMappingURL=supportsHistory.js.map


/***/ }),

/***/ "./node_modules/@sentry/utils/esm/worldwide.js":
/*!*****************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/worldwide.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GLOBAL_OBJ": () => (/* binding */ GLOBAL_OBJ),
/* harmony export */   "getGlobalObject": () => (/* binding */ getGlobalObject),
/* harmony export */   "getGlobalSingleton": () => (/* binding */ getGlobalSingleton)
/* harmony export */ });
/** Internal global with common properties and Sentry extensions  */

// The code below for 'isGlobalObj' and 'GLOBAL_OBJ' was copied from core-js before modification
// https://github.com/zloirock/core-js/blob/1b944df55282cdc99c90db5f49eb0b6eda2cc0a3/packages/core-js/internals/global.js
// core-js has the following licence:
//
// Copyright (c) 2014-2022 Denis Pushkarev
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

/** Returns 'obj' if it's the global object, otherwise returns undefined */
function isGlobalObj(obj) {
  return obj && obj.Math == Math ? obj : undefined;
}

/** Get's the global object for the current JavaScript runtime */
const GLOBAL_OBJ =
  (typeof globalThis == 'object' && isGlobalObj(globalThis)) ||
  // eslint-disable-next-line no-restricted-globals
  (typeof window == 'object' && isGlobalObj(window)) ||
  (typeof self == 'object' && isGlobalObj(self)) ||
  (typeof __webpack_require__.g == 'object' && isGlobalObj(__webpack_require__.g)) ||
  (function () {
    return this;
  })() ||
  {};

/**
 * @deprecated Use GLOBAL_OBJ instead or WINDOW from @sentry/browser. This will be removed in v8
 */
function getGlobalObject() {
  return GLOBAL_OBJ ;
}

/**
 * Returns a global singleton contained in the global `__SENTRY__` object.
 *
 * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory
 * function and added to the `__SENTRY__` object.
 *
 * @param name name of the global singleton on __SENTRY__
 * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`
 * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `GLOBAL_OBJ`'s return value
 * @returns the singleton
 */
function getGlobalSingleton(name, creator, obj) {
  const gbl = (obj || GLOBAL_OBJ) ;
  const __SENTRY__ = (gbl.__SENTRY__ = gbl.__SENTRY__ || {});
  const singleton = __SENTRY__[name] || (__SENTRY__[name] = creator());
  return singleton;
}


//# sourceMappingURL=worldwide.js.map


/***/ }),

/***/ "./node_modules/core-js/es/array/from.js":
/*!***********************************************!*\
  !*** ./node_modules/core-js/es/array/from.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(/*! ../../modules/es.string.iterator */ "./node_modules/core-js/modules/es.string.iterator.js");
__webpack_require__(/*! ../../modules/es.array.from */ "./node_modules/core-js/modules/es.array.from.js");
var path = __webpack_require__(/*! ../../internals/path */ "./node_modules/core-js/internals/path.js");

module.exports = path.Array.from;


/***/ }),

/***/ "./node_modules/core-js/es/map/index.js":
/*!**********************************************!*\
  !*** ./node_modules/core-js/es/map/index.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(/*! ../../modules/es.array.iterator */ "./node_modules/core-js/modules/es.array.iterator.js");
__webpack_require__(/*! ../../modules/es.map */ "./node_modules/core-js/modules/es.map.js");
__webpack_require__(/*! ../../modules/es.object.to-string */ "./node_modules/core-js/modules/es.object.to-string.js");
__webpack_require__(/*! ../../modules/es.string.iterator */ "./node_modules/core-js/modules/es.string.iterator.js");
var path = __webpack_require__(/*! ../../internals/path */ "./node_modules/core-js/internals/path.js");

module.exports = path.Map;


/***/ }),

/***/ "./node_modules/core-js/es/object/assign.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/es/object/assign.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(/*! ../../modules/es.object.assign */ "./node_modules/core-js/modules/es.object.assign.js");
var path = __webpack_require__(/*! ../../internals/path */ "./node_modules/core-js/internals/path.js");

module.exports = path.Object.assign;


/***/ }),

/***/ "./node_modules/core-js/es/set/index.js":
/*!**********************************************!*\
  !*** ./node_modules/core-js/es/set/index.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(/*! ../../modules/es.array.iterator */ "./node_modules/core-js/modules/es.array.iterator.js");
__webpack_require__(/*! ../../modules/es.object.to-string */ "./node_modules/core-js/modules/es.object.to-string.js");
__webpack_require__(/*! ../../modules/es.set */ "./node_modules/core-js/modules/es.set.js");
__webpack_require__(/*! ../../modules/es.string.iterator */ "./node_modules/core-js/modules/es.string.iterator.js");
var path = __webpack_require__(/*! ../../internals/path */ "./node_modules/core-js/internals/path.js");

module.exports = path.Set;


/***/ }),

/***/ "./node_modules/core-js/es/weak-map/index.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/es/weak-map/index.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(/*! ../../modules/es.array.iterator */ "./node_modules/core-js/modules/es.array.iterator.js");
__webpack_require__(/*! ../../modules/es.object.to-string */ "./node_modules/core-js/modules/es.object.to-string.js");
__webpack_require__(/*! ../../modules/es.weak-map */ "./node_modules/core-js/modules/es.weak-map.js");
var path = __webpack_require__(/*! ../../internals/path */ "./node_modules/core-js/internals/path.js");

module.exports = path.WeakMap;


/***/ }),

/***/ "./node_modules/core-js/internals/a-callable.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/internals/a-callable.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var tryToString = __webpack_require__(/*! ../internals/try-to-string */ "./node_modules/core-js/internals/try-to-string.js");

var $TypeError = TypeError;

// `Assert: IsCallable(argument) is true`
module.exports = function (argument) {
  if (isCallable(argument)) return argument;
  throw $TypeError(tryToString(argument) + ' is not a function');
};


/***/ }),

/***/ "./node_modules/core-js/internals/a-possible-prototype.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/a-possible-prototype.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");

var $String = String;
var $TypeError = TypeError;

module.exports = function (argument) {
  if (typeof argument == 'object' || isCallable(argument)) return argument;
  throw $TypeError("Can't set " + $String(argument) + ' as a prototype');
};


/***/ }),

/***/ "./node_modules/core-js/internals/add-to-unscopables.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/internals/add-to-unscopables.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var create = __webpack_require__(/*! ../internals/object-create */ "./node_modules/core-js/internals/object-create.js");
var defineProperty = (__webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js").f);

var UNSCOPABLES = wellKnownSymbol('unscopables');
var ArrayPrototype = Array.prototype;

// Array.prototype[@@unscopables]
// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
if (ArrayPrototype[UNSCOPABLES] == undefined) {
  defineProperty(ArrayPrototype, UNSCOPABLES, {
    configurable: true,
    value: create(null)
  });
}

// add a key to Array.prototype[@@unscopables]
module.exports = function (key) {
  ArrayPrototype[UNSCOPABLES][key] = true;
};


/***/ }),

/***/ "./node_modules/core-js/internals/an-instance.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/an-instance.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var isPrototypeOf = __webpack_require__(/*! ../internals/object-is-prototype-of */ "./node_modules/core-js/internals/object-is-prototype-of.js");

var $TypeError = TypeError;

module.exports = function (it, Prototype) {
  if (isPrototypeOf(Prototype, it)) return it;
  throw $TypeError('Incorrect invocation');
};


/***/ }),

/***/ "./node_modules/core-js/internals/an-object.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/an-object.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");

var $String = String;
var $TypeError = TypeError;

// `Assert: Type(argument) is Object`
module.exports = function (argument) {
  if (isObject(argument)) return argument;
  throw $TypeError($String(argument) + ' is not an object');
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-buffer-non-extensible.js":
/*!***********************************************************************!*\
  !*** ./node_modules/core-js/internals/array-buffer-non-extensible.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// FF26- bug: ArrayBuffers are non-extensible, but Object.isExtensible does not report it
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

module.exports = fails(function () {
  if (typeof ArrayBuffer == 'function') {
    var buffer = new ArrayBuffer(8);
    // eslint-disable-next-line es/no-object-isextensible, es/no-object-defineproperty -- safe
    if (Object.isExtensible(buffer)) Object.defineProperty(buffer, 'a', { value: 8 });
  }
});


/***/ }),

/***/ "./node_modules/core-js/internals/array-from.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/internals/array-from.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var bind = __webpack_require__(/*! ../internals/function-bind-context */ "./node_modules/core-js/internals/function-bind-context.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");
var callWithSafeIterationClosing = __webpack_require__(/*! ../internals/call-with-safe-iteration-closing */ "./node_modules/core-js/internals/call-with-safe-iteration-closing.js");
var isArrayIteratorMethod = __webpack_require__(/*! ../internals/is-array-iterator-method */ "./node_modules/core-js/internals/is-array-iterator-method.js");
var isConstructor = __webpack_require__(/*! ../internals/is-constructor */ "./node_modules/core-js/internals/is-constructor.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "./node_modules/core-js/internals/length-of-array-like.js");
var createProperty = __webpack_require__(/*! ../internals/create-property */ "./node_modules/core-js/internals/create-property.js");
var getIterator = __webpack_require__(/*! ../internals/get-iterator */ "./node_modules/core-js/internals/get-iterator.js");
var getIteratorMethod = __webpack_require__(/*! ../internals/get-iterator-method */ "./node_modules/core-js/internals/get-iterator-method.js");

var $Array = Array;

// `Array.from` method implementation
// https://tc39.es/ecma262/#sec-array.from
module.exports = function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
  var O = toObject(arrayLike);
  var IS_CONSTRUCTOR = isConstructor(this);
  var argumentsLength = arguments.length;
  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;
  var mapping = mapfn !== undefined;
  if (mapping) mapfn = bind(mapfn, argumentsLength > 2 ? arguments[2] : undefined);
  var iteratorMethod = getIteratorMethod(O);
  var index = 0;
  var length, result, step, iterator, next, value;
  // if the target is not iterable or it's an array with the default iterator - use a simple case
  if (iteratorMethod && !(this === $Array && isArrayIteratorMethod(iteratorMethod))) {
    iterator = getIterator(O, iteratorMethod);
    next = iterator.next;
    result = IS_CONSTRUCTOR ? new this() : [];
    for (;!(step = call(next, iterator)).done; index++) {
      value = mapping ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true) : step.value;
      createProperty(result, index, value);
    }
  } else {
    length = lengthOfArrayLike(O);
    result = IS_CONSTRUCTOR ? new this(length) : $Array(length);
    for (;length > index; index++) {
      value = mapping ? mapfn(O[index], index) : O[index];
      createProperty(result, index, value);
    }
  }
  result.length = index;
  return result;
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-includes.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/array-includes.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "./node_modules/core-js/internals/to-absolute-index.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "./node_modules/core-js/internals/length-of-array-like.js");

// `Array.prototype.{ indexOf, includes }` methods implementation
var createMethod = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIndexedObject($this);
    var length = lengthOfArrayLike(O);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare -- NaN check
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare -- NaN check
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) {
      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

module.exports = {
  // `Array.prototype.includes` method
  // https://tc39.es/ecma262/#sec-array.prototype.includes
  includes: createMethod(true),
  // `Array.prototype.indexOf` method
  // https://tc39.es/ecma262/#sec-array.prototype.indexof
  indexOf: createMethod(false)
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-iteration.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/array-iteration.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var bind = __webpack_require__(/*! ../internals/function-bind-context */ "./node_modules/core-js/internals/function-bind-context.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var IndexedObject = __webpack_require__(/*! ../internals/indexed-object */ "./node_modules/core-js/internals/indexed-object.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "./node_modules/core-js/internals/length-of-array-like.js");
var arraySpeciesCreate = __webpack_require__(/*! ../internals/array-species-create */ "./node_modules/core-js/internals/array-species-create.js");

var push = uncurryThis([].push);

// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterReject }` methods implementation
var createMethod = function (TYPE) {
  var IS_MAP = TYPE == 1;
  var IS_FILTER = TYPE == 2;
  var IS_SOME = TYPE == 3;
  var IS_EVERY = TYPE == 4;
  var IS_FIND_INDEX = TYPE == 6;
  var IS_FILTER_REJECT = TYPE == 7;
  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
  return function ($this, callbackfn, that, specificCreate) {
    var O = toObject($this);
    var self = IndexedObject(O);
    var boundFunction = bind(callbackfn, that);
    var length = lengthOfArrayLike(self);
    var index = 0;
    var create = specificCreate || arraySpeciesCreate;
    var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_REJECT ? create($this, 0) : undefined;
    var value, result;
    for (;length > index; index++) if (NO_HOLES || index in self) {
      value = self[index];
      result = boundFunction(value, index, O);
      if (TYPE) {
        if (IS_MAP) target[index] = result; // map
        else if (result) switch (TYPE) {
          case 3: return true;              // some
          case 5: return value;             // find
          case 6: return index;             // findIndex
          case 2: push(target, value);      // filter
        } else switch (TYPE) {
          case 4: return false;             // every
          case 7: push(target, value);      // filterReject
        }
      }
    }
    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
  };
};

module.exports = {
  // `Array.prototype.forEach` method
  // https://tc39.es/ecma262/#sec-array.prototype.foreach
  forEach: createMethod(0),
  // `Array.prototype.map` method
  // https://tc39.es/ecma262/#sec-array.prototype.map
  map: createMethod(1),
  // `Array.prototype.filter` method
  // https://tc39.es/ecma262/#sec-array.prototype.filter
  filter: createMethod(2),
  // `Array.prototype.some` method
  // https://tc39.es/ecma262/#sec-array.prototype.some
  some: createMethod(3),
  // `Array.prototype.every` method
  // https://tc39.es/ecma262/#sec-array.prototype.every
  every: createMethod(4),
  // `Array.prototype.find` method
  // https://tc39.es/ecma262/#sec-array.prototype.find
  find: createMethod(5),
  // `Array.prototype.findIndex` method
  // https://tc39.es/ecma262/#sec-array.prototype.findIndex
  findIndex: createMethod(6),
  // `Array.prototype.filterReject` method
  // https://github.com/tc39/proposal-array-filtering
  filterReject: createMethod(7)
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-slice-simple.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/internals/array-slice-simple.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "./node_modules/core-js/internals/to-absolute-index.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "./node_modules/core-js/internals/length-of-array-like.js");
var createProperty = __webpack_require__(/*! ../internals/create-property */ "./node_modules/core-js/internals/create-property.js");

var $Array = Array;
var max = Math.max;

module.exports = function (O, start, end) {
  var length = lengthOfArrayLike(O);
  var k = toAbsoluteIndex(start, length);
  var fin = toAbsoluteIndex(end === undefined ? length : end, length);
  var result = $Array(max(fin - k, 0));
  for (var n = 0; k < fin; k++, n++) createProperty(result, n, O[k]);
  result.length = n;
  return result;
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-species-constructor.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/internals/array-species-constructor.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var isArray = __webpack_require__(/*! ../internals/is-array */ "./node_modules/core-js/internals/is-array.js");
var isConstructor = __webpack_require__(/*! ../internals/is-constructor */ "./node_modules/core-js/internals/is-constructor.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var SPECIES = wellKnownSymbol('species');
var $Array = Array;

// a part of `ArraySpeciesCreate` abstract operation
// https://tc39.es/ecma262/#sec-arrayspeciescreate
module.exports = function (originalArray) {
  var C;
  if (isArray(originalArray)) {
    C = originalArray.constructor;
    // cross-realm fallback
    if (isConstructor(C) && (C === $Array || isArray(C.prototype))) C = undefined;
    else if (isObject(C)) {
      C = C[SPECIES];
      if (C === null) C = undefined;
    }
  } return C === undefined ? $Array : C;
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-species-create.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/array-species-create.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var arraySpeciesConstructor = __webpack_require__(/*! ../internals/array-species-constructor */ "./node_modules/core-js/internals/array-species-constructor.js");

// `ArraySpeciesCreate` abstract operation
// https://tc39.es/ecma262/#sec-arrayspeciescreate
module.exports = function (originalArray, length) {
  return new (arraySpeciesConstructor(originalArray))(length === 0 ? 0 : length);
};


/***/ }),

/***/ "./node_modules/core-js/internals/call-with-safe-iteration-closing.js":
/*!****************************************************************************!*\
  !*** ./node_modules/core-js/internals/call-with-safe-iteration-closing.js ***!
  \****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var iteratorClose = __webpack_require__(/*! ../internals/iterator-close */ "./node_modules/core-js/internals/iterator-close.js");

// call something on iterator step with safe closing on error
module.exports = function (iterator, fn, value, ENTRIES) {
  try {
    return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);
  } catch (error) {
    iteratorClose(iterator, 'throw', error);
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/check-correctness-of-iteration.js":
/*!**************************************************************************!*\
  !*** ./node_modules/core-js/internals/check-correctness-of-iteration.js ***!
  \**************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var ITERATOR = wellKnownSymbol('iterator');
var SAFE_CLOSING = false;

try {
  var called = 0;
  var iteratorWithReturn = {
    next: function () {
      return { done: !!called++ };
    },
    'return': function () {
      SAFE_CLOSING = true;
    }
  };
  iteratorWithReturn[ITERATOR] = function () {
    return this;
  };
  // eslint-disable-next-line es/no-array-from, no-throw-literal -- required for testing
  Array.from(iteratorWithReturn, function () { throw 2; });
} catch (error) { /* empty */ }

module.exports = function (exec, SKIP_CLOSING) {
  if (!SKIP_CLOSING && !SAFE_CLOSING) return false;
  var ITERATION_SUPPORT = false;
  try {
    var object = {};
    object[ITERATOR] = function () {
      return {
        next: function () {
          return { done: ITERATION_SUPPORT = true };
        }
      };
    };
    exec(object);
  } catch (error) { /* empty */ }
  return ITERATION_SUPPORT;
};


/***/ }),

/***/ "./node_modules/core-js/internals/classof-raw.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/classof-raw.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");

var toString = uncurryThis({}.toString);
var stringSlice = uncurryThis(''.slice);

module.exports = function (it) {
  return stringSlice(toString(it), 8, -1);
};


/***/ }),

/***/ "./node_modules/core-js/internals/classof.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/internals/classof.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var TO_STRING_TAG_SUPPORT = __webpack_require__(/*! ../internals/to-string-tag-support */ "./node_modules/core-js/internals/to-string-tag-support.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var classofRaw = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var $Object = Object;

// ES3 wrong here
var CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (error) { /* empty */ }
};

// getting tag from ES6+ `Object.prototype.toString`
module.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {
  var O, tag, result;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (tag = tryGet(O = $Object(it), TO_STRING_TAG)) == 'string' ? tag
    // builtinTag case
    : CORRECT_ARGUMENTS ? classofRaw(O)
    // ES3 arguments fallback
    : (result = classofRaw(O)) == 'Object' && isCallable(O.callee) ? 'Arguments' : result;
};


/***/ }),

/***/ "./node_modules/core-js/internals/collection-strong.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/collection-strong.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var defineProperty = (__webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js").f);
var create = __webpack_require__(/*! ../internals/object-create */ "./node_modules/core-js/internals/object-create.js");
var defineBuiltIns = __webpack_require__(/*! ../internals/define-built-ins */ "./node_modules/core-js/internals/define-built-ins.js");
var bind = __webpack_require__(/*! ../internals/function-bind-context */ "./node_modules/core-js/internals/function-bind-context.js");
var anInstance = __webpack_require__(/*! ../internals/an-instance */ "./node_modules/core-js/internals/an-instance.js");
var isNullOrUndefined = __webpack_require__(/*! ../internals/is-null-or-undefined */ "./node_modules/core-js/internals/is-null-or-undefined.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/core-js/internals/iterate.js");
var defineIterator = __webpack_require__(/*! ../internals/iterator-define */ "./node_modules/core-js/internals/iterator-define.js");
var createIterResultObject = __webpack_require__(/*! ../internals/create-iter-result-object */ "./node_modules/core-js/internals/create-iter-result-object.js");
var setSpecies = __webpack_require__(/*! ../internals/set-species */ "./node_modules/core-js/internals/set-species.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var fastKey = (__webpack_require__(/*! ../internals/internal-metadata */ "./node_modules/core-js/internals/internal-metadata.js").fastKey);
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "./node_modules/core-js/internals/internal-state.js");

var setInternalState = InternalStateModule.set;
var internalStateGetterFor = InternalStateModule.getterFor;

module.exports = {
  getConstructor: function (wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {
    var Constructor = wrapper(function (that, iterable) {
      anInstance(that, Prototype);
      setInternalState(that, {
        type: CONSTRUCTOR_NAME,
        index: create(null),
        first: undefined,
        last: undefined,
        size: 0
      });
      if (!DESCRIPTORS) that.size = 0;
      if (!isNullOrUndefined(iterable)) iterate(iterable, that[ADDER], { that: that, AS_ENTRIES: IS_MAP });
    });

    var Prototype = Constructor.prototype;

    var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);

    var define = function (that, key, value) {
      var state = getInternalState(that);
      var entry = getEntry(that, key);
      var previous, index;
      // change existing entry
      if (entry) {
        entry.value = value;
      // create new entry
      } else {
        state.last = entry = {
          index: index = fastKey(key, true),
          key: key,
          value: value,
          previous: previous = state.last,
          next: undefined,
          removed: false
        };
        if (!state.first) state.first = entry;
        if (previous) previous.next = entry;
        if (DESCRIPTORS) state.size++;
        else that.size++;
        // add to index
        if (index !== 'F') state.index[index] = entry;
      } return that;
    };

    var getEntry = function (that, key) {
      var state = getInternalState(that);
      // fast case
      var index = fastKey(key);
      var entry;
      if (index !== 'F') return state.index[index];
      // frozen object case
      for (entry = state.first; entry; entry = entry.next) {
        if (entry.key == key) return entry;
      }
    };

    defineBuiltIns(Prototype, {
      // `{ Map, Set }.prototype.clear()` methods
      // https://tc39.es/ecma262/#sec-map.prototype.clear
      // https://tc39.es/ecma262/#sec-set.prototype.clear
      clear: function clear() {
        var that = this;
        var state = getInternalState(that);
        var data = state.index;
        var entry = state.first;
        while (entry) {
          entry.removed = true;
          if (entry.previous) entry.previous = entry.previous.next = undefined;
          delete data[entry.index];
          entry = entry.next;
        }
        state.first = state.last = undefined;
        if (DESCRIPTORS) state.size = 0;
        else that.size = 0;
      },
      // `{ Map, Set }.prototype.delete(key)` methods
      // https://tc39.es/ecma262/#sec-map.prototype.delete
      // https://tc39.es/ecma262/#sec-set.prototype.delete
      'delete': function (key) {
        var that = this;
        var state = getInternalState(that);
        var entry = getEntry(that, key);
        if (entry) {
          var next = entry.next;
          var prev = entry.previous;
          delete state.index[entry.index];
          entry.removed = true;
          if (prev) prev.next = next;
          if (next) next.previous = prev;
          if (state.first == entry) state.first = next;
          if (state.last == entry) state.last = prev;
          if (DESCRIPTORS) state.size--;
          else that.size--;
        } return !!entry;
      },
      // `{ Map, Set }.prototype.forEach(callbackfn, thisArg = undefined)` methods
      // https://tc39.es/ecma262/#sec-map.prototype.foreach
      // https://tc39.es/ecma262/#sec-set.prototype.foreach
      forEach: function forEach(callbackfn /* , that = undefined */) {
        var state = getInternalState(this);
        var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined);
        var entry;
        while (entry = entry ? entry.next : state.first) {
          boundFunction(entry.value, entry.key, this);
          // revert to the last existing entry
          while (entry && entry.removed) entry = entry.previous;
        }
      },
      // `{ Map, Set}.prototype.has(key)` methods
      // https://tc39.es/ecma262/#sec-map.prototype.has
      // https://tc39.es/ecma262/#sec-set.prototype.has
      has: function has(key) {
        return !!getEntry(this, key);
      }
    });

    defineBuiltIns(Prototype, IS_MAP ? {
      // `Map.prototype.get(key)` method
      // https://tc39.es/ecma262/#sec-map.prototype.get
      get: function get(key) {
        var entry = getEntry(this, key);
        return entry && entry.value;
      },
      // `Map.prototype.set(key, value)` method
      // https://tc39.es/ecma262/#sec-map.prototype.set
      set: function set(key, value) {
        return define(this, key === 0 ? 0 : key, value);
      }
    } : {
      // `Set.prototype.add(value)` method
      // https://tc39.es/ecma262/#sec-set.prototype.add
      add: function add(value) {
        return define(this, value = value === 0 ? 0 : value, value);
      }
    });
    if (DESCRIPTORS) defineProperty(Prototype, 'size', {
      get: function () {
        return getInternalState(this).size;
      }
    });
    return Constructor;
  },
  setStrong: function (Constructor, CONSTRUCTOR_NAME, IS_MAP) {
    var ITERATOR_NAME = CONSTRUCTOR_NAME + ' Iterator';
    var getInternalCollectionState = internalStateGetterFor(CONSTRUCTOR_NAME);
    var getInternalIteratorState = internalStateGetterFor(ITERATOR_NAME);
    // `{ Map, Set }.prototype.{ keys, values, entries, @@iterator }()` methods
    // https://tc39.es/ecma262/#sec-map.prototype.entries
    // https://tc39.es/ecma262/#sec-map.prototype.keys
    // https://tc39.es/ecma262/#sec-map.prototype.values
    // https://tc39.es/ecma262/#sec-map.prototype-@@iterator
    // https://tc39.es/ecma262/#sec-set.prototype.entries
    // https://tc39.es/ecma262/#sec-set.prototype.keys
    // https://tc39.es/ecma262/#sec-set.prototype.values
    // https://tc39.es/ecma262/#sec-set.prototype-@@iterator
    defineIterator(Constructor, CONSTRUCTOR_NAME, function (iterated, kind) {
      setInternalState(this, {
        type: ITERATOR_NAME,
        target: iterated,
        state: getInternalCollectionState(iterated),
        kind: kind,
        last: undefined
      });
    }, function () {
      var state = getInternalIteratorState(this);
      var kind = state.kind;
      var entry = state.last;
      // revert to the last existing entry
      while (entry && entry.removed) entry = entry.previous;
      // get next entry
      if (!state.target || !(state.last = entry = entry ? entry.next : state.state.first)) {
        // or finish the iteration
        state.target = undefined;
        return createIterResultObject(undefined, true);
      }
      // return step by kind
      if (kind == 'keys') return createIterResultObject(entry.key, false);
      if (kind == 'values') return createIterResultObject(entry.value, false);
      return createIterResultObject([entry.key, entry.value], false);
    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);

    // `{ Map, Set }.prototype[@@species]` accessors
    // https://tc39.es/ecma262/#sec-get-map-@@species
    // https://tc39.es/ecma262/#sec-get-set-@@species
    setSpecies(CONSTRUCTOR_NAME);
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/collection-weak.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/collection-weak.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var defineBuiltIns = __webpack_require__(/*! ../internals/define-built-ins */ "./node_modules/core-js/internals/define-built-ins.js");
var getWeakData = (__webpack_require__(/*! ../internals/internal-metadata */ "./node_modules/core-js/internals/internal-metadata.js").getWeakData);
var anInstance = __webpack_require__(/*! ../internals/an-instance */ "./node_modules/core-js/internals/an-instance.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var isNullOrUndefined = __webpack_require__(/*! ../internals/is-null-or-undefined */ "./node_modules/core-js/internals/is-null-or-undefined.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/core-js/internals/iterate.js");
var ArrayIterationModule = __webpack_require__(/*! ../internals/array-iteration */ "./node_modules/core-js/internals/array-iteration.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "./node_modules/core-js/internals/internal-state.js");

var setInternalState = InternalStateModule.set;
var internalStateGetterFor = InternalStateModule.getterFor;
var find = ArrayIterationModule.find;
var findIndex = ArrayIterationModule.findIndex;
var splice = uncurryThis([].splice);
var id = 0;

// fallback for uncaught frozen keys
var uncaughtFrozenStore = function (store) {
  return store.frozen || (store.frozen = new UncaughtFrozenStore());
};

var UncaughtFrozenStore = function () {
  this.entries = [];
};

var findUncaughtFrozen = function (store, key) {
  return find(store.entries, function (it) {
    return it[0] === key;
  });
};

UncaughtFrozenStore.prototype = {
  get: function (key) {
    var entry = findUncaughtFrozen(this, key);
    if (entry) return entry[1];
  },
  has: function (key) {
    return !!findUncaughtFrozen(this, key);
  },
  set: function (key, value) {
    var entry = findUncaughtFrozen(this, key);
    if (entry) entry[1] = value;
    else this.entries.push([key, value]);
  },
  'delete': function (key) {
    var index = findIndex(this.entries, function (it) {
      return it[0] === key;
    });
    if (~index) splice(this.entries, index, 1);
    return !!~index;
  }
};

module.exports = {
  getConstructor: function (wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {
    var Constructor = wrapper(function (that, iterable) {
      anInstance(that, Prototype);
      setInternalState(that, {
        type: CONSTRUCTOR_NAME,
        id: id++,
        frozen: undefined
      });
      if (!isNullOrUndefined(iterable)) iterate(iterable, that[ADDER], { that: that, AS_ENTRIES: IS_MAP });
    });

    var Prototype = Constructor.prototype;

    var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);

    var define = function (that, key, value) {
      var state = getInternalState(that);
      var data = getWeakData(anObject(key), true);
      if (data === true) uncaughtFrozenStore(state).set(key, value);
      else data[state.id] = value;
      return that;
    };

    defineBuiltIns(Prototype, {
      // `{ WeakMap, WeakSet }.prototype.delete(key)` methods
      // https://tc39.es/ecma262/#sec-weakmap.prototype.delete
      // https://tc39.es/ecma262/#sec-weakset.prototype.delete
      'delete': function (key) {
        var state = getInternalState(this);
        if (!isObject(key)) return false;
        var data = getWeakData(key);
        if (data === true) return uncaughtFrozenStore(state)['delete'](key);
        return data && hasOwn(data, state.id) && delete data[state.id];
      },
      // `{ WeakMap, WeakSet }.prototype.has(key)` methods
      // https://tc39.es/ecma262/#sec-weakmap.prototype.has
      // https://tc39.es/ecma262/#sec-weakset.prototype.has
      has: function has(key) {
        var state = getInternalState(this);
        if (!isObject(key)) return false;
        var data = getWeakData(key);
        if (data === true) return uncaughtFrozenStore(state).has(key);
        return data && hasOwn(data, state.id);
      }
    });

    defineBuiltIns(Prototype, IS_MAP ? {
      // `WeakMap.prototype.get(key)` method
      // https://tc39.es/ecma262/#sec-weakmap.prototype.get
      get: function get(key) {
        var state = getInternalState(this);
        if (isObject(key)) {
          var data = getWeakData(key);
          if (data === true) return uncaughtFrozenStore(state).get(key);
          return data ? data[state.id] : undefined;
        }
      },
      // `WeakMap.prototype.set(key, value)` method
      // https://tc39.es/ecma262/#sec-weakmap.prototype.set
      set: function set(key, value) {
        return define(this, key, value);
      }
    } : {
      // `WeakSet.prototype.add(value)` method
      // https://tc39.es/ecma262/#sec-weakset.prototype.add
      add: function add(value) {
        return define(this, value, true);
      }
    });

    return Constructor;
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/collection.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/internals/collection.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var isForced = __webpack_require__(/*! ../internals/is-forced */ "./node_modules/core-js/internals/is-forced.js");
var defineBuiltIn = __webpack_require__(/*! ../internals/define-built-in */ "./node_modules/core-js/internals/define-built-in.js");
var InternalMetadataModule = __webpack_require__(/*! ../internals/internal-metadata */ "./node_modules/core-js/internals/internal-metadata.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/core-js/internals/iterate.js");
var anInstance = __webpack_require__(/*! ../internals/an-instance */ "./node_modules/core-js/internals/an-instance.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var isNullOrUndefined = __webpack_require__(/*! ../internals/is-null-or-undefined */ "./node_modules/core-js/internals/is-null-or-undefined.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var checkCorrectnessOfIteration = __webpack_require__(/*! ../internals/check-correctness-of-iteration */ "./node_modules/core-js/internals/check-correctness-of-iteration.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "./node_modules/core-js/internals/set-to-string-tag.js");
var inheritIfRequired = __webpack_require__(/*! ../internals/inherit-if-required */ "./node_modules/core-js/internals/inherit-if-required.js");

module.exports = function (CONSTRUCTOR_NAME, wrapper, common) {
  var IS_MAP = CONSTRUCTOR_NAME.indexOf('Map') !== -1;
  var IS_WEAK = CONSTRUCTOR_NAME.indexOf('Weak') !== -1;
  var ADDER = IS_MAP ? 'set' : 'add';
  var NativeConstructor = global[CONSTRUCTOR_NAME];
  var NativePrototype = NativeConstructor && NativeConstructor.prototype;
  var Constructor = NativeConstructor;
  var exported = {};

  var fixMethod = function (KEY) {
    var uncurriedNativeMethod = uncurryThis(NativePrototype[KEY]);
    defineBuiltIn(NativePrototype, KEY,
      KEY == 'add' ? function add(value) {
        uncurriedNativeMethod(this, value === 0 ? 0 : value);
        return this;
      } : KEY == 'delete' ? function (key) {
        return IS_WEAK && !isObject(key) ? false : uncurriedNativeMethod(this, key === 0 ? 0 : key);
      } : KEY == 'get' ? function get(key) {
        return IS_WEAK && !isObject(key) ? undefined : uncurriedNativeMethod(this, key === 0 ? 0 : key);
      } : KEY == 'has' ? function has(key) {
        return IS_WEAK && !isObject(key) ? false : uncurriedNativeMethod(this, key === 0 ? 0 : key);
      } : function set(key, value) {
        uncurriedNativeMethod(this, key === 0 ? 0 : key, value);
        return this;
      }
    );
  };

  var REPLACE = isForced(
    CONSTRUCTOR_NAME,
    !isCallable(NativeConstructor) || !(IS_WEAK || NativePrototype.forEach && !fails(function () {
      new NativeConstructor().entries().next();
    }))
  );

  if (REPLACE) {
    // create collection constructor
    Constructor = common.getConstructor(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER);
    InternalMetadataModule.enable();
  } else if (isForced(CONSTRUCTOR_NAME, true)) {
    var instance = new Constructor();
    // early implementations not supports chaining
    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;
    // V8 ~ Chromium 40- weak-collections throws on primitives, but should return false
    var THROWS_ON_PRIMITIVES = fails(function () { instance.has(1); });
    // most early implementations doesn't supports iterables, most modern - not close it correctly
    // eslint-disable-next-line no-new -- required for testing
    var ACCEPT_ITERABLES = checkCorrectnessOfIteration(function (iterable) { new NativeConstructor(iterable); });
    // for early implementations -0 and +0 not the same
    var BUGGY_ZERO = !IS_WEAK && fails(function () {
      // V8 ~ Chromium 42- fails only with 5+ elements
      var $instance = new NativeConstructor();
      var index = 5;
      while (index--) $instance[ADDER](index, index);
      return !$instance.has(-0);
    });

    if (!ACCEPT_ITERABLES) {
      Constructor = wrapper(function (dummy, iterable) {
        anInstance(dummy, NativePrototype);
        var that = inheritIfRequired(new NativeConstructor(), dummy, Constructor);
        if (!isNullOrUndefined(iterable)) iterate(iterable, that[ADDER], { that: that, AS_ENTRIES: IS_MAP });
        return that;
      });
      Constructor.prototype = NativePrototype;
      NativePrototype.constructor = Constructor;
    }

    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
      fixMethod('delete');
      fixMethod('has');
      IS_MAP && fixMethod('get');
    }

    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);

    // weak collections should not contains .clear method
    if (IS_WEAK && NativePrototype.clear) delete NativePrototype.clear;
  }

  exported[CONSTRUCTOR_NAME] = Constructor;
  $({ global: true, constructor: true, forced: Constructor != NativeConstructor }, exported);

  setToStringTag(Constructor, CONSTRUCTOR_NAME);

  if (!IS_WEAK) common.setStrong(Constructor, CONSTRUCTOR_NAME, IS_MAP);

  return Constructor;
};


/***/ }),

/***/ "./node_modules/core-js/internals/copy-constructor-properties.js":
/*!***********************************************************************!*\
  !*** ./node_modules/core-js/internals/copy-constructor-properties.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var ownKeys = __webpack_require__(/*! ../internals/own-keys */ "./node_modules/core-js/internals/own-keys.js");
var getOwnPropertyDescriptorModule = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "./node_modules/core-js/internals/object-get-own-property-descriptor.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");

module.exports = function (target, source, exceptions) {
  var keys = ownKeys(source);
  var defineProperty = definePropertyModule.f;
  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    if (!hasOwn(target, key) && !(exceptions && hasOwn(exceptions, key))) {
      defineProperty(target, key, getOwnPropertyDescriptor(source, key));
    }
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/correct-prototype-getter.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/correct-prototype-getter.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

module.exports = !fails(function () {
  function F() { /* empty */ }
  F.prototype.constructor = null;
  // eslint-disable-next-line es/no-object-getprototypeof -- required for testing
  return Object.getPrototypeOf(new F()) !== F.prototype;
});


/***/ }),

/***/ "./node_modules/core-js/internals/create-iter-result-object.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/internals/create-iter-result-object.js ***!
  \*********************************************************************/
/***/ ((module) => {

// `CreateIterResultObject` abstract operation
// https://tc39.es/ecma262/#sec-createiterresultobject
module.exports = function (value, done) {
  return { value: value, done: done };
};


/***/ }),

/***/ "./node_modules/core-js/internals/create-non-enumerable-property.js":
/*!**************************************************************************!*\
  !*** ./node_modules/core-js/internals/create-non-enumerable-property.js ***!
  \**************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "./node_modules/core-js/internals/create-property-descriptor.js");

module.exports = DESCRIPTORS ? function (object, key, value) {
  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),

/***/ "./node_modules/core-js/internals/create-property-descriptor.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/internals/create-property-descriptor.js ***!
  \**********************************************************************/
/***/ ((module) => {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),

/***/ "./node_modules/core-js/internals/create-property.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/create-property.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var toPropertyKey = __webpack_require__(/*! ../internals/to-property-key */ "./node_modules/core-js/internals/to-property-key.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "./node_modules/core-js/internals/create-property-descriptor.js");

module.exports = function (object, key, value) {
  var propertyKey = toPropertyKey(key);
  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));
  else object[propertyKey] = value;
};


/***/ }),

/***/ "./node_modules/core-js/internals/define-built-in.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/define-built-in.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");
var makeBuiltIn = __webpack_require__(/*! ../internals/make-built-in */ "./node_modules/core-js/internals/make-built-in.js");
var defineGlobalProperty = __webpack_require__(/*! ../internals/define-global-property */ "./node_modules/core-js/internals/define-global-property.js");

module.exports = function (O, key, value, options) {
  if (!options) options = {};
  var simple = options.enumerable;
  var name = options.name !== undefined ? options.name : key;
  if (isCallable(value)) makeBuiltIn(value, name, options);
  if (options.global) {
    if (simple) O[key] = value;
    else defineGlobalProperty(key, value);
  } else {
    try {
      if (!options.unsafe) delete O[key];
      else if (O[key]) simple = true;
    } catch (error) { /* empty */ }
    if (simple) O[key] = value;
    else definePropertyModule.f(O, key, {
      value: value,
      enumerable: false,
      configurable: !options.nonConfigurable,
      writable: !options.nonWritable
    });
  } return O;
};


/***/ }),

/***/ "./node_modules/core-js/internals/define-built-ins.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/internals/define-built-ins.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var defineBuiltIn = __webpack_require__(/*! ../internals/define-built-in */ "./node_modules/core-js/internals/define-built-in.js");

module.exports = function (target, src, options) {
  for (var key in src) defineBuiltIn(target, key, src[key], options);
  return target;
};


/***/ }),

/***/ "./node_modules/core-js/internals/define-global-property.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/define-global-property.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");

// eslint-disable-next-line es/no-object-defineproperty -- safe
var defineProperty = Object.defineProperty;

module.exports = function (key, value) {
  try {
    defineProperty(global, key, { value: value, configurable: true, writable: true });
  } catch (error) {
    global[key] = value;
  } return value;
};


/***/ }),

/***/ "./node_modules/core-js/internals/descriptors.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/descriptors.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

// Detect IE8's incomplete defineProperty implementation
module.exports = !fails(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;
});


/***/ }),

/***/ "./node_modules/core-js/internals/document-all.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/document-all.js ***!
  \********************************************************/
/***/ ((module) => {

var documentAll = typeof document == 'object' && document.all;

// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot
// eslint-disable-next-line unicorn/no-typeof-undefined -- required for testing
var IS_HTMLDDA = typeof documentAll == 'undefined' && documentAll !== undefined;

module.exports = {
  all: documentAll,
  IS_HTMLDDA: IS_HTMLDDA
};


/***/ }),

/***/ "./node_modules/core-js/internals/document-create-element.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/internals/document-create-element.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");

var document = global.document;
// typeof document.createElement is 'object' in old IE
var EXISTS = isObject(document) && isObject(document.createElement);

module.exports = function (it) {
  return EXISTS ? document.createElement(it) : {};
};


/***/ }),

/***/ "./node_modules/core-js/internals/engine-user-agent.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/engine-user-agent.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");

module.exports = getBuiltIn('navigator', 'userAgent') || '';


/***/ }),

/***/ "./node_modules/core-js/internals/engine-v8-version.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/engine-v8-version.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var userAgent = __webpack_require__(/*! ../internals/engine-user-agent */ "./node_modules/core-js/internals/engine-user-agent.js");

var process = global.process;
var Deno = global.Deno;
var versions = process && process.versions || Deno && Deno.version;
var v8 = versions && versions.v8;
var match, version;

if (v8) {
  match = v8.split('.');
  // in old Chrome, versions of V8 isn't V8 = Chrome / 10
  // but their correct versions are not interesting for us
  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);
}

// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`
// so check `userAgent` even if `.v8` exists, but 0
if (!version && userAgent) {
  match = userAgent.match(/Edge\/(\d+)/);
  if (!match || match[1] >= 74) {
    match = userAgent.match(/Chrome\/(\d+)/);
    if (match) version = +match[1];
  }
}

module.exports = version;


/***/ }),

/***/ "./node_modules/core-js/internals/enum-bug-keys.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/enum-bug-keys.js ***!
  \*********************************************************/
/***/ ((module) => {

// IE8- don't enum bug keys
module.exports = [
  'constructor',
  'hasOwnProperty',
  'isPrototypeOf',
  'propertyIsEnumerable',
  'toLocaleString',
  'toString',
  'valueOf'
];


/***/ }),

/***/ "./node_modules/core-js/internals/export.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/internals/export.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var getOwnPropertyDescriptor = (__webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "./node_modules/core-js/internals/object-get-own-property-descriptor.js").f);
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/core-js/internals/create-non-enumerable-property.js");
var defineBuiltIn = __webpack_require__(/*! ../internals/define-built-in */ "./node_modules/core-js/internals/define-built-in.js");
var defineGlobalProperty = __webpack_require__(/*! ../internals/define-global-property */ "./node_modules/core-js/internals/define-global-property.js");
var copyConstructorProperties = __webpack_require__(/*! ../internals/copy-constructor-properties */ "./node_modules/core-js/internals/copy-constructor-properties.js");
var isForced = __webpack_require__(/*! ../internals/is-forced */ "./node_modules/core-js/internals/is-forced.js");

/*
  options.target         - name of the target object
  options.global         - target is the global object
  options.stat           - export as static methods of target
  options.proto          - export as prototype methods of target
  options.real           - real prototype method for the `pure` version
  options.forced         - export even if the native feature is available
  options.bind           - bind methods to the target, required for the `pure` version
  options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe         - use the simple assignment of property instead of delete + defineProperty
  options.sham           - add a flag to not completely full polyfills
  options.enumerable     - export as enumerable property
  options.dontCallGetSet - prevent calling a getter on target
  options.name           - the .name of the function if it does not match the key
*/
module.exports = function (options, source) {
  var TARGET = options.target;
  var GLOBAL = options.global;
  var STATIC = options.stat;
  var FORCED, target, key, targetProperty, sourceProperty, descriptor;
  if (GLOBAL) {
    target = global;
  } else if (STATIC) {
    target = global[TARGET] || defineGlobalProperty(TARGET, {});
  } else {
    target = (global[TARGET] || {}).prototype;
  }
  if (target) for (key in source) {
    sourceProperty = source[key];
    if (options.dontCallGetSet) {
      descriptor = getOwnPropertyDescriptor(target, key);
      targetProperty = descriptor && descriptor.value;
    } else targetProperty = target[key];
    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);
    // contained in target
    if (!FORCED && targetProperty !== undefined) {
      if (typeof sourceProperty == typeof targetProperty) continue;
      copyConstructorProperties(sourceProperty, targetProperty);
    }
    // add a flag to not completely full polyfills
    if (options.sham || (targetProperty && targetProperty.sham)) {
      createNonEnumerableProperty(sourceProperty, 'sham', true);
    }
    defineBuiltIn(target, key, sourceProperty, options);
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/fails.js":
/*!*************************************************!*\
  !*** ./node_modules/core-js/internals/fails.js ***!
  \*************************************************/
/***/ ((module) => {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (error) {
    return true;
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/freezing.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/internals/freezing.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

module.exports = !fails(function () {
  // eslint-disable-next-line es/no-object-isextensible, es/no-object-preventextensions -- required for testing
  return Object.isExtensible(Object.preventExtensions({}));
});


/***/ }),

/***/ "./node_modules/core-js/internals/function-bind-context.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/internals/function-bind-context.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this-clause */ "./node_modules/core-js/internals/function-uncurry-this-clause.js");
var aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/core-js/internals/a-callable.js");
var NATIVE_BIND = __webpack_require__(/*! ../internals/function-bind-native */ "./node_modules/core-js/internals/function-bind-native.js");

var bind = uncurryThis(uncurryThis.bind);

// optional / simple context binding
module.exports = function (fn, that) {
  aCallable(fn);
  return that === undefined ? fn : NATIVE_BIND ? bind(fn, that) : function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),

/***/ "./node_modules/core-js/internals/function-bind-native.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/function-bind-native.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

module.exports = !fails(function () {
  // eslint-disable-next-line es/no-function-prototype-bind -- safe
  var test = (function () { /* empty */ }).bind();
  // eslint-disable-next-line no-prototype-builtins -- safe
  return typeof test != 'function' || test.hasOwnProperty('prototype');
});


/***/ }),

/***/ "./node_modules/core-js/internals/function-call.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/function-call.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var NATIVE_BIND = __webpack_require__(/*! ../internals/function-bind-native */ "./node_modules/core-js/internals/function-bind-native.js");

var call = Function.prototype.call;

module.exports = NATIVE_BIND ? call.bind(call) : function () {
  return call.apply(call, arguments);
};


/***/ }),

/***/ "./node_modules/core-js/internals/function-name.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/function-name.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");

var FunctionPrototype = Function.prototype;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getDescriptor = DESCRIPTORS && Object.getOwnPropertyDescriptor;

var EXISTS = hasOwn(FunctionPrototype, 'name');
// additional protection from minified / mangled / dropped function names
var PROPER = EXISTS && (function something() { /* empty */ }).name === 'something';
var CONFIGURABLE = EXISTS && (!DESCRIPTORS || (DESCRIPTORS && getDescriptor(FunctionPrototype, 'name').configurable));

module.exports = {
  EXISTS: EXISTS,
  PROPER: PROPER,
  CONFIGURABLE: CONFIGURABLE
};


/***/ }),

/***/ "./node_modules/core-js/internals/function-uncurry-this-clause.js":
/*!************************************************************************!*\
  !*** ./node_modules/core-js/internals/function-uncurry-this-clause.js ***!
  \************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var classofRaw = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");

module.exports = function (fn) {
  // Nashorn bug:
  //   https://github.com/zloirock/core-js/issues/1128
  //   https://github.com/zloirock/core-js/issues/1130
  if (classofRaw(fn) === 'Function') return uncurryThis(fn);
};


/***/ }),

/***/ "./node_modules/core-js/internals/function-uncurry-this.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/internals/function-uncurry-this.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var NATIVE_BIND = __webpack_require__(/*! ../internals/function-bind-native */ "./node_modules/core-js/internals/function-bind-native.js");

var FunctionPrototype = Function.prototype;
var call = FunctionPrototype.call;
var uncurryThisWithBind = NATIVE_BIND && FunctionPrototype.bind.bind(call, call);

module.exports = NATIVE_BIND ? uncurryThisWithBind : function (fn) {
  return function () {
    return call.apply(fn, arguments);
  };
};


/***/ }),

/***/ "./node_modules/core-js/internals/get-built-in.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/get-built-in.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");

var aFunction = function (argument) {
  return isCallable(argument) ? argument : undefined;
};

module.exports = function (namespace, method) {
  return arguments.length < 2 ? aFunction(global[namespace]) : global[namespace] && global[namespace][method];
};


/***/ }),

/***/ "./node_modules/core-js/internals/get-iterator-method.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/internals/get-iterator-method.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var classof = __webpack_require__(/*! ../internals/classof */ "./node_modules/core-js/internals/classof.js");
var getMethod = __webpack_require__(/*! ../internals/get-method */ "./node_modules/core-js/internals/get-method.js");
var isNullOrUndefined = __webpack_require__(/*! ../internals/is-null-or-undefined */ "./node_modules/core-js/internals/is-null-or-undefined.js");
var Iterators = __webpack_require__(/*! ../internals/iterators */ "./node_modules/core-js/internals/iterators.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var ITERATOR = wellKnownSymbol('iterator');

module.exports = function (it) {
  if (!isNullOrUndefined(it)) return getMethod(it, ITERATOR)
    || getMethod(it, '@@iterator')
    || Iterators[classof(it)];
};


/***/ }),

/***/ "./node_modules/core-js/internals/get-iterator.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/get-iterator.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/core-js/internals/a-callable.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var tryToString = __webpack_require__(/*! ../internals/try-to-string */ "./node_modules/core-js/internals/try-to-string.js");
var getIteratorMethod = __webpack_require__(/*! ../internals/get-iterator-method */ "./node_modules/core-js/internals/get-iterator-method.js");

var $TypeError = TypeError;

module.exports = function (argument, usingIterator) {
  var iteratorMethod = arguments.length < 2 ? getIteratorMethod(argument) : usingIterator;
  if (aCallable(iteratorMethod)) return anObject(call(iteratorMethod, argument));
  throw $TypeError(tryToString(argument) + ' is not iterable');
};


/***/ }),

/***/ "./node_modules/core-js/internals/get-method.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/internals/get-method.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/core-js/internals/a-callable.js");
var isNullOrUndefined = __webpack_require__(/*! ../internals/is-null-or-undefined */ "./node_modules/core-js/internals/is-null-or-undefined.js");

// `GetMethod` abstract operation
// https://tc39.es/ecma262/#sec-getmethod
module.exports = function (V, P) {
  var func = V[P];
  return isNullOrUndefined(func) ? undefined : aCallable(func);
};


/***/ }),

/***/ "./node_modules/core-js/internals/global.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/internals/global.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var check = function (it) {
  return it && it.Math == Math && it;
};

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
module.exports =
  // eslint-disable-next-line es/no-global-this -- safe
  check(typeof globalThis == 'object' && globalThis) ||
  check(typeof window == 'object' && window) ||
  // eslint-disable-next-line no-restricted-globals -- safe
  check(typeof self == 'object' && self) ||
  check(typeof __webpack_require__.g == 'object' && __webpack_require__.g) ||
  // eslint-disable-next-line no-new-func -- fallback
  (function () { return this; })() || Function('return this')();


/***/ }),

/***/ "./node_modules/core-js/internals/has-own-property.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/internals/has-own-property.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");

var hasOwnProperty = uncurryThis({}.hasOwnProperty);

// `HasOwnProperty` abstract operation
// https://tc39.es/ecma262/#sec-hasownproperty
// eslint-disable-next-line es/no-object-hasown -- safe
module.exports = Object.hasOwn || function hasOwn(it, key) {
  return hasOwnProperty(toObject(it), key);
};


/***/ }),

/***/ "./node_modules/core-js/internals/hidden-keys.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/hidden-keys.js ***!
  \*******************************************************/
/***/ ((module) => {

module.exports = {};


/***/ }),

/***/ "./node_modules/core-js/internals/html.js":
/*!************************************************!*\
  !*** ./node_modules/core-js/internals/html.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");

module.exports = getBuiltIn('document', 'documentElement');


/***/ }),

/***/ "./node_modules/core-js/internals/ie8-dom-define.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/ie8-dom-define.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var createElement = __webpack_require__(/*! ../internals/document-create-element */ "./node_modules/core-js/internals/document-create-element.js");

// Thanks to IE8 for its funny defineProperty
module.exports = !DESCRIPTORS && !fails(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty(createElement('div'), 'a', {
    get: function () { return 7; }
  }).a != 7;
});


/***/ }),

/***/ "./node_modules/core-js/internals/indexed-object.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/indexed-object.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var classof = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");

var $Object = Object;
var split = uncurryThis(''.split);

// fallback for non-array-like ES3 and non-enumerable old V8 strings
module.exports = fails(function () {
  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
  // eslint-disable-next-line no-prototype-builtins -- safe
  return !$Object('z').propertyIsEnumerable(0);
}) ? function (it) {
  return classof(it) == 'String' ? split(it, '') : $Object(it);
} : $Object;


/***/ }),

/***/ "./node_modules/core-js/internals/inherit-if-required.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/internals/inherit-if-required.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var setPrototypeOf = __webpack_require__(/*! ../internals/object-set-prototype-of */ "./node_modules/core-js/internals/object-set-prototype-of.js");

// makes subclassing work correct for wrapped built-ins
module.exports = function ($this, dummy, Wrapper) {
  var NewTarget, NewTargetPrototype;
  if (
    // it can work only with native `setPrototypeOf`
    setPrototypeOf &&
    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this
    isCallable(NewTarget = dummy.constructor) &&
    NewTarget !== Wrapper &&
    isObject(NewTargetPrototype = NewTarget.prototype) &&
    NewTargetPrototype !== Wrapper.prototype
  ) setPrototypeOf($this, NewTargetPrototype);
  return $this;
};


/***/ }),

/***/ "./node_modules/core-js/internals/inspect-source.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/inspect-source.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var store = __webpack_require__(/*! ../internals/shared-store */ "./node_modules/core-js/internals/shared-store.js");

var functionToString = uncurryThis(Function.toString);

// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper
if (!isCallable(store.inspectSource)) {
  store.inspectSource = function (it) {
    return functionToString(it);
  };
}

module.exports = store.inspectSource;


/***/ }),

/***/ "./node_modules/core-js/internals/internal-metadata.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/internal-metadata.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "./node_modules/core-js/internals/hidden-keys.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var defineProperty = (__webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js").f);
var getOwnPropertyNamesModule = __webpack_require__(/*! ../internals/object-get-own-property-names */ "./node_modules/core-js/internals/object-get-own-property-names.js");
var getOwnPropertyNamesExternalModule = __webpack_require__(/*! ../internals/object-get-own-property-names-external */ "./node_modules/core-js/internals/object-get-own-property-names-external.js");
var isExtensible = __webpack_require__(/*! ../internals/object-is-extensible */ "./node_modules/core-js/internals/object-is-extensible.js");
var uid = __webpack_require__(/*! ../internals/uid */ "./node_modules/core-js/internals/uid.js");
var FREEZING = __webpack_require__(/*! ../internals/freezing */ "./node_modules/core-js/internals/freezing.js");

var REQUIRED = false;
var METADATA = uid('meta');
var id = 0;

var setMetadata = function (it) {
  defineProperty(it, METADATA, { value: {
    objectID: 'O' + id++, // object ID
    weakData: {}          // weak collections IDs
  } });
};

var fastKey = function (it, create) {
  // return a primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!hasOwn(it, METADATA)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMetadata(it);
  // return object ID
  } return it[METADATA].objectID;
};

var getWeakData = function (it, create) {
  if (!hasOwn(it, METADATA)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMetadata(it);
  // return the store of weak collections IDs
  } return it[METADATA].weakData;
};

// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZING && REQUIRED && isExtensible(it) && !hasOwn(it, METADATA)) setMetadata(it);
  return it;
};

var enable = function () {
  meta.enable = function () { /* empty */ };
  REQUIRED = true;
  var getOwnPropertyNames = getOwnPropertyNamesModule.f;
  var splice = uncurryThis([].splice);
  var test = {};
  test[METADATA] = 1;

  // prevent exposing of metadata key
  if (getOwnPropertyNames(test).length) {
    getOwnPropertyNamesModule.f = function (it) {
      var result = getOwnPropertyNames(it);
      for (var i = 0, length = result.length; i < length; i++) {
        if (result[i] === METADATA) {
          splice(result, i, 1);
          break;
        }
      } return result;
    };

    $({ target: 'Object', stat: true, forced: true }, {
      getOwnPropertyNames: getOwnPropertyNamesExternalModule.f
    });
  }
};

var meta = module.exports = {
  enable: enable,
  fastKey: fastKey,
  getWeakData: getWeakData,
  onFreeze: onFreeze
};

hiddenKeys[METADATA] = true;


/***/ }),

/***/ "./node_modules/core-js/internals/internal-state.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/internal-state.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var NATIVE_WEAK_MAP = __webpack_require__(/*! ../internals/weak-map-basic-detection */ "./node_modules/core-js/internals/weak-map-basic-detection.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/core-js/internals/create-non-enumerable-property.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var shared = __webpack_require__(/*! ../internals/shared-store */ "./node_modules/core-js/internals/shared-store.js");
var sharedKey = __webpack_require__(/*! ../internals/shared-key */ "./node_modules/core-js/internals/shared-key.js");
var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "./node_modules/core-js/internals/hidden-keys.js");

var OBJECT_ALREADY_INITIALIZED = 'Object already initialized';
var TypeError = global.TypeError;
var WeakMap = global.WeakMap;
var set, get, has;

var enforce = function (it) {
  return has(it) ? get(it) : set(it, {});
};

var getterFor = function (TYPE) {
  return function (it) {
    var state;
    if (!isObject(it) || (state = get(it)).type !== TYPE) {
      throw TypeError('Incompatible receiver, ' + TYPE + ' required');
    } return state;
  };
};

if (NATIVE_WEAK_MAP || shared.state) {
  var store = shared.state || (shared.state = new WeakMap());
  /* eslint-disable no-self-assign -- prototype methods protection */
  store.get = store.get;
  store.has = store.has;
  store.set = store.set;
  /* eslint-enable no-self-assign -- prototype methods protection */
  set = function (it, metadata) {
    if (store.has(it)) throw TypeError(OBJECT_ALREADY_INITIALIZED);
    metadata.facade = it;
    store.set(it, metadata);
    return metadata;
  };
  get = function (it) {
    return store.get(it) || {};
  };
  has = function (it) {
    return store.has(it);
  };
} else {
  var STATE = sharedKey('state');
  hiddenKeys[STATE] = true;
  set = function (it, metadata) {
    if (hasOwn(it, STATE)) throw TypeError(OBJECT_ALREADY_INITIALIZED);
    metadata.facade = it;
    createNonEnumerableProperty(it, STATE, metadata);
    return metadata;
  };
  get = function (it) {
    return hasOwn(it, STATE) ? it[STATE] : {};
  };
  has = function (it) {
    return hasOwn(it, STATE);
  };
}

module.exports = {
  set: set,
  get: get,
  has: has,
  enforce: enforce,
  getterFor: getterFor
};


/***/ }),

/***/ "./node_modules/core-js/internals/is-array-iterator-method.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/is-array-iterator-method.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var Iterators = __webpack_require__(/*! ../internals/iterators */ "./node_modules/core-js/internals/iterators.js");

var ITERATOR = wellKnownSymbol('iterator');
var ArrayPrototype = Array.prototype;

// check on default Array iterator
module.exports = function (it) {
  return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);
};


/***/ }),

/***/ "./node_modules/core-js/internals/is-array.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/internals/is-array.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var classof = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");

// `IsArray` abstract operation
// https://tc39.es/ecma262/#sec-isarray
// eslint-disable-next-line es/no-array-isarray -- safe
module.exports = Array.isArray || function isArray(argument) {
  return classof(argument) == 'Array';
};


/***/ }),

/***/ "./node_modules/core-js/internals/is-callable.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/is-callable.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var $documentAll = __webpack_require__(/*! ../internals/document-all */ "./node_modules/core-js/internals/document-all.js");

var documentAll = $documentAll.all;

// `IsCallable` abstract operation
// https://tc39.es/ecma262/#sec-iscallable
module.exports = $documentAll.IS_HTMLDDA ? function (argument) {
  return typeof argument == 'function' || argument === documentAll;
} : function (argument) {
  return typeof argument == 'function';
};


/***/ }),

/***/ "./node_modules/core-js/internals/is-constructor.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/is-constructor.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var classof = __webpack_require__(/*! ../internals/classof */ "./node_modules/core-js/internals/classof.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var inspectSource = __webpack_require__(/*! ../internals/inspect-source */ "./node_modules/core-js/internals/inspect-source.js");

var noop = function () { /* empty */ };
var empty = [];
var construct = getBuiltIn('Reflect', 'construct');
var constructorRegExp = /^\s*(?:class|function)\b/;
var exec = uncurryThis(constructorRegExp.exec);
var INCORRECT_TO_STRING = !constructorRegExp.exec(noop);

var isConstructorModern = function isConstructor(argument) {
  if (!isCallable(argument)) return false;
  try {
    construct(noop, empty, argument);
    return true;
  } catch (error) {
    return false;
  }
};

var isConstructorLegacy = function isConstructor(argument) {
  if (!isCallable(argument)) return false;
  switch (classof(argument)) {
    case 'AsyncFunction':
    case 'GeneratorFunction':
    case 'AsyncGeneratorFunction': return false;
  }
  try {
    // we can't check .prototype since constructors produced by .bind haven't it
    // `Function#toString` throws on some built-it function in some legacy engines
    // (for example, `DOMQuad` and similar in FF41-)
    return INCORRECT_TO_STRING || !!exec(constructorRegExp, inspectSource(argument));
  } catch (error) {
    return true;
  }
};

isConstructorLegacy.sham = true;

// `IsConstructor` abstract operation
// https://tc39.es/ecma262/#sec-isconstructor
module.exports = !construct || fails(function () {
  var called;
  return isConstructorModern(isConstructorModern.call)
    || !isConstructorModern(Object)
    || !isConstructorModern(function () { called = true; })
    || called;
}) ? isConstructorLegacy : isConstructorModern;


/***/ }),

/***/ "./node_modules/core-js/internals/is-forced.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/is-forced.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");

var replacement = /#|\.prototype\./;

var isForced = function (feature, detection) {
  var value = data[normalize(feature)];
  return value == POLYFILL ? true
    : value == NATIVE ? false
    : isCallable(detection) ? fails(detection)
    : !!detection;
};

var normalize = isForced.normalize = function (string) {
  return String(string).replace(replacement, '.').toLowerCase();
};

var data = isForced.data = {};
var NATIVE = isForced.NATIVE = 'N';
var POLYFILL = isForced.POLYFILL = 'P';

module.exports = isForced;


/***/ }),

/***/ "./node_modules/core-js/internals/is-null-or-undefined.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/is-null-or-undefined.js ***!
  \****************************************************************/
/***/ ((module) => {

// we can't use just `it == null` since of `document.all` special case
// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot-aec
module.exports = function (it) {
  return it === null || it === undefined;
};


/***/ }),

/***/ "./node_modules/core-js/internals/is-object.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/is-object.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var $documentAll = __webpack_require__(/*! ../internals/document-all */ "./node_modules/core-js/internals/document-all.js");

var documentAll = $documentAll.all;

module.exports = $documentAll.IS_HTMLDDA ? function (it) {
  return typeof it == 'object' ? it !== null : isCallable(it) || it === documentAll;
} : function (it) {
  return typeof it == 'object' ? it !== null : isCallable(it);
};


/***/ }),

/***/ "./node_modules/core-js/internals/is-pure.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/internals/is-pure.js ***!
  \***************************************************/
/***/ ((module) => {

module.exports = false;


/***/ }),

/***/ "./node_modules/core-js/internals/is-symbol.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/is-symbol.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var isPrototypeOf = __webpack_require__(/*! ../internals/object-is-prototype-of */ "./node_modules/core-js/internals/object-is-prototype-of.js");
var USE_SYMBOL_AS_UID = __webpack_require__(/*! ../internals/use-symbol-as-uid */ "./node_modules/core-js/internals/use-symbol-as-uid.js");

var $Object = Object;

module.exports = USE_SYMBOL_AS_UID ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  var $Symbol = getBuiltIn('Symbol');
  return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, $Object(it));
};


/***/ }),

/***/ "./node_modules/core-js/internals/iterate.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/internals/iterate.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var bind = __webpack_require__(/*! ../internals/function-bind-context */ "./node_modules/core-js/internals/function-bind-context.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var tryToString = __webpack_require__(/*! ../internals/try-to-string */ "./node_modules/core-js/internals/try-to-string.js");
var isArrayIteratorMethod = __webpack_require__(/*! ../internals/is-array-iterator-method */ "./node_modules/core-js/internals/is-array-iterator-method.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "./node_modules/core-js/internals/length-of-array-like.js");
var isPrototypeOf = __webpack_require__(/*! ../internals/object-is-prototype-of */ "./node_modules/core-js/internals/object-is-prototype-of.js");
var getIterator = __webpack_require__(/*! ../internals/get-iterator */ "./node_modules/core-js/internals/get-iterator.js");
var getIteratorMethod = __webpack_require__(/*! ../internals/get-iterator-method */ "./node_modules/core-js/internals/get-iterator-method.js");
var iteratorClose = __webpack_require__(/*! ../internals/iterator-close */ "./node_modules/core-js/internals/iterator-close.js");

var $TypeError = TypeError;

var Result = function (stopped, result) {
  this.stopped = stopped;
  this.result = result;
};

var ResultPrototype = Result.prototype;

module.exports = function (iterable, unboundFunction, options) {
  var that = options && options.that;
  var AS_ENTRIES = !!(options && options.AS_ENTRIES);
  var IS_RECORD = !!(options && options.IS_RECORD);
  var IS_ITERATOR = !!(options && options.IS_ITERATOR);
  var INTERRUPTED = !!(options && options.INTERRUPTED);
  var fn = bind(unboundFunction, that);
  var iterator, iterFn, index, length, result, next, step;

  var stop = function (condition) {
    if (iterator) iteratorClose(iterator, 'normal', condition);
    return new Result(true, condition);
  };

  var callFn = function (value) {
    if (AS_ENTRIES) {
      anObject(value);
      return INTERRUPTED ? fn(value[0], value[1], stop) : fn(value[0], value[1]);
    } return INTERRUPTED ? fn(value, stop) : fn(value);
  };

  if (IS_RECORD) {
    iterator = iterable.iterator;
  } else if (IS_ITERATOR) {
    iterator = iterable;
  } else {
    iterFn = getIteratorMethod(iterable);
    if (!iterFn) throw $TypeError(tryToString(iterable) + ' is not iterable');
    // optimisation for array iterators
    if (isArrayIteratorMethod(iterFn)) {
      for (index = 0, length = lengthOfArrayLike(iterable); length > index; index++) {
        result = callFn(iterable[index]);
        if (result && isPrototypeOf(ResultPrototype, result)) return result;
      } return new Result(false);
    }
    iterator = getIterator(iterable, iterFn);
  }

  next = IS_RECORD ? iterable.next : iterator.next;
  while (!(step = call(next, iterator)).done) {
    try {
      result = callFn(step.value);
    } catch (error) {
      iteratorClose(iterator, 'throw', error);
    }
    if (typeof result == 'object' && result && isPrototypeOf(ResultPrototype, result)) return result;
  } return new Result(false);
};


/***/ }),

/***/ "./node_modules/core-js/internals/iterator-close.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/iterator-close.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var getMethod = __webpack_require__(/*! ../internals/get-method */ "./node_modules/core-js/internals/get-method.js");

module.exports = function (iterator, kind, value) {
  var innerResult, innerError;
  anObject(iterator);
  try {
    innerResult = getMethod(iterator, 'return');
    if (!innerResult) {
      if (kind === 'throw') throw value;
      return value;
    }
    innerResult = call(innerResult, iterator);
  } catch (error) {
    innerError = true;
    innerResult = error;
  }
  if (kind === 'throw') throw value;
  if (innerError) throw innerResult;
  anObject(innerResult);
  return value;
};


/***/ }),

/***/ "./node_modules/core-js/internals/iterator-create-constructor.js":
/*!***********************************************************************!*\
  !*** ./node_modules/core-js/internals/iterator-create-constructor.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var IteratorPrototype = (__webpack_require__(/*! ../internals/iterators-core */ "./node_modules/core-js/internals/iterators-core.js").IteratorPrototype);
var create = __webpack_require__(/*! ../internals/object-create */ "./node_modules/core-js/internals/object-create.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "./node_modules/core-js/internals/create-property-descriptor.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "./node_modules/core-js/internals/set-to-string-tag.js");
var Iterators = __webpack_require__(/*! ../internals/iterators */ "./node_modules/core-js/internals/iterators.js");

var returnThis = function () { return this; };

module.exports = function (IteratorConstructor, NAME, next, ENUMERABLE_NEXT) {
  var TO_STRING_TAG = NAME + ' Iterator';
  IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(+!ENUMERABLE_NEXT, next) });
  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);
  Iterators[TO_STRING_TAG] = returnThis;
  return IteratorConstructor;
};


/***/ }),

/***/ "./node_modules/core-js/internals/iterator-define.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/iterator-define.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var FunctionName = __webpack_require__(/*! ../internals/function-name */ "./node_modules/core-js/internals/function-name.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var createIteratorConstructor = __webpack_require__(/*! ../internals/iterator-create-constructor */ "./node_modules/core-js/internals/iterator-create-constructor.js");
var getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "./node_modules/core-js/internals/object-get-prototype-of.js");
var setPrototypeOf = __webpack_require__(/*! ../internals/object-set-prototype-of */ "./node_modules/core-js/internals/object-set-prototype-of.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "./node_modules/core-js/internals/set-to-string-tag.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/core-js/internals/create-non-enumerable-property.js");
var defineBuiltIn = __webpack_require__(/*! ../internals/define-built-in */ "./node_modules/core-js/internals/define-built-in.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var Iterators = __webpack_require__(/*! ../internals/iterators */ "./node_modules/core-js/internals/iterators.js");
var IteratorsCore = __webpack_require__(/*! ../internals/iterators-core */ "./node_modules/core-js/internals/iterators-core.js");

var PROPER_FUNCTION_NAME = FunctionName.PROPER;
var CONFIGURABLE_FUNCTION_NAME = FunctionName.CONFIGURABLE;
var IteratorPrototype = IteratorsCore.IteratorPrototype;
var BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;
var ITERATOR = wellKnownSymbol('iterator');
var KEYS = 'keys';
var VALUES = 'values';
var ENTRIES = 'entries';

var returnThis = function () { return this; };

module.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {
  createIteratorConstructor(IteratorConstructor, NAME, next);

  var getIterationMethod = function (KIND) {
    if (KIND === DEFAULT && defaultIterator) return defaultIterator;
    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];
    switch (KIND) {
      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };
      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };
      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };
    } return function () { return new IteratorConstructor(this); };
  };

  var TO_STRING_TAG = NAME + ' Iterator';
  var INCORRECT_VALUES_NAME = false;
  var IterablePrototype = Iterable.prototype;
  var nativeIterator = IterablePrototype[ITERATOR]
    || IterablePrototype['@@iterator']
    || DEFAULT && IterablePrototype[DEFAULT];
  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);
  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;
  var CurrentIteratorPrototype, methods, KEY;

  // fix native
  if (anyNativeIterator) {
    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));
    if (CurrentIteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {
      if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {
        if (setPrototypeOf) {
          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);
        } else if (!isCallable(CurrentIteratorPrototype[ITERATOR])) {
          defineBuiltIn(CurrentIteratorPrototype, ITERATOR, returnThis);
        }
      }
      // Set @@toStringTag to native iterators
      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);
      if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;
    }
  }

  // fix Array.prototype.{ values, @@iterator }.name in V8 / FF
  if (PROPER_FUNCTION_NAME && DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {
    if (!IS_PURE && CONFIGURABLE_FUNCTION_NAME) {
      createNonEnumerableProperty(IterablePrototype, 'name', VALUES);
    } else {
      INCORRECT_VALUES_NAME = true;
      defaultIterator = function values() { return call(nativeIterator, this); };
    }
  }

  // export additional methods
  if (DEFAULT) {
    methods = {
      values: getIterationMethod(VALUES),
      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
      entries: getIterationMethod(ENTRIES)
    };
    if (FORCED) for (KEY in methods) {
      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
        defineBuiltIn(IterablePrototype, KEY, methods[KEY]);
      }
    } else $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);
  }

  // define iterator
  if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {
    defineBuiltIn(IterablePrototype, ITERATOR, defaultIterator, { name: DEFAULT });
  }
  Iterators[NAME] = defaultIterator;

  return methods;
};


/***/ }),

/***/ "./node_modules/core-js/internals/iterators-core.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/iterators-core.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var create = __webpack_require__(/*! ../internals/object-create */ "./node_modules/core-js/internals/object-create.js");
var getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "./node_modules/core-js/internals/object-get-prototype-of.js");
var defineBuiltIn = __webpack_require__(/*! ../internals/define-built-in */ "./node_modules/core-js/internals/define-built-in.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");

var ITERATOR = wellKnownSymbol('iterator');
var BUGGY_SAFARI_ITERATORS = false;

// `%IteratorPrototype%` object
// https://tc39.es/ecma262/#sec-%iteratorprototype%-object
var IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;

/* eslint-disable es/no-array-prototype-keys -- safe */
if ([].keys) {
  arrayIterator = [].keys();
  // Safari 8 has buggy iterators w/o `next`
  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;
  else {
    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));
    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;
  }
}

var NEW_ITERATOR_PROTOTYPE = !isObject(IteratorPrototype) || fails(function () {
  var test = {};
  // FF44- legacy iterators case
  return IteratorPrototype[ITERATOR].call(test) !== test;
});

if (NEW_ITERATOR_PROTOTYPE) IteratorPrototype = {};
else if (IS_PURE) IteratorPrototype = create(IteratorPrototype);

// `%IteratorPrototype%[@@iterator]()` method
// https://tc39.es/ecma262/#sec-%iteratorprototype%-@@iterator
if (!isCallable(IteratorPrototype[ITERATOR])) {
  defineBuiltIn(IteratorPrototype, ITERATOR, function () {
    return this;
  });
}

module.exports = {
  IteratorPrototype: IteratorPrototype,
  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS
};


/***/ }),

/***/ "./node_modules/core-js/internals/iterators.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/iterators.js ***!
  \*****************************************************/
/***/ ((module) => {

module.exports = {};


/***/ }),

/***/ "./node_modules/core-js/internals/length-of-array-like.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/length-of-array-like.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var toLength = __webpack_require__(/*! ../internals/to-length */ "./node_modules/core-js/internals/to-length.js");

// `LengthOfArrayLike` abstract operation
// https://tc39.es/ecma262/#sec-lengthofarraylike
module.exports = function (obj) {
  return toLength(obj.length);
};


/***/ }),

/***/ "./node_modules/core-js/internals/make-built-in.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/make-built-in.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var CONFIGURABLE_FUNCTION_NAME = (__webpack_require__(/*! ../internals/function-name */ "./node_modules/core-js/internals/function-name.js").CONFIGURABLE);
var inspectSource = __webpack_require__(/*! ../internals/inspect-source */ "./node_modules/core-js/internals/inspect-source.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "./node_modules/core-js/internals/internal-state.js");

var enforceInternalState = InternalStateModule.enforce;
var getInternalState = InternalStateModule.get;
// eslint-disable-next-line es/no-object-defineproperty -- safe
var defineProperty = Object.defineProperty;

var CONFIGURABLE_LENGTH = DESCRIPTORS && !fails(function () {
  return defineProperty(function () { /* empty */ }, 'length', { value: 8 }).length !== 8;
});

var TEMPLATE = String(String).split('String');

var makeBuiltIn = module.exports = function (value, name, options) {
  if (String(name).slice(0, 7) === 'Symbol(') {
    name = '[' + String(name).replace(/^Symbol\(([^)]*)\)/, '$1') + ']';
  }
  if (options && options.getter) name = 'get ' + name;
  if (options && options.setter) name = 'set ' + name;
  if (!hasOwn(value, 'name') || (CONFIGURABLE_FUNCTION_NAME && value.name !== name)) {
    if (DESCRIPTORS) defineProperty(value, 'name', { value: name, configurable: true });
    else value.name = name;
  }
  if (CONFIGURABLE_LENGTH && options && hasOwn(options, 'arity') && value.length !== options.arity) {
    defineProperty(value, 'length', { value: options.arity });
  }
  try {
    if (options && hasOwn(options, 'constructor') && options.constructor) {
      if (DESCRIPTORS) defineProperty(value, 'prototype', { writable: false });
    // in V8 ~ Chrome 53, prototypes of some methods, like `Array.prototype.values`, are non-writable
    } else if (value.prototype) value.prototype = undefined;
  } catch (error) { /* empty */ }
  var state = enforceInternalState(value);
  if (!hasOwn(state, 'source')) {
    state.source = TEMPLATE.join(typeof name == 'string' ? name : '');
  } return value;
};

// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
// eslint-disable-next-line no-extend-native -- required
Function.prototype.toString = makeBuiltIn(function toString() {
  return isCallable(this) && getInternalState(this).source || inspectSource(this);
}, 'toString');


/***/ }),

/***/ "./node_modules/core-js/internals/math-trunc.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/internals/math-trunc.js ***!
  \******************************************************/
/***/ ((module) => {

var ceil = Math.ceil;
var floor = Math.floor;

// `Math.trunc` method
// https://tc39.es/ecma262/#sec-math.trunc
// eslint-disable-next-line es/no-math-trunc -- safe
module.exports = Math.trunc || function trunc(x) {
  var n = +x;
  return (n > 0 ? floor : ceil)(n);
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-assign.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/object-assign.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var objectKeys = __webpack_require__(/*! ../internals/object-keys */ "./node_modules/core-js/internals/object-keys.js");
var getOwnPropertySymbolsModule = __webpack_require__(/*! ../internals/object-get-own-property-symbols */ "./node_modules/core-js/internals/object-get-own-property-symbols.js");
var propertyIsEnumerableModule = __webpack_require__(/*! ../internals/object-property-is-enumerable */ "./node_modules/core-js/internals/object-property-is-enumerable.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");
var IndexedObject = __webpack_require__(/*! ../internals/indexed-object */ "./node_modules/core-js/internals/indexed-object.js");

// eslint-disable-next-line es/no-object-assign -- safe
var $assign = Object.assign;
// eslint-disable-next-line es/no-object-defineproperty -- required for testing
var defineProperty = Object.defineProperty;
var concat = uncurryThis([].concat);

// `Object.assign` method
// https://tc39.es/ecma262/#sec-object.assign
module.exports = !$assign || fails(function () {
  // should have correct order of operations (Edge bug)
  if (DESCRIPTORS && $assign({ b: 1 }, $assign(defineProperty({}, 'a', {
    enumerable: true,
    get: function () {
      defineProperty(this, 'b', {
        value: 3,
        enumerable: false
      });
    }
  }), { b: 2 })).b !== 1) return true;
  // should work with symbols and should have deterministic property order (V8 bug)
  var A = {};
  var B = {};
  // eslint-disable-next-line es/no-symbol -- safe
  var symbol = Symbol();
  var alphabet = 'abcdefghijklmnopqrst';
  A[symbol] = 7;
  alphabet.split('').forEach(function (chr) { B[chr] = chr; });
  return $assign({}, A)[symbol] != 7 || objectKeys($assign({}, B)).join('') != alphabet;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars -- required for `.length`
  var T = toObject(target);
  var argumentsLength = arguments.length;
  var index = 1;
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  var propertyIsEnumerable = propertyIsEnumerableModule.f;
  while (argumentsLength > index) {
    var S = IndexedObject(arguments[index++]);
    var keys = getOwnPropertySymbols ? concat(objectKeys(S), getOwnPropertySymbols(S)) : objectKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) {
      key = keys[j++];
      if (!DESCRIPTORS || call(propertyIsEnumerable, S, key)) T[key] = S[key];
    }
  } return T;
} : $assign;


/***/ }),

/***/ "./node_modules/core-js/internals/object-create.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/object-create.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/* global ActiveXObject -- old IE, WSH */
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var definePropertiesModule = __webpack_require__(/*! ../internals/object-define-properties */ "./node_modules/core-js/internals/object-define-properties.js");
var enumBugKeys = __webpack_require__(/*! ../internals/enum-bug-keys */ "./node_modules/core-js/internals/enum-bug-keys.js");
var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "./node_modules/core-js/internals/hidden-keys.js");
var html = __webpack_require__(/*! ../internals/html */ "./node_modules/core-js/internals/html.js");
var documentCreateElement = __webpack_require__(/*! ../internals/document-create-element */ "./node_modules/core-js/internals/document-create-element.js");
var sharedKey = __webpack_require__(/*! ../internals/shared-key */ "./node_modules/core-js/internals/shared-key.js");

var GT = '>';
var LT = '<';
var PROTOTYPE = 'prototype';
var SCRIPT = 'script';
var IE_PROTO = sharedKey('IE_PROTO');

var EmptyConstructor = function () { /* empty */ };

var scriptTag = function (content) {
  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;
};

// Create object with fake `null` prototype: use ActiveX Object with cleared prototype
var NullProtoObjectViaActiveX = function (activeXDocument) {
  activeXDocument.write(scriptTag(''));
  activeXDocument.close();
  var temp = activeXDocument.parentWindow.Object;
  activeXDocument = null; // avoid memory leak
  return temp;
};

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var NullProtoObjectViaIFrame = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = documentCreateElement('iframe');
  var JS = 'java' + SCRIPT + ':';
  var iframeDocument;
  iframe.style.display = 'none';
  html.appendChild(iframe);
  // https://github.com/zloirock/core-js/issues/475
  iframe.src = String(JS);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(scriptTag('document.F=Object'));
  iframeDocument.close();
  return iframeDocument.F;
};

// Check for document.domain and active x support
// No need to use active x approach when document.domain is not set
// see https://github.com/es-shims/es5-shim/issues/150
// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346
// avoid IE GC bug
var activeXDocument;
var NullProtoObject = function () {
  try {
    activeXDocument = new ActiveXObject('htmlfile');
  } catch (error) { /* ignore */ }
  NullProtoObject = typeof document != 'undefined'
    ? document.domain && activeXDocument
      ? NullProtoObjectViaActiveX(activeXDocument) // old IE
      : NullProtoObjectViaIFrame()
    : NullProtoObjectViaActiveX(activeXDocument); // WSH
  var length = enumBugKeys.length;
  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];
  return NullProtoObject();
};

hiddenKeys[IE_PROTO] = true;

// `Object.create` method
// https://tc39.es/ecma262/#sec-object.create
// eslint-disable-next-line es/no-object-create -- safe
module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    EmptyConstructor[PROTOTYPE] = anObject(O);
    result = new EmptyConstructor();
    EmptyConstructor[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = NullProtoObject();
  return Properties === undefined ? result : definePropertiesModule.f(result, Properties);
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-define-properties.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/object-define-properties.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var V8_PROTOTYPE_DEFINE_BUG = __webpack_require__(/*! ../internals/v8-prototype-define-bug */ "./node_modules/core-js/internals/v8-prototype-define-bug.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var objectKeys = __webpack_require__(/*! ../internals/object-keys */ "./node_modules/core-js/internals/object-keys.js");

// `Object.defineProperties` method
// https://tc39.es/ecma262/#sec-object.defineproperties
// eslint-disable-next-line es/no-object-defineproperties -- safe
exports.f = DESCRIPTORS && !V8_PROTOTYPE_DEFINE_BUG ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var props = toIndexedObject(Properties);
  var keys = objectKeys(Properties);
  var length = keys.length;
  var index = 0;
  var key;
  while (length > index) definePropertyModule.f(O, key = keys[index++], props[key]);
  return O;
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-define-property.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/object-define-property.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ../internals/ie8-dom-define */ "./node_modules/core-js/internals/ie8-dom-define.js");
var V8_PROTOTYPE_DEFINE_BUG = __webpack_require__(/*! ../internals/v8-prototype-define-bug */ "./node_modules/core-js/internals/v8-prototype-define-bug.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var toPropertyKey = __webpack_require__(/*! ../internals/to-property-key */ "./node_modules/core-js/internals/to-property-key.js");

var $TypeError = TypeError;
// eslint-disable-next-line es/no-object-defineproperty -- safe
var $defineProperty = Object.defineProperty;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var ENUMERABLE = 'enumerable';
var CONFIGURABLE = 'configurable';
var WRITABLE = 'writable';

// `Object.defineProperty` method
// https://tc39.es/ecma262/#sec-object.defineproperty
exports.f = DESCRIPTORS ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPropertyKey(P);
  anObject(Attributes);
  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {
    var current = $getOwnPropertyDescriptor(O, P);
    if (current && current[WRITABLE]) {
      O[P] = Attributes.value;
      Attributes = {
        configurable: CONFIGURABLE in Attributes ? Attributes[CONFIGURABLE] : current[CONFIGURABLE],
        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],
        writable: false
      };
    }
  } return $defineProperty(O, P, Attributes);
} : $defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPropertyKey(P);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return $defineProperty(O, P, Attributes);
  } catch (error) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw $TypeError('Accessors not supported');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-get-own-property-descriptor.js":
/*!******************************************************************************!*\
  !*** ./node_modules/core-js/internals/object-get-own-property-descriptor.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var propertyIsEnumerableModule = __webpack_require__(/*! ../internals/object-property-is-enumerable */ "./node_modules/core-js/internals/object-property-is-enumerable.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "./node_modules/core-js/internals/create-property-descriptor.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var toPropertyKey = __webpack_require__(/*! ../internals/to-property-key */ "./node_modules/core-js/internals/to-property-key.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ../internals/ie8-dom-define */ "./node_modules/core-js/internals/ie8-dom-define.js");

// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// `Object.getOwnPropertyDescriptor` method
// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor
exports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {
  O = toIndexedObject(O);
  P = toPropertyKey(P);
  if (IE8_DOM_DEFINE) try {
    return $getOwnPropertyDescriptor(O, P);
  } catch (error) { /* empty */ }
  if (hasOwn(O, P)) return createPropertyDescriptor(!call(propertyIsEnumerableModule.f, O, P), O[P]);
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-get-own-property-names-external.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/core-js/internals/object-get-own-property-names-external.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/* eslint-disable es/no-object-getownpropertynames -- safe */
var classof = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var $getOwnPropertyNames = (__webpack_require__(/*! ../internals/object-get-own-property-names */ "./node_modules/core-js/internals/object-get-own-property-names.js").f);
var arraySlice = __webpack_require__(/*! ../internals/array-slice-simple */ "./node_modules/core-js/internals/array-slice-simple.js");

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return $getOwnPropertyNames(it);
  } catch (error) {
    return arraySlice(windowNames);
  }
};

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && classof(it) == 'Window'
    ? getWindowNames(it)
    : $getOwnPropertyNames(toIndexedObject(it));
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-get-own-property-names.js":
/*!*************************************************************************!*\
  !*** ./node_modules/core-js/internals/object-get-own-property-names.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var internalObjectKeys = __webpack_require__(/*! ../internals/object-keys-internal */ "./node_modules/core-js/internals/object-keys-internal.js");
var enumBugKeys = __webpack_require__(/*! ../internals/enum-bug-keys */ "./node_modules/core-js/internals/enum-bug-keys.js");

var hiddenKeys = enumBugKeys.concat('length', 'prototype');

// `Object.getOwnPropertyNames` method
// https://tc39.es/ecma262/#sec-object.getownpropertynames
// eslint-disable-next-line es/no-object-getownpropertynames -- safe
exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return internalObjectKeys(O, hiddenKeys);
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-get-own-property-symbols.js":
/*!***************************************************************************!*\
  !*** ./node_modules/core-js/internals/object-get-own-property-symbols.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe
exports.f = Object.getOwnPropertySymbols;


/***/ }),

/***/ "./node_modules/core-js/internals/object-get-prototype-of.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/internals/object-get-prototype-of.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");
var sharedKey = __webpack_require__(/*! ../internals/shared-key */ "./node_modules/core-js/internals/shared-key.js");
var CORRECT_PROTOTYPE_GETTER = __webpack_require__(/*! ../internals/correct-prototype-getter */ "./node_modules/core-js/internals/correct-prototype-getter.js");

var IE_PROTO = sharedKey('IE_PROTO');
var $Object = Object;
var ObjectPrototype = $Object.prototype;

// `Object.getPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.getprototypeof
// eslint-disable-next-line es/no-object-getprototypeof -- safe
module.exports = CORRECT_PROTOTYPE_GETTER ? $Object.getPrototypeOf : function (O) {
  var object = toObject(O);
  if (hasOwn(object, IE_PROTO)) return object[IE_PROTO];
  var constructor = object.constructor;
  if (isCallable(constructor) && object instanceof constructor) {
    return constructor.prototype;
  } return object instanceof $Object ? ObjectPrototype : null;
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-is-extensible.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/object-is-extensible.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var classof = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");
var ARRAY_BUFFER_NON_EXTENSIBLE = __webpack_require__(/*! ../internals/array-buffer-non-extensible */ "./node_modules/core-js/internals/array-buffer-non-extensible.js");

// eslint-disable-next-line es/no-object-isextensible -- safe
var $isExtensible = Object.isExtensible;
var FAILS_ON_PRIMITIVES = fails(function () { $isExtensible(1); });

// `Object.isExtensible` method
// https://tc39.es/ecma262/#sec-object.isextensible
module.exports = (FAILS_ON_PRIMITIVES || ARRAY_BUFFER_NON_EXTENSIBLE) ? function isExtensible(it) {
  if (!isObject(it)) return false;
  if (ARRAY_BUFFER_NON_EXTENSIBLE && classof(it) == 'ArrayBuffer') return false;
  return $isExtensible ? $isExtensible(it) : true;
} : $isExtensible;


/***/ }),

/***/ "./node_modules/core-js/internals/object-is-prototype-of.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/object-is-prototype-of.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");

module.exports = uncurryThis({}.isPrototypeOf);


/***/ }),

/***/ "./node_modules/core-js/internals/object-keys-internal.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/object-keys-internal.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var indexOf = (__webpack_require__(/*! ../internals/array-includes */ "./node_modules/core-js/internals/array-includes.js").indexOf);
var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "./node_modules/core-js/internals/hidden-keys.js");

var push = uncurryThis([].push);

module.exports = function (object, names) {
  var O = toIndexedObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) !hasOwn(hiddenKeys, key) && hasOwn(O, key) && push(result, key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (hasOwn(O, key = names[i++])) {
    ~indexOf(result, key) || push(result, key);
  }
  return result;
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-keys.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/object-keys.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var internalObjectKeys = __webpack_require__(/*! ../internals/object-keys-internal */ "./node_modules/core-js/internals/object-keys-internal.js");
var enumBugKeys = __webpack_require__(/*! ../internals/enum-bug-keys */ "./node_modules/core-js/internals/enum-bug-keys.js");

// `Object.keys` method
// https://tc39.es/ecma262/#sec-object.keys
// eslint-disable-next-line es/no-object-keys -- safe
module.exports = Object.keys || function keys(O) {
  return internalObjectKeys(O, enumBugKeys);
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-property-is-enumerable.js":
/*!*************************************************************************!*\
  !*** ./node_modules/core-js/internals/object-property-is-enumerable.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

var $propertyIsEnumerable = {}.propertyIsEnumerable;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// Nashorn ~ JDK8 bug
var NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);

// `Object.prototype.propertyIsEnumerable` method implementation
// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable
exports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
  var descriptor = getOwnPropertyDescriptor(this, V);
  return !!descriptor && descriptor.enumerable;
} : $propertyIsEnumerable;


/***/ }),

/***/ "./node_modules/core-js/internals/object-set-prototype-of.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/internals/object-set-prototype-of.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/* eslint-disable no-proto -- safe */
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var aPossiblePrototype = __webpack_require__(/*! ../internals/a-possible-prototype */ "./node_modules/core-js/internals/a-possible-prototype.js");

// `Object.setPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.setprototypeof
// Works with __proto__ only. Old v8 can't work with null proto objects.
// eslint-disable-next-line es/no-object-setprototypeof -- safe
module.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {
  var CORRECT_SETTER = false;
  var test = {};
  var setter;
  try {
    // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
    setter = uncurryThis(Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set);
    setter(test, []);
    CORRECT_SETTER = test instanceof Array;
  } catch (error) { /* empty */ }
  return function setPrototypeOf(O, proto) {
    anObject(O);
    aPossiblePrototype(proto);
    if (CORRECT_SETTER) setter(O, proto);
    else O.__proto__ = proto;
    return O;
  };
}() : undefined);


/***/ }),

/***/ "./node_modules/core-js/internals/object-to-string.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/internals/object-to-string.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var TO_STRING_TAG_SUPPORT = __webpack_require__(/*! ../internals/to-string-tag-support */ "./node_modules/core-js/internals/to-string-tag-support.js");
var classof = __webpack_require__(/*! ../internals/classof */ "./node_modules/core-js/internals/classof.js");

// `Object.prototype.toString` method implementation
// https://tc39.es/ecma262/#sec-object.prototype.tostring
module.exports = TO_STRING_TAG_SUPPORT ? {}.toString : function toString() {
  return '[object ' + classof(this) + ']';
};


/***/ }),

/***/ "./node_modules/core-js/internals/ordinary-to-primitive.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/internals/ordinary-to-primitive.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");

var $TypeError = TypeError;

// `OrdinaryToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-ordinarytoprimitive
module.exports = function (input, pref) {
  var fn, val;
  if (pref === 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;
  if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input))) return val;
  if (pref !== 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;
  throw $TypeError("Can't convert object to primitive value");
};


/***/ }),

/***/ "./node_modules/core-js/internals/own-keys.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/internals/own-keys.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var getOwnPropertyNamesModule = __webpack_require__(/*! ../internals/object-get-own-property-names */ "./node_modules/core-js/internals/object-get-own-property-names.js");
var getOwnPropertySymbolsModule = __webpack_require__(/*! ../internals/object-get-own-property-symbols */ "./node_modules/core-js/internals/object-get-own-property-symbols.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");

var concat = uncurryThis([].concat);

// all object keys, includes non-enumerable and symbols
module.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {
  var keys = getOwnPropertyNamesModule.f(anObject(it));
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  return getOwnPropertySymbols ? concat(keys, getOwnPropertySymbols(it)) : keys;
};


/***/ }),

/***/ "./node_modules/core-js/internals/path.js":
/*!************************************************!*\
  !*** ./node_modules/core-js/internals/path.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");

module.exports = global;


/***/ }),

/***/ "./node_modules/core-js/internals/require-object-coercible.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/require-object-coercible.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var isNullOrUndefined = __webpack_require__(/*! ../internals/is-null-or-undefined */ "./node_modules/core-js/internals/is-null-or-undefined.js");

var $TypeError = TypeError;

// `RequireObjectCoercible` abstract operation
// https://tc39.es/ecma262/#sec-requireobjectcoercible
module.exports = function (it) {
  if (isNullOrUndefined(it)) throw $TypeError("Can't call method on " + it);
  return it;
};


/***/ }),

/***/ "./node_modules/core-js/internals/set-species.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/set-species.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");

var SPECIES = wellKnownSymbol('species');

module.exports = function (CONSTRUCTOR_NAME) {
  var Constructor = getBuiltIn(CONSTRUCTOR_NAME);
  var defineProperty = definePropertyModule.f;

  if (DESCRIPTORS && Constructor && !Constructor[SPECIES]) {
    defineProperty(Constructor, SPECIES, {
      configurable: true,
      get: function () { return this; }
    });
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/set-to-string-tag.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/set-to-string-tag.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var defineProperty = (__webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js").f);
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');

module.exports = function (target, TAG, STATIC) {
  if (target && !STATIC) target = target.prototype;
  if (target && !hasOwn(target, TO_STRING_TAG)) {
    defineProperty(target, TO_STRING_TAG, { configurable: true, value: TAG });
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/shared-key.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/internals/shared-key.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var shared = __webpack_require__(/*! ../internals/shared */ "./node_modules/core-js/internals/shared.js");
var uid = __webpack_require__(/*! ../internals/uid */ "./node_modules/core-js/internals/uid.js");

var keys = shared('keys');

module.exports = function (key) {
  return keys[key] || (keys[key] = uid(key));
};


/***/ }),

/***/ "./node_modules/core-js/internals/shared-store.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/shared-store.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var defineGlobalProperty = __webpack_require__(/*! ../internals/define-global-property */ "./node_modules/core-js/internals/define-global-property.js");

var SHARED = '__core-js_shared__';
var store = global[SHARED] || defineGlobalProperty(SHARED, {});

module.exports = store;


/***/ }),

/***/ "./node_modules/core-js/internals/shared.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/internals/shared.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var store = __webpack_require__(/*! ../internals/shared-store */ "./node_modules/core-js/internals/shared-store.js");

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: '3.27.1',
  mode: IS_PURE ? 'pure' : 'global',
  copyright: '© 2014-2022 Denis Pushkarev (zloirock.ru)',
  license: 'https://github.com/zloirock/core-js/blob/v3.27.1/LICENSE',
  source: 'https://github.com/zloirock/core-js'
});


/***/ }),

/***/ "./node_modules/core-js/internals/string-multibyte.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/internals/string-multibyte.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "./node_modules/core-js/internals/to-integer-or-infinity.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "./node_modules/core-js/internals/to-string.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "./node_modules/core-js/internals/require-object-coercible.js");

var charAt = uncurryThis(''.charAt);
var charCodeAt = uncurryThis(''.charCodeAt);
var stringSlice = uncurryThis(''.slice);

var createMethod = function (CONVERT_TO_STRING) {
  return function ($this, pos) {
    var S = toString(requireObjectCoercible($this));
    var position = toIntegerOrInfinity(pos);
    var size = S.length;
    var first, second;
    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;
    first = charCodeAt(S, position);
    return first < 0xD800 || first > 0xDBFF || position + 1 === size
      || (second = charCodeAt(S, position + 1)) < 0xDC00 || second > 0xDFFF
        ? CONVERT_TO_STRING
          ? charAt(S, position)
          : first
        : CONVERT_TO_STRING
          ? stringSlice(S, position, position + 2)
          : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;
  };
};

module.exports = {
  // `String.prototype.codePointAt` method
  // https://tc39.es/ecma262/#sec-string.prototype.codepointat
  codeAt: createMethod(false),
  // `String.prototype.at` method
  // https://github.com/mathiasbynens/String.prototype.at
  charAt: createMethod(true)
};


/***/ }),

/***/ "./node_modules/core-js/internals/symbol-constructor-detection.js":
/*!************************************************************************!*\
  !*** ./node_modules/core-js/internals/symbol-constructor-detection.js ***!
  \************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/* eslint-disable es/no-symbol -- required for testing */
var V8_VERSION = __webpack_require__(/*! ../internals/engine-v8-version */ "./node_modules/core-js/internals/engine-v8-version.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing
module.exports = !!Object.getOwnPropertySymbols && !fails(function () {
  var symbol = Symbol();
  // Chrome 38 Symbol has incorrect toString conversion
  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances
  return !String(symbol) || !(Object(symbol) instanceof Symbol) ||
    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
    !Symbol.sham && V8_VERSION && V8_VERSION < 41;
});


/***/ }),

/***/ "./node_modules/core-js/internals/to-absolute-index.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/to-absolute-index.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "./node_modules/core-js/internals/to-integer-or-infinity.js");

var max = Math.max;
var min = Math.min;

// Helper for a popular repeating case of the spec:
// Let integer be ? ToInteger(index).
// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).
module.exports = function (index, length) {
  var integer = toIntegerOrInfinity(index);
  return integer < 0 ? max(integer + length, 0) : min(integer, length);
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-indexed-object.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/to-indexed-object.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// toObject with fallback for non-array-like ES3 strings
var IndexedObject = __webpack_require__(/*! ../internals/indexed-object */ "./node_modules/core-js/internals/indexed-object.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "./node_modules/core-js/internals/require-object-coercible.js");

module.exports = function (it) {
  return IndexedObject(requireObjectCoercible(it));
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-integer-or-infinity.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/to-integer-or-infinity.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var trunc = __webpack_require__(/*! ../internals/math-trunc */ "./node_modules/core-js/internals/math-trunc.js");

// `ToIntegerOrInfinity` abstract operation
// https://tc39.es/ecma262/#sec-tointegerorinfinity
module.exports = function (argument) {
  var number = +argument;
  // eslint-disable-next-line no-self-compare -- NaN check
  return number !== number || number === 0 ? 0 : trunc(number);
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-length.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/to-length.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "./node_modules/core-js/internals/to-integer-or-infinity.js");

var min = Math.min;

// `ToLength` abstract operation
// https://tc39.es/ecma262/#sec-tolength
module.exports = function (argument) {
  return argument > 0 ? min(toIntegerOrInfinity(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-object.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/to-object.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "./node_modules/core-js/internals/require-object-coercible.js");

var $Object = Object;

// `ToObject` abstract operation
// https://tc39.es/ecma262/#sec-toobject
module.exports = function (argument) {
  return $Object(requireObjectCoercible(argument));
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-primitive.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/to-primitive.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var isSymbol = __webpack_require__(/*! ../internals/is-symbol */ "./node_modules/core-js/internals/is-symbol.js");
var getMethod = __webpack_require__(/*! ../internals/get-method */ "./node_modules/core-js/internals/get-method.js");
var ordinaryToPrimitive = __webpack_require__(/*! ../internals/ordinary-to-primitive */ "./node_modules/core-js/internals/ordinary-to-primitive.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var $TypeError = TypeError;
var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');

// `ToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-toprimitive
module.exports = function (input, pref) {
  if (!isObject(input) || isSymbol(input)) return input;
  var exoticToPrim = getMethod(input, TO_PRIMITIVE);
  var result;
  if (exoticToPrim) {
    if (pref === undefined) pref = 'default';
    result = call(exoticToPrim, input, pref);
    if (!isObject(result) || isSymbol(result)) return result;
    throw $TypeError("Can't convert object to primitive value");
  }
  if (pref === undefined) pref = 'number';
  return ordinaryToPrimitive(input, pref);
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-property-key.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/to-property-key.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var toPrimitive = __webpack_require__(/*! ../internals/to-primitive */ "./node_modules/core-js/internals/to-primitive.js");
var isSymbol = __webpack_require__(/*! ../internals/is-symbol */ "./node_modules/core-js/internals/is-symbol.js");

// `ToPropertyKey` abstract operation
// https://tc39.es/ecma262/#sec-topropertykey
module.exports = function (argument) {
  var key = toPrimitive(argument, 'string');
  return isSymbol(key) ? key : key + '';
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-string-tag-support.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/internals/to-string-tag-support.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var test = {};

test[TO_STRING_TAG] = 'z';

module.exports = String(test) === '[object z]';


/***/ }),

/***/ "./node_modules/core-js/internals/to-string.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/to-string.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var classof = __webpack_require__(/*! ../internals/classof */ "./node_modules/core-js/internals/classof.js");

var $String = String;

module.exports = function (argument) {
  if (classof(argument) === 'Symbol') throw TypeError('Cannot convert a Symbol value to a string');
  return $String(argument);
};


/***/ }),

/***/ "./node_modules/core-js/internals/try-to-string.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/try-to-string.js ***!
  \*********************************************************/
/***/ ((module) => {

var $String = String;

module.exports = function (argument) {
  try {
    return $String(argument);
  } catch (error) {
    return 'Object';
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/uid.js":
/*!***********************************************!*\
  !*** ./node_modules/core-js/internals/uid.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");

var id = 0;
var postfix = Math.random();
var toString = uncurryThis(1.0.toString);

module.exports = function (key) {
  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString(++id + postfix, 36);
};


/***/ }),

/***/ "./node_modules/core-js/internals/use-symbol-as-uid.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/use-symbol-as-uid.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/* eslint-disable es/no-symbol -- required for testing */
var NATIVE_SYMBOL = __webpack_require__(/*! ../internals/symbol-constructor-detection */ "./node_modules/core-js/internals/symbol-constructor-detection.js");

module.exports = NATIVE_SYMBOL
  && !Symbol.sham
  && typeof Symbol.iterator == 'symbol';


/***/ }),

/***/ "./node_modules/core-js/internals/v8-prototype-define-bug.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/internals/v8-prototype-define-bug.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

// V8 ~ Chrome 36-
// https://bugs.chromium.org/p/v8/issues/detail?id=3334
module.exports = DESCRIPTORS && fails(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty(function () { /* empty */ }, 'prototype', {
    value: 42,
    writable: false
  }).prototype != 42;
});


/***/ }),

/***/ "./node_modules/core-js/internals/weak-map-basic-detection.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/weak-map-basic-detection.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");

var WeakMap = global.WeakMap;

module.exports = isCallable(WeakMap) && /native code/.test(String(WeakMap));


/***/ }),

/***/ "./node_modules/core-js/internals/well-known-symbol.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/well-known-symbol.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var shared = __webpack_require__(/*! ../internals/shared */ "./node_modules/core-js/internals/shared.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var uid = __webpack_require__(/*! ../internals/uid */ "./node_modules/core-js/internals/uid.js");
var NATIVE_SYMBOL = __webpack_require__(/*! ../internals/symbol-constructor-detection */ "./node_modules/core-js/internals/symbol-constructor-detection.js");
var USE_SYMBOL_AS_UID = __webpack_require__(/*! ../internals/use-symbol-as-uid */ "./node_modules/core-js/internals/use-symbol-as-uid.js");

var WellKnownSymbolsStore = shared('wks');
var Symbol = global.Symbol;
var symbolFor = Symbol && Symbol['for'];
var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;

module.exports = function (name) {
  if (!hasOwn(WellKnownSymbolsStore, name) || !(NATIVE_SYMBOL || typeof WellKnownSymbolsStore[name] == 'string')) {
    var description = 'Symbol.' + name;
    if (NATIVE_SYMBOL && hasOwn(Symbol, name)) {
      WellKnownSymbolsStore[name] = Symbol[name];
    } else if (USE_SYMBOL_AS_UID && symbolFor) {
      WellKnownSymbolsStore[name] = symbolFor(description);
    } else {
      WellKnownSymbolsStore[name] = createWellKnownSymbol(description);
    }
  } return WellKnownSymbolsStore[name];
};


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.from.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.from.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var from = __webpack_require__(/*! ../internals/array-from */ "./node_modules/core-js/internals/array-from.js");
var checkCorrectnessOfIteration = __webpack_require__(/*! ../internals/check-correctness-of-iteration */ "./node_modules/core-js/internals/check-correctness-of-iteration.js");

var INCORRECT_ITERATION = !checkCorrectnessOfIteration(function (iterable) {
  // eslint-disable-next-line es/no-array-from -- required for testing
  Array.from(iterable);
});

// `Array.from` method
// https://tc39.es/ecma262/#sec-array.from
$({ target: 'Array', stat: true, forced: INCORRECT_ITERATION }, {
  from: from
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.iterator.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.iterator.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var addToUnscopables = __webpack_require__(/*! ../internals/add-to-unscopables */ "./node_modules/core-js/internals/add-to-unscopables.js");
var Iterators = __webpack_require__(/*! ../internals/iterators */ "./node_modules/core-js/internals/iterators.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "./node_modules/core-js/internals/internal-state.js");
var defineProperty = (__webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js").f);
var defineIterator = __webpack_require__(/*! ../internals/iterator-define */ "./node_modules/core-js/internals/iterator-define.js");
var createIterResultObject = __webpack_require__(/*! ../internals/create-iter-result-object */ "./node_modules/core-js/internals/create-iter-result-object.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");

var ARRAY_ITERATOR = 'Array Iterator';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);

// `Array.prototype.entries` method
// https://tc39.es/ecma262/#sec-array.prototype.entries
// `Array.prototype.keys` method
// https://tc39.es/ecma262/#sec-array.prototype.keys
// `Array.prototype.values` method
// https://tc39.es/ecma262/#sec-array.prototype.values
// `Array.prototype[@@iterator]` method
// https://tc39.es/ecma262/#sec-array.prototype-@@iterator
// `CreateArrayIterator` internal method
// https://tc39.es/ecma262/#sec-createarrayiterator
module.exports = defineIterator(Array, 'Array', function (iterated, kind) {
  setInternalState(this, {
    type: ARRAY_ITERATOR,
    target: toIndexedObject(iterated), // target
    index: 0,                          // next index
    kind: kind                         // kind
  });
// `%ArrayIteratorPrototype%.next` method
// https://tc39.es/ecma262/#sec-%arrayiteratorprototype%.next
}, function () {
  var state = getInternalState(this);
  var target = state.target;
  var kind = state.kind;
  var index = state.index++;
  if (!target || index >= target.length) {
    state.target = undefined;
    return createIterResultObject(undefined, true);
  }
  if (kind == 'keys') return createIterResultObject(index, false);
  if (kind == 'values') return createIterResultObject(target[index], false);
  return createIterResultObject([index, target[index]], false);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values%
// https://tc39.es/ecma262/#sec-createunmappedargumentsobject
// https://tc39.es/ecma262/#sec-createmappedargumentsobject
var values = Iterators.Arguments = Iterators.Array;

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');

// V8 ~ Chrome 45- bug
if (!IS_PURE && DESCRIPTORS && values.name !== 'values') try {
  defineProperty(values, 'name', { value: 'values' });
} catch (error) { /* empty */ }


/***/ }),

/***/ "./node_modules/core-js/modules/es.map.constructor.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es.map.constructor.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var collection = __webpack_require__(/*! ../internals/collection */ "./node_modules/core-js/internals/collection.js");
var collectionStrong = __webpack_require__(/*! ../internals/collection-strong */ "./node_modules/core-js/internals/collection-strong.js");

// `Map` constructor
// https://tc39.es/ecma262/#sec-map-objects
collection('Map', function (init) {
  return function Map() { return init(this, arguments.length ? arguments[0] : undefined); };
}, collectionStrong);


/***/ }),

/***/ "./node_modules/core-js/modules/es.map.js":
/*!************************************************!*\
  !*** ./node_modules/core-js/modules/es.map.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// TODO: Remove this module from `core-js@4` since it's replaced to module below
__webpack_require__(/*! ../modules/es.map.constructor */ "./node_modules/core-js/modules/es.map.constructor.js");


/***/ }),

/***/ "./node_modules/core-js/modules/es.object.assign.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es.object.assign.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var assign = __webpack_require__(/*! ../internals/object-assign */ "./node_modules/core-js/internals/object-assign.js");

// `Object.assign` method
// https://tc39.es/ecma262/#sec-object.assign
// eslint-disable-next-line es/no-object-assign -- required for testing
$({ target: 'Object', stat: true, arity: 2, forced: Object.assign !== assign }, {
  assign: assign
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.object.to-string.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/es.object.to-string.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var TO_STRING_TAG_SUPPORT = __webpack_require__(/*! ../internals/to-string-tag-support */ "./node_modules/core-js/internals/to-string-tag-support.js");
var defineBuiltIn = __webpack_require__(/*! ../internals/define-built-in */ "./node_modules/core-js/internals/define-built-in.js");
var toString = __webpack_require__(/*! ../internals/object-to-string */ "./node_modules/core-js/internals/object-to-string.js");

// `Object.prototype.toString` method
// https://tc39.es/ecma262/#sec-object.prototype.tostring
if (!TO_STRING_TAG_SUPPORT) {
  defineBuiltIn(Object.prototype, 'toString', toString, { unsafe: true });
}


/***/ }),

/***/ "./node_modules/core-js/modules/es.set.constructor.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es.set.constructor.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var collection = __webpack_require__(/*! ../internals/collection */ "./node_modules/core-js/internals/collection.js");
var collectionStrong = __webpack_require__(/*! ../internals/collection-strong */ "./node_modules/core-js/internals/collection-strong.js");

// `Set` constructor
// https://tc39.es/ecma262/#sec-set-objects
collection('Set', function (init) {
  return function Set() { return init(this, arguments.length ? arguments[0] : undefined); };
}, collectionStrong);


/***/ }),

/***/ "./node_modules/core-js/modules/es.set.js":
/*!************************************************!*\
  !*** ./node_modules/core-js/modules/es.set.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// TODO: Remove this module from `core-js@4` since it's replaced to module below
__webpack_require__(/*! ../modules/es.set.constructor */ "./node_modules/core-js/modules/es.set.constructor.js");


/***/ }),

/***/ "./node_modules/core-js/modules/es.string.iterator.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es.string.iterator.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var charAt = (__webpack_require__(/*! ../internals/string-multibyte */ "./node_modules/core-js/internals/string-multibyte.js").charAt);
var toString = __webpack_require__(/*! ../internals/to-string */ "./node_modules/core-js/internals/to-string.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "./node_modules/core-js/internals/internal-state.js");
var defineIterator = __webpack_require__(/*! ../internals/iterator-define */ "./node_modules/core-js/internals/iterator-define.js");
var createIterResultObject = __webpack_require__(/*! ../internals/create-iter-result-object */ "./node_modules/core-js/internals/create-iter-result-object.js");

var STRING_ITERATOR = 'String Iterator';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);

// `String.prototype[@@iterator]` method
// https://tc39.es/ecma262/#sec-string.prototype-@@iterator
defineIterator(String, 'String', function (iterated) {
  setInternalState(this, {
    type: STRING_ITERATOR,
    string: toString(iterated),
    index: 0
  });
// `%StringIteratorPrototype%.next` method
// https://tc39.es/ecma262/#sec-%stringiteratorprototype%.next
}, function next() {
  var state = getInternalState(this);
  var string = state.string;
  var index = state.index;
  var point;
  if (index >= string.length) return createIterResultObject(undefined, true);
  point = charAt(string, index);
  state.index += point.length;
  return createIterResultObject(point, false);
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.weak-map.constructor.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/modules/es.weak-map.constructor.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var FREEZING = __webpack_require__(/*! ../internals/freezing */ "./node_modules/core-js/internals/freezing.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var defineBuiltIns = __webpack_require__(/*! ../internals/define-built-ins */ "./node_modules/core-js/internals/define-built-ins.js");
var InternalMetadataModule = __webpack_require__(/*! ../internals/internal-metadata */ "./node_modules/core-js/internals/internal-metadata.js");
var collection = __webpack_require__(/*! ../internals/collection */ "./node_modules/core-js/internals/collection.js");
var collectionWeak = __webpack_require__(/*! ../internals/collection-weak */ "./node_modules/core-js/internals/collection-weak.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var enforceInternalState = (__webpack_require__(/*! ../internals/internal-state */ "./node_modules/core-js/internals/internal-state.js").enforce);
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var NATIVE_WEAK_MAP = __webpack_require__(/*! ../internals/weak-map-basic-detection */ "./node_modules/core-js/internals/weak-map-basic-detection.js");

var $Object = Object;
// eslint-disable-next-line es/no-array-isarray -- safe
var isArray = Array.isArray;
// eslint-disable-next-line es/no-object-isextensible -- safe
var isExtensible = $Object.isExtensible;
// eslint-disable-next-line es/no-object-isfrozen -- safe
var isFrozen = $Object.isFrozen;
// eslint-disable-next-line es/no-object-issealed -- safe
var isSealed = $Object.isSealed;
// eslint-disable-next-line es/no-object-freeze -- safe
var freeze = $Object.freeze;
// eslint-disable-next-line es/no-object-seal -- safe
var seal = $Object.seal;

var FROZEN = {};
var SEALED = {};
var IS_IE11 = !global.ActiveXObject && 'ActiveXObject' in global;
var InternalWeakMap;

var wrapper = function (init) {
  return function WeakMap() {
    return init(this, arguments.length ? arguments[0] : undefined);
  };
};

// `WeakMap` constructor
// https://tc39.es/ecma262/#sec-weakmap-constructor
var $WeakMap = collection('WeakMap', wrapper, collectionWeak);
var WeakMapPrototype = $WeakMap.prototype;
var nativeSet = uncurryThis(WeakMapPrototype.set);

// Chakra Edge bug: adding frozen arrays to WeakMap unfreeze them
var hasMSEdgeFreezingBug = function () {
  return FREEZING && fails(function () {
    var frozenArray = freeze([]);
    nativeSet(new $WeakMap(), frozenArray, 1);
    return !isFrozen(frozenArray);
  });
};

// IE11 WeakMap frozen keys fix
// We can't use feature detection because it crash some old IE builds
// https://github.com/zloirock/core-js/issues/485
if (NATIVE_WEAK_MAP) if (IS_IE11) {
  InternalWeakMap = collectionWeak.getConstructor(wrapper, 'WeakMap', true);
  InternalMetadataModule.enable();
  var nativeDelete = uncurryThis(WeakMapPrototype['delete']);
  var nativeHas = uncurryThis(WeakMapPrototype.has);
  var nativeGet = uncurryThis(WeakMapPrototype.get);
  defineBuiltIns(WeakMapPrototype, {
    'delete': function (key) {
      if (isObject(key) && !isExtensible(key)) {
        var state = enforceInternalState(this);
        if (!state.frozen) state.frozen = new InternalWeakMap();
        return nativeDelete(this, key) || state.frozen['delete'](key);
      } return nativeDelete(this, key);
    },
    has: function has(key) {
      if (isObject(key) && !isExtensible(key)) {
        var state = enforceInternalState(this);
        if (!state.frozen) state.frozen = new InternalWeakMap();
        return nativeHas(this, key) || state.frozen.has(key);
      } return nativeHas(this, key);
    },
    get: function get(key) {
      if (isObject(key) && !isExtensible(key)) {
        var state = enforceInternalState(this);
        if (!state.frozen) state.frozen = new InternalWeakMap();
        return nativeHas(this, key) ? nativeGet(this, key) : state.frozen.get(key);
      } return nativeGet(this, key);
    },
    set: function set(key, value) {
      if (isObject(key) && !isExtensible(key)) {
        var state = enforceInternalState(this);
        if (!state.frozen) state.frozen = new InternalWeakMap();
        nativeHas(this, key) ? nativeSet(this, key, value) : state.frozen.set(key, value);
      } else nativeSet(this, key, value);
      return this;
    }
  });
// Chakra Edge frozen keys fix
} else if (hasMSEdgeFreezingBug()) {
  defineBuiltIns(WeakMapPrototype, {
    set: function set(key, value) {
      var arrayIntegrityLevel;
      if (isArray(key)) {
        if (isFrozen(key)) arrayIntegrityLevel = FROZEN;
        else if (isSealed(key)) arrayIntegrityLevel = SEALED;
      }
      nativeSet(this, key, value);
      if (arrayIntegrityLevel == FROZEN) freeze(key);
      if (arrayIntegrityLevel == SEALED) seal(key);
      return this;
    }
  });
}


/***/ }),

/***/ "./node_modules/core-js/modules/es.weak-map.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/es.weak-map.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// TODO: Remove this module from `core-js@4` since it's replaced to module below
__webpack_require__(/*! ../modules/es.weak-map.constructor */ "./node_modules/core-js/modules/es.weak-map.constructor.js");


/***/ }),

/***/ "./node_modules/jquery/dist/jquery.js":
/*!********************************************!*\
  !*** ./node_modules/jquery/dist/jquery.js ***!
  \********************************************/
/***/ (function(module, exports) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * jQuery JavaScript Library v3.6.1
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright OpenJS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2022-08-26T17:52Z
 */
( function( global, factory ) {

	"use strict";

	if (  true && typeof module.exports === "object" ) {

		// For CommonJS and CommonJS-like environments where a proper `window`
		// is present, execute the factory and get jQuery.
		// For environments that do not have a `window` with a `document`
		// (such as Node.js), expose a factory as module.exports.
		// This accentuates the need for the creation of a real `window`.
		// e.g. var jQuery = require("jquery")(window);
		// See ticket trac-14549 for more info.
		module.exports = global.document ?
			factory( global, true ) :
			function( w ) {
				if ( !w.document ) {
					throw new Error( "jQuery requires a window with a document" );
				}
				return factory( w );
			};
	} else {
		factory( global );
	}

// Pass this if window is not defined yet
} )( typeof window !== "undefined" ? window : this, function( window, noGlobal ) {

// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1
// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode
// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common
// enough that all such attempts are guarded in a try block.
"use strict";

var arr = [];

var getProto = Object.getPrototypeOf;

var slice = arr.slice;

var flat = arr.flat ? function( array ) {
	return arr.flat.call( array );
} : function( array ) {
	return arr.concat.apply( [], array );
};


var push = arr.push;

var indexOf = arr.indexOf;

var class2type = {};

var toString = class2type.toString;

var hasOwn = class2type.hasOwnProperty;

var fnToString = hasOwn.toString;

var ObjectFunctionString = fnToString.call( Object );

var support = {};

var isFunction = function isFunction( obj ) {

		// Support: Chrome <=57, Firefox <=52
		// In some browsers, typeof returns "function" for HTML <object> elements
		// (i.e., `typeof document.createElement( "object" ) === "function"`).
		// We don't want to classify *any* DOM node as a function.
		// Support: QtWeb <=3.8.5, WebKit <=534.34, wkhtmltopdf tool <=0.12.5
		// Plus for old WebKit, typeof returns "function" for HTML collections
		// (e.g., `typeof document.getElementsByTagName("div") === "function"`). (gh-4756)
		return typeof obj === "function" && typeof obj.nodeType !== "number" &&
			typeof obj.item !== "function";
	};


var isWindow = function isWindow( obj ) {
		return obj != null && obj === obj.window;
	};


var document = window.document;



	var preservedScriptAttributes = {
		type: true,
		src: true,
		nonce: true,
		noModule: true
	};

	function DOMEval( code, node, doc ) {
		doc = doc || document;

		var i, val,
			script = doc.createElement( "script" );

		script.text = code;
		if ( node ) {
			for ( i in preservedScriptAttributes ) {

				// Support: Firefox 64+, Edge 18+
				// Some browsers don't support the "nonce" property on scripts.
				// On the other hand, just using `getAttribute` is not enough as
				// the `nonce` attribute is reset to an empty string whenever it
				// becomes browsing-context connected.
				// See https://github.com/whatwg/html/issues/2369
				// See https://html.spec.whatwg.org/#nonce-attributes
				// The `node.getAttribute` check was added for the sake of
				// `jQuery.globalEval` so that it can fake a nonce-containing node
				// via an object.
				val = node[ i ] || node.getAttribute && node.getAttribute( i );
				if ( val ) {
					script.setAttribute( i, val );
				}
			}
		}
		doc.head.appendChild( script ).parentNode.removeChild( script );
	}


function toType( obj ) {
	if ( obj == null ) {
		return obj + "";
	}

	// Support: Android <=2.3 only (functionish RegExp)
	return typeof obj === "object" || typeof obj === "function" ?
		class2type[ toString.call( obj ) ] || "object" :
		typeof obj;
}
/* global Symbol */
// Defining this global in .eslintrc.json would create a danger of using the global
// unguarded in another place, it seems safer to define global only for this module



var
	version = "3.6.1",

	// Define a local copy of jQuery
	jQuery = function( selector, context ) {

		// The jQuery object is actually just the init constructor 'enhanced'
		// Need init if jQuery is called (just allow error to be thrown if not included)
		return new jQuery.fn.init( selector, context );
	};

jQuery.fn = jQuery.prototype = {

	// The current version of jQuery being used
	jquery: version,

	constructor: jQuery,

	// The default length of a jQuery object is 0
	length: 0,

	toArray: function() {
		return slice.call( this );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {

		// Return all the elements in a clean array
		if ( num == null ) {
			return slice.call( this );
		}

		// Return just the one element from the set
		return num < 0 ? this[ num + this.length ] : this[ num ];
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems ) {

		// Build a new jQuery matched element set
		var ret = jQuery.merge( this.constructor(), elems );

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	each: function( callback ) {
		return jQuery.each( this, callback );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map( this, function( elem, i ) {
			return callback.call( elem, i, elem );
		} ) );
	},

	slice: function() {
		return this.pushStack( slice.apply( this, arguments ) );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	even: function() {
		return this.pushStack( jQuery.grep( this, function( _elem, i ) {
			return ( i + 1 ) % 2;
		} ) );
	},

	odd: function() {
		return this.pushStack( jQuery.grep( this, function( _elem, i ) {
			return i % 2;
		} ) );
	},

	eq: function( i ) {
		var len = this.length,
			j = +i + ( i < 0 ? len : 0 );
		return this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );
	},

	end: function() {
		return this.prevObject || this.constructor();
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: push,
	sort: arr.sort,
	splice: arr.splice
};

jQuery.extend = jQuery.fn.extend = function() {
	var options, name, src, copy, copyIsArray, clone,
		target = arguments[ 0 ] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;

		// Skip the boolean and the target
		target = arguments[ i ] || {};
		i++;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !isFunction( target ) ) {
		target = {};
	}

	// Extend jQuery itself if only one argument is passed
	if ( i === length ) {
		target = this;
		i--;
	}

	for ( ; i < length; i++ ) {

		// Only deal with non-null/undefined values
		if ( ( options = arguments[ i ] ) != null ) {

			// Extend the base object
			for ( name in options ) {
				copy = options[ name ];

				// Prevent Object.prototype pollution
				// Prevent never-ending loop
				if ( name === "__proto__" || target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject( copy ) ||
					( copyIsArray = Array.isArray( copy ) ) ) ) {
					src = target[ name ];

					// Ensure proper type for the source value
					if ( copyIsArray && !Array.isArray( src ) ) {
						clone = [];
					} else if ( !copyIsArray && !jQuery.isPlainObject( src ) ) {
						clone = {};
					} else {
						clone = src;
					}
					copyIsArray = false;

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend( {

	// Unique for each copy of jQuery on the page
	expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),

	// Assume jQuery is ready without the ready module
	isReady: true,

	error: function( msg ) {
		throw new Error( msg );
	},

	noop: function() {},

	isPlainObject: function( obj ) {
		var proto, Ctor;

		// Detect obvious negatives
		// Use toString instead of jQuery.type to catch host objects
		if ( !obj || toString.call( obj ) !== "[object Object]" ) {
			return false;
		}

		proto = getProto( obj );

		// Objects with no prototype (e.g., `Object.create( null )`) are plain
		if ( !proto ) {
			return true;
		}

		// Objects with prototype are plain iff they were constructed by a global Object function
		Ctor = hasOwn.call( proto, "constructor" ) && proto.constructor;
		return typeof Ctor === "function" && fnToString.call( Ctor ) === ObjectFunctionString;
	},

	isEmptyObject: function( obj ) {
		var name;

		for ( name in obj ) {
			return false;
		}
		return true;
	},

	// Evaluates a script in a provided context; falls back to the global one
	// if not specified.
	globalEval: function( code, options, doc ) {
		DOMEval( code, { nonce: options && options.nonce }, doc );
	},

	each: function( obj, callback ) {
		var length, i = 0;

		if ( isArrayLike( obj ) ) {
			length = obj.length;
			for ( ; i < length; i++ ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		} else {
			for ( i in obj ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		}

		return obj;
	},

	// results is for internal usage only
	makeArray: function( arr, results ) {
		var ret = results || [];

		if ( arr != null ) {
			if ( isArrayLike( Object( arr ) ) ) {
				jQuery.merge( ret,
					typeof arr === "string" ?
						[ arr ] : arr
				);
			} else {
				push.call( ret, arr );
			}
		}

		return ret;
	},

	inArray: function( elem, arr, i ) {
		return arr == null ? -1 : indexOf.call( arr, elem, i );
	},

	// Support: Android <=4.0 only, PhantomJS 1 only
	// push.apply(_, arraylike) throws on ancient WebKit
	merge: function( first, second ) {
		var len = +second.length,
			j = 0,
			i = first.length;

		for ( ; j < len; j++ ) {
			first[ i++ ] = second[ j ];
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, invert ) {
		var callbackInverse,
			matches = [],
			i = 0,
			length = elems.length,
			callbackExpect = !invert;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( ; i < length; i++ ) {
			callbackInverse = !callback( elems[ i ], i );
			if ( callbackInverse !== callbackExpect ) {
				matches.push( elems[ i ] );
			}
		}

		return matches;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var length, value,
			i = 0,
			ret = [];

		// Go through the array, translating each of the items to their new values
		if ( isArrayLike( elems ) ) {
			length = elems.length;
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}

		// Go through every key on the object,
		} else {
			for ( i in elems ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}
		}

		// Flatten any nested arrays
		return flat( ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// jQuery.support is not used in Core but other projects attach their
	// properties to it so it needs to exist.
	support: support
} );

if ( typeof Symbol === "function" ) {
	jQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];
}

// Populate the class2type map
jQuery.each( "Boolean Number String Function Array Date RegExp Object Error Symbol".split( " " ),
	function( _i, name ) {
		class2type[ "[object " + name + "]" ] = name.toLowerCase();
	} );

function isArrayLike( obj ) {

	// Support: real iOS 8.2 only (not reproducible in simulator)
	// `in` check used to prevent JIT error (gh-2145)
	// hasOwn isn't used here due to false negatives
	// regarding Nodelist length in IE
	var length = !!obj && "length" in obj && obj.length,
		type = toType( obj );

	if ( isFunction( obj ) || isWindow( obj ) ) {
		return false;
	}

	return type === "array" || length === 0 ||
		typeof length === "number" && length > 0 && ( length - 1 ) in obj;
}
var Sizzle =
/*!
 * Sizzle CSS Selector Engine v2.3.6
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://js.foundation/
 *
 * Date: 2021-02-16
 */
( function( window ) {
var i,
	support,
	Expr,
	getText,
	isXML,
	tokenize,
	compile,
	select,
	outermostContext,
	sortInput,
	hasDuplicate,

	// Local document vars
	setDocument,
	document,
	docElem,
	documentIsHTML,
	rbuggyQSA,
	rbuggyMatches,
	matches,
	contains,

	// Instance-specific data
	expando = "sizzle" + 1 * new Date(),
	preferredDoc = window.document,
	dirruns = 0,
	done = 0,
	classCache = createCache(),
	tokenCache = createCache(),
	compilerCache = createCache(),
	nonnativeSelectorCache = createCache(),
	sortOrder = function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
		}
		return 0;
	},

	// Instance methods
	hasOwn = ( {} ).hasOwnProperty,
	arr = [],
	pop = arr.pop,
	pushNative = arr.push,
	push = arr.push,
	slice = arr.slice,

	// Use a stripped-down indexOf as it's faster than native
	// https://jsperf.com/thor-indexof-vs-for/5
	indexOf = function( list, elem ) {
		var i = 0,
			len = list.length;
		for ( ; i < len; i++ ) {
			if ( list[ i ] === elem ) {
				return i;
			}
		}
		return -1;
	},

	booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|" +
		"ismap|loop|multiple|open|readonly|required|scoped",

	// Regular expressions

	// http://www.w3.org/TR/css3-selectors/#whitespace
	whitespace = "[\\x20\\t\\r\\n\\f]",

	// https://www.w3.org/TR/css-syntax-3/#ident-token-diagram
	identifier = "(?:\\\\[\\da-fA-F]{1,6}" + whitespace +
		"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",

	// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
	attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace +

		// Operator (capture 2)
		"*([*^$|!~]?=)" + whitespace +

		// "Attribute values must be CSS identifiers [capture 5]
		// or strings [capture 3 or capture 4]"
		"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" +
		whitespace + "*\\]",

	pseudos = ":(" + identifier + ")(?:\\((" +

		// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
		// 1. quoted (capture 3; capture 4 or capture 5)
		"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +

		// 2. simple (capture 6)
		"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +

		// 3. anything else (capture 2)
		".*" +
		")\\)|)",

	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
	rwhitespace = new RegExp( whitespace + "+", "g" ),
	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" +
		whitespace + "+$", "g" ),

	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
	rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace +
		"*" ),
	rdescend = new RegExp( whitespace + "|>" ),

	rpseudo = new RegExp( pseudos ),
	ridentifier = new RegExp( "^" + identifier + "$" ),

	matchExpr = {
		"ID": new RegExp( "^#(" + identifier + ")" ),
		"CLASS": new RegExp( "^\\.(" + identifier + ")" ),
		"TAG": new RegExp( "^(" + identifier + "|[*])" ),
		"ATTR": new RegExp( "^" + attributes ),
		"PSEUDO": new RegExp( "^" + pseudos ),
		"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" +
			whitespace + "*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" +
			whitespace + "*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
		"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),

		// For use in libraries implementing .is()
		// We use this for POS matching in `select`
		"needsContext": new RegExp( "^" + whitespace +
			"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + whitespace +
			"*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
	},

	rhtml = /HTML$/i,
	rinputs = /^(?:input|select|textarea|button)$/i,
	rheader = /^h\d$/i,

	rnative = /^[^{]+\{\s*\[native \w/,

	// Easily-parseable/retrievable ID or TAG or CLASS selectors
	rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

	rsibling = /[+~]/,

	// CSS escapes
	// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
	runescape = new RegExp( "\\\\[\\da-fA-F]{1,6}" + whitespace + "?|\\\\([^\\r\\n\\f])", "g" ),
	funescape = function( escape, nonHex ) {
		var high = "0x" + escape.slice( 1 ) - 0x10000;

		return nonHex ?

			// Strip the backslash prefix from a non-hex escape sequence
			nonHex :

			// Replace a hexadecimal escape sequence with the encoded Unicode code point
			// Support: IE <=11+
			// For values outside the Basic Multilingual Plane (BMP), manually construct a
			// surrogate pair
			high < 0 ?
				String.fromCharCode( high + 0x10000 ) :
				String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
	},

	// CSS string/identifier serialization
	// https://drafts.csswg.org/cssom/#common-serializing-idioms
	rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
	fcssescape = function( ch, asCodePoint ) {
		if ( asCodePoint ) {

			// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER
			if ( ch === "\0" ) {
				return "\uFFFD";
			}

			// Control characters and (dependent upon position) numbers get escaped as code points
			return ch.slice( 0, -1 ) + "\\" +
				ch.charCodeAt( ch.length - 1 ).toString( 16 ) + " ";
		}

		// Other potentially-special ASCII characters get backslash-escaped
		return "\\" + ch;
	},

	// Used for iframes
	// See setDocument()
	// Removing the function wrapper causes a "Permission Denied"
	// error in IE
	unloadHandler = function() {
		setDocument();
	},

	inDisabledFieldset = addCombinator(
		function( elem ) {
			return elem.disabled === true && elem.nodeName.toLowerCase() === "fieldset";
		},
		{ dir: "parentNode", next: "legend" }
	);

// Optimize for push.apply( _, NodeList )
try {
	push.apply(
		( arr = slice.call( preferredDoc.childNodes ) ),
		preferredDoc.childNodes
	);

	// Support: Android<4.0
	// Detect silently failing push.apply
	// eslint-disable-next-line no-unused-expressions
	arr[ preferredDoc.childNodes.length ].nodeType;
} catch ( e ) {
	push = { apply: arr.length ?

		// Leverage slice if possible
		function( target, els ) {
			pushNative.apply( target, slice.call( els ) );
		} :

		// Support: IE<9
		// Otherwise append directly
		function( target, els ) {
			var j = target.length,
				i = 0;

			// Can't trust NodeList.length
			while ( ( target[ j++ ] = els[ i++ ] ) ) {}
			target.length = j - 1;
		}
	};
}

function Sizzle( selector, context, results, seed ) {
	var m, i, elem, nid, match, groups, newSelector,
		newContext = context && context.ownerDocument,

		// nodeType defaults to 9, since context defaults to document
		nodeType = context ? context.nodeType : 9;

	results = results || [];

	// Return early from calls with invalid selector or context
	if ( typeof selector !== "string" || !selector ||
		nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {

		return results;
	}

	// Try to shortcut find operations (as opposed to filters) in HTML documents
	if ( !seed ) {
		setDocument( context );
		context = context || document;

		if ( documentIsHTML ) {

			// If the selector is sufficiently simple, try using a "get*By*" DOM method
			// (excepting DocumentFragment context, where the methods don't exist)
			if ( nodeType !== 11 && ( match = rquickExpr.exec( selector ) ) ) {

				// ID selector
				if ( ( m = match[ 1 ] ) ) {

					// Document context
					if ( nodeType === 9 ) {
						if ( ( elem = context.getElementById( m ) ) ) {

							// Support: IE, Opera, Webkit
							// TODO: identify versions
							// getElementById can match elements by name instead of ID
							if ( elem.id === m ) {
								results.push( elem );
								return results;
							}
						} else {
							return results;
						}

					// Element context
					} else {

						// Support: IE, Opera, Webkit
						// TODO: identify versions
						// getElementById can match elements by name instead of ID
						if ( newContext && ( elem = newContext.getElementById( m ) ) &&
							contains( context, elem ) &&
							elem.id === m ) {

							results.push( elem );
							return results;
						}
					}

				// Type selector
				} else if ( match[ 2 ] ) {
					push.apply( results, context.getElementsByTagName( selector ) );
					return results;

				// Class selector
				} else if ( ( m = match[ 3 ] ) && support.getElementsByClassName &&
					context.getElementsByClassName ) {

					push.apply( results, context.getElementsByClassName( m ) );
					return results;
				}
			}

			// Take advantage of querySelectorAll
			if ( support.qsa &&
				!nonnativeSelectorCache[ selector + " " ] &&
				( !rbuggyQSA || !rbuggyQSA.test( selector ) ) &&

				// Support: IE 8 only
				// Exclude object elements
				( nodeType !== 1 || context.nodeName.toLowerCase() !== "object" ) ) {

				newSelector = selector;
				newContext = context;

				// qSA considers elements outside a scoping root when evaluating child or
				// descendant combinators, which is not what we want.
				// In such cases, we work around the behavior by prefixing every selector in the
				// list with an ID selector referencing the scope context.
				// The technique has to be used as well when a leading combinator is used
				// as such selectors are not recognized by querySelectorAll.
				// Thanks to Andrew Dupont for this technique.
				if ( nodeType === 1 &&
					( rdescend.test( selector ) || rcombinators.test( selector ) ) ) {

					// Expand context for sibling selectors
					newContext = rsibling.test( selector ) && testContext( context.parentNode ) ||
						context;

					// We can use :scope instead of the ID hack if the browser
					// supports it & if we're not changing the context.
					if ( newContext !== context || !support.scope ) {

						// Capture the context ID, setting it first if necessary
						if ( ( nid = context.getAttribute( "id" ) ) ) {
							nid = nid.replace( rcssescape, fcssescape );
						} else {
							context.setAttribute( "id", ( nid = expando ) );
						}
					}

					// Prefix every selector in the list
					groups = tokenize( selector );
					i = groups.length;
					while ( i-- ) {
						groups[ i ] = ( nid ? "#" + nid : ":scope" ) + " " +
							toSelector( groups[ i ] );
					}
					newSelector = groups.join( "," );
				}

				try {
					push.apply( results,
						newContext.querySelectorAll( newSelector )
					);
					return results;
				} catch ( qsaError ) {
					nonnativeSelectorCache( selector, true );
				} finally {
					if ( nid === expando ) {
						context.removeAttribute( "id" );
					}
				}
			}
		}
	}

	// All others
	return select( selector.replace( rtrim, "$1" ), context, results, seed );
}

/**
 * Create key-value caches of limited size
 * @returns {function(string, object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */
function createCache() {
	var keys = [];

	function cache( key, value ) {

		// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
		if ( keys.push( key + " " ) > Expr.cacheLength ) {

			// Only keep the most recent entries
			delete cache[ keys.shift() ];
		}
		return ( cache[ key + " " ] = value );
	}
	return cache;
}

/**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */
function markFunction( fn ) {
	fn[ expando ] = true;
	return fn;
}

/**
 * Support testing using an element
 * @param {Function} fn Passed the created element and returns a boolean result
 */
function assert( fn ) {
	var el = document.createElement( "fieldset" );

	try {
		return !!fn( el );
	} catch ( e ) {
		return false;
	} finally {

		// Remove from its parent by default
		if ( el.parentNode ) {
			el.parentNode.removeChild( el );
		}

		// release memory in IE
		el = null;
	}
}

/**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */
function addHandle( attrs, handler ) {
	var arr = attrs.split( "|" ),
		i = arr.length;

	while ( i-- ) {
		Expr.attrHandle[ arr[ i ] ] = handler;
	}
}

/**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */
function siblingCheck( a, b ) {
	var cur = b && a,
		diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
			a.sourceIndex - b.sourceIndex;

	// Use IE sourceIndex if available on both nodes
	if ( diff ) {
		return diff;
	}

	// Check if b follows a
	if ( cur ) {
		while ( ( cur = cur.nextSibling ) ) {
			if ( cur === b ) {
				return -1;
			}
		}
	}

	return a ? 1 : -1;
}

/**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */
function createInputPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return name === "input" && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */
function createButtonPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return ( name === "input" || name === "button" ) && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for :enabled/:disabled
 * @param {Boolean} disabled true for :disabled; false for :enabled
 */
function createDisabledPseudo( disabled ) {

	// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable
	return function( elem ) {

		// Only certain elements can match :enabled or :disabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled
		if ( "form" in elem ) {

			// Check for inherited disabledness on relevant non-disabled elements:
			// * listed form-associated elements in a disabled fieldset
			//   https://html.spec.whatwg.org/multipage/forms.html#category-listed
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled
			// * option elements in a disabled optgroup
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled
			// All such elements have a "form" property.
			if ( elem.parentNode && elem.disabled === false ) {

				// Option elements defer to a parent optgroup if present
				if ( "label" in elem ) {
					if ( "label" in elem.parentNode ) {
						return elem.parentNode.disabled === disabled;
					} else {
						return elem.disabled === disabled;
					}
				}

				// Support: IE 6 - 11
				// Use the isDisabled shortcut property to check for disabled fieldset ancestors
				return elem.isDisabled === disabled ||

					// Where there is no isDisabled, check manually
					/* jshint -W018 */
					elem.isDisabled !== !disabled &&
					inDisabledFieldset( elem ) === disabled;
			}

			return elem.disabled === disabled;

		// Try to winnow out elements that can't be disabled before trusting the disabled property.
		// Some victims get caught in our net (label, legend, menu, track), but it shouldn't
		// even exist on them, let alone have a boolean value.
		} else if ( "label" in elem ) {
			return elem.disabled === disabled;
		}

		// Remaining elements are neither :enabled nor :disabled
		return false;
	};
}

/**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */
function createPositionalPseudo( fn ) {
	return markFunction( function( argument ) {
		argument = +argument;
		return markFunction( function( seed, matches ) {
			var j,
				matchIndexes = fn( [], seed.length, argument ),
				i = matchIndexes.length;

			// Match elements found at the specified indexes
			while ( i-- ) {
				if ( seed[ ( j = matchIndexes[ i ] ) ] ) {
					seed[ j ] = !( matches[ j ] = seed[ j ] );
				}
			}
		} );
	} );
}

/**
 * Checks a node for validity as a Sizzle context
 * @param {Element|Object=} context
 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
 */
function testContext( context ) {
	return context && typeof context.getElementsByTagName !== "undefined" && context;
}

// Expose support vars for convenience
support = Sizzle.support = {};

/**
 * Detects XML nodes
 * @param {Element|Object} elem An element or a document
 * @returns {Boolean} True iff elem is a non-HTML XML node
 */
isXML = Sizzle.isXML = function( elem ) {
	var namespace = elem && elem.namespaceURI,
		docElem = elem && ( elem.ownerDocument || elem ).documentElement;

	// Support: IE <=8
	// Assume HTML when documentElement doesn't yet exist, such as inside loading iframes
	// https://bugs.jquery.com/ticket/4833
	return !rhtml.test( namespace || docElem && docElem.nodeName || "HTML" );
};

/**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */
setDocument = Sizzle.setDocument = function( node ) {
	var hasCompare, subWindow,
		doc = node ? node.ownerDocument || node : preferredDoc;

	// Return early if doc is invalid or already selected
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( doc == document || doc.nodeType !== 9 || !doc.documentElement ) {
		return document;
	}

	// Update global variables
	document = doc;
	docElem = document.documentElement;
	documentIsHTML = !isXML( document );

	// Support: IE 9 - 11+, Edge 12 - 18+
	// Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( preferredDoc != document &&
		( subWindow = document.defaultView ) && subWindow.top !== subWindow ) {

		// Support: IE 11, Edge
		if ( subWindow.addEventListener ) {
			subWindow.addEventListener( "unload", unloadHandler, false );

		// Support: IE 9 - 10 only
		} else if ( subWindow.attachEvent ) {
			subWindow.attachEvent( "onunload", unloadHandler );
		}
	}

	// Support: IE 8 - 11+, Edge 12 - 18+, Chrome <=16 - 25 only, Firefox <=3.6 - 31 only,
	// Safari 4 - 5 only, Opera <=11.6 - 12.x only
	// IE/Edge & older browsers don't support the :scope pseudo-class.
	// Support: Safari 6.0 only
	// Safari 6.0 supports :scope but it's an alias of :root there.
	support.scope = assert( function( el ) {
		docElem.appendChild( el ).appendChild( document.createElement( "div" ) );
		return typeof el.querySelectorAll !== "undefined" &&
			!el.querySelectorAll( ":scope fieldset div" ).length;
	} );

	/* Attributes
	---------------------------------------------------------------------- */

	// Support: IE<8
	// Verify that getAttribute really returns attributes and not properties
	// (excepting IE8 booleans)
	support.attributes = assert( function( el ) {
		el.className = "i";
		return !el.getAttribute( "className" );
	} );

	/* getElement(s)By*
	---------------------------------------------------------------------- */

	// Check if getElementsByTagName("*") returns only elements
	support.getElementsByTagName = assert( function( el ) {
		el.appendChild( document.createComment( "" ) );
		return !el.getElementsByTagName( "*" ).length;
	} );

	// Support: IE<9
	support.getElementsByClassName = rnative.test( document.getElementsByClassName );

	// Support: IE<10
	// Check if getElementById returns elements by name
	// The broken getElementById methods don't pick up programmatically-set names,
	// so use a roundabout getElementsByName test
	support.getById = assert( function( el ) {
		docElem.appendChild( el ).id = expando;
		return !document.getElementsByName || !document.getElementsByName( expando ).length;
	} );

	// ID filter and find
	if ( support.getById ) {
		Expr.filter[ "ID" ] = function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				return elem.getAttribute( "id" ) === attrId;
			};
		};
		Expr.find[ "ID" ] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var elem = context.getElementById( id );
				return elem ? [ elem ] : [];
			}
		};
	} else {
		Expr.filter[ "ID" ] =  function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				var node = typeof elem.getAttributeNode !== "undefined" &&
					elem.getAttributeNode( "id" );
				return node && node.value === attrId;
			};
		};

		// Support: IE 6 - 7 only
		// getElementById is not reliable as a find shortcut
		Expr.find[ "ID" ] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var node, i, elems,
					elem = context.getElementById( id );

				if ( elem ) {

					// Verify the id attribute
					node = elem.getAttributeNode( "id" );
					if ( node && node.value === id ) {
						return [ elem ];
					}

					// Fall back on getElementsByName
					elems = context.getElementsByName( id );
					i = 0;
					while ( ( elem = elems[ i++ ] ) ) {
						node = elem.getAttributeNode( "id" );
						if ( node && node.value === id ) {
							return [ elem ];
						}
					}
				}

				return [];
			}
		};
	}

	// Tag
	Expr.find[ "TAG" ] = support.getElementsByTagName ?
		function( tag, context ) {
			if ( typeof context.getElementsByTagName !== "undefined" ) {
				return context.getElementsByTagName( tag );

			// DocumentFragment nodes don't have gEBTN
			} else if ( support.qsa ) {
				return context.querySelectorAll( tag );
			}
		} :

		function( tag, context ) {
			var elem,
				tmp = [],
				i = 0,

				// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
				results = context.getElementsByTagName( tag );

			// Filter out possible comments
			if ( tag === "*" ) {
				while ( ( elem = results[ i++ ] ) ) {
					if ( elem.nodeType === 1 ) {
						tmp.push( elem );
					}
				}

				return tmp;
			}
			return results;
		};

	// Class
	Expr.find[ "CLASS" ] = support.getElementsByClassName && function( className, context ) {
		if ( typeof context.getElementsByClassName !== "undefined" && documentIsHTML ) {
			return context.getElementsByClassName( className );
		}
	};

	/* QSA/matchesSelector
	---------------------------------------------------------------------- */

	// QSA and matchesSelector support

	// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
	rbuggyMatches = [];

	// qSa(:focus) reports false when true (Chrome 21)
	// We allow this because of a bug in IE8/9 that throws an error
	// whenever `document.activeElement` is accessed on an iframe
	// So, we allow :focus to pass through QSA all the time to avoid the IE error
	// See https://bugs.jquery.com/ticket/13378
	rbuggyQSA = [];

	if ( ( support.qsa = rnative.test( document.querySelectorAll ) ) ) {

		// Build QSA regex
		// Regex strategy adopted from Diego Perini
		assert( function( el ) {

			var input;

			// Select is set to empty string on purpose
			// This is to test IE's treatment of not explicitly
			// setting a boolean content attribute,
			// since its presence should be enough
			// https://bugs.jquery.com/ticket/12359
			docElem.appendChild( el ).innerHTML = "<a id='" + expando + "'></a>" +
				"<select id='" + expando + "-\r\\' msallowcapture=''>" +
				"<option selected=''></option></select>";

			// Support: IE8, Opera 11-12.16
			// Nothing should be selected when empty strings follow ^= or $= or *=
			// The test attribute must be unknown in Opera but "safe" for WinRT
			// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
			if ( el.querySelectorAll( "[msallowcapture^='']" ).length ) {
				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
			}

			// Support: IE8
			// Boolean attributes and "value" are not treated correctly
			if ( !el.querySelectorAll( "[selected]" ).length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
			}

			// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+
			if ( !el.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
				rbuggyQSA.push( "~=" );
			}

			// Support: IE 11+, Edge 15 - 18+
			// IE 11/Edge don't find elements on a `[name='']` query in some cases.
			// Adding a temporary attribute to the document before the selection works
			// around the issue.
			// Interestingly, IE 10 & older don't seem to have the issue.
			input = document.createElement( "input" );
			input.setAttribute( "name", "" );
			el.appendChild( input );
			if ( !el.querySelectorAll( "[name='']" ).length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*name" + whitespace + "*=" +
					whitespace + "*(?:''|\"\")" );
			}

			// Webkit/Opera - :checked should return selected option elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			// IE8 throws error here and will not see later tests
			if ( !el.querySelectorAll( ":checked" ).length ) {
				rbuggyQSA.push( ":checked" );
			}

			// Support: Safari 8+, iOS 8+
			// https://bugs.webkit.org/show_bug.cgi?id=136851
			// In-page `selector#id sibling-combinator selector` fails
			if ( !el.querySelectorAll( "a#" + expando + "+*" ).length ) {
				rbuggyQSA.push( ".#.+[+~]" );
			}

			// Support: Firefox <=3.6 - 5 only
			// Old Firefox doesn't throw on a badly-escaped identifier.
			el.querySelectorAll( "\\\f" );
			rbuggyQSA.push( "[\\r\\n\\f]" );
		} );

		assert( function( el ) {
			el.innerHTML = "<a href='' disabled='disabled'></a>" +
				"<select disabled='disabled'><option/></select>";

			// Support: Windows 8 Native Apps
			// The type and name attributes are restricted during .innerHTML assignment
			var input = document.createElement( "input" );
			input.setAttribute( "type", "hidden" );
			el.appendChild( input ).setAttribute( "name", "D" );

			// Support: IE8
			// Enforce case-sensitivity of name attribute
			if ( el.querySelectorAll( "[name=d]" ).length ) {
				rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
			}

			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
			// IE8 throws error here and will not see later tests
			if ( el.querySelectorAll( ":enabled" ).length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Support: IE9-11+
			// IE's :disabled selector does not pick up the children of disabled fieldsets
			docElem.appendChild( el ).disabled = true;
			if ( el.querySelectorAll( ":disabled" ).length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Support: Opera 10 - 11 only
			// Opera 10-11 does not throw on post-comma invalid pseudos
			el.querySelectorAll( "*,:x" );
			rbuggyQSA.push( ",.*:" );
		} );
	}

	if ( ( support.matchesSelector = rnative.test( ( matches = docElem.matches ||
		docElem.webkitMatchesSelector ||
		docElem.mozMatchesSelector ||
		docElem.oMatchesSelector ||
		docElem.msMatchesSelector ) ) ) ) {

		assert( function( el ) {

			// Check to see if it's possible to do matchesSelector
			// on a disconnected node (IE 9)
			support.disconnectedMatch = matches.call( el, "*" );

			// This should fail with an exception
			// Gecko does not error, returns false instead
			matches.call( el, "[s!='']:x" );
			rbuggyMatches.push( "!=", pseudos );
		} );
	}

	rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join( "|" ) );
	rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join( "|" ) );

	/* Contains
	---------------------------------------------------------------------- */
	hasCompare = rnative.test( docElem.compareDocumentPosition );

	// Element contains another
	// Purposefully self-exclusive
	// As in, an element does not contain itself
	contains = hasCompare || rnative.test( docElem.contains ) ?
		function( a, b ) {
			var adown = a.nodeType === 9 ? a.documentElement : a,
				bup = b && b.parentNode;
			return a === bup || !!( bup && bup.nodeType === 1 && (
				adown.contains ?
					adown.contains( bup ) :
					a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
			) );
		} :
		function( a, b ) {
			if ( b ) {
				while ( ( b = b.parentNode ) ) {
					if ( b === a ) {
						return true;
					}
				}
			}
			return false;
		};

	/* Sorting
	---------------------------------------------------------------------- */

	// Document order sorting
	sortOrder = hasCompare ?
	function( a, b ) {

		// Flag for duplicate removal
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		// Sort on method existence if only one input has compareDocumentPosition
		var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
		if ( compare ) {
			return compare;
		}

		// Calculate position if both inputs belong to the same document
		// Support: IE 11+, Edge 17 - 18+
		// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
		// two documents; shallow comparisons work.
		// eslint-disable-next-line eqeqeq
		compare = ( a.ownerDocument || a ) == ( b.ownerDocument || b ) ?
			a.compareDocumentPosition( b ) :

			// Otherwise we know they are disconnected
			1;

		// Disconnected nodes
		if ( compare & 1 ||
			( !support.sortDetached && b.compareDocumentPosition( a ) === compare ) ) {

			// Choose the first element that is related to our preferred document
			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			// eslint-disable-next-line eqeqeq
			if ( a == document || a.ownerDocument == preferredDoc &&
				contains( preferredDoc, a ) ) {
				return -1;
			}

			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			// eslint-disable-next-line eqeqeq
			if ( b == document || b.ownerDocument == preferredDoc &&
				contains( preferredDoc, b ) ) {
				return 1;
			}

			// Maintain original order
			return sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;
		}

		return compare & 4 ? -1 : 1;
	} :
	function( a, b ) {

		// Exit early if the nodes are identical
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		var cur,
			i = 0,
			aup = a.parentNode,
			bup = b.parentNode,
			ap = [ a ],
			bp = [ b ];

		// Parentless nodes are either documents or disconnected
		if ( !aup || !bup ) {

			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			/* eslint-disable eqeqeq */
			return a == document ? -1 :
				b == document ? 1 :
				/* eslint-enable eqeqeq */
				aup ? -1 :
				bup ? 1 :
				sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;

		// If the nodes are siblings, we can do a quick check
		} else if ( aup === bup ) {
			return siblingCheck( a, b );
		}

		// Otherwise we need full lists of their ancestors for comparison
		cur = a;
		while ( ( cur = cur.parentNode ) ) {
			ap.unshift( cur );
		}
		cur = b;
		while ( ( cur = cur.parentNode ) ) {
			bp.unshift( cur );
		}

		// Walk down the tree looking for a discrepancy
		while ( ap[ i ] === bp[ i ] ) {
			i++;
		}

		return i ?

			// Do a sibling check if the nodes have a common ancestor
			siblingCheck( ap[ i ], bp[ i ] ) :

			// Otherwise nodes in our document sort first
			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			/* eslint-disable eqeqeq */
			ap[ i ] == preferredDoc ? -1 :
			bp[ i ] == preferredDoc ? 1 :
			/* eslint-enable eqeqeq */
			0;
	};

	return document;
};

Sizzle.matches = function( expr, elements ) {
	return Sizzle( expr, null, null, elements );
};

Sizzle.matchesSelector = function( elem, expr ) {
	setDocument( elem );

	if ( support.matchesSelector && documentIsHTML &&
		!nonnativeSelectorCache[ expr + " " ] &&
		( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
		( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

		try {
			var ret = matches.call( elem, expr );

			// IE 9's matchesSelector returns false on disconnected nodes
			if ( ret || support.disconnectedMatch ||

				// As well, disconnected nodes are said to be in a document
				// fragment in IE 9
				elem.document && elem.document.nodeType !== 11 ) {
				return ret;
			}
		} catch ( e ) {
			nonnativeSelectorCache( expr, true );
		}
	}

	return Sizzle( expr, document, null, [ elem ] ).length > 0;
};

Sizzle.contains = function( context, elem ) {

	// Set document vars if needed
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( ( context.ownerDocument || context ) != document ) {
		setDocument( context );
	}
	return contains( context, elem );
};

Sizzle.attr = function( elem, name ) {

	// Set document vars if needed
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( ( elem.ownerDocument || elem ) != document ) {
		setDocument( elem );
	}

	var fn = Expr.attrHandle[ name.toLowerCase() ],

		// Don't get fooled by Object.prototype properties (jQuery #13807)
		val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
			fn( elem, name, !documentIsHTML ) :
			undefined;

	return val !== undefined ?
		val :
		support.attributes || !documentIsHTML ?
			elem.getAttribute( name ) :
			( val = elem.getAttributeNode( name ) ) && val.specified ?
				val.value :
				null;
};

Sizzle.escape = function( sel ) {
	return ( sel + "" ).replace( rcssescape, fcssescape );
};

Sizzle.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

/**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */
Sizzle.uniqueSort = function( results ) {
	var elem,
		duplicates = [],
		j = 0,
		i = 0;

	// Unless we *know* we can detect duplicates, assume their presence
	hasDuplicate = !support.detectDuplicates;
	sortInput = !support.sortStable && results.slice( 0 );
	results.sort( sortOrder );

	if ( hasDuplicate ) {
		while ( ( elem = results[ i++ ] ) ) {
			if ( elem === results[ i ] ) {
				j = duplicates.push( i );
			}
		}
		while ( j-- ) {
			results.splice( duplicates[ j ], 1 );
		}
	}

	// Clear input after sorting to release objects
	// See https://github.com/jquery/sizzle/pull/225
	sortInput = null;

	return results;
};

/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
getText = Sizzle.getText = function( elem ) {
	var node,
		ret = "",
		i = 0,
		nodeType = elem.nodeType;

	if ( !nodeType ) {

		// If no nodeType, this is expected to be an array
		while ( ( node = elem[ i++ ] ) ) {

			// Do not traverse comment nodes
			ret += getText( node );
		}
	} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {

		// Use textContent for elements
		// innerText usage removed for consistency of new lines (jQuery #11153)
		if ( typeof elem.textContent === "string" ) {
			return elem.textContent;
		} else {

			// Traverse its children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				ret += getText( elem );
			}
		}
	} else if ( nodeType === 3 || nodeType === 4 ) {
		return elem.nodeValue;
	}

	// Do not include comment or processing instruction nodes

	return ret;
};

Expr = Sizzle.selectors = {

	// Can be adjusted by the user
	cacheLength: 50,

	createPseudo: markFunction,

	match: matchExpr,

	attrHandle: {},

	find: {},

	relative: {
		">": { dir: "parentNode", first: true },
		" ": { dir: "parentNode" },
		"+": { dir: "previousSibling", first: true },
		"~": { dir: "previousSibling" }
	},

	preFilter: {
		"ATTR": function( match ) {
			match[ 1 ] = match[ 1 ].replace( runescape, funescape );

			// Move the given value to match[3] whether quoted or unquoted
			match[ 3 ] = ( match[ 3 ] || match[ 4 ] ||
				match[ 5 ] || "" ).replace( runescape, funescape );

			if ( match[ 2 ] === "~=" ) {
				match[ 3 ] = " " + match[ 3 ] + " ";
			}

			return match.slice( 0, 4 );
		},

		"CHILD": function( match ) {

			/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
			match[ 1 ] = match[ 1 ].toLowerCase();

			if ( match[ 1 ].slice( 0, 3 ) === "nth" ) {

				// nth-* requires argument
				if ( !match[ 3 ] ) {
					Sizzle.error( match[ 0 ] );
				}

				// numeric x and y parameters for Expr.filter.CHILD
				// remember that false/true cast respectively to 0/1
				match[ 4 ] = +( match[ 4 ] ?
					match[ 5 ] + ( match[ 6 ] || 1 ) :
					2 * ( match[ 3 ] === "even" || match[ 3 ] === "odd" ) );
				match[ 5 ] = +( ( match[ 7 ] + match[ 8 ] ) || match[ 3 ] === "odd" );

				// other types prohibit arguments
			} else if ( match[ 3 ] ) {
				Sizzle.error( match[ 0 ] );
			}

			return match;
		},

		"PSEUDO": function( match ) {
			var excess,
				unquoted = !match[ 6 ] && match[ 2 ];

			if ( matchExpr[ "CHILD" ].test( match[ 0 ] ) ) {
				return null;
			}

			// Accept quoted arguments as-is
			if ( match[ 3 ] ) {
				match[ 2 ] = match[ 4 ] || match[ 5 ] || "";

			// Strip excess characters from unquoted arguments
			} else if ( unquoted && rpseudo.test( unquoted ) &&

				// Get excess from tokenize (recursively)
				( excess = tokenize( unquoted, true ) ) &&

				// advance to the next closing parenthesis
				( excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length ) ) {

				// excess is a negative index
				match[ 0 ] = match[ 0 ].slice( 0, excess );
				match[ 2 ] = unquoted.slice( 0, excess );
			}

			// Return only captures needed by the pseudo filter method (type and argument)
			return match.slice( 0, 3 );
		}
	},

	filter: {

		"TAG": function( nodeNameSelector ) {
			var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
			return nodeNameSelector === "*" ?
				function() {
					return true;
				} :
				function( elem ) {
					return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
				};
		},

		"CLASS": function( className ) {
			var pattern = classCache[ className + " " ];

			return pattern ||
				( pattern = new RegExp( "(^|" + whitespace +
					")" + className + "(" + whitespace + "|$)" ) ) && classCache(
						className, function( elem ) {
							return pattern.test(
								typeof elem.className === "string" && elem.className ||
								typeof elem.getAttribute !== "undefined" &&
									elem.getAttribute( "class" ) ||
								""
							);
				} );
		},

		"ATTR": function( name, operator, check ) {
			return function( elem ) {
				var result = Sizzle.attr( elem, name );

				if ( result == null ) {
					return operator === "!=";
				}
				if ( !operator ) {
					return true;
				}

				result += "";

				/* eslint-disable max-len */

				return operator === "=" ? result === check :
					operator === "!=" ? result !== check :
					operator === "^=" ? check && result.indexOf( check ) === 0 :
					operator === "*=" ? check && result.indexOf( check ) > -1 :
					operator === "$=" ? check && result.slice( -check.length ) === check :
					operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -1 :
					operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
					false;
				/* eslint-enable max-len */

			};
		},

		"CHILD": function( type, what, _argument, first, last ) {
			var simple = type.slice( 0, 3 ) !== "nth",
				forward = type.slice( -4 ) !== "last",
				ofType = what === "of-type";

			return first === 1 && last === 0 ?

				// Shortcut for :nth-*(n)
				function( elem ) {
					return !!elem.parentNode;
				} :

				function( elem, _context, xml ) {
					var cache, uniqueCache, outerCache, node, nodeIndex, start,
						dir = simple !== forward ? "nextSibling" : "previousSibling",
						parent = elem.parentNode,
						name = ofType && elem.nodeName.toLowerCase(),
						useCache = !xml && !ofType,
						diff = false;

					if ( parent ) {

						// :(first|last|only)-(child|of-type)
						if ( simple ) {
							while ( dir ) {
								node = elem;
								while ( ( node = node[ dir ] ) ) {
									if ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) {

										return false;
									}
								}

								// Reverse direction for :only-* (if we haven't yet done so)
								start = dir = type === "only" && !start && "nextSibling";
							}
							return true;
						}

						start = [ forward ? parent.firstChild : parent.lastChild ];

						// non-xml :nth-child(...) stores cache data on `parent`
						if ( forward && useCache ) {

							// Seek `elem` from a previously-cached index

							// ...in a gzip-friendly way
							node = parent;
							outerCache = node[ expando ] || ( node[ expando ] = {} );

							// Support: IE <9 only
							// Defend against cloned attroperties (jQuery gh-1709)
							uniqueCache = outerCache[ node.uniqueID ] ||
								( outerCache[ node.uniqueID ] = {} );

							cache = uniqueCache[ type ] || [];
							nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
							diff = nodeIndex && cache[ 2 ];
							node = nodeIndex && parent.childNodes[ nodeIndex ];

							while ( ( node = ++nodeIndex && node && node[ dir ] ||

								// Fallback to seeking `elem` from the start
								( diff = nodeIndex = 0 ) || start.pop() ) ) {

								// When found, cache indexes on `parent` and break
								if ( node.nodeType === 1 && ++diff && node === elem ) {
									uniqueCache[ type ] = [ dirruns, nodeIndex, diff ];
									break;
								}
							}

						} else {

							// Use previously-cached element index if available
							if ( useCache ) {

								// ...in a gzip-friendly way
								node = elem;
								outerCache = node[ expando ] || ( node[ expando ] = {} );

								// Support: IE <9 only
								// Defend against cloned attroperties (jQuery gh-1709)
								uniqueCache = outerCache[ node.uniqueID ] ||
									( outerCache[ node.uniqueID ] = {} );

								cache = uniqueCache[ type ] || [];
								nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
								diff = nodeIndex;
							}

							// xml :nth-child(...)
							// or :nth-last-child(...) or :nth(-last)?-of-type(...)
							if ( diff === false ) {

								// Use the same loop as above to seek `elem` from the start
								while ( ( node = ++nodeIndex && node && node[ dir ] ||
									( diff = nodeIndex = 0 ) || start.pop() ) ) {

									if ( ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) &&
										++diff ) {

										// Cache the index of each encountered element
										if ( useCache ) {
											outerCache = node[ expando ] ||
												( node[ expando ] = {} );

											// Support: IE <9 only
											// Defend against cloned attroperties (jQuery gh-1709)
											uniqueCache = outerCache[ node.uniqueID ] ||
												( outerCache[ node.uniqueID ] = {} );

											uniqueCache[ type ] = [ dirruns, diff ];
										}

										if ( node === elem ) {
											break;
										}
									}
								}
							}
						}

						// Incorporate the offset, then check against cycle size
						diff -= last;
						return diff === first || ( diff % first === 0 && diff / first >= 0 );
					}
				};
		},

		"PSEUDO": function( pseudo, argument ) {

			// pseudo-class names are case-insensitive
			// http://www.w3.org/TR/selectors/#pseudo-classes
			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
			// Remember that setFilters inherits from pseudos
			var args,
				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
					Sizzle.error( "unsupported pseudo: " + pseudo );

			// The user may use createPseudo to indicate that
			// arguments are needed to create the filter function
			// just as Sizzle does
			if ( fn[ expando ] ) {
				return fn( argument );
			}

			// But maintain support for old signatures
			if ( fn.length > 1 ) {
				args = [ pseudo, pseudo, "", argument ];
				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
					markFunction( function( seed, matches ) {
						var idx,
							matched = fn( seed, argument ),
							i = matched.length;
						while ( i-- ) {
							idx = indexOf( seed, matched[ i ] );
							seed[ idx ] = !( matches[ idx ] = matched[ i ] );
						}
					} ) :
					function( elem ) {
						return fn( elem, 0, args );
					};
			}

			return fn;
		}
	},

	pseudos: {

		// Potentially complex pseudos
		"not": markFunction( function( selector ) {

			// Trim the selector passed to compile
			// to avoid treating leading and trailing
			// spaces as combinators
			var input = [],
				results = [],
				matcher = compile( selector.replace( rtrim, "$1" ) );

			return matcher[ expando ] ?
				markFunction( function( seed, matches, _context, xml ) {
					var elem,
						unmatched = matcher( seed, null, xml, [] ),
						i = seed.length;

					// Match elements unmatched by `matcher`
					while ( i-- ) {
						if ( ( elem = unmatched[ i ] ) ) {
							seed[ i ] = !( matches[ i ] = elem );
						}
					}
				} ) :
				function( elem, _context, xml ) {
					input[ 0 ] = elem;
					matcher( input, null, xml, results );

					// Don't keep the element (issue #299)
					input[ 0 ] = null;
					return !results.pop();
				};
		} ),

		"has": markFunction( function( selector ) {
			return function( elem ) {
				return Sizzle( selector, elem ).length > 0;
			};
		} ),

		"contains": markFunction( function( text ) {
			text = text.replace( runescape, funescape );
			return function( elem ) {
				return ( elem.textContent || getText( elem ) ).indexOf( text ) > -1;
			};
		} ),

		// "Whether an element is represented by a :lang() selector
		// is based solely on the element's language value
		// being equal to the identifier C,
		// or beginning with the identifier C immediately followed by "-".
		// The matching of C against the element's language value is performed case-insensitively.
		// The identifier C does not have to be a valid language name."
		// http://www.w3.org/TR/selectors/#lang-pseudo
		"lang": markFunction( function( lang ) {

			// lang value must be a valid identifier
			if ( !ridentifier.test( lang || "" ) ) {
				Sizzle.error( "unsupported lang: " + lang );
			}
			lang = lang.replace( runescape, funescape ).toLowerCase();
			return function( elem ) {
				var elemLang;
				do {
					if ( ( elemLang = documentIsHTML ?
						elem.lang :
						elem.getAttribute( "xml:lang" ) || elem.getAttribute( "lang" ) ) ) {

						elemLang = elemLang.toLowerCase();
						return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
					}
				} while ( ( elem = elem.parentNode ) && elem.nodeType === 1 );
				return false;
			};
		} ),

		// Miscellaneous
		"target": function( elem ) {
			var hash = window.location && window.location.hash;
			return hash && hash.slice( 1 ) === elem.id;
		},

		"root": function( elem ) {
			return elem === docElem;
		},

		"focus": function( elem ) {
			return elem === document.activeElement &&
				( !document.hasFocus || document.hasFocus() ) &&
				!!( elem.type || elem.href || ~elem.tabIndex );
		},

		// Boolean properties
		"enabled": createDisabledPseudo( false ),
		"disabled": createDisabledPseudo( true ),

		"checked": function( elem ) {

			// In CSS3, :checked should return both checked and selected elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			var nodeName = elem.nodeName.toLowerCase();
			return ( nodeName === "input" && !!elem.checked ) ||
				( nodeName === "option" && !!elem.selected );
		},

		"selected": function( elem ) {

			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				// eslint-disable-next-line no-unused-expressions
				elem.parentNode.selectedIndex;
			}

			return elem.selected === true;
		},

		// Contents
		"empty": function( elem ) {

			// http://www.w3.org/TR/selectors/#empty-pseudo
			// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
			//   but not by others (comment: 8; processing instruction: 7; etc.)
			// nodeType < 6 works because attributes (2) do not appear as children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				if ( elem.nodeType < 6 ) {
					return false;
				}
			}
			return true;
		},

		"parent": function( elem ) {
			return !Expr.pseudos[ "empty" ]( elem );
		},

		// Element/input types
		"header": function( elem ) {
			return rheader.test( elem.nodeName );
		},

		"input": function( elem ) {
			return rinputs.test( elem.nodeName );
		},

		"button": function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === "button" || name === "button";
		},

		"text": function( elem ) {
			var attr;
			return elem.nodeName.toLowerCase() === "input" &&
				elem.type === "text" &&

				// Support: IE<8
				// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
				( ( attr = elem.getAttribute( "type" ) ) == null ||
					attr.toLowerCase() === "text" );
		},

		// Position-in-collection
		"first": createPositionalPseudo( function() {
			return [ 0 ];
		} ),

		"last": createPositionalPseudo( function( _matchIndexes, length ) {
			return [ length - 1 ];
		} ),

		"eq": createPositionalPseudo( function( _matchIndexes, length, argument ) {
			return [ argument < 0 ? argument + length : argument ];
		} ),

		"even": createPositionalPseudo( function( matchIndexes, length ) {
			var i = 0;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} ),

		"odd": createPositionalPseudo( function( matchIndexes, length ) {
			var i = 1;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} ),

		"lt": createPositionalPseudo( function( matchIndexes, length, argument ) {
			var i = argument < 0 ?
				argument + length :
				argument > length ?
					length :
					argument;
			for ( ; --i >= 0; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} ),

		"gt": createPositionalPseudo( function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; ++i < length; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} )
	}
};

Expr.pseudos[ "nth" ] = Expr.pseudos[ "eq" ];

// Add button/input type pseudos
for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
	Expr.pseudos[ i ] = createInputPseudo( i );
}
for ( i in { submit: true, reset: true } ) {
	Expr.pseudos[ i ] = createButtonPseudo( i );
}

// Easy API for creating new setFilters
function setFilters() {}
setFilters.prototype = Expr.filters = Expr.pseudos;
Expr.setFilters = new setFilters();

tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
	var matched, match, tokens, type,
		soFar, groups, preFilters,
		cached = tokenCache[ selector + " " ];

	if ( cached ) {
		return parseOnly ? 0 : cached.slice( 0 );
	}

	soFar = selector;
	groups = [];
	preFilters = Expr.preFilter;

	while ( soFar ) {

		// Comma and first run
		if ( !matched || ( match = rcomma.exec( soFar ) ) ) {
			if ( match ) {

				// Don't consume trailing commas as valid
				soFar = soFar.slice( match[ 0 ].length ) || soFar;
			}
			groups.push( ( tokens = [] ) );
		}

		matched = false;

		// Combinators
		if ( ( match = rcombinators.exec( soFar ) ) ) {
			matched = match.shift();
			tokens.push( {
				value: matched,

				// Cast descendant combinators to space
				type: match[ 0 ].replace( rtrim, " " )
			} );
			soFar = soFar.slice( matched.length );
		}

		// Filters
		for ( type in Expr.filter ) {
			if ( ( match = matchExpr[ type ].exec( soFar ) ) && ( !preFilters[ type ] ||
				( match = preFilters[ type ]( match ) ) ) ) {
				matched = match.shift();
				tokens.push( {
					value: matched,
					type: type,
					matches: match
				} );
				soFar = soFar.slice( matched.length );
			}
		}

		if ( !matched ) {
			break;
		}
	}

	// Return the length of the invalid excess
	// if we're just parsing
	// Otherwise, throw an error or return tokens
	return parseOnly ?
		soFar.length :
		soFar ?
			Sizzle.error( selector ) :

			// Cache the tokens
			tokenCache( selector, groups ).slice( 0 );
};

function toSelector( tokens ) {
	var i = 0,
		len = tokens.length,
		selector = "";
	for ( ; i < len; i++ ) {
		selector += tokens[ i ].value;
	}
	return selector;
}

function addCombinator( matcher, combinator, base ) {
	var dir = combinator.dir,
		skip = combinator.next,
		key = skip || dir,
		checkNonElements = base && key === "parentNode",
		doneName = done++;

	return combinator.first ?

		// Check against closest ancestor/preceding element
		function( elem, context, xml ) {
			while ( ( elem = elem[ dir ] ) ) {
				if ( elem.nodeType === 1 || checkNonElements ) {
					return matcher( elem, context, xml );
				}
			}
			return false;
		} :

		// Check against all ancestor/preceding elements
		function( elem, context, xml ) {
			var oldCache, uniqueCache, outerCache,
				newCache = [ dirruns, doneName ];

			// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
			if ( xml ) {
				while ( ( elem = elem[ dir ] ) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						if ( matcher( elem, context, xml ) ) {
							return true;
						}
					}
				}
			} else {
				while ( ( elem = elem[ dir ] ) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						outerCache = elem[ expando ] || ( elem[ expando ] = {} );

						// Support: IE <9 only
						// Defend against cloned attroperties (jQuery gh-1709)
						uniqueCache = outerCache[ elem.uniqueID ] ||
							( outerCache[ elem.uniqueID ] = {} );

						if ( skip && skip === elem.nodeName.toLowerCase() ) {
							elem = elem[ dir ] || elem;
						} else if ( ( oldCache = uniqueCache[ key ] ) &&
							oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {

							// Assign to newCache so results back-propagate to previous elements
							return ( newCache[ 2 ] = oldCache[ 2 ] );
						} else {

							// Reuse newcache so results back-propagate to previous elements
							uniqueCache[ key ] = newCache;

							// A match means we're done; a fail means we have to keep checking
							if ( ( newCache[ 2 ] = matcher( elem, context, xml ) ) ) {
								return true;
							}
						}
					}
				}
			}
			return false;
		};
}

function elementMatcher( matchers ) {
	return matchers.length > 1 ?
		function( elem, context, xml ) {
			var i = matchers.length;
			while ( i-- ) {
				if ( !matchers[ i ]( elem, context, xml ) ) {
					return false;
				}
			}
			return true;
		} :
		matchers[ 0 ];
}

function multipleContexts( selector, contexts, results ) {
	var i = 0,
		len = contexts.length;
	for ( ; i < len; i++ ) {
		Sizzle( selector, contexts[ i ], results );
	}
	return results;
}

function condense( unmatched, map, filter, context, xml ) {
	var elem,
		newUnmatched = [],
		i = 0,
		len = unmatched.length,
		mapped = map != null;

	for ( ; i < len; i++ ) {
		if ( ( elem = unmatched[ i ] ) ) {
			if ( !filter || filter( elem, context, xml ) ) {
				newUnmatched.push( elem );
				if ( mapped ) {
					map.push( i );
				}
			}
		}
	}

	return newUnmatched;
}

function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
	if ( postFilter && !postFilter[ expando ] ) {
		postFilter = setMatcher( postFilter );
	}
	if ( postFinder && !postFinder[ expando ] ) {
		postFinder = setMatcher( postFinder, postSelector );
	}
	return markFunction( function( seed, results, context, xml ) {
		var temp, i, elem,
			preMap = [],
			postMap = [],
			preexisting = results.length,

			// Get initial elements from seed or context
			elems = seed || multipleContexts(
				selector || "*",
				context.nodeType ? [ context ] : context,
				[]
			),

			// Prefilter to get matcher input, preserving a map for seed-results synchronization
			matcherIn = preFilter && ( seed || !selector ) ?
				condense( elems, preMap, preFilter, context, xml ) :
				elems,

			matcherOut = matcher ?

				// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

					// ...intermediate processing is necessary
					[] :

					// ...otherwise use results directly
					results :
				matcherIn;

		// Find primary matches
		if ( matcher ) {
			matcher( matcherIn, matcherOut, context, xml );
		}

		// Apply postFilter
		if ( postFilter ) {
			temp = condense( matcherOut, postMap );
			postFilter( temp, [], context, xml );

			// Un-match failing elements by moving them back to matcherIn
			i = temp.length;
			while ( i-- ) {
				if ( ( elem = temp[ i ] ) ) {
					matcherOut[ postMap[ i ] ] = !( matcherIn[ postMap[ i ] ] = elem );
				}
			}
		}

		if ( seed ) {
			if ( postFinder || preFilter ) {
				if ( postFinder ) {

					// Get the final matcherOut by condensing this intermediate into postFinder contexts
					temp = [];
					i = matcherOut.length;
					while ( i-- ) {
						if ( ( elem = matcherOut[ i ] ) ) {

							// Restore matcherIn since elem is not yet a final match
							temp.push( ( matcherIn[ i ] = elem ) );
						}
					}
					postFinder( null, ( matcherOut = [] ), temp, xml );
				}

				// Move matched elements from seed to results to keep them synchronized
				i = matcherOut.length;
				while ( i-- ) {
					if ( ( elem = matcherOut[ i ] ) &&
						( temp = postFinder ? indexOf( seed, elem ) : preMap[ i ] ) > -1 ) {

						seed[ temp ] = !( results[ temp ] = elem );
					}
				}
			}

		// Add elements to results, through postFinder if defined
		} else {
			matcherOut = condense(
				matcherOut === results ?
					matcherOut.splice( preexisting, matcherOut.length ) :
					matcherOut
			);
			if ( postFinder ) {
				postFinder( null, results, matcherOut, xml );
			} else {
				push.apply( results, matcherOut );
			}
		}
	} );
}

function matcherFromTokens( tokens ) {
	var checkContext, matcher, j,
		len = tokens.length,
		leadingRelative = Expr.relative[ tokens[ 0 ].type ],
		implicitRelative = leadingRelative || Expr.relative[ " " ],
		i = leadingRelative ? 1 : 0,

		// The foundational matcher ensures that elements are reachable from top-level context(s)
		matchContext = addCombinator( function( elem ) {
			return elem === checkContext;
		}, implicitRelative, true ),
		matchAnyContext = addCombinator( function( elem ) {
			return indexOf( checkContext, elem ) > -1;
		}, implicitRelative, true ),
		matchers = [ function( elem, context, xml ) {
			var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
				( checkContext = context ).nodeType ?
					matchContext( elem, context, xml ) :
					matchAnyContext( elem, context, xml ) );

			// Avoid hanging onto element (issue #299)
			checkContext = null;
			return ret;
		} ];

	for ( ; i < len; i++ ) {
		if ( ( matcher = Expr.relative[ tokens[ i ].type ] ) ) {
			matchers = [ addCombinator( elementMatcher( matchers ), matcher ) ];
		} else {
			matcher = Expr.filter[ tokens[ i ].type ].apply( null, tokens[ i ].matches );

			// Return special upon seeing a positional matcher
			if ( matcher[ expando ] ) {

				// Find the next relative operator (if any) for proper handling
				j = ++i;
				for ( ; j < len; j++ ) {
					if ( Expr.relative[ tokens[ j ].type ] ) {
						break;
					}
				}
				return setMatcher(
					i > 1 && elementMatcher( matchers ),
					i > 1 && toSelector(

					// If the preceding token was a descendant combinator, insert an implicit any-element `*`
					tokens
						.slice( 0, i - 1 )
						.concat( { value: tokens[ i - 2 ].type === " " ? "*" : "" } )
					).replace( rtrim, "$1" ),
					matcher,
					i < j && matcherFromTokens( tokens.slice( i, j ) ),
					j < len && matcherFromTokens( ( tokens = tokens.slice( j ) ) ),
					j < len && toSelector( tokens )
				);
			}
			matchers.push( matcher );
		}
	}

	return elementMatcher( matchers );
}

function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
	var bySet = setMatchers.length > 0,
		byElement = elementMatchers.length > 0,
		superMatcher = function( seed, context, xml, results, outermost ) {
			var elem, j, matcher,
				matchedCount = 0,
				i = "0",
				unmatched = seed && [],
				setMatched = [],
				contextBackup = outermostContext,

				// We must always have either seed elements or outermost context
				elems = seed || byElement && Expr.find[ "TAG" ]( "*", outermost ),

				// Use integer dirruns iff this is the outermost matcher
				dirrunsUnique = ( dirruns += contextBackup == null ? 1 : Math.random() || 0.1 ),
				len = elems.length;

			if ( outermost ) {

				// Support: IE 11+, Edge 17 - 18+
				// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
				// two documents; shallow comparisons work.
				// eslint-disable-next-line eqeqeq
				outermostContext = context == document || context || outermost;
			}

			// Add elements passing elementMatchers directly to results
			// Support: IE<9, Safari
			// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
			for ( ; i !== len && ( elem = elems[ i ] ) != null; i++ ) {
				if ( byElement && elem ) {
					j = 0;

					// Support: IE 11+, Edge 17 - 18+
					// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
					// two documents; shallow comparisons work.
					// eslint-disable-next-line eqeqeq
					if ( !context && elem.ownerDocument != document ) {
						setDocument( elem );
						xml = !documentIsHTML;
					}
					while ( ( matcher = elementMatchers[ j++ ] ) ) {
						if ( matcher( elem, context || document, xml ) ) {
							results.push( elem );
							break;
						}
					}
					if ( outermost ) {
						dirruns = dirrunsUnique;
					}
				}

				// Track unmatched elements for set filters
				if ( bySet ) {

					// They will have gone through all possible matchers
					if ( ( elem = !matcher && elem ) ) {
						matchedCount--;
					}

					// Lengthen the array for every element, matched or not
					if ( seed ) {
						unmatched.push( elem );
					}
				}
			}

			// `i` is now the count of elements visited above, and adding it to `matchedCount`
			// makes the latter nonnegative.
			matchedCount += i;

			// Apply set filters to unmatched elements
			// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
			// equals `i`), unless we didn't visit _any_ elements in the above loop because we have
			// no element matchers and no seed.
			// Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
			// case, which will result in a "00" `matchedCount` that differs from `i` but is also
			// numerically zero.
			if ( bySet && i !== matchedCount ) {
				j = 0;
				while ( ( matcher = setMatchers[ j++ ] ) ) {
					matcher( unmatched, setMatched, context, xml );
				}

				if ( seed ) {

					// Reintegrate element matches to eliminate the need for sorting
					if ( matchedCount > 0 ) {
						while ( i-- ) {
							if ( !( unmatched[ i ] || setMatched[ i ] ) ) {
								setMatched[ i ] = pop.call( results );
							}
						}
					}

					// Discard index placeholder values to get only actual matches
					setMatched = condense( setMatched );
				}

				// Add matches to results
				push.apply( results, setMatched );

				// Seedless set matches succeeding multiple successful matchers stipulate sorting
				if ( outermost && !seed && setMatched.length > 0 &&
					( matchedCount + setMatchers.length ) > 1 ) {

					Sizzle.uniqueSort( results );
				}
			}

			// Override manipulation of globals by nested matchers
			if ( outermost ) {
				dirruns = dirrunsUnique;
				outermostContext = contextBackup;
			}

			return unmatched;
		};

	return bySet ?
		markFunction( superMatcher ) :
		superMatcher;
}

compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
	var i,
		setMatchers = [],
		elementMatchers = [],
		cached = compilerCache[ selector + " " ];

	if ( !cached ) {

		// Generate a function of recursive functions that can be used to check each element
		if ( !match ) {
			match = tokenize( selector );
		}
		i = match.length;
		while ( i-- ) {
			cached = matcherFromTokens( match[ i ] );
			if ( cached[ expando ] ) {
				setMatchers.push( cached );
			} else {
				elementMatchers.push( cached );
			}
		}

		// Cache the compiled function
		cached = compilerCache(
			selector,
			matcherFromGroupMatchers( elementMatchers, setMatchers )
		);

		// Save selector and tokenization
		cached.selector = selector;
	}
	return cached;
};

/**
 * A low-level selection function that works with Sizzle's compiled
 *  selector functions
 * @param {String|Function} selector A selector or a pre-compiled
 *  selector function built with Sizzle.compile
 * @param {Element} context
 * @param {Array} [results]
 * @param {Array} [seed] A set of elements to match against
 */
select = Sizzle.select = function( selector, context, results, seed ) {
	var i, tokens, token, type, find,
		compiled = typeof selector === "function" && selector,
		match = !seed && tokenize( ( selector = compiled.selector || selector ) );

	results = results || [];

	// Try to minimize operations if there is only one selector in the list and no seed
	// (the latter of which guarantees us context)
	if ( match.length === 1 ) {

		// Reduce context if the leading compound selector is an ID
		tokens = match[ 0 ] = match[ 0 ].slice( 0 );
		if ( tokens.length > 2 && ( token = tokens[ 0 ] ).type === "ID" &&
			context.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[ 1 ].type ] ) {

			context = ( Expr.find[ "ID" ]( token.matches[ 0 ]
				.replace( runescape, funescape ), context ) || [] )[ 0 ];
			if ( !context ) {
				return results;

			// Precompiled matchers will still verify ancestry, so step up a level
			} else if ( compiled ) {
				context = context.parentNode;
			}

			selector = selector.slice( tokens.shift().value.length );
		}

		// Fetch a seed set for right-to-left matching
		i = matchExpr[ "needsContext" ].test( selector ) ? 0 : tokens.length;
		while ( i-- ) {
			token = tokens[ i ];

			// Abort if we hit a combinator
			if ( Expr.relative[ ( type = token.type ) ] ) {
				break;
			}
			if ( ( find = Expr.find[ type ] ) ) {

				// Search, expanding context for leading sibling combinators
				if ( ( seed = find(
					token.matches[ 0 ].replace( runescape, funescape ),
					rsibling.test( tokens[ 0 ].type ) && testContext( context.parentNode ) ||
						context
				) ) ) {

					// If seed is empty or no tokens remain, we can return early
					tokens.splice( i, 1 );
					selector = seed.length && toSelector( tokens );
					if ( !selector ) {
						push.apply( results, seed );
						return results;
					}

					break;
				}
			}
		}
	}

	// Compile and execute a filtering function if one is not provided
	// Provide `match` to avoid retokenization if we modified the selector above
	( compiled || compile( selector, match ) )(
		seed,
		context,
		!documentIsHTML,
		results,
		!context || rsibling.test( selector ) && testContext( context.parentNode ) || context
	);
	return results;
};

// One-time assignments

// Sort stability
support.sortStable = expando.split( "" ).sort( sortOrder ).join( "" ) === expando;

// Support: Chrome 14-35+
// Always assume duplicates if they aren't passed to the comparison function
support.detectDuplicates = !!hasDuplicate;

// Initialize against the default document
setDocument();

// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
// Detached nodes confoundingly follow *each other*
support.sortDetached = assert( function( el ) {

	// Should return 1, but returns 4 (following)
	return el.compareDocumentPosition( document.createElement( "fieldset" ) ) & 1;
} );

// Support: IE<8
// Prevent attribute/property "interpolation"
// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !assert( function( el ) {
	el.innerHTML = "<a href='#'></a>";
	return el.firstChild.getAttribute( "href" ) === "#";
} ) ) {
	addHandle( "type|href|height|width", function( elem, name, isXML ) {
		if ( !isXML ) {
			return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
		}
	} );
}

// Support: IE<9
// Use defaultValue in place of getAttribute("value")
if ( !support.attributes || !assert( function( el ) {
	el.innerHTML = "<input/>";
	el.firstChild.setAttribute( "value", "" );
	return el.firstChild.getAttribute( "value" ) === "";
} ) ) {
	addHandle( "value", function( elem, _name, isXML ) {
		if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
			return elem.defaultValue;
		}
	} );
}

// Support: IE<9
// Use getAttributeNode to fetch booleans when getAttribute lies
if ( !assert( function( el ) {
	return el.getAttribute( "disabled" ) == null;
} ) ) {
	addHandle( booleans, function( elem, name, isXML ) {
		var val;
		if ( !isXML ) {
			return elem[ name ] === true ? name.toLowerCase() :
				( val = elem.getAttributeNode( name ) ) && val.specified ?
					val.value :
					null;
		}
	} );
}

return Sizzle;

} )( window );



jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;

// Deprecated
jQuery.expr[ ":" ] = jQuery.expr.pseudos;
jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;
jQuery.escapeSelector = Sizzle.escape;




var dir = function( elem, dir, until ) {
	var matched = [],
		truncate = until !== undefined;

	while ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {
		if ( elem.nodeType === 1 ) {
			if ( truncate && jQuery( elem ).is( until ) ) {
				break;
			}
			matched.push( elem );
		}
	}
	return matched;
};


var siblings = function( n, elem ) {
	var matched = [];

	for ( ; n; n = n.nextSibling ) {
		if ( n.nodeType === 1 && n !== elem ) {
			matched.push( n );
		}
	}

	return matched;
};


var rneedsContext = jQuery.expr.match.needsContext;



function nodeName( elem, name ) {

	return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();

}
var rsingleTag = ( /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i );



// Implement the identical functionality for filter and not
function winnow( elements, qualifier, not ) {
	if ( isFunction( qualifier ) ) {
		return jQuery.grep( elements, function( elem, i ) {
			return !!qualifier.call( elem, i, elem ) !== not;
		} );
	}

	// Single element
	if ( qualifier.nodeType ) {
		return jQuery.grep( elements, function( elem ) {
			return ( elem === qualifier ) !== not;
		} );
	}

	// Arraylike of elements (jQuery, arguments, Array)
	if ( typeof qualifier !== "string" ) {
		return jQuery.grep( elements, function( elem ) {
			return ( indexOf.call( qualifier, elem ) > -1 ) !== not;
		} );
	}

	// Filtered directly for both simple and complex selectors
	return jQuery.filter( qualifier, elements, not );
}

jQuery.filter = function( expr, elems, not ) {
	var elem = elems[ 0 ];

	if ( not ) {
		expr = ":not(" + expr + ")";
	}

	if ( elems.length === 1 && elem.nodeType === 1 ) {
		return jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];
	}

	return jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
		return elem.nodeType === 1;
	} ) );
};

jQuery.fn.extend( {
	find: function( selector ) {
		var i, ret,
			len = this.length,
			self = this;

		if ( typeof selector !== "string" ) {
			return this.pushStack( jQuery( selector ).filter( function() {
				for ( i = 0; i < len; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			} ) );
		}

		ret = this.pushStack( [] );

		for ( i = 0; i < len; i++ ) {
			jQuery.find( selector, self[ i ], ret );
		}

		return len > 1 ? jQuery.uniqueSort( ret ) : ret;
	},
	filter: function( selector ) {
		return this.pushStack( winnow( this, selector || [], false ) );
	},
	not: function( selector ) {
		return this.pushStack( winnow( this, selector || [], true ) );
	},
	is: function( selector ) {
		return !!winnow(
			this,

			// If this is a positional/relative selector, check membership in the returned set
			// so $("p:first").is("p:last") won't return true for a doc with two "p".
			typeof selector === "string" && rneedsContext.test( selector ) ?
				jQuery( selector ) :
				selector || [],
			false
		).length;
	}
} );


// Initialize a jQuery object


// A central reference to the root jQuery(document)
var rootjQuery,

	// A simple way to check for HTML strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (trac-9521)
	// Strict HTML recognition (trac-11290: must start with <)
	// Shortcut simple #id case for speed
	rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,

	init = jQuery.fn.init = function( selector, context, root ) {
		var match, elem;

		// HANDLE: $(""), $(null), $(undefined), $(false)
		if ( !selector ) {
			return this;
		}

		// Method init() accepts an alternate rootjQuery
		// so migrate can support jQuery.sub (gh-2101)
		root = root || rootjQuery;

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			if ( selector[ 0 ] === "<" &&
				selector[ selector.length - 1 ] === ">" &&
				selector.length >= 3 ) {

				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = rquickExpr.exec( selector );
			}

			// Match html or make sure no context is specified for #id
			if ( match && ( match[ 1 ] || !context ) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[ 1 ] ) {
					context = context instanceof jQuery ? context[ 0 ] : context;

					// Option to run scripts is true for back-compat
					// Intentionally let the error be thrown if parseHTML is not present
					jQuery.merge( this, jQuery.parseHTML(
						match[ 1 ],
						context && context.nodeType ? context.ownerDocument || context : document,
						true
					) );

					// HANDLE: $(html, props)
					if ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {
						for ( match in context ) {

							// Properties of context are called as methods if possible
							if ( isFunction( this[ match ] ) ) {
								this[ match ]( context[ match ] );

							// ...and otherwise set as attributes
							} else {
								this.attr( match, context[ match ] );
							}
						}
					}

					return this;

				// HANDLE: $(#id)
				} else {
					elem = document.getElementById( match[ 2 ] );

					if ( elem ) {

						// Inject the element directly into the jQuery object
						this[ 0 ] = elem;
						this.length = 1;
					}
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || root ).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(DOMElement)
		} else if ( selector.nodeType ) {
			this[ 0 ] = selector;
			this.length = 1;
			return this;

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( isFunction( selector ) ) {
			return root.ready !== undefined ?
				root.ready( selector ) :

				// Execute immediately if ready is not present
				selector( jQuery );
		}

		return jQuery.makeArray( selector, this );
	};

// Give the init function the jQuery prototype for later instantiation
init.prototype = jQuery.fn;

// Initialize central reference
rootjQuery = jQuery( document );


var rparentsprev = /^(?:parents|prev(?:Until|All))/,

	// Methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.fn.extend( {
	has: function( target ) {
		var targets = jQuery( target, this ),
			l = targets.length;

		return this.filter( function() {
			var i = 0;
			for ( ; i < l; i++ ) {
				if ( jQuery.contains( this, targets[ i ] ) ) {
					return true;
				}
			}
		} );
	},

	closest: function( selectors, context ) {
		var cur,
			i = 0,
			l = this.length,
			matched = [],
			targets = typeof selectors !== "string" && jQuery( selectors );

		// Positional selectors never match, since there's no _selection_ context
		if ( !rneedsContext.test( selectors ) ) {
			for ( ; i < l; i++ ) {
				for ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {

					// Always skip document fragments
					if ( cur.nodeType < 11 && ( targets ?
						targets.index( cur ) > -1 :

						// Don't pass non-elements to Sizzle
						cur.nodeType === 1 &&
							jQuery.find.matchesSelector( cur, selectors ) ) ) {

						matched.push( cur );
						break;
					}
				}
			}
		}

		return this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );
	},

	// Determine the position of an element within the set
	index: function( elem ) {

		// No argument, return index in parent
		if ( !elem ) {
			return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
		}

		// Index in selector
		if ( typeof elem === "string" ) {
			return indexOf.call( jQuery( elem ), this[ 0 ] );
		}

		// Locate the position of the desired element
		return indexOf.call( this,

			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[ 0 ] : elem
		);
	},

	add: function( selector, context ) {
		return this.pushStack(
			jQuery.uniqueSort(
				jQuery.merge( this.get(), jQuery( selector, context ) )
			)
		);
	},

	addBack: function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter( selector )
		);
	}
} );

function sibling( cur, dir ) {
	while ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}
	return cur;
}

jQuery.each( {
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, _i, until ) {
		return dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return sibling( elem, "nextSibling" );
	},
	prev: function( elem ) {
		return sibling( elem, "previousSibling" );
	},
	nextAll: function( elem ) {
		return dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, _i, until ) {
		return dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, _i, until ) {
		return dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return siblings( ( elem.parentNode || {} ).firstChild, elem );
	},
	children: function( elem ) {
		return siblings( elem.firstChild );
	},
	contents: function( elem ) {
		if ( elem.contentDocument != null &&

			// Support: IE 11+
			// <object> elements with no `data` attribute has an object
			// `contentDocument` with a `null` prototype.
			getProto( elem.contentDocument ) ) {

			return elem.contentDocument;
		}

		// Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only
		// Treat the template element as a regular one in browsers that
		// don't support it.
		if ( nodeName( elem, "template" ) ) {
			elem = elem.content || elem;
		}

		return jQuery.merge( [], elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var matched = jQuery.map( this, fn, until );

		if ( name.slice( -5 ) !== "Until" ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			matched = jQuery.filter( selector, matched );
		}

		if ( this.length > 1 ) {

			// Remove duplicates
			if ( !guaranteedUnique[ name ] ) {
				jQuery.uniqueSort( matched );
			}

			// Reverse order for parents* and prev-derivatives
			if ( rparentsprev.test( name ) ) {
				matched.reverse();
			}
		}

		return this.pushStack( matched );
	};
} );
var rnothtmlwhite = ( /[^\x20\t\r\n\f]+/g );



// Convert String-formatted options into Object-formatted ones
function createOptions( options ) {
	var object = {};
	jQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {
		object[ flag ] = true;
	} );
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( options ) {

	// Convert options from String-formatted to Object-formatted if needed
	// (we check in cache first)
	options = typeof options === "string" ?
		createOptions( options ) :
		jQuery.extend( {}, options );

	var // Flag to know if list is currently firing
		firing,

		// Last fire value for non-forgettable lists
		memory,

		// Flag to know if list was already fired
		fired,

		// Flag to prevent firing
		locked,

		// Actual callback list
		list = [],

		// Queue of execution data for repeatable lists
		queue = [],

		// Index of currently firing callback (modified by add/remove as needed)
		firingIndex = -1,

		// Fire callbacks
		fire = function() {

			// Enforce single-firing
			locked = locked || options.once;

			// Execute callbacks for all pending executions,
			// respecting firingIndex overrides and runtime changes
			fired = firing = true;
			for ( ; queue.length; firingIndex = -1 ) {
				memory = queue.shift();
				while ( ++firingIndex < list.length ) {

					// Run callback and check for early termination
					if ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&
						options.stopOnFalse ) {

						// Jump to end and forget the data so .add doesn't re-fire
						firingIndex = list.length;
						memory = false;
					}
				}
			}

			// Forget the data if we're done with it
			if ( !options.memory ) {
				memory = false;
			}

			firing = false;

			// Clean up if we're done firing for good
			if ( locked ) {

				// Keep an empty list if we have data for future add calls
				if ( memory ) {
					list = [];

				// Otherwise, this object is spent
				} else {
					list = "";
				}
			}
		},

		// Actual Callbacks object
		self = {

			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {

					// If we have memory from a past run, we should fire after adding
					if ( memory && !firing ) {
						firingIndex = list.length - 1;
						queue.push( memory );
					}

					( function add( args ) {
						jQuery.each( args, function( _, arg ) {
							if ( isFunction( arg ) ) {
								if ( !options.unique || !self.has( arg ) ) {
									list.push( arg );
								}
							} else if ( arg && arg.length && toType( arg ) !== "string" ) {

								// Inspect recursively
								add( arg );
							}
						} );
					} )( arguments );

					if ( memory && !firing ) {
						fire();
					}
				}
				return this;
			},

			// Remove a callback from the list
			remove: function() {
				jQuery.each( arguments, function( _, arg ) {
					var index;
					while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
						list.splice( index, 1 );

						// Handle firing indexes
						if ( index <= firingIndex ) {
							firingIndex--;
						}
					}
				} );
				return this;
			},

			// Check if a given callback is in the list.
			// If no argument is given, return whether or not list has callbacks attached.
			has: function( fn ) {
				return fn ?
					jQuery.inArray( fn, list ) > -1 :
					list.length > 0;
			},

			// Remove all callbacks from the list
			empty: function() {
				if ( list ) {
					list = [];
				}
				return this;
			},

			// Disable .fire and .add
			// Abort any current/pending executions
			// Clear all callbacks and values
			disable: function() {
				locked = queue = [];
				list = memory = "";
				return this;
			},
			disabled: function() {
				return !list;
			},

			// Disable .fire
			// Also disable .add unless we have memory (since it would have no effect)
			// Abort any pending executions
			lock: function() {
				locked = queue = [];
				if ( !memory && !firing ) {
					list = memory = "";
				}
				return this;
			},
			locked: function() {
				return !!locked;
			},

			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				if ( !locked ) {
					args = args || [];
					args = [ context, args.slice ? args.slice() : args ];
					queue.push( args );
					if ( !firing ) {
						fire();
					}
				}
				return this;
			},

			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},

			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!fired;
			}
		};

	return self;
};


function Identity( v ) {
	return v;
}
function Thrower( ex ) {
	throw ex;
}

function adoptValue( value, resolve, reject, noValue ) {
	var method;

	try {

		// Check for promise aspect first to privilege synchronous behavior
		if ( value && isFunction( ( method = value.promise ) ) ) {
			method.call( value ).done( resolve ).fail( reject );

		// Other thenables
		} else if ( value && isFunction( ( method = value.then ) ) ) {
			method.call( value, resolve, reject );

		// Other non-thenables
		} else {

			// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:
			// * false: [ value ].slice( 0 ) => resolve( value )
			// * true: [ value ].slice( 1 ) => resolve()
			resolve.apply( undefined, [ value ].slice( noValue ) );
		}

	// For Promises/A+, convert exceptions into rejections
	// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in
	// Deferred#then to conditionally suppress rejection.
	} catch ( value ) {

		// Support: Android 4.0 only
		// Strict mode functions invoked without .call/.apply get global-object context
		reject.apply( undefined, [ value ] );
	}
}

jQuery.extend( {

	Deferred: function( func ) {
		var tuples = [

				// action, add listener, callbacks,
				// ... .then handlers, argument index, [final state]
				[ "notify", "progress", jQuery.Callbacks( "memory" ),
					jQuery.Callbacks( "memory" ), 2 ],
				[ "resolve", "done", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 0, "resolved" ],
				[ "reject", "fail", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 1, "rejected" ]
			],
			state = "pending",
			promise = {
				state: function() {
					return state;
				},
				always: function() {
					deferred.done( arguments ).fail( arguments );
					return this;
				},
				"catch": function( fn ) {
					return promise.then( null, fn );
				},

				// Keep pipe for back-compat
				pipe: function( /* fnDone, fnFail, fnProgress */ ) {
					var fns = arguments;

					return jQuery.Deferred( function( newDefer ) {
						jQuery.each( tuples, function( _i, tuple ) {

							// Map tuples (progress, done, fail) to arguments (done, fail, progress)
							var fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];

							// deferred.progress(function() { bind to newDefer or newDefer.notify })
							// deferred.done(function() { bind to newDefer or newDefer.resolve })
							// deferred.fail(function() { bind to newDefer or newDefer.reject })
							deferred[ tuple[ 1 ] ]( function() {
								var returned = fn && fn.apply( this, arguments );
								if ( returned && isFunction( returned.promise ) ) {
									returned.promise()
										.progress( newDefer.notify )
										.done( newDefer.resolve )
										.fail( newDefer.reject );
								} else {
									newDefer[ tuple[ 0 ] + "With" ](
										this,
										fn ? [ returned ] : arguments
									);
								}
							} );
						} );
						fns = null;
					} ).promise();
				},
				then: function( onFulfilled, onRejected, onProgress ) {
					var maxDepth = 0;
					function resolve( depth, deferred, handler, special ) {
						return function() {
							var that = this,
								args = arguments,
								mightThrow = function() {
									var returned, then;

									// Support: Promises/A+ section 2.3.3.3.3
									// https://promisesaplus.com/#point-59
									// Ignore double-resolution attempts
									if ( depth < maxDepth ) {
										return;
									}

									returned = handler.apply( that, args );

									// Support: Promises/A+ section 2.3.1
									// https://promisesaplus.com/#point-48
									if ( returned === deferred.promise() ) {
										throw new TypeError( "Thenable self-resolution" );
									}

									// Support: Promises/A+ sections 2.3.3.1, 3.5
									// https://promisesaplus.com/#point-54
									// https://promisesaplus.com/#point-75
									// Retrieve `then` only once
									then = returned &&

										// Support: Promises/A+ section 2.3.4
										// https://promisesaplus.com/#point-64
										// Only check objects and functions for thenability
										( typeof returned === "object" ||
											typeof returned === "function" ) &&
										returned.then;

									// Handle a returned thenable
									if ( isFunction( then ) ) {

										// Special processors (notify) just wait for resolution
										if ( special ) {
											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special )
											);

										// Normal processors (resolve) also hook into progress
										} else {

											// ...and disregard older resolution values
											maxDepth++;

											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special ),
												resolve( maxDepth, deferred, Identity,
													deferred.notifyWith )
											);
										}

									// Handle all other returned values
									} else {

										// Only substitute handlers pass on context
										// and multiple values (non-spec behavior)
										if ( handler !== Identity ) {
											that = undefined;
											args = [ returned ];
										}

										// Process the value(s)
										// Default process is resolve
										( special || deferred.resolveWith )( that, args );
									}
								},

								// Only normal processors (resolve) catch and reject exceptions
								process = special ?
									mightThrow :
									function() {
										try {
											mightThrow();
										} catch ( e ) {

											if ( jQuery.Deferred.exceptionHook ) {
												jQuery.Deferred.exceptionHook( e,
													process.stackTrace );
											}

											// Support: Promises/A+ section 2.3.3.3.4.1
											// https://promisesaplus.com/#point-61
											// Ignore post-resolution exceptions
											if ( depth + 1 >= maxDepth ) {

												// Only substitute handlers pass on context
												// and multiple values (non-spec behavior)
												if ( handler !== Thrower ) {
													that = undefined;
													args = [ e ];
												}

												deferred.rejectWith( that, args );
											}
										}
									};

							// Support: Promises/A+ section 2.3.3.3.1
							// https://promisesaplus.com/#point-57
							// Re-resolve promises immediately to dodge false rejection from
							// subsequent errors
							if ( depth ) {
								process();
							} else {

								// Call an optional hook to record the stack, in case of exception
								// since it's otherwise lost when execution goes async
								if ( jQuery.Deferred.getStackHook ) {
									process.stackTrace = jQuery.Deferred.getStackHook();
								}
								window.setTimeout( process );
							}
						};
					}

					return jQuery.Deferred( function( newDefer ) {

						// progress_handlers.add( ... )
						tuples[ 0 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onProgress ) ?
									onProgress :
									Identity,
								newDefer.notifyWith
							)
						);

						// fulfilled_handlers.add( ... )
						tuples[ 1 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onFulfilled ) ?
									onFulfilled :
									Identity
							)
						);

						// rejected_handlers.add( ... )
						tuples[ 2 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onRejected ) ?
									onRejected :
									Thrower
							)
						);
					} ).promise();
				},

				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					return obj != null ? jQuery.extend( obj, promise ) : promise;
				}
			},
			deferred = {};

		// Add list-specific methods
		jQuery.each( tuples, function( i, tuple ) {
			var list = tuple[ 2 ],
				stateString = tuple[ 5 ];

			// promise.progress = list.add
			// promise.done = list.add
			// promise.fail = list.add
			promise[ tuple[ 1 ] ] = list.add;

			// Handle state
			if ( stateString ) {
				list.add(
					function() {

						// state = "resolved" (i.e., fulfilled)
						// state = "rejected"
						state = stateString;
					},

					// rejected_callbacks.disable
					// fulfilled_callbacks.disable
					tuples[ 3 - i ][ 2 ].disable,

					// rejected_handlers.disable
					// fulfilled_handlers.disable
					tuples[ 3 - i ][ 3 ].disable,

					// progress_callbacks.lock
					tuples[ 0 ][ 2 ].lock,

					// progress_handlers.lock
					tuples[ 0 ][ 3 ].lock
				);
			}

			// progress_handlers.fire
			// fulfilled_handlers.fire
			// rejected_handlers.fire
			list.add( tuple[ 3 ].fire );

			// deferred.notify = function() { deferred.notifyWith(...) }
			// deferred.resolve = function() { deferred.resolveWith(...) }
			// deferred.reject = function() { deferred.rejectWith(...) }
			deferred[ tuple[ 0 ] ] = function() {
				deferred[ tuple[ 0 ] + "With" ]( this === deferred ? undefined : this, arguments );
				return this;
			};

			// deferred.notifyWith = list.fireWith
			// deferred.resolveWith = list.fireWith
			// deferred.rejectWith = list.fireWith
			deferred[ tuple[ 0 ] + "With" ] = list.fireWith;
		} );

		// Make the deferred a promise
		promise.promise( deferred );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( singleValue ) {
		var

			// count of uncompleted subordinates
			remaining = arguments.length,

			// count of unprocessed arguments
			i = remaining,

			// subordinate fulfillment data
			resolveContexts = Array( i ),
			resolveValues = slice.call( arguments ),

			// the primary Deferred
			primary = jQuery.Deferred(),

			// subordinate callback factory
			updateFunc = function( i ) {
				return function( value ) {
					resolveContexts[ i ] = this;
					resolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
					if ( !( --remaining ) ) {
						primary.resolveWith( resolveContexts, resolveValues );
					}
				};
			};

		// Single- and empty arguments are adopted like Promise.resolve
		if ( remaining <= 1 ) {
			adoptValue( singleValue, primary.done( updateFunc( i ) ).resolve, primary.reject,
				!remaining );

			// Use .then() to unwrap secondary thenables (cf. gh-3000)
			if ( primary.state() === "pending" ||
				isFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {

				return primary.then();
			}
		}

		// Multiple arguments are aggregated like Promise.all array elements
		while ( i-- ) {
			adoptValue( resolveValues[ i ], updateFunc( i ), primary.reject );
		}

		return primary.promise();
	}
} );


// These usually indicate a programmer mistake during development,
// warn about them ASAP rather than swallowing them by default.
var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;

jQuery.Deferred.exceptionHook = function( error, stack ) {

	// Support: IE 8 - 9 only
	// Console exists when dev tools are open, which can happen at any time
	if ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {
		window.console.warn( "jQuery.Deferred exception: " + error.message, error.stack, stack );
	}
};




jQuery.readyException = function( error ) {
	window.setTimeout( function() {
		throw error;
	} );
};




// The deferred used on DOM ready
var readyList = jQuery.Deferred();

jQuery.fn.ready = function( fn ) {

	readyList
		.then( fn )

		// Wrap jQuery.readyException in a function so that the lookup
		// happens at the time of error handling instead of callback
		// registration.
		.catch( function( error ) {
			jQuery.readyException( error );
		} );

	return this;
};

jQuery.extend( {

	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See trac-6781
	readyWait: 1,

	// Handle when the DOM is ready
	ready: function( wait ) {

		// Abort if there are pending holds or we're already ready
		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
			return;
		}

		// Remember that the DOM is ready
		jQuery.isReady = true;

		// If a normal DOM Ready event fired, decrement, and wait if need be
		if ( wait !== true && --jQuery.readyWait > 0 ) {
			return;
		}

		// If there are functions bound, to execute
		readyList.resolveWith( document, [ jQuery ] );
	}
} );

jQuery.ready.then = readyList.then;

// The ready event handler and self cleanup method
function completed() {
	document.removeEventListener( "DOMContentLoaded", completed );
	window.removeEventListener( "load", completed );
	jQuery.ready();
}

// Catch cases where $(document).ready() is called
// after the browser event has already occurred.
// Support: IE <=9 - 10 only
// Older IE sometimes signals "interactive" too soon
if ( document.readyState === "complete" ||
	( document.readyState !== "loading" && !document.documentElement.doScroll ) ) {

	// Handle it asynchronously to allow scripts the opportunity to delay ready
	window.setTimeout( jQuery.ready );

} else {

	// Use the handy event callback
	document.addEventListener( "DOMContentLoaded", completed );

	// A fallback to window.onload, that will always work
	window.addEventListener( "load", completed );
}




// Multifunctional method to get and set values of a collection
// The value/s can optionally be executed if it's a function
var access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
	var i = 0,
		len = elems.length,
		bulk = key == null;

	// Sets many values
	if ( toType( key ) === "object" ) {
		chainable = true;
		for ( i in key ) {
			access( elems, fn, i, key[ i ], true, emptyGet, raw );
		}

	// Sets one value
	} else if ( value !== undefined ) {
		chainable = true;

		if ( !isFunction( value ) ) {
			raw = true;
		}

		if ( bulk ) {

			// Bulk operations run against the entire set
			if ( raw ) {
				fn.call( elems, value );
				fn = null;

			// ...except when executing function values
			} else {
				bulk = fn;
				fn = function( elem, _key, value ) {
					return bulk.call( jQuery( elem ), value );
				};
			}
		}

		if ( fn ) {
			for ( ; i < len; i++ ) {
				fn(
					elems[ i ], key, raw ?
						value :
						value.call( elems[ i ], i, fn( elems[ i ], key ) )
				);
			}
		}
	}

	if ( chainable ) {
		return elems;
	}

	// Gets
	if ( bulk ) {
		return fn.call( elems );
	}

	return len ? fn( elems[ 0 ], key ) : emptyGet;
};


// Matches dashed string for camelizing
var rmsPrefix = /^-ms-/,
	rdashAlpha = /-([a-z])/g;

// Used by camelCase as callback to replace()
function fcamelCase( _all, letter ) {
	return letter.toUpperCase();
}

// Convert dashed to camelCase; used by the css and data modules
// Support: IE <=9 - 11, Edge 12 - 15
// Microsoft forgot to hump their vendor prefix (trac-9572)
function camelCase( string ) {
	return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
}
var acceptData = function( owner ) {

	// Accepts only:
	//  - Node
	//    - Node.ELEMENT_NODE
	//    - Node.DOCUMENT_NODE
	//  - Object
	//    - Any
	return owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );
};




function Data() {
	this.expando = jQuery.expando + Data.uid++;
}

Data.uid = 1;

Data.prototype = {

	cache: function( owner ) {

		// Check if the owner object already has a cache
		var value = owner[ this.expando ];

		// If not, create one
		if ( !value ) {
			value = {};

			// We can accept data for non-element nodes in modern browsers,
			// but we should not, see trac-8335.
			// Always return an empty object.
			if ( acceptData( owner ) ) {

				// If it is a node unlikely to be stringify-ed or looped over
				// use plain assignment
				if ( owner.nodeType ) {
					owner[ this.expando ] = value;

				// Otherwise secure it in a non-enumerable property
				// configurable must be true to allow the property to be
				// deleted when data is removed
				} else {
					Object.defineProperty( owner, this.expando, {
						value: value,
						configurable: true
					} );
				}
			}
		}

		return value;
	},
	set: function( owner, data, value ) {
		var prop,
			cache = this.cache( owner );

		// Handle: [ owner, key, value ] args
		// Always use camelCase key (gh-2257)
		if ( typeof data === "string" ) {
			cache[ camelCase( data ) ] = value;

		// Handle: [ owner, { properties } ] args
		} else {

			// Copy the properties one-by-one to the cache object
			for ( prop in data ) {
				cache[ camelCase( prop ) ] = data[ prop ];
			}
		}
		return cache;
	},
	get: function( owner, key ) {
		return key === undefined ?
			this.cache( owner ) :

			// Always use camelCase key (gh-2257)
			owner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];
	},
	access: function( owner, key, value ) {

		// In cases where either:
		//
		//   1. No key was specified
		//   2. A string key was specified, but no value provided
		//
		// Take the "read" path and allow the get method to determine
		// which value to return, respectively either:
		//
		//   1. The entire cache object
		//   2. The data stored at the key
		//
		if ( key === undefined ||
				( ( key && typeof key === "string" ) && value === undefined ) ) {

			return this.get( owner, key );
		}

		// When the key is not a string, or both a key and value
		// are specified, set or extend (existing objects) with either:
		//
		//   1. An object of properties
		//   2. A key and value
		//
		this.set( owner, key, value );

		// Since the "set" path can have two possible entry points
		// return the expected data based on which path was taken[*]
		return value !== undefined ? value : key;
	},
	remove: function( owner, key ) {
		var i,
			cache = owner[ this.expando ];

		if ( cache === undefined ) {
			return;
		}

		if ( key !== undefined ) {

			// Support array or space separated string of keys
			if ( Array.isArray( key ) ) {

				// If key is an array of keys...
				// We always set camelCase keys, so remove that.
				key = key.map( camelCase );
			} else {
				key = camelCase( key );

				// If a key with the spaces exists, use it.
				// Otherwise, create an array by matching non-whitespace
				key = key in cache ?
					[ key ] :
					( key.match( rnothtmlwhite ) || [] );
			}

			i = key.length;

			while ( i-- ) {
				delete cache[ key[ i ] ];
			}
		}

		// Remove the expando if there's no more data
		if ( key === undefined || jQuery.isEmptyObject( cache ) ) {

			// Support: Chrome <=35 - 45
			// Webkit & Blink performance suffers when deleting properties
			// from DOM nodes, so set to undefined instead
			// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)
			if ( owner.nodeType ) {
				owner[ this.expando ] = undefined;
			} else {
				delete owner[ this.expando ];
			}
		}
	},
	hasData: function( owner ) {
		var cache = owner[ this.expando ];
		return cache !== undefined && !jQuery.isEmptyObject( cache );
	}
};
var dataPriv = new Data();

var dataUser = new Data();



//	Implementation Summary
//
//	1. Enforce API surface and semantic compatibility with 1.9.x branch
//	2. Improve the module's maintainability by reducing the storage
//		paths to a single mechanism.
//	3. Use the same single mechanism to support "private" and "user" data.
//	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
//	5. Avoid exposing implementation details on user objects (eg. expando properties)
//	6. Provide a clear path for implementation upgrade to WeakMap in 2014

var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
	rmultiDash = /[A-Z]/g;

function getData( data ) {
	if ( data === "true" ) {
		return true;
	}

	if ( data === "false" ) {
		return false;
	}

	if ( data === "null" ) {
		return null;
	}

	// Only convert to a number if it doesn't change the string
	if ( data === +data + "" ) {
		return +data;
	}

	if ( rbrace.test( data ) ) {
		return JSON.parse( data );
	}

	return data;
}

function dataAttr( elem, key, data ) {
	var name;

	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {
		name = "data-" + key.replace( rmultiDash, "-$&" ).toLowerCase();
		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = getData( data );
			} catch ( e ) {}

			// Make sure we set the data so it isn't changed later
			dataUser.set( elem, key, data );
		} else {
			data = undefined;
		}
	}
	return data;
}

jQuery.extend( {
	hasData: function( elem ) {
		return dataUser.hasData( elem ) || dataPriv.hasData( elem );
	},

	data: function( elem, name, data ) {
		return dataUser.access( elem, name, data );
	},

	removeData: function( elem, name ) {
		dataUser.remove( elem, name );
	},

	// TODO: Now that all calls to _data and _removeData have been replaced
	// with direct calls to dataPriv methods, these can be deprecated.
	_data: function( elem, name, data ) {
		return dataPriv.access( elem, name, data );
	},

	_removeData: function( elem, name ) {
		dataPriv.remove( elem, name );
	}
} );

jQuery.fn.extend( {
	data: function( key, value ) {
		var i, name, data,
			elem = this[ 0 ],
			attrs = elem && elem.attributes;

		// Gets all values
		if ( key === undefined ) {
			if ( this.length ) {
				data = dataUser.get( elem );

				if ( elem.nodeType === 1 && !dataPriv.get( elem, "hasDataAttrs" ) ) {
					i = attrs.length;
					while ( i-- ) {

						// Support: IE 11 only
						// The attrs elements can be null (trac-14894)
						if ( attrs[ i ] ) {
							name = attrs[ i ].name;
							if ( name.indexOf( "data-" ) === 0 ) {
								name = camelCase( name.slice( 5 ) );
								dataAttr( elem, name, data[ name ] );
							}
						}
					}
					dataPriv.set( elem, "hasDataAttrs", true );
				}
			}

			return data;
		}

		// Sets multiple values
		if ( typeof key === "object" ) {
			return this.each( function() {
				dataUser.set( this, key );
			} );
		}

		return access( this, function( value ) {
			var data;

			// The calling jQuery object (element matches) is not empty
			// (and therefore has an element appears at this[ 0 ]) and the
			// `value` parameter was not undefined. An empty jQuery object
			// will result in `undefined` for elem = this[ 0 ] which will
			// throw an exception if an attempt to read a data cache is made.
			if ( elem && value === undefined ) {

				// Attempt to get data from the cache
				// The key will always be camelCased in Data
				data = dataUser.get( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// Attempt to "discover" the data in
				// HTML5 custom data-* attrs
				data = dataAttr( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// We tried really hard, but the data doesn't exist.
				return;
			}

			// Set the data...
			this.each( function() {

				// We always store the camelCased key
				dataUser.set( this, key, value );
			} );
		}, null, value, arguments.length > 1, null, true );
	},

	removeData: function( key ) {
		return this.each( function() {
			dataUser.remove( this, key );
		} );
	}
} );


jQuery.extend( {
	queue: function( elem, type, data ) {
		var queue;

		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			queue = dataPriv.get( elem, type );

			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !queue || Array.isArray( data ) ) {
					queue = dataPriv.access( elem, type, jQuery.makeArray( data ) );
				} else {
					queue.push( data );
				}
			}
			return queue || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			startLength = queue.length,
			fn = queue.shift(),
			hooks = jQuery._queueHooks( elem, type ),
			next = function() {
				jQuery.dequeue( elem, type );
			};

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
			startLength--;
		}

		if ( fn ) {

			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}

			// Clear up the last queue stop function
			delete hooks.stop;
			fn.call( elem, next, hooks );
		}

		if ( !startLength && hooks ) {
			hooks.empty.fire();
		}
	},

	// Not public - generate a queueHooks object, or return the current one
	_queueHooks: function( elem, type ) {
		var key = type + "queueHooks";
		return dataPriv.get( elem, key ) || dataPriv.access( elem, key, {
			empty: jQuery.Callbacks( "once memory" ).add( function() {
				dataPriv.remove( elem, [ type + "queue", key ] );
			} )
		} );
	}
} );

jQuery.fn.extend( {
	queue: function( type, data ) {
		var setter = 2;

		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
			setter--;
		}

		if ( arguments.length < setter ) {
			return jQuery.queue( this[ 0 ], type );
		}

		return data === undefined ?
			this :
			this.each( function() {
				var queue = jQuery.queue( this, type, data );

				// Ensure a hooks for this queue
				jQuery._queueHooks( this, type );

				if ( type === "fx" && queue[ 0 ] !== "inprogress" ) {
					jQuery.dequeue( this, type );
				}
			} );
	},
	dequeue: function( type ) {
		return this.each( function() {
			jQuery.dequeue( this, type );
		} );
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},

	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, obj ) {
		var tmp,
			count = 1,
			defer = jQuery.Deferred(),
			elements = this,
			i = this.length,
			resolve = function() {
				if ( !( --count ) ) {
					defer.resolveWith( elements, [ elements ] );
				}
			};

		if ( typeof type !== "string" ) {
			obj = type;
			type = undefined;
		}
		type = type || "fx";

		while ( i-- ) {
			tmp = dataPriv.get( elements[ i ], type + "queueHooks" );
			if ( tmp && tmp.empty ) {
				count++;
				tmp.empty.add( resolve );
			}
		}
		resolve();
		return defer.promise( obj );
	}
} );
var pnum = ( /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/ ).source;

var rcssNum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" );


var cssExpand = [ "Top", "Right", "Bottom", "Left" ];

var documentElement = document.documentElement;



	var isAttached = function( elem ) {
			return jQuery.contains( elem.ownerDocument, elem );
		},
		composed = { composed: true };

	// Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only
	// Check attachment across shadow DOM boundaries when possible (gh-3504)
	// Support: iOS 10.0-10.2 only
	// Early iOS 10 versions support `attachShadow` but not `getRootNode`,
	// leading to errors. We need to check for `getRootNode`.
	if ( documentElement.getRootNode ) {
		isAttached = function( elem ) {
			return jQuery.contains( elem.ownerDocument, elem ) ||
				elem.getRootNode( composed ) === elem.ownerDocument;
		};
	}
var isHiddenWithinTree = function( elem, el ) {

		// isHiddenWithinTree might be called from jQuery#filter function;
		// in that case, element will be second argument
		elem = el || elem;

		// Inline style trumps all
		return elem.style.display === "none" ||
			elem.style.display === "" &&

			// Otherwise, check computed style
			// Support: Firefox <=43 - 45
			// Disconnected elements can have computed display: none, so first confirm that elem is
			// in the document.
			isAttached( elem ) &&

			jQuery.css( elem, "display" ) === "none";
	};



function adjustCSS( elem, prop, valueParts, tween ) {
	var adjusted, scale,
		maxIterations = 20,
		currentValue = tween ?
			function() {
				return tween.cur();
			} :
			function() {
				return jQuery.css( elem, prop, "" );
			},
		initial = currentValue(),
		unit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

		// Starting value computation is required for potential unit mismatches
		initialInUnit = elem.nodeType &&
			( jQuery.cssNumber[ prop ] || unit !== "px" && +initial ) &&
			rcssNum.exec( jQuery.css( elem, prop ) );

	if ( initialInUnit && initialInUnit[ 3 ] !== unit ) {

		// Support: Firefox <=54
		// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)
		initial = initial / 2;

		// Trust units reported by jQuery.css
		unit = unit || initialInUnit[ 3 ];

		// Iteratively approximate from a nonzero starting point
		initialInUnit = +initial || 1;

		while ( maxIterations-- ) {

			// Evaluate and update our best guess (doubling guesses that zero out).
			// Finish if the scale equals or crosses 1 (making the old*new product non-positive).
			jQuery.style( elem, prop, initialInUnit + unit );
			if ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {
				maxIterations = 0;
			}
			initialInUnit = initialInUnit / scale;

		}

		initialInUnit = initialInUnit * 2;
		jQuery.style( elem, prop, initialInUnit + unit );

		// Make sure we update the tween properties later on
		valueParts = valueParts || [];
	}

	if ( valueParts ) {
		initialInUnit = +initialInUnit || +initial || 0;

		// Apply relative offset (+=/-=) if specified
		adjusted = valueParts[ 1 ] ?
			initialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :
			+valueParts[ 2 ];
		if ( tween ) {
			tween.unit = unit;
			tween.start = initialInUnit;
			tween.end = adjusted;
		}
	}
	return adjusted;
}


var defaultDisplayMap = {};

function getDefaultDisplay( elem ) {
	var temp,
		doc = elem.ownerDocument,
		nodeName = elem.nodeName,
		display = defaultDisplayMap[ nodeName ];

	if ( display ) {
		return display;
	}

	temp = doc.body.appendChild( doc.createElement( nodeName ) );
	display = jQuery.css( temp, "display" );

	temp.parentNode.removeChild( temp );

	if ( display === "none" ) {
		display = "block";
	}
	defaultDisplayMap[ nodeName ] = display;

	return display;
}

function showHide( elements, show ) {
	var display, elem,
		values = [],
		index = 0,
		length = elements.length;

	// Determine new display value for elements that need to change
	for ( ; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}

		display = elem.style.display;
		if ( show ) {

			// Since we force visibility upon cascade-hidden elements, an immediate (and slow)
			// check is required in this first loop unless we have a nonempty display value (either
			// inline or about-to-be-restored)
			if ( display === "none" ) {
				values[ index ] = dataPriv.get( elem, "display" ) || null;
				if ( !values[ index ] ) {
					elem.style.display = "";
				}
			}
			if ( elem.style.display === "" && isHiddenWithinTree( elem ) ) {
				values[ index ] = getDefaultDisplay( elem );
			}
		} else {
			if ( display !== "none" ) {
				values[ index ] = "none";

				// Remember what we're overwriting
				dataPriv.set( elem, "display", display );
			}
		}
	}

	// Set the display of the elements in a second loop to avoid constant reflow
	for ( index = 0; index < length; index++ ) {
		if ( values[ index ] != null ) {
			elements[ index ].style.display = values[ index ];
		}
	}

	return elements;
}

jQuery.fn.extend( {
	show: function() {
		return showHide( this, true );
	},
	hide: function() {
		return showHide( this );
	},
	toggle: function( state ) {
		if ( typeof state === "boolean" ) {
			return state ? this.show() : this.hide();
		}

		return this.each( function() {
			if ( isHiddenWithinTree( this ) ) {
				jQuery( this ).show();
			} else {
				jQuery( this ).hide();
			}
		} );
	}
} );
var rcheckableType = ( /^(?:checkbox|radio)$/i );

var rtagName = ( /<([a-z][^\/\0>\x20\t\r\n\f]*)/i );

var rscriptType = ( /^$|^module$|\/(?:java|ecma)script/i );



( function() {
	var fragment = document.createDocumentFragment(),
		div = fragment.appendChild( document.createElement( "div" ) ),
		input = document.createElement( "input" );

	// Support: Android 4.0 - 4.3 only
	// Check state lost if the name is set (trac-11217)
	// Support: Windows Web Apps (WWA)
	// `name` and `type` must use .setAttribute for WWA (trac-14901)
	input.setAttribute( "type", "radio" );
	input.setAttribute( "checked", "checked" );
	input.setAttribute( "name", "t" );

	div.appendChild( input );

	// Support: Android <=4.1 only
	// Older WebKit doesn't clone checked state correctly in fragments
	support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;

	// Support: IE <=11 only
	// Make sure textarea (and checkbox) defaultValue is properly cloned
	div.innerHTML = "<textarea>x</textarea>";
	support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;

	// Support: IE <=9 only
	// IE <=9 replaces <option> tags with their contents when inserted outside of
	// the select element.
	div.innerHTML = "<option></option>";
	support.option = !!div.lastChild;
} )();


// We have to close these tags to support XHTML (trac-13200)
var wrapMap = {

	// XHTML parsers do not magically insert elements in the
	// same way that tag soup parsers do. So we cannot shorten
	// this by omitting <tbody> or other required elements.
	thead: [ 1, "<table>", "</table>" ],
	col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
	tr: [ 2, "<table><tbody>", "</tbody></table>" ],
	td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

	_default: [ 0, "", "" ]
};

wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;

// Support: IE <=9 only
if ( !support.option ) {
	wrapMap.optgroup = wrapMap.option = [ 1, "<select multiple='multiple'>", "</select>" ];
}


function getAll( context, tag ) {

	// Support: IE <=9 - 11 only
	// Use typeof to avoid zero-argument method invocation on host objects (trac-15151)
	var ret;

	if ( typeof context.getElementsByTagName !== "undefined" ) {
		ret = context.getElementsByTagName( tag || "*" );

	} else if ( typeof context.querySelectorAll !== "undefined" ) {
		ret = context.querySelectorAll( tag || "*" );

	} else {
		ret = [];
	}

	if ( tag === undefined || tag && nodeName( context, tag ) ) {
		return jQuery.merge( [ context ], ret );
	}

	return ret;
}


// Mark scripts as having already been evaluated
function setGlobalEval( elems, refElements ) {
	var i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		dataPriv.set(
			elems[ i ],
			"globalEval",
			!refElements || dataPriv.get( refElements[ i ], "globalEval" )
		);
	}
}


var rhtml = /<|&#?\w+;/;

function buildFragment( elems, context, scripts, selection, ignored ) {
	var elem, tmp, tag, wrap, attached, j,
		fragment = context.createDocumentFragment(),
		nodes = [],
		i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		elem = elems[ i ];

		if ( elem || elem === 0 ) {

			// Add nodes directly
			if ( toType( elem ) === "object" ) {

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

			// Convert non-html into a text node
			} else if ( !rhtml.test( elem ) ) {
				nodes.push( context.createTextNode( elem ) );

			// Convert html into DOM nodes
			} else {
				tmp = tmp || fragment.appendChild( context.createElement( "div" ) );

				// Deserialize a standard representation
				tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();
				wrap = wrapMap[ tag ] || wrapMap._default;
				tmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];

				// Descend through wrappers to the right content
				j = wrap[ 0 ];
				while ( j-- ) {
					tmp = tmp.lastChild;
				}

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, tmp.childNodes );

				// Remember the top-level container
				tmp = fragment.firstChild;

				// Ensure the created nodes are orphaned (trac-12392)
				tmp.textContent = "";
			}
		}
	}

	// Remove wrapper from fragment
	fragment.textContent = "";

	i = 0;
	while ( ( elem = nodes[ i++ ] ) ) {

		// Skip elements already in the context collection (trac-4087)
		if ( selection && jQuery.inArray( elem, selection ) > -1 ) {
			if ( ignored ) {
				ignored.push( elem );
			}
			continue;
		}

		attached = isAttached( elem );

		// Append to fragment
		tmp = getAll( fragment.appendChild( elem ), "script" );

		// Preserve script evaluation history
		if ( attached ) {
			setGlobalEval( tmp );
		}

		// Capture executables
		if ( scripts ) {
			j = 0;
			while ( ( elem = tmp[ j++ ] ) ) {
				if ( rscriptType.test( elem.type || "" ) ) {
					scripts.push( elem );
				}
			}
		}
	}

	return fragment;
}


var rtypenamespace = /^([^.]*)(?:\.(.+)|)/;

function returnTrue() {
	return true;
}

function returnFalse() {
	return false;
}

// Support: IE <=9 - 11+
// focus() and blur() are asynchronous, except when they are no-op.
// So expect focus to be synchronous when the element is already active,
// and blur to be synchronous when the element is not already active.
// (focus and blur are always synchronous in other supported browsers,
// this just defines when we can count on it).
function expectSync( elem, type ) {
	return ( elem === safeActiveElement() ) === ( type === "focus" );
}

// Support: IE <=9 only
// Accessing document.activeElement can throw unexpectedly
// https://bugs.jquery.com/ticket/13393
function safeActiveElement() {
	try {
		return document.activeElement;
	} catch ( err ) { }
}

function on( elem, types, selector, data, fn, one ) {
	var origFn, type;

	// Types can be a map of types/handlers
	if ( typeof types === "object" ) {

		// ( types-Object, selector, data )
		if ( typeof selector !== "string" ) {

			// ( types-Object, data )
			data = data || selector;
			selector = undefined;
		}
		for ( type in types ) {
			on( elem, type, selector, data, types[ type ], one );
		}
		return elem;
	}

	if ( data == null && fn == null ) {

		// ( types, fn )
		fn = selector;
		data = selector = undefined;
	} else if ( fn == null ) {
		if ( typeof selector === "string" ) {

			// ( types, selector, fn )
			fn = data;
			data = undefined;
		} else {

			// ( types, data, fn )
			fn = data;
			data = selector;
			selector = undefined;
		}
	}
	if ( fn === false ) {
		fn = returnFalse;
	} else if ( !fn ) {
		return elem;
	}

	if ( one === 1 ) {
		origFn = fn;
		fn = function( event ) {

			// Can use an empty set, since event contains the info
			jQuery().off( event );
			return origFn.apply( this, arguments );
		};

		// Use same guid so caller can remove using origFn
		fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
	}
	return elem.each( function() {
		jQuery.event.add( this, types, fn, data, selector );
	} );
}

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

	global: {},

	add: function( elem, types, handler, data, selector ) {

		var handleObjIn, eventHandle, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.get( elem );

		// Only attach events to objects that accept data
		if ( !acceptData( elem ) ) {
			return;
		}

		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
			selector = handleObjIn.selector;
		}

		// Ensure that invalid selectors throw exceptions at attach time
		// Evaluate against documentElement in case elem is a non-element node (e.g., document)
		if ( selector ) {
			jQuery.find.matchesSelector( documentElement, selector );
		}

		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure and main handler, if this is the first
		if ( !( events = elemData.events ) ) {
			events = elemData.events = Object.create( null );
		}
		if ( !( eventHandle = elemData.handle ) ) {
			eventHandle = elemData.handle = function( e ) {

				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ?
					jQuery.event.dispatch.apply( elem, arguments ) : undefined;
			};
		}

		// Handle multiple events separated by a space
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// There *must* be a type, no attaching namespace-only handlers
			if ( !type ) {
				continue;
			}

			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};

			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;

			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};

			// handleObj is passed to all event handlers
			handleObj = jQuery.extend( {
				type: type,
				origType: origType,
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
				namespace: namespaces.join( "." )
			}, handleObjIn );

			// Init the event handler queue if we're the first
			if ( !( handlers = events[ type ] ) ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;

				// Only use addEventListener if the special events handler returns false
				if ( !special.setup ||
					special.setup.call( elem, data, namespaces, eventHandle ) === false ) {

					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}

			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

	},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {

		var j, origCount, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.hasData( elem ) && dataPriv.get( elem );

		if ( !elemData || !( events = elemData.events ) ) {
			return;
		}

		// Once for each type.namespace in types; type may be omitted
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}

			special = jQuery.event.special[ type ] || {};
			type = ( selector ? special.delegateType : special.bindType ) || type;
			handlers = events[ type ] || [];
			tmp = tmp[ 2 ] &&
				new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" );

			// Remove matching events
			origCount = j = handlers.length;
			while ( j-- ) {
				handleObj = handlers[ j ];

				if ( ( mappedTypes || origType === handleObj.origType ) &&
					( !handler || handler.guid === handleObj.guid ) &&
					( !tmp || tmp.test( handleObj.namespace ) ) &&
					( !selector || selector === handleObj.selector ||
						selector === "**" && handleObj.selector ) ) {
					handlers.splice( j, 1 );

					if ( handleObj.selector ) {
						handlers.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}

			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( origCount && !handlers.length ) {
				if ( !special.teardown ||
					special.teardown.call( elem, namespaces, elemData.handle ) === false ) {

					jQuery.removeEvent( elem, type, elemData.handle );
				}

				delete events[ type ];
			}
		}

		// Remove data and the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			dataPriv.remove( elem, "handle events" );
		}
	},

	dispatch: function( nativeEvent ) {

		var i, j, ret, matched, handleObj, handlerQueue,
			args = new Array( arguments.length ),

			// Make a writable jQuery.Event from the native event object
			event = jQuery.event.fix( nativeEvent ),

			handlers = (
				dataPriv.get( this, "events" ) || Object.create( null )
			)[ event.type ] || [],
			special = jQuery.event.special[ event.type ] || {};

		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[ 0 ] = event;

		for ( i = 1; i < arguments.length; i++ ) {
			args[ i ] = arguments[ i ];
		}

		event.delegateTarget = this;

		// Call the preDispatch hook for the mapped type, and let it bail if desired
		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
			return;
		}

		// Determine handlers
		handlerQueue = jQuery.event.handlers.call( this, event, handlers );

		// Run delegates first; they may want to stop propagation beneath us
		i = 0;
		while ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {
			event.currentTarget = matched.elem;

			j = 0;
			while ( ( handleObj = matched.handlers[ j++ ] ) &&
				!event.isImmediatePropagationStopped() ) {

				// If the event is namespaced, then each handler is only invoked if it is
				// specially universal or its namespaces are a superset of the event's.
				if ( !event.rnamespace || handleObj.namespace === false ||
					event.rnamespace.test( handleObj.namespace ) ) {

					event.handleObj = handleObj;
					event.data = handleObj.data;

					ret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||
						handleObj.handler ).apply( matched.elem, args );

					if ( ret !== undefined ) {
						if ( ( event.result = ret ) === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}

		// Call the postDispatch hook for the mapped type
		if ( special.postDispatch ) {
			special.postDispatch.call( this, event );
		}

		return event.result;
	},

	handlers: function( event, handlers ) {
		var i, handleObj, sel, matchedHandlers, matchedSelectors,
			handlerQueue = [],
			delegateCount = handlers.delegateCount,
			cur = event.target;

		// Find delegate handlers
		if ( delegateCount &&

			// Support: IE <=9
			// Black-hole SVG <use> instance trees (trac-13180)
			cur.nodeType &&

			// Support: Firefox <=42
			// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)
			// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click
			// Support: IE 11 only
			// ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)
			!( event.type === "click" && event.button >= 1 ) ) {

			for ( ; cur !== this; cur = cur.parentNode || this ) {

				// Don't check non-elements (trac-13208)
				// Don't process clicks on disabled elements (trac-6911, trac-8165, trac-11382, trac-11764)
				if ( cur.nodeType === 1 && !( event.type === "click" && cur.disabled === true ) ) {
					matchedHandlers = [];
					matchedSelectors = {};
					for ( i = 0; i < delegateCount; i++ ) {
						handleObj = handlers[ i ];

						// Don't conflict with Object.prototype properties (trac-13203)
						sel = handleObj.selector + " ";

						if ( matchedSelectors[ sel ] === undefined ) {
							matchedSelectors[ sel ] = handleObj.needsContext ?
								jQuery( sel, this ).index( cur ) > -1 :
								jQuery.find( sel, this, null, [ cur ] ).length;
						}
						if ( matchedSelectors[ sel ] ) {
							matchedHandlers.push( handleObj );
						}
					}
					if ( matchedHandlers.length ) {
						handlerQueue.push( { elem: cur, handlers: matchedHandlers } );
					}
				}
			}
		}

		// Add the remaining (directly-bound) handlers
		cur = this;
		if ( delegateCount < handlers.length ) {
			handlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );
		}

		return handlerQueue;
	},

	addProp: function( name, hook ) {
		Object.defineProperty( jQuery.Event.prototype, name, {
			enumerable: true,
			configurable: true,

			get: isFunction( hook ) ?
				function() {
					if ( this.originalEvent ) {
						return hook( this.originalEvent );
					}
				} :
				function() {
					if ( this.originalEvent ) {
						return this.originalEvent[ name ];
					}
				},

			set: function( value ) {
				Object.defineProperty( this, name, {
					enumerable: true,
					configurable: true,
					writable: true,
					value: value
				} );
			}
		} );
	},

	fix: function( originalEvent ) {
		return originalEvent[ jQuery.expando ] ?
			originalEvent :
			new jQuery.Event( originalEvent );
	},

	special: {
		load: {

			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},
		click: {

			// Utilize native event to ensure correct state for checkable inputs
			setup: function( data ) {

				// For mutual compressibility with _default, replace `this` access with a local var.
				// `|| data` is dead code meant only to preserve the variable through minification.
				var el = this || data;

				// Claim the first handler
				if ( rcheckableType.test( el.type ) &&
					el.click && nodeName( el, "input" ) ) {

					// dataPriv.set( el, "click", ... )
					leverageNative( el, "click", returnTrue );
				}

				// Return false to allow normal processing in the caller
				return false;
			},
			trigger: function( data ) {

				// For mutual compressibility with _default, replace `this` access with a local var.
				// `|| data` is dead code meant only to preserve the variable through minification.
				var el = this || data;

				// Force setup before triggering a click
				if ( rcheckableType.test( el.type ) &&
					el.click && nodeName( el, "input" ) ) {

					leverageNative( el, "click" );
				}

				// Return non-false to allow normal event-path propagation
				return true;
			},

			// For cross-browser consistency, suppress native .click() on links
			// Also prevent it if we're currently inside a leveraged native-event stack
			_default: function( event ) {
				var target = event.target;
				return rcheckableType.test( target.type ) &&
					target.click && nodeName( target, "input" ) &&
					dataPriv.get( target, "click" ) ||
					nodeName( target, "a" );
			}
		},

		beforeunload: {
			postDispatch: function( event ) {

				// Support: Firefox 20+
				// Firefox doesn't alert if the returnValue field is not set.
				if ( event.result !== undefined && event.originalEvent ) {
					event.originalEvent.returnValue = event.result;
				}
			}
		}
	}
};

// Ensure the presence of an event listener that handles manually-triggered
// synthetic events by interrupting progress until reinvoked in response to
// *native* events that it fires directly, ensuring that state changes have
// already occurred before other listeners are invoked.
function leverageNative( el, type, expectSync ) {

	// Missing expectSync indicates a trigger call, which must force setup through jQuery.event.add
	if ( !expectSync ) {
		if ( dataPriv.get( el, type ) === undefined ) {
			jQuery.event.add( el, type, returnTrue );
		}
		return;
	}

	// Register the controller as a special universal handler for all event namespaces
	dataPriv.set( el, type, false );
	jQuery.event.add( el, type, {
		namespace: false,
		handler: function( event ) {
			var notAsync, result,
				saved = dataPriv.get( this, type );

			if ( ( event.isTrigger & 1 ) && this[ type ] ) {

				// Interrupt processing of the outer synthetic .trigger()ed event
				// Saved data should be false in such cases, but might be a leftover capture object
				// from an async native handler (gh-4350)
				if ( !saved.length ) {

					// Store arguments for use when handling the inner native event
					// There will always be at least one argument (an event object), so this array
					// will not be confused with a leftover capture object.
					saved = slice.call( arguments );
					dataPriv.set( this, type, saved );

					// Trigger the native event and capture its result
					// Support: IE <=9 - 11+
					// focus() and blur() are asynchronous
					notAsync = expectSync( this, type );
					this[ type ]();
					result = dataPriv.get( this, type );
					if ( saved !== result || notAsync ) {
						dataPriv.set( this, type, false );
					} else {
						result = {};
					}
					if ( saved !== result ) {

						// Cancel the outer synthetic event
						event.stopImmediatePropagation();
						event.preventDefault();

						// Support: Chrome 86+
						// In Chrome, if an element having a focusout handler is blurred by
						// clicking outside of it, it invokes the handler synchronously. If
						// that handler calls `.remove()` on the element, the data is cleared,
						// leaving `result` undefined. We need to guard against this.
						return result && result.value;
					}

				// If this is an inner synthetic event for an event with a bubbling surrogate
				// (focus or blur), assume that the surrogate already propagated from triggering the
				// native event and prevent that from happening again here.
				// This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the
				// bubbling surrogate propagates *after* the non-bubbling base), but that seems
				// less bad than duplication.
				} else if ( ( jQuery.event.special[ type ] || {} ).delegateType ) {
					event.stopPropagation();
				}

			// If this is a native event triggered above, everything is now in order
			// Fire an inner synthetic event with the original arguments
			} else if ( saved.length ) {

				// ...and capture the result
				dataPriv.set( this, type, {
					value: jQuery.event.trigger(

						// Support: IE <=9 - 11+
						// Extend with the prototype to reset the above stopImmediatePropagation()
						jQuery.extend( saved[ 0 ], jQuery.Event.prototype ),
						saved.slice( 1 ),
						this
					)
				} );

				// Abort handling of the native event
				event.stopImmediatePropagation();
			}
		}
	} );
}

jQuery.removeEvent = function( elem, type, handle ) {

	// This "if" is needed for plain objects
	if ( elem.removeEventListener ) {
		elem.removeEventListener( type, handle );
	}
};

jQuery.Event = function( src, props ) {

	// Allow instantiation without the 'new' keyword
	if ( !( this instanceof jQuery.Event ) ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = src.defaultPrevented ||
				src.defaultPrevented === undefined &&

				// Support: Android <=2.3 only
				src.returnValue === false ?
			returnTrue :
			returnFalse;

		// Create target properties
		// Support: Safari <=6 - 7 only
		// Target should not be a text node (trac-504, trac-13143)
		this.target = ( src.target && src.target.nodeType === 3 ) ?
			src.target.parentNode :
			src.target;

		this.currentTarget = src.currentTarget;
		this.relatedTarget = src.relatedTarget;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || Date.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	constructor: jQuery.Event,
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse,
	isSimulated: false,

	preventDefault: function() {
		var e = this.originalEvent;

		this.isDefaultPrevented = returnTrue;

		if ( e && !this.isSimulated ) {
			e.preventDefault();
		}
	},
	stopPropagation: function() {
		var e = this.originalEvent;

		this.isPropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopPropagation();
		}
	},
	stopImmediatePropagation: function() {
		var e = this.originalEvent;

		this.isImmediatePropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopImmediatePropagation();
		}

		this.stopPropagation();
	}
};

// Includes all common event props including KeyEvent and MouseEvent specific props
jQuery.each( {
	altKey: true,
	bubbles: true,
	cancelable: true,
	changedTouches: true,
	ctrlKey: true,
	detail: true,
	eventPhase: true,
	metaKey: true,
	pageX: true,
	pageY: true,
	shiftKey: true,
	view: true,
	"char": true,
	code: true,
	charCode: true,
	key: true,
	keyCode: true,
	button: true,
	buttons: true,
	clientX: true,
	clientY: true,
	offsetX: true,
	offsetY: true,
	pointerId: true,
	pointerType: true,
	screenX: true,
	screenY: true,
	targetTouches: true,
	toElement: true,
	touches: true,
	which: true
}, jQuery.event.addProp );

jQuery.each( { focus: "focusin", blur: "focusout" }, function( type, delegateType ) {
	jQuery.event.special[ type ] = {

		// Utilize native event if possible so blur/focus sequence is correct
		setup: function() {

			// Claim the first handler
			// dataPriv.set( this, "focus", ... )
			// dataPriv.set( this, "blur", ... )
			leverageNative( this, type, expectSync );

			// Return false to allow normal processing in the caller
			return false;
		},
		trigger: function() {

			// Force setup before trigger
			leverageNative( this, type );

			// Return non-false to allow normal event-path propagation
			return true;
		},

		// Suppress native focus or blur if we're currently inside
		// a leveraged native-event stack
		_default: function( event ) {
			return dataPriv.get( event.target, type );
		},

		delegateType: delegateType
	};
} );

// Create mouseenter/leave events using mouseover/out and event-time checks
// so that event delegation works in jQuery.
// Do the same for pointerenter/pointerleave and pointerover/pointerout
//
// Support: Safari 7 only
// Safari sends mouseenter too often; see:
// https://bugs.chromium.org/p/chromium/issues/detail?id=470258
// for the description of the bug (it existed in older Chrome versions as well).
jQuery.each( {
	mouseenter: "mouseover",
	mouseleave: "mouseout",
	pointerenter: "pointerover",
	pointerleave: "pointerout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,

		handle: function( event ) {
			var ret,
				target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj;

			// For mouseenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
} );

jQuery.fn.extend( {

	on: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn );
	},
	one: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		var handleObj, type;
		if ( types && types.preventDefault && types.handleObj ) {

			// ( event )  dispatched jQuery.Event
			handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace ?
					handleObj.origType + "." + handleObj.namespace :
					handleObj.origType,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {

			// ( types-object [, selector] )
			for ( type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {

			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each( function() {
			jQuery.event.remove( this, types, fn, selector );
		} );
	}
} );


var

	// Support: IE <=10 - 11, Edge 12 - 13 only
	// In IE/Edge using regex groups here causes severe slowdowns.
	// See https://connect.microsoft.com/IE/feedback/details/1736512/
	rnoInnerhtml = /<script|<style|<link/i,

	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,

	rcleanScript = /^\s*<!\[CDATA\[|\]\]>\s*$/g;

// Prefer a tbody over its parent table for containing new rows
function manipulationTarget( elem, content ) {
	if ( nodeName( elem, "table" ) &&
		nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ) {

		return jQuery( elem ).children( "tbody" )[ 0 ] || elem;
	}

	return elem;
}

// Replace/restore the type attribute of script elements for safe DOM manipulation
function disableScript( elem ) {
	elem.type = ( elem.getAttribute( "type" ) !== null ) + "/" + elem.type;
	return elem;
}
function restoreScript( elem ) {
	if ( ( elem.type || "" ).slice( 0, 5 ) === "true/" ) {
		elem.type = elem.type.slice( 5 );
	} else {
		elem.removeAttribute( "type" );
	}

	return elem;
}

function cloneCopyEvent( src, dest ) {
	var i, l, type, pdataOld, udataOld, udataCur, events;

	if ( dest.nodeType !== 1 ) {
		return;
	}

	// 1. Copy private data: events, handlers, etc.
	if ( dataPriv.hasData( src ) ) {
		pdataOld = dataPriv.get( src );
		events = pdataOld.events;

		if ( events ) {
			dataPriv.remove( dest, "handle events" );

			for ( type in events ) {
				for ( i = 0, l = events[ type ].length; i < l; i++ ) {
					jQuery.event.add( dest, type, events[ type ][ i ] );
				}
			}
		}
	}

	// 2. Copy user data
	if ( dataUser.hasData( src ) ) {
		udataOld = dataUser.access( src );
		udataCur = jQuery.extend( {}, udataOld );

		dataUser.set( dest, udataCur );
	}
}

// Fix IE bugs, see support tests
function fixInput( src, dest ) {
	var nodeName = dest.nodeName.toLowerCase();

	// Fails to persist the checked state of a cloned checkbox or radio button.
	if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
		dest.checked = src.checked;

	// Fails to return the selected option to the default selected state when cloning options
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;
	}
}

function domManip( collection, args, callback, ignored ) {

	// Flatten any nested arrays
	args = flat( args );

	var fragment, first, scripts, hasScripts, node, doc,
		i = 0,
		l = collection.length,
		iNoClone = l - 1,
		value = args[ 0 ],
		valueIsFunction = isFunction( value );

	// We can't cloneNode fragments that contain checked, in WebKit
	if ( valueIsFunction ||
			( l > 1 && typeof value === "string" &&
				!support.checkClone && rchecked.test( value ) ) ) {
		return collection.each( function( index ) {
			var self = collection.eq( index );
			if ( valueIsFunction ) {
				args[ 0 ] = value.call( this, index, self.html() );
			}
			domManip( self, args, callback, ignored );
		} );
	}

	if ( l ) {
		fragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );
		first = fragment.firstChild;

		if ( fragment.childNodes.length === 1 ) {
			fragment = first;
		}

		// Require either new content or an interest in ignored elements to invoke the callback
		if ( first || ignored ) {
			scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
			hasScripts = scripts.length;

			// Use the original fragment for the last item
			// instead of the first because it can end up
			// being emptied incorrectly in certain situations (trac-8070).
			for ( ; i < l; i++ ) {
				node = fragment;

				if ( i !== iNoClone ) {
					node = jQuery.clone( node, true, true );

					// Keep references to cloned scripts for later restoration
					if ( hasScripts ) {

						// Support: Android <=4.0 only, PhantomJS 1 only
						// push.apply(_, arraylike) throws on ancient WebKit
						jQuery.merge( scripts, getAll( node, "script" ) );
					}
				}

				callback.call( collection[ i ], node, i );
			}

			if ( hasScripts ) {
				doc = scripts[ scripts.length - 1 ].ownerDocument;

				// Reenable scripts
				jQuery.map( scripts, restoreScript );

				// Evaluate executable scripts on first document insertion
				for ( i = 0; i < hasScripts; i++ ) {
					node = scripts[ i ];
					if ( rscriptType.test( node.type || "" ) &&
						!dataPriv.access( node, "globalEval" ) &&
						jQuery.contains( doc, node ) ) {

						if ( node.src && ( node.type || "" ).toLowerCase()  !== "module" ) {

							// Optional AJAX dependency, but won't run scripts if not present
							if ( jQuery._evalUrl && !node.noModule ) {
								jQuery._evalUrl( node.src, {
									nonce: node.nonce || node.getAttribute( "nonce" )
								}, doc );
							}
						} else {

							// Unwrap a CDATA section containing script contents. This shouldn't be
							// needed as in XML documents they're already not visible when
							// inspecting element contents and in HTML documents they have no
							// meaning but we're preserving that logic for backwards compatibility.
							// This will be removed completely in 4.0. See gh-4904.
							DOMEval( node.textContent.replace( rcleanScript, "" ), node, doc );
						}
					}
				}
			}
		}
	}

	return collection;
}

function remove( elem, selector, keepData ) {
	var node,
		nodes = selector ? jQuery.filter( selector, elem ) : elem,
		i = 0;

	for ( ; ( node = nodes[ i ] ) != null; i++ ) {
		if ( !keepData && node.nodeType === 1 ) {
			jQuery.cleanData( getAll( node ) );
		}

		if ( node.parentNode ) {
			if ( keepData && isAttached( node ) ) {
				setGlobalEval( getAll( node, "script" ) );
			}
			node.parentNode.removeChild( node );
		}
	}

	return elem;
}

jQuery.extend( {
	htmlPrefilter: function( html ) {
		return html;
	},

	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var i, l, srcElements, destElements,
			clone = elem.cloneNode( true ),
			inPage = isAttached( elem );

		// Fix IE cloning issues
		if ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&
				!jQuery.isXMLDoc( elem ) ) {

			// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2
			destElements = getAll( clone );
			srcElements = getAll( elem );

			for ( i = 0, l = srcElements.length; i < l; i++ ) {
				fixInput( srcElements[ i ], destElements[ i ] );
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			if ( deepDataAndEvents ) {
				srcElements = srcElements || getAll( elem );
				destElements = destElements || getAll( clone );

				for ( i = 0, l = srcElements.length; i < l; i++ ) {
					cloneCopyEvent( srcElements[ i ], destElements[ i ] );
				}
			} else {
				cloneCopyEvent( elem, clone );
			}
		}

		// Preserve script evaluation history
		destElements = getAll( clone, "script" );
		if ( destElements.length > 0 ) {
			setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
		}

		// Return the cloned set
		return clone;
	},

	cleanData: function( elems ) {
		var data, elem, type,
			special = jQuery.event.special,
			i = 0;

		for ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {
			if ( acceptData( elem ) ) {
				if ( ( data = elem[ dataPriv.expando ] ) ) {
					if ( data.events ) {
						for ( type in data.events ) {
							if ( special[ type ] ) {
								jQuery.event.remove( elem, type );

							// This is a shortcut to avoid jQuery.event.remove's overhead
							} else {
								jQuery.removeEvent( elem, type, data.handle );
							}
						}
					}

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataPriv.expando ] = undefined;
				}
				if ( elem[ dataUser.expando ] ) {

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataUser.expando ] = undefined;
				}
			}
		}
	}
} );

jQuery.fn.extend( {
	detach: function( selector ) {
		return remove( this, selector, true );
	},

	remove: function( selector ) {
		return remove( this, selector );
	},

	text: function( value ) {
		return access( this, function( value ) {
			return value === undefined ?
				jQuery.text( this ) :
				this.empty().each( function() {
					if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
						this.textContent = value;
					}
				} );
		}, null, value, arguments.length );
	},

	append: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.appendChild( elem );
			}
		} );
	},

	prepend: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.insertBefore( elem, target.firstChild );
			}
		} );
	},

	before: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this );
			}
		} );
	},

	after: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			}
		} );
	},

	empty: function() {
		var elem,
			i = 0;

		for ( ; ( elem = this[ i ] ) != null; i++ ) {
			if ( elem.nodeType === 1 ) {

				// Prevent memory leaks
				jQuery.cleanData( getAll( elem, false ) );

				// Remove any remaining nodes
				elem.textContent = "";
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map( function() {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		} );
	},

	html: function( value ) {
		return access( this, function( value ) {
			var elem = this[ 0 ] || {},
				i = 0,
				l = this.length;

			if ( value === undefined && elem.nodeType === 1 ) {
				return elem.innerHTML;
			}

			// See if we can take a shortcut and just use innerHTML
			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
				!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {

				value = jQuery.htmlPrefilter( value );

				try {
					for ( ; i < l; i++ ) {
						elem = this[ i ] || {};

						// Remove element nodes and prevent memory leaks
						if ( elem.nodeType === 1 ) {
							jQuery.cleanData( getAll( elem, false ) );
							elem.innerHTML = value;
						}
					}

					elem = 0;

				// If using innerHTML throws an exception, use the fallback method
				} catch ( e ) {}
			}

			if ( elem ) {
				this.empty().append( value );
			}
		}, null, value, arguments.length );
	},

	replaceWith: function() {
		var ignored = [];

		// Make the changes, replacing each non-ignored context element with the new content
		return domManip( this, arguments, function( elem ) {
			var parent = this.parentNode;

			if ( jQuery.inArray( this, ignored ) < 0 ) {
				jQuery.cleanData( getAll( this ) );
				if ( parent ) {
					parent.replaceChild( elem, this );
				}
			}

		// Force callback invocation
		}, ignored );
	}
} );

jQuery.each( {
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var elems,
			ret = [],
			insert = jQuery( selector ),
			last = insert.length - 1,
			i = 0;

		for ( ; i <= last; i++ ) {
			elems = i === last ? this : this.clone( true );
			jQuery( insert[ i ] )[ original ]( elems );

			// Support: Android <=4.0 only, PhantomJS 1 only
			// .get() because push.apply(_, arraylike) throws on ancient WebKit
			push.apply( ret, elems.get() );
		}

		return this.pushStack( ret );
	};
} );
var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );

var rcustomProp = /^--/;


var getStyles = function( elem ) {

		// Support: IE <=11 only, Firefox <=30 (trac-15098, trac-14150)
		// IE throws on elements created in popups
		// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
		var view = elem.ownerDocument.defaultView;

		if ( !view || !view.opener ) {
			view = window;
		}

		return view.getComputedStyle( elem );
	};

var swap = function( elem, options, callback ) {
	var ret, name,
		old = {};

	// Remember the old values, and insert the new ones
	for ( name in options ) {
		old[ name ] = elem.style[ name ];
		elem.style[ name ] = options[ name ];
	}

	ret = callback.call( elem );

	// Revert the old values
	for ( name in options ) {
		elem.style[ name ] = old[ name ];
	}

	return ret;
};


var rboxStyle = new RegExp( cssExpand.join( "|" ), "i" );

var whitespace = "[\\x20\\t\\r\\n\\f]";


var rtrimCSS = new RegExp(
	"^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$",
	"g"
);




( function() {

	// Executing both pixelPosition & boxSizingReliable tests require only one layout
	// so they're executed at the same time to save the second computation.
	function computeStyleTests() {

		// This is a singleton, we need to execute it only once
		if ( !div ) {
			return;
		}

		container.style.cssText = "position:absolute;left:-11111px;width:60px;" +
			"margin-top:1px;padding:0;border:0";
		div.style.cssText =
			"position:relative;display:block;box-sizing:border-box;overflow:scroll;" +
			"margin:auto;border:1px;padding:1px;" +
			"width:60%;top:1%";
		documentElement.appendChild( container ).appendChild( div );

		var divStyle = window.getComputedStyle( div );
		pixelPositionVal = divStyle.top !== "1%";

		// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44
		reliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;

		// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3
		// Some styles come back with percentage values, even though they shouldn't
		div.style.right = "60%";
		pixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;

		// Support: IE 9 - 11 only
		// Detect misreporting of content dimensions for box-sizing:border-box elements
		boxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;

		// Support: IE 9 only
		// Detect overflow:scroll screwiness (gh-3699)
		// Support: Chrome <=64
		// Don't get tricked when zoom affects offsetWidth (gh-4029)
		div.style.position = "absolute";
		scrollboxSizeVal = roundPixelMeasures( div.offsetWidth / 3 ) === 12;

		documentElement.removeChild( container );

		// Nullify the div so it wouldn't be stored in the memory and
		// it will also be a sign that checks already performed
		div = null;
	}

	function roundPixelMeasures( measure ) {
		return Math.round( parseFloat( measure ) );
	}

	var pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,
		reliableTrDimensionsVal, reliableMarginLeftVal,
		container = document.createElement( "div" ),
		div = document.createElement( "div" );

	// Finish early in limited (non-browser) environments
	if ( !div.style ) {
		return;
	}

	// Support: IE <=9 - 11 only
	// Style of cloned element affects source element cloned (trac-8908)
	div.style.backgroundClip = "content-box";
	div.cloneNode( true ).style.backgroundClip = "";
	support.clearCloneStyle = div.style.backgroundClip === "content-box";

	jQuery.extend( support, {
		boxSizingReliable: function() {
			computeStyleTests();
			return boxSizingReliableVal;
		},
		pixelBoxStyles: function() {
			computeStyleTests();
			return pixelBoxStylesVal;
		},
		pixelPosition: function() {
			computeStyleTests();
			return pixelPositionVal;
		},
		reliableMarginLeft: function() {
			computeStyleTests();
			return reliableMarginLeftVal;
		},
		scrollboxSize: function() {
			computeStyleTests();
			return scrollboxSizeVal;
		},

		// Support: IE 9 - 11+, Edge 15 - 18+
		// IE/Edge misreport `getComputedStyle` of table rows with width/height
		// set in CSS while `offset*` properties report correct values.
		// Behavior in IE 9 is more subtle than in newer versions & it passes
		// some versions of this test; make sure not to make it pass there!
		//
		// Support: Firefox 70+
		// Only Firefox includes border widths
		// in computed dimensions. (gh-4529)
		reliableTrDimensions: function() {
			var table, tr, trChild, trStyle;
			if ( reliableTrDimensionsVal == null ) {
				table = document.createElement( "table" );
				tr = document.createElement( "tr" );
				trChild = document.createElement( "div" );

				table.style.cssText = "position:absolute;left:-11111px;border-collapse:separate";
				tr.style.cssText = "border:1px solid";

				// Support: Chrome 86+
				// Height set through cssText does not get applied.
				// Computed height then comes back as 0.
				tr.style.height = "1px";
				trChild.style.height = "9px";

				// Support: Android 8 Chrome 86+
				// In our bodyBackground.html iframe,
				// display for all div elements is set to "inline",
				// which causes a problem only in Android 8 Chrome 86.
				// Ensuring the div is display: block
				// gets around this issue.
				trChild.style.display = "block";

				documentElement
					.appendChild( table )
					.appendChild( tr )
					.appendChild( trChild );

				trStyle = window.getComputedStyle( tr );
				reliableTrDimensionsVal = ( parseInt( trStyle.height, 10 ) +
					parseInt( trStyle.borderTopWidth, 10 ) +
					parseInt( trStyle.borderBottomWidth, 10 ) ) === tr.offsetHeight;

				documentElement.removeChild( table );
			}
			return reliableTrDimensionsVal;
		}
	} );
} )();


function curCSS( elem, name, computed ) {
	var width, minWidth, maxWidth, ret,
		isCustomProp = rcustomProp.test( name ),

		// Support: Firefox 51+
		// Retrieving style before computed somehow
		// fixes an issue with getting wrong values
		// on detached elements
		style = elem.style;

	computed = computed || getStyles( elem );

	// getPropertyValue is needed for:
	//   .css('filter') (IE 9 only, trac-12537)
	//   .css('--customProperty) (gh-3144)
	if ( computed ) {
		ret = computed.getPropertyValue( name ) || computed[ name ];

		// trim whitespace for custom property (issue gh-4926)
		if ( isCustomProp ) {

			// rtrim treats U+000D CARRIAGE RETURN and U+000C FORM FEED
			// as whitespace while CSS does not, but this is not a problem
			// because CSS preprocessing replaces them with U+000A LINE FEED
			// (which *is* CSS whitespace)
			// https://www.w3.org/TR/css-syntax-3/#input-preprocessing
			ret = ret.replace( rtrimCSS, "$1" );
		}

		if ( ret === "" && !isAttached( elem ) ) {
			ret = jQuery.style( elem, name );
		}

		// A tribute to the "awesome hack by Dean Edwards"
		// Android Browser returns percentage for some values,
		// but width seems to be reliably pixels.
		// This is against the CSSOM draft spec:
		// https://drafts.csswg.org/cssom/#resolved-values
		if ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {

			// Remember the original values
			width = style.width;
			minWidth = style.minWidth;
			maxWidth = style.maxWidth;

			// Put in the new values to get a computed value out
			style.minWidth = style.maxWidth = style.width = ret;
			ret = computed.width;

			// Revert the changed values
			style.width = width;
			style.minWidth = minWidth;
			style.maxWidth = maxWidth;
		}
	}

	return ret !== undefined ?

		// Support: IE <=9 - 11 only
		// IE returns zIndex value as an integer.
		ret + "" :
		ret;
}


function addGetHookIf( conditionFn, hookFn ) {

	// Define the hook, we'll check on the first run if it's really needed.
	return {
		get: function() {
			if ( conditionFn() ) {

				// Hook not needed (or it's not possible to use it due
				// to missing dependency), remove it.
				delete this.get;
				return;
			}

			// Hook needed; redefine it so that the support test is not executed again.
			return ( this.get = hookFn ).apply( this, arguments );
		}
	};
}


var cssPrefixes = [ "Webkit", "Moz", "ms" ],
	emptyStyle = document.createElement( "div" ).style,
	vendorProps = {};

// Return a vendor-prefixed property or undefined
function vendorPropName( name ) {

	// Check for vendor prefixed names
	var capName = name[ 0 ].toUpperCase() + name.slice( 1 ),
		i = cssPrefixes.length;

	while ( i-- ) {
		name = cssPrefixes[ i ] + capName;
		if ( name in emptyStyle ) {
			return name;
		}
	}
}

// Return a potentially-mapped jQuery.cssProps or vendor prefixed property
function finalPropName( name ) {
	var final = jQuery.cssProps[ name ] || vendorProps[ name ];

	if ( final ) {
		return final;
	}
	if ( name in emptyStyle ) {
		return name;
	}
	return vendorProps[ name ] = vendorPropName( name ) || name;
}


var

	// Swappable if display is none or starts with table
	// except "table", "table-cell", or "table-caption"
	// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssNormalTransform = {
		letterSpacing: "0",
		fontWeight: "400"
	};

function setPositiveNumber( _elem, value, subtract ) {

	// Any relative (+/-) values have already been
	// normalized at this point
	var matches = rcssNum.exec( value );
	return matches ?

		// Guard against undefined "subtract", e.g., when used as in cssHooks
		Math.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || "px" ) :
		value;
}

function boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {
	var i = dimension === "width" ? 1 : 0,
		extra = 0,
		delta = 0;

	// Adjustment may not be necessary
	if ( box === ( isBorderBox ? "border" : "content" ) ) {
		return 0;
	}

	for ( ; i < 4; i += 2 ) {

		// Both box models exclude margin
		if ( box === "margin" ) {
			delta += jQuery.css( elem, box + cssExpand[ i ], true, styles );
		}

		// If we get here with a content-box, we're seeking "padding" or "border" or "margin"
		if ( !isBorderBox ) {

			// Add padding
			delta += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

			// For "border" or "margin", add border
			if ( box !== "padding" ) {
				delta += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );

			// But still keep track of it otherwise
			} else {
				extra += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}

		// If we get here with a border-box (content + padding + border), we're seeking "content" or
		// "padding" or "margin"
		} else {

			// For "content", subtract padding
			if ( box === "content" ) {
				delta -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
			}

			// For "content" or "padding", subtract border
			if ( box !== "margin" ) {
				delta -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		}
	}

	// Account for positive content-box scroll gutter when requested by providing computedVal
	if ( !isBorderBox && computedVal >= 0 ) {

		// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border
		// Assuming integer scroll gutter, subtract the rest and round down
		delta += Math.max( 0, Math.ceil(
			elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
			computedVal -
			delta -
			extra -
			0.5

		// If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter
		// Use an explicit zero to avoid NaN (gh-3964)
		) ) || 0;
	}

	return delta;
}

function getWidthOrHeight( elem, dimension, extra ) {

	// Start with computed style
	var styles = getStyles( elem ),

		// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).
		// Fake content-box until we know it's needed to know the true value.
		boxSizingNeeded = !support.boxSizingReliable() || extra,
		isBorderBox = boxSizingNeeded &&
			jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
		valueIsBorderBox = isBorderBox,

		val = curCSS( elem, dimension, styles ),
		offsetProp = "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 );

	// Support: Firefox <=54
	// Return a confounding non-pixel value or feign ignorance, as appropriate.
	if ( rnumnonpx.test( val ) ) {
		if ( !extra ) {
			return val;
		}
		val = "auto";
	}


	// Support: IE 9 - 11 only
	// Use offsetWidth/offsetHeight for when box sizing is unreliable.
	// In those cases, the computed value can be trusted to be border-box.
	if ( ( !support.boxSizingReliable() && isBorderBox ||

		// Support: IE 10 - 11+, Edge 15 - 18+
		// IE/Edge misreport `getComputedStyle` of table rows with width/height
		// set in CSS while `offset*` properties report correct values.
		// Interestingly, in some cases IE 9 doesn't suffer from this issue.
		!support.reliableTrDimensions() && nodeName( elem, "tr" ) ||

		// Fall back to offsetWidth/offsetHeight when value is "auto"
		// This happens for inline elements with no explicit setting (gh-3571)
		val === "auto" ||

		// Support: Android <=4.1 - 4.3 only
		// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)
		!parseFloat( val ) && jQuery.css( elem, "display", false, styles ) === "inline" ) &&

		// Make sure the element is visible & connected
		elem.getClientRects().length ) {

		isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box";

		// Where available, offsetWidth/offsetHeight approximate border box dimensions.
		// Where not available (e.g., SVG), assume unreliable box-sizing and interpret the
		// retrieved value as a content box dimension.
		valueIsBorderBox = offsetProp in elem;
		if ( valueIsBorderBox ) {
			val = elem[ offsetProp ];
		}
	}

	// Normalize "" and auto
	val = parseFloat( val ) || 0;

	// Adjust for the element's box model
	return ( val +
		boxModelAdjustment(
			elem,
			dimension,
			extra || ( isBorderBox ? "border" : "content" ),
			valueIsBorderBox,
			styles,

			// Provide the current computed size to request scroll gutter calculation (gh-3589)
			val
		)
	) + "px";
}

jQuery.extend( {

	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {

					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity" );
					return ret === "" ? "1" : ret;
				}
			}
		}
	},

	// Don't automatically add "px" to these possibly-unitless properties
	cssNumber: {
		"animationIterationCount": true,
		"columnCount": true,
		"fillOpacity": true,
		"flexGrow": true,
		"flexShrink": true,
		"fontWeight": true,
		"gridArea": true,
		"gridColumn": true,
		"gridColumnEnd": true,
		"gridColumnStart": true,
		"gridRow": true,
		"gridRowEnd": true,
		"gridRowStart": true,
		"lineHeight": true,
		"opacity": true,
		"order": true,
		"orphans": true,
		"widows": true,
		"zIndex": true,
		"zoom": true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {

		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, hooks,
			origName = camelCase( name ),
			isCustomProp = rcustomProp.test( name ),
			style = elem.style;

		// Make sure that we're working with the right name. We don't
		// want to query the value if it is a CSS custom property
		// since they are user-defined.
		if ( !isCustomProp ) {
			name = finalPropName( origName );
		}

		// Gets hook for the prefixed version, then unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// Convert "+=" or "-=" to relative numbers (trac-7345)
			if ( type === "string" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {
				value = adjustCSS( elem, name, ret );

				// Fixes bug trac-9237
				type = "number";
			}

			// Make sure that null and NaN values aren't set (trac-7116)
			if ( value == null || value !== value ) {
				return;
			}

			// If a number was passed in, add the unit (except for certain CSS properties)
			// The isCustomProp check can be removed in jQuery 4.0 when we only auto-append
			// "px" to a few hardcoded values.
			if ( type === "number" && !isCustomProp ) {
				value += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? "" : "px" );
			}

			// background-* props affect original clone's values
			if ( !support.clearCloneStyle && value === "" && name.indexOf( "background" ) === 0 ) {
				style[ name ] = "inherit";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !( "set" in hooks ) ||
				( value = hooks.set( elem, value, extra ) ) !== undefined ) {

				if ( isCustomProp ) {
					style.setProperty( name, value );
				} else {
					style[ name ] = value;
				}
			}

		} else {

			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks &&
				( ret = hooks.get( elem, false, extra ) ) !== undefined ) {

				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, extra, styles ) {
		var val, num, hooks,
			origName = camelCase( name ),
			isCustomProp = rcustomProp.test( name );

		// Make sure that we're working with the right name. We don't
		// want to modify the value if it is a CSS custom property
		// since they are user-defined.
		if ( !isCustomProp ) {
			name = finalPropName( origName );
		}

		// Try prefixed name followed by the unprefixed name
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks ) {
			val = hooks.get( elem, true, extra );
		}

		// Otherwise, if a way to get the computed value exists, use that
		if ( val === undefined ) {
			val = curCSS( elem, name, styles );
		}

		// Convert "normal" to computed value
		if ( val === "normal" && name in cssNormalTransform ) {
			val = cssNormalTransform[ name ];
		}

		// Make numeric if forced or a qualifier was provided and val looks numeric
		if ( extra === "" || extra ) {
			num = parseFloat( val );
			return extra === true || isFinite( num ) ? num || 0 : val;
		}

		return val;
	}
} );

jQuery.each( [ "height", "width" ], function( _i, dimension ) {
	jQuery.cssHooks[ dimension ] = {
		get: function( elem, computed, extra ) {
			if ( computed ) {

				// Certain elements can have dimension info if we invisibly show them
				// but it must have a current display style that would benefit
				return rdisplayswap.test( jQuery.css( elem, "display" ) ) &&

					// Support: Safari 8+
					// Table columns in Safari have non-zero offsetWidth & zero
					// getBoundingClientRect().width unless display is changed.
					// Support: IE <=11 only
					// Running getBoundingClientRect on a disconnected node
					// in IE throws an error.
					( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?
					swap( elem, cssShow, function() {
						return getWidthOrHeight( elem, dimension, extra );
					} ) :
					getWidthOrHeight( elem, dimension, extra );
			}
		},

		set: function( elem, value, extra ) {
			var matches,
				styles = getStyles( elem ),

				// Only read styles.position if the test has a chance to fail
				// to avoid forcing a reflow.
				scrollboxSizeBuggy = !support.scrollboxSize() &&
					styles.position === "absolute",

				// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)
				boxSizingNeeded = scrollboxSizeBuggy || extra,
				isBorderBox = boxSizingNeeded &&
					jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
				subtract = extra ?
					boxModelAdjustment(
						elem,
						dimension,
						extra,
						isBorderBox,
						styles
					) :
					0;

			// Account for unreliable border-box dimensions by comparing offset* to computed and
			// faking a content-box to get border and padding (gh-3699)
			if ( isBorderBox && scrollboxSizeBuggy ) {
				subtract -= Math.ceil(
					elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
					parseFloat( styles[ dimension ] ) -
					boxModelAdjustment( elem, dimension, "border", false, styles ) -
					0.5
				);
			}

			// Convert to pixels if value adjustment is needed
			if ( subtract && ( matches = rcssNum.exec( value ) ) &&
				( matches[ 3 ] || "px" ) !== "px" ) {

				elem.style[ dimension ] = value;
				value = jQuery.css( elem, dimension );
			}

			return setPositiveNumber( elem, value, subtract );
		}
	};
} );

jQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,
	function( elem, computed ) {
		if ( computed ) {
			return ( parseFloat( curCSS( elem, "marginLeft" ) ) ||
				elem.getBoundingClientRect().left -
					swap( elem, { marginLeft: 0 }, function() {
						return elem.getBoundingClientRect().left;
					} )
			) + "px";
		}
	}
);

// These hooks are used by animate to expand properties
jQuery.each( {
	margin: "",
	padding: "",
	border: "Width"
}, function( prefix, suffix ) {
	jQuery.cssHooks[ prefix + suffix ] = {
		expand: function( value ) {
			var i = 0,
				expanded = {},

				// Assumes a single number if not a string
				parts = typeof value === "string" ? value.split( " " ) : [ value ];

			for ( ; i < 4; i++ ) {
				expanded[ prefix + cssExpand[ i ] + suffix ] =
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
			}

			return expanded;
		}
	};

	if ( prefix !== "margin" ) {
		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
	}
} );

jQuery.fn.extend( {
	css: function( name, value ) {
		return access( this, function( elem, name, value ) {
			var styles, len,
				map = {},
				i = 0;

			if ( Array.isArray( name ) ) {
				styles = getStyles( elem );
				len = name.length;

				for ( ; i < len; i++ ) {
					map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
				}

				return map;
			}

			return value !== undefined ?
				jQuery.style( elem, name, value ) :
				jQuery.css( elem, name );
		}, name, value, arguments.length > 1 );
	}
} );


function Tween( elem, options, prop, end, easing ) {
	return new Tween.prototype.init( elem, options, prop, end, easing );
}
jQuery.Tween = Tween;

Tween.prototype = {
	constructor: Tween,
	init: function( elem, options, prop, end, easing, unit ) {
		this.elem = elem;
		this.prop = prop;
		this.easing = easing || jQuery.easing._default;
		this.options = options;
		this.start = this.now = this.cur();
		this.end = end;
		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
	},
	cur: function() {
		var hooks = Tween.propHooks[ this.prop ];

		return hooks && hooks.get ?
			hooks.get( this ) :
			Tween.propHooks._default.get( this );
	},
	run: function( percent ) {
		var eased,
			hooks = Tween.propHooks[ this.prop ];

		if ( this.options.duration ) {
			this.pos = eased = jQuery.easing[ this.easing ](
				percent, this.options.duration * percent, 0, 1, this.options.duration
			);
		} else {
			this.pos = eased = percent;
		}
		this.now = ( this.end - this.start ) * eased + this.start;

		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		if ( hooks && hooks.set ) {
			hooks.set( this );
		} else {
			Tween.propHooks._default.set( this );
		}
		return this;
	}
};

Tween.prototype.init.prototype = Tween.prototype;

Tween.propHooks = {
	_default: {
		get: function( tween ) {
			var result;

			// Use a property on the element directly when it is not a DOM element,
			// or when there is no matching style property that exists.
			if ( tween.elem.nodeType !== 1 ||
				tween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {
				return tween.elem[ tween.prop ];
			}

			// Passing an empty string as a 3rd parameter to .css will automatically
			// attempt a parseFloat and fallback to a string if the parse fails.
			// Simple values such as "10px" are parsed to Float;
			// complex values such as "rotate(1rad)" are returned as-is.
			result = jQuery.css( tween.elem, tween.prop, "" );

			// Empty strings, null, undefined and "auto" are converted to 0.
			return !result || result === "auto" ? 0 : result;
		},
		set: function( tween ) {

			// Use step hook for back compat.
			// Use cssHook if its there.
			// Use .style if available and use plain properties where available.
			if ( jQuery.fx.step[ tween.prop ] ) {
				jQuery.fx.step[ tween.prop ]( tween );
			} else if ( tween.elem.nodeType === 1 && (
				jQuery.cssHooks[ tween.prop ] ||
					tween.elem.style[ finalPropName( tween.prop ) ] != null ) ) {
				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
			} else {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	}
};

// Support: IE <=9 only
// Panic based approach to setting things on disconnected nodes
Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
	set: function( tween ) {
		if ( tween.elem.nodeType && tween.elem.parentNode ) {
			tween.elem[ tween.prop ] = tween.now;
		}
	}
};

jQuery.easing = {
	linear: function( p ) {
		return p;
	},
	swing: function( p ) {
		return 0.5 - Math.cos( p * Math.PI ) / 2;
	},
	_default: "swing"
};

jQuery.fx = Tween.prototype.init;

// Back compat <1.8 extension point
jQuery.fx.step = {};




var
	fxNow, inProgress,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rrun = /queueHooks$/;

function schedule() {
	if ( inProgress ) {
		if ( document.hidden === false && window.requestAnimationFrame ) {
			window.requestAnimationFrame( schedule );
		} else {
			window.setTimeout( schedule, jQuery.fx.interval );
		}

		jQuery.fx.tick();
	}
}

// Animations created synchronously will run synchronously
function createFxNow() {
	window.setTimeout( function() {
		fxNow = undefined;
	} );
	return ( fxNow = Date.now() );
}

// Generate parameters to create a standard animation
function genFx( type, includeWidth ) {
	var which,
		i = 0,
		attrs = { height: type };

	// If we include width, step value is 1 to do all cssExpand values,
	// otherwise step value is 2 to skip over Left and Right
	includeWidth = includeWidth ? 1 : 0;
	for ( ; i < 4; i += 2 - includeWidth ) {
		which = cssExpand[ i ];
		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
	}

	if ( includeWidth ) {
		attrs.opacity = attrs.width = type;
	}

	return attrs;
}

function createTween( value, prop, animation ) {
	var tween,
		collection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ "*" ] ),
		index = 0,
		length = collection.length;
	for ( ; index < length; index++ ) {
		if ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {

			// We're done with this property
			return tween;
		}
	}
}

function defaultPrefilter( elem, props, opts ) {
	var prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,
		isBox = "width" in props || "height" in props,
		anim = this,
		orig = {},
		style = elem.style,
		hidden = elem.nodeType && isHiddenWithinTree( elem ),
		dataShow = dataPriv.get( elem, "fxshow" );

	// Queue-skipping animations hijack the fx hooks
	if ( !opts.queue ) {
		hooks = jQuery._queueHooks( elem, "fx" );
		if ( hooks.unqueued == null ) {
			hooks.unqueued = 0;
			oldfire = hooks.empty.fire;
			hooks.empty.fire = function() {
				if ( !hooks.unqueued ) {
					oldfire();
				}
			};
		}
		hooks.unqueued++;

		anim.always( function() {

			// Ensure the complete handler is called before this completes
			anim.always( function() {
				hooks.unqueued--;
				if ( !jQuery.queue( elem, "fx" ).length ) {
					hooks.empty.fire();
				}
			} );
		} );
	}

	// Detect show/hide animations
	for ( prop in props ) {
		value = props[ prop ];
		if ( rfxtypes.test( value ) ) {
			delete props[ prop ];
			toggle = toggle || value === "toggle";
			if ( value === ( hidden ? "hide" : "show" ) ) {

				// Pretend to be hidden if this is a "show" and
				// there is still data from a stopped show/hide
				if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
					hidden = true;

				// Ignore all other no-op show/hide data
				} else {
					continue;
				}
			}
			orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );
		}
	}

	// Bail out if this is a no-op like .hide().hide()
	propTween = !jQuery.isEmptyObject( props );
	if ( !propTween && jQuery.isEmptyObject( orig ) ) {
		return;
	}

	// Restrict "overflow" and "display" styles during box animations
	if ( isBox && elem.nodeType === 1 ) {

		// Support: IE <=9 - 11, Edge 12 - 15
		// Record all 3 overflow attributes because IE does not infer the shorthand
		// from identically-valued overflowX and overflowY and Edge just mirrors
		// the overflowX value there.
		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

		// Identify a display type, preferring old show/hide data over the CSS cascade
		restoreDisplay = dataShow && dataShow.display;
		if ( restoreDisplay == null ) {
			restoreDisplay = dataPriv.get( elem, "display" );
		}
		display = jQuery.css( elem, "display" );
		if ( display === "none" ) {
			if ( restoreDisplay ) {
				display = restoreDisplay;
			} else {

				// Get nonempty value(s) by temporarily forcing visibility
				showHide( [ elem ], true );
				restoreDisplay = elem.style.display || restoreDisplay;
				display = jQuery.css( elem, "display" );
				showHide( [ elem ] );
			}
		}

		// Animate inline elements as inline-block
		if ( display === "inline" || display === "inline-block" && restoreDisplay != null ) {
			if ( jQuery.css( elem, "float" ) === "none" ) {

				// Restore the original display value at the end of pure show/hide animations
				if ( !propTween ) {
					anim.done( function() {
						style.display = restoreDisplay;
					} );
					if ( restoreDisplay == null ) {
						display = style.display;
						restoreDisplay = display === "none" ? "" : display;
					}
				}
				style.display = "inline-block";
			}
		}
	}

	if ( opts.overflow ) {
		style.overflow = "hidden";
		anim.always( function() {
			style.overflow = opts.overflow[ 0 ];
			style.overflowX = opts.overflow[ 1 ];
			style.overflowY = opts.overflow[ 2 ];
		} );
	}

	// Implement show/hide animations
	propTween = false;
	for ( prop in orig ) {

		// General show/hide setup for this element animation
		if ( !propTween ) {
			if ( dataShow ) {
				if ( "hidden" in dataShow ) {
					hidden = dataShow.hidden;
				}
			} else {
				dataShow = dataPriv.access( elem, "fxshow", { display: restoreDisplay } );
			}

			// Store hidden/visible for toggle so `.stop().toggle()` "reverses"
			if ( toggle ) {
				dataShow.hidden = !hidden;
			}

			// Show elements before animating them
			if ( hidden ) {
				showHide( [ elem ], true );
			}

			/* eslint-disable no-loop-func */

			anim.done( function() {

				/* eslint-enable no-loop-func */

				// The final step of a "hide" animation is actually hiding the element
				if ( !hidden ) {
					showHide( [ elem ] );
				}
				dataPriv.remove( elem, "fxshow" );
				for ( prop in orig ) {
					jQuery.style( elem, prop, orig[ prop ] );
				}
			} );
		}

		// Per-property setup
		propTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );
		if ( !( prop in dataShow ) ) {
			dataShow[ prop ] = propTween.start;
			if ( hidden ) {
				propTween.end = propTween.start;
				propTween.start = 0;
			}
		}
	}
}

function propFilter( props, specialEasing ) {
	var index, name, easing, value, hooks;

	// camelCase, specialEasing and expand cssHook pass
	for ( index in props ) {
		name = camelCase( index );
		easing = specialEasing[ name ];
		value = props[ index ];
		if ( Array.isArray( value ) ) {
			easing = value[ 1 ];
			value = props[ index ] = value[ 0 ];
		}

		if ( index !== name ) {
			props[ name ] = value;
			delete props[ index ];
		}

		hooks = jQuery.cssHooks[ name ];
		if ( hooks && "expand" in hooks ) {
			value = hooks.expand( value );
			delete props[ name ];

			// Not quite $.extend, this won't overwrite existing keys.
			// Reusing 'index' because we have the correct "name"
			for ( index in value ) {
				if ( !( index in props ) ) {
					props[ index ] = value[ index ];
					specialEasing[ index ] = easing;
				}
			}
		} else {
			specialEasing[ name ] = easing;
		}
	}
}

function Animation( elem, properties, options ) {
	var result,
		stopped,
		index = 0,
		length = Animation.prefilters.length,
		deferred = jQuery.Deferred().always( function() {

			// Don't match elem in the :animated selector
			delete tick.elem;
		} ),
		tick = function() {
			if ( stopped ) {
				return false;
			}
			var currentTime = fxNow || createFxNow(),
				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),

				// Support: Android 2.3 only
				// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (trac-12497)
				temp = remaining / animation.duration || 0,
				percent = 1 - temp,
				index = 0,
				length = animation.tweens.length;

			for ( ; index < length; index++ ) {
				animation.tweens[ index ].run( percent );
			}

			deferred.notifyWith( elem, [ animation, percent, remaining ] );

			// If there's more to do, yield
			if ( percent < 1 && length ) {
				return remaining;
			}

			// If this was an empty animation, synthesize a final progress notification
			if ( !length ) {
				deferred.notifyWith( elem, [ animation, 1, 0 ] );
			}

			// Resolve the animation and report its conclusion
			deferred.resolveWith( elem, [ animation ] );
			return false;
		},
		animation = deferred.promise( {
			elem: elem,
			props: jQuery.extend( {}, properties ),
			opts: jQuery.extend( true, {
				specialEasing: {},
				easing: jQuery.easing._default
			}, options ),
			originalProperties: properties,
			originalOptions: options,
			startTime: fxNow || createFxNow(),
			duration: options.duration,
			tweens: [],
			createTween: function( prop, end ) {
				var tween = jQuery.Tween( elem, animation.opts, prop, end,
					animation.opts.specialEasing[ prop ] || animation.opts.easing );
				animation.tweens.push( tween );
				return tween;
			},
			stop: function( gotoEnd ) {
				var index = 0,

					// If we are going to the end, we want to run all the tweens
					// otherwise we skip this part
					length = gotoEnd ? animation.tweens.length : 0;
				if ( stopped ) {
					return this;
				}
				stopped = true;
				for ( ; index < length; index++ ) {
					animation.tweens[ index ].run( 1 );
				}

				// Resolve when we played the last frame; otherwise, reject
				if ( gotoEnd ) {
					deferred.notifyWith( elem, [ animation, 1, 0 ] );
					deferred.resolveWith( elem, [ animation, gotoEnd ] );
				} else {
					deferred.rejectWith( elem, [ animation, gotoEnd ] );
				}
				return this;
			}
		} ),
		props = animation.props;

	propFilter( props, animation.opts.specialEasing );

	for ( ; index < length; index++ ) {
		result = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );
		if ( result ) {
			if ( isFunction( result.stop ) ) {
				jQuery._queueHooks( animation.elem, animation.opts.queue ).stop =
					result.stop.bind( result );
			}
			return result;
		}
	}

	jQuery.map( props, createTween, animation );

	if ( isFunction( animation.opts.start ) ) {
		animation.opts.start.call( elem, animation );
	}

	// Attach callbacks from options
	animation
		.progress( animation.opts.progress )
		.done( animation.opts.done, animation.opts.complete )
		.fail( animation.opts.fail )
		.always( animation.opts.always );

	jQuery.fx.timer(
		jQuery.extend( tick, {
			elem: elem,
			anim: animation,
			queue: animation.opts.queue
		} )
	);

	return animation;
}

jQuery.Animation = jQuery.extend( Animation, {

	tweeners: {
		"*": [ function( prop, value ) {
			var tween = this.createTween( prop, value );
			adjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );
			return tween;
		} ]
	},

	tweener: function( props, callback ) {
		if ( isFunction( props ) ) {
			callback = props;
			props = [ "*" ];
		} else {
			props = props.match( rnothtmlwhite );
		}

		var prop,
			index = 0,
			length = props.length;

		for ( ; index < length; index++ ) {
			prop = props[ index ];
			Animation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];
			Animation.tweeners[ prop ].unshift( callback );
		}
	},

	prefilters: [ defaultPrefilter ],

	prefilter: function( callback, prepend ) {
		if ( prepend ) {
			Animation.prefilters.unshift( callback );
		} else {
			Animation.prefilters.push( callback );
		}
	}
} );

jQuery.speed = function( speed, easing, fn ) {
	var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
		complete: fn || !fn && easing ||
			isFunction( speed ) && speed,
		duration: speed,
		easing: fn && easing || easing && !isFunction( easing ) && easing
	};

	// Go to the end state if fx are off
	if ( jQuery.fx.off ) {
		opt.duration = 0;

	} else {
		if ( typeof opt.duration !== "number" ) {
			if ( opt.duration in jQuery.fx.speeds ) {
				opt.duration = jQuery.fx.speeds[ opt.duration ];

			} else {
				opt.duration = jQuery.fx.speeds._default;
			}
		}
	}

	// Normalize opt.queue - true/undefined/null -> "fx"
	if ( opt.queue == null || opt.queue === true ) {
		opt.queue = "fx";
	}

	// Queueing
	opt.old = opt.complete;

	opt.complete = function() {
		if ( isFunction( opt.old ) ) {
			opt.old.call( this );
		}

		if ( opt.queue ) {
			jQuery.dequeue( this, opt.queue );
		}
	};

	return opt;
};

jQuery.fn.extend( {
	fadeTo: function( speed, to, easing, callback ) {

		// Show any hidden elements after setting opacity to 0
		return this.filter( isHiddenWithinTree ).css( "opacity", 0 ).show()

			// Animate to the value specified
			.end().animate( { opacity: to }, speed, easing, callback );
	},
	animate: function( prop, speed, easing, callback ) {
		var empty = jQuery.isEmptyObject( prop ),
			optall = jQuery.speed( speed, easing, callback ),
			doAnimation = function() {

				// Operate on a copy of prop so per-property easing won't be lost
				var anim = Animation( this, jQuery.extend( {}, prop ), optall );

				// Empty animations, or finishing resolves immediately
				if ( empty || dataPriv.get( this, "finish" ) ) {
					anim.stop( true );
				}
			};

		doAnimation.finish = doAnimation;

		return empty || optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},
	stop: function( type, clearQueue, gotoEnd ) {
		var stopQueue = function( hooks ) {
			var stop = hooks.stop;
			delete hooks.stop;
			stop( gotoEnd );
		};

		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue ) {
			this.queue( type || "fx", [] );
		}

		return this.each( function() {
			var dequeue = true,
				index = type != null && type + "queueHooks",
				timers = jQuery.timers,
				data = dataPriv.get( this );

			if ( index ) {
				if ( data[ index ] && data[ index ].stop ) {
					stopQueue( data[ index ] );
				}
			} else {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
						stopQueue( data[ index ] );
					}
				}
			}

			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this &&
					( type == null || timers[ index ].queue === type ) ) {

					timers[ index ].anim.stop( gotoEnd );
					dequeue = false;
					timers.splice( index, 1 );
				}
			}

			// Start the next in the queue if the last step wasn't forced.
			// Timers currently will call their complete callbacks, which
			// will dequeue but only if they were gotoEnd.
			if ( dequeue || !gotoEnd ) {
				jQuery.dequeue( this, type );
			}
		} );
	},
	finish: function( type ) {
		if ( type !== false ) {
			type = type || "fx";
		}
		return this.each( function() {
			var index,
				data = dataPriv.get( this ),
				queue = data[ type + "queue" ],
				hooks = data[ type + "queueHooks" ],
				timers = jQuery.timers,
				length = queue ? queue.length : 0;

			// Enable finishing flag on private data
			data.finish = true;

			// Empty the queue first
			jQuery.queue( this, type, [] );

			if ( hooks && hooks.stop ) {
				hooks.stop.call( this, true );
			}

			// Look for any active animations, and finish them
			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
					timers[ index ].anim.stop( true );
					timers.splice( index, 1 );
				}
			}

			// Look for any animations in the old queue and finish them
			for ( index = 0; index < length; index++ ) {
				if ( queue[ index ] && queue[ index ].finish ) {
					queue[ index ].finish.call( this );
				}
			}

			// Turn off finishing flag
			delete data.finish;
		} );
	}
} );

jQuery.each( [ "toggle", "show", "hide" ], function( _i, name ) {
	var cssFn = jQuery.fn[ name ];
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return speed == null || typeof speed === "boolean" ?
			cssFn.apply( this, arguments ) :
			this.animate( genFx( name, true ), speed, easing, callback );
	};
} );

// Generate shortcuts for custom animations
jQuery.each( {
	slideDown: genFx( "show" ),
	slideUp: genFx( "hide" ),
	slideToggle: genFx( "toggle" ),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
} );

jQuery.timers = [];
jQuery.fx.tick = function() {
	var timer,
		i = 0,
		timers = jQuery.timers;

	fxNow = Date.now();

	for ( ; i < timers.length; i++ ) {
		timer = timers[ i ];

		// Run the timer and safely remove it when done (allowing for external removal)
		if ( !timer() && timers[ i ] === timer ) {
			timers.splice( i--, 1 );
		}
	}

	if ( !timers.length ) {
		jQuery.fx.stop();
	}
	fxNow = undefined;
};

jQuery.fx.timer = function( timer ) {
	jQuery.timers.push( timer );
	jQuery.fx.start();
};

jQuery.fx.interval = 13;
jQuery.fx.start = function() {
	if ( inProgress ) {
		return;
	}

	inProgress = true;
	schedule();
};

jQuery.fx.stop = function() {
	inProgress = null;
};

jQuery.fx.speeds = {
	slow: 600,
	fast: 200,

	// Default speed
	_default: 400
};


// Based off of the plugin by Clint Helfers, with permission.
jQuery.fn.delay = function( time, type ) {
	time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
	type = type || "fx";

	return this.queue( type, function( next, hooks ) {
		var timeout = window.setTimeout( next, time );
		hooks.stop = function() {
			window.clearTimeout( timeout );
		};
	} );
};


( function() {
	var input = document.createElement( "input" ),
		select = document.createElement( "select" ),
		opt = select.appendChild( document.createElement( "option" ) );

	input.type = "checkbox";

	// Support: Android <=4.3 only
	// Default value for a checkbox should be "on"
	support.checkOn = input.value !== "";

	// Support: IE <=11 only
	// Must access selectedIndex to make default options select
	support.optSelected = opt.selected;

	// Support: IE <=11 only
	// An input loses its value after becoming a radio
	input = document.createElement( "input" );
	input.value = "t";
	input.type = "radio";
	support.radioValue = input.value === "t";
} )();


var boolHook,
	attrHandle = jQuery.expr.attrHandle;

jQuery.fn.extend( {
	attr: function( name, value ) {
		return access( this, jQuery.attr, name, value, arguments.length > 1 );
	},

	removeAttr: function( name ) {
		return this.each( function() {
			jQuery.removeAttr( this, name );
		} );
	}
} );

jQuery.extend( {
	attr: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set attributes on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === "undefined" ) {
			return jQuery.prop( elem, name, value );
		}

		// Attribute hooks are determined by the lowercase version
		// Grab necessary hook if one is defined
		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
			hooks = jQuery.attrHooks[ name.toLowerCase() ] ||
				( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );
		}

		if ( value !== undefined ) {
			if ( value === null ) {
				jQuery.removeAttr( elem, name );
				return;
			}

			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			elem.setAttribute( name, value + "" );
			return value;
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		ret = jQuery.find.attr( elem, name );

		// Non-existent attributes return null, we normalize to undefined
		return ret == null ? undefined : ret;
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				if ( !support.radioValue && value === "radio" &&
					nodeName( elem, "input" ) ) {
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		}
	},

	removeAttr: function( elem, value ) {
		var name,
			i = 0,

			// Attribute names can contain non-HTML whitespace characters
			// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2
			attrNames = value && value.match( rnothtmlwhite );

		if ( attrNames && elem.nodeType === 1 ) {
			while ( ( name = attrNames[ i++ ] ) ) {
				elem.removeAttribute( name );
			}
		}
	}
} );

// Hooks for boolean attributes
boolHook = {
	set: function( elem, value, name ) {
		if ( value === false ) {

			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else {
			elem.setAttribute( name, name );
		}
		return name;
	}
};

jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( _i, name ) {
	var getter = attrHandle[ name ] || jQuery.find.attr;

	attrHandle[ name ] = function( elem, name, isXML ) {
		var ret, handle,
			lowercaseName = name.toLowerCase();

		if ( !isXML ) {

			// Avoid an infinite loop by temporarily removing this function from the getter
			handle = attrHandle[ lowercaseName ];
			attrHandle[ lowercaseName ] = ret;
			ret = getter( elem, name, isXML ) != null ?
				lowercaseName :
				null;
			attrHandle[ lowercaseName ] = handle;
		}
		return ret;
	};
} );




var rfocusable = /^(?:input|select|textarea|button)$/i,
	rclickable = /^(?:a|area)$/i;

jQuery.fn.extend( {
	prop: function( name, value ) {
		return access( this, jQuery.prop, name, value, arguments.length > 1 );
	},

	removeProp: function( name ) {
		return this.each( function() {
			delete this[ jQuery.propFix[ name ] || name ];
		} );
	}
} );

jQuery.extend( {
	prop: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set properties on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {

			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			return ( elem[ name ] = value );
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		return elem[ name ];
	},

	propHooks: {
		tabIndex: {
			get: function( elem ) {

				// Support: IE <=9 - 11 only
				// elem.tabIndex doesn't always return the
				// correct value when it hasn't been explicitly set
				// Use proper attribute retrieval (trac-12072)
				var tabindex = jQuery.find.attr( elem, "tabindex" );

				if ( tabindex ) {
					return parseInt( tabindex, 10 );
				}

				if (
					rfocusable.test( elem.nodeName ) ||
					rclickable.test( elem.nodeName ) &&
					elem.href
				) {
					return 0;
				}

				return -1;
			}
		}
	},

	propFix: {
		"for": "htmlFor",
		"class": "className"
	}
} );

// Support: IE <=11 only
// Accessing the selectedIndex property
// forces the browser to respect setting selected
// on the option
// The getter ensures a default option is selected
// when in an optgroup
// eslint rule "no-unused-expressions" is disabled for this code
// since it considers such accessions noop
if ( !support.optSelected ) {
	jQuery.propHooks.selected = {
		get: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent && parent.parentNode ) {
				parent.parentNode.selectedIndex;
			}
			return null;
		},
		set: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent ) {
				parent.selectedIndex;

				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
		}
	};
}

jQuery.each( [
	"tabIndex",
	"readOnly",
	"maxLength",
	"cellSpacing",
	"cellPadding",
	"rowSpan",
	"colSpan",
	"useMap",
	"frameBorder",
	"contentEditable"
], function() {
	jQuery.propFix[ this.toLowerCase() ] = this;
} );




	// Strip and collapse whitespace according to HTML spec
	// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace
	function stripAndCollapse( value ) {
		var tokens = value.match( rnothtmlwhite ) || [];
		return tokens.join( " " );
	}


function getClass( elem ) {
	return elem.getAttribute && elem.getAttribute( "class" ) || "";
}

function classesToArray( value ) {
	if ( Array.isArray( value ) ) {
		return value;
	}
	if ( typeof value === "string" ) {
		return value.match( rnothtmlwhite ) || [];
	}
	return [];
}

jQuery.fn.extend( {
	addClass: function( value ) {
		var classNames, cur, curValue, className, i, finalValue;

		if ( isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).addClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		classNames = classesToArray( value );

		if ( classNames.length ) {
			return this.each( function() {
				curValue = getClass( this );
				cur = this.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					for ( i = 0; i < classNames.length; i++ ) {
						className = classNames[ i ];
						if ( cur.indexOf( " " + className + " " ) < 0 ) {
							cur += className + " ";
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						this.setAttribute( "class", finalValue );
					}
				}
			} );
		}

		return this;
	},

	removeClass: function( value ) {
		var classNames, cur, curValue, className, i, finalValue;

		if ( isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		if ( !arguments.length ) {
			return this.attr( "class", "" );
		}

		classNames = classesToArray( value );

		if ( classNames.length ) {
			return this.each( function() {
				curValue = getClass( this );

				// This expression is here for better compressibility (see addClass)
				cur = this.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					for ( i = 0; i < classNames.length; i++ ) {
						className = classNames[ i ];

						// Remove *all* instances
						while ( cur.indexOf( " " + className + " " ) > -1 ) {
							cur = cur.replace( " " + className + " ", " " );
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						this.setAttribute( "class", finalValue );
					}
				}
			} );
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var classNames, className, i, self,
			type = typeof value,
			isValidValue = type === "string" || Array.isArray( value );

		if ( isFunction( value ) ) {
			return this.each( function( i ) {
				jQuery( this ).toggleClass(
					value.call( this, i, getClass( this ), stateVal ),
					stateVal
				);
			} );
		}

		if ( typeof stateVal === "boolean" && isValidValue ) {
			return stateVal ? this.addClass( value ) : this.removeClass( value );
		}

		classNames = classesToArray( value );

		return this.each( function() {
			if ( isValidValue ) {

				// Toggle individual class names
				self = jQuery( this );

				for ( i = 0; i < classNames.length; i++ ) {
					className = classNames[ i ];

					// Check each className given, space separated list
					if ( self.hasClass( className ) ) {
						self.removeClass( className );
					} else {
						self.addClass( className );
					}
				}

			// Toggle whole class name
			} else if ( value === undefined || type === "boolean" ) {
				className = getClass( this );
				if ( className ) {

					// Store className if set
					dataPriv.set( this, "__className__", className );
				}

				// If the element has a class name or if we're passed `false`,
				// then remove the whole classname (if there was one, the above saved it).
				// Otherwise bring back whatever was previously saved (if anything),
				// falling back to the empty string if nothing was stored.
				if ( this.setAttribute ) {
					this.setAttribute( "class",
						className || value === false ?
							"" :
							dataPriv.get( this, "__className__" ) || ""
					);
				}
			}
		} );
	},

	hasClass: function( selector ) {
		var className, elem,
			i = 0;

		className = " " + selector + " ";
		while ( ( elem = this[ i++ ] ) ) {
			if ( elem.nodeType === 1 &&
				( " " + stripAndCollapse( getClass( elem ) ) + " " ).indexOf( className ) > -1 ) {
				return true;
			}
		}

		return false;
	}
} );




var rreturn = /\r/g;

jQuery.fn.extend( {
	val: function( value ) {
		var hooks, ret, valueIsFunction,
			elem = this[ 0 ];

		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.type ] ||
					jQuery.valHooks[ elem.nodeName.toLowerCase() ];

				if ( hooks &&
					"get" in hooks &&
					( ret = hooks.get( elem, "value" ) ) !== undefined
				) {
					return ret;
				}

				ret = elem.value;

				// Handle most common string cases
				if ( typeof ret === "string" ) {
					return ret.replace( rreturn, "" );
				}

				// Handle cases where value is null/undef or number
				return ret == null ? "" : ret;
			}

			return;
		}

		valueIsFunction = isFunction( value );

		return this.each( function( i ) {
			var val;

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( valueIsFunction ) {
				val = value.call( this, i, jQuery( this ).val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";

			} else if ( typeof val === "number" ) {
				val += "";

			} else if ( Array.isArray( val ) ) {
				val = jQuery.map( val, function( value ) {
					return value == null ? "" : value + "";
				} );
			}

			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !( "set" in hooks ) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		} );
	}
} );

jQuery.extend( {
	valHooks: {
		option: {
			get: function( elem ) {

				var val = jQuery.find.attr( elem, "value" );
				return val != null ?
					val :

					// Support: IE <=10 - 11 only
					// option.text throws exceptions (trac-14686, trac-14858)
					// Strip and collapse whitespace
					// https://html.spec.whatwg.org/#strip-and-collapse-whitespace
					stripAndCollapse( jQuery.text( elem ) );
			}
		},
		select: {
			get: function( elem ) {
				var value, option, i,
					options = elem.options,
					index = elem.selectedIndex,
					one = elem.type === "select-one",
					values = one ? null : [],
					max = one ? index + 1 : options.length;

				if ( index < 0 ) {
					i = max;

				} else {
					i = one ? index : 0;
				}

				// Loop through all the selected options
				for ( ; i < max; i++ ) {
					option = options[ i ];

					// Support: IE <=9 only
					// IE8-9 doesn't update selected after form reset (trac-2551)
					if ( ( option.selected || i === index ) &&

							// Don't return options that are disabled or in a disabled optgroup
							!option.disabled &&
							( !option.parentNode.disabled ||
								!nodeName( option.parentNode, "optgroup" ) ) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				return values;
			},

			set: function( elem, value ) {
				var optionSet, option,
					options = elem.options,
					values = jQuery.makeArray( value ),
					i = options.length;

				while ( i-- ) {
					option = options[ i ];

					/* eslint-disable no-cond-assign */

					if ( option.selected =
						jQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1
					) {
						optionSet = true;
					}

					/* eslint-enable no-cond-assign */
				}

				// Force browsers to behave consistently when non-matching value is set
				if ( !optionSet ) {
					elem.selectedIndex = -1;
				}
				return values;
			}
		}
	}
} );

// Radios and checkboxes getter/setter
jQuery.each( [ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = {
		set: function( elem, value ) {
			if ( Array.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );
			}
		}
	};
	if ( !support.checkOn ) {
		jQuery.valHooks[ this ].get = function( elem ) {
			return elem.getAttribute( "value" ) === null ? "on" : elem.value;
		};
	}
} );




// Return jQuery for attributes-only inclusion


support.focusin = "onfocusin" in window;


var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
	stopPropagationCallback = function( e ) {
		e.stopPropagation();
	};

jQuery.extend( jQuery.event, {

	trigger: function( event, data, elem, onlyHandlers ) {

		var i, cur, tmp, bubbleType, ontype, handle, special, lastElement,
			eventPath = [ elem || document ],
			type = hasOwn.call( event, "type" ) ? event.type : event,
			namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split( "." ) : [];

		cur = lastElement = tmp = elem = elem || document;

		// Don't do events on text and comment nodes
		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
			return;
		}

		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}

		if ( type.indexOf( "." ) > -1 ) {

			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split( "." );
			type = namespaces.shift();
			namespaces.sort();
		}
		ontype = type.indexOf( ":" ) < 0 && "on" + type;

		// Caller can pass in a jQuery.Event object, Object, or just an event type string
		event = event[ jQuery.expando ] ?
			event :
			new jQuery.Event( type, typeof event === "object" && event );

		// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
		event.isTrigger = onlyHandlers ? 2 : 3;
		event.namespace = namespaces.join( "." );
		event.rnamespace = event.namespace ?
			new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" ) :
			null;

		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data == null ?
			[ event ] :
			jQuery.makeArray( data, [ event ] );

		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}

		// Determine event propagation path in advance, per W3C events spec (trac-9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (trac-9724)
		if ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {

			bubbleType = special.delegateType || type;
			if ( !rfocusMorph.test( bubbleType + type ) ) {
				cur = cur.parentNode;
			}
			for ( ; cur; cur = cur.parentNode ) {
				eventPath.push( cur );
				tmp = cur;
			}

			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( tmp === ( elem.ownerDocument || document ) ) {
				eventPath.push( tmp.defaultView || tmp.parentWindow || window );
			}
		}

		// Fire handlers on the event path
		i = 0;
		while ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {
			lastElement = cur;
			event.type = i > 1 ?
				bubbleType :
				special.bindType || type;

			// jQuery handler
			handle = ( dataPriv.get( cur, "events" ) || Object.create( null ) )[ event.type ] &&
				dataPriv.get( cur, "handle" );
			if ( handle ) {
				handle.apply( cur, data );
			}

			// Native handler
			handle = ontype && cur[ ontype ];
			if ( handle && handle.apply && acceptData( cur ) ) {
				event.result = handle.apply( cur, data );
				if ( event.result === false ) {
					event.preventDefault();
				}
			}
		}
		event.type = type;

		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {

			if ( ( !special._default ||
				special._default.apply( eventPath.pop(), data ) === false ) &&
				acceptData( elem ) ) {

				// Call a native DOM method on the target with the same name as the event.
				// Don't do default actions on window, that's where global variables be (trac-6170)
				if ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {

					// Don't re-trigger an onFOO event when we call its FOO() method
					tmp = elem[ ontype ];

					if ( tmp ) {
						elem[ ontype ] = null;
					}

					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;

					if ( event.isPropagationStopped() ) {
						lastElement.addEventListener( type, stopPropagationCallback );
					}

					elem[ type ]();

					if ( event.isPropagationStopped() ) {
						lastElement.removeEventListener( type, stopPropagationCallback );
					}

					jQuery.event.triggered = undefined;

					if ( tmp ) {
						elem[ ontype ] = tmp;
					}
				}
			}
		}

		return event.result;
	},

	// Piggyback on a donor event to simulate a different one
	// Used only for `focus(in | out)` events
	simulate: function( type, elem, event ) {
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{
				type: type,
				isSimulated: true
			}
		);

		jQuery.event.trigger( e, null, elem );
	}

} );

jQuery.fn.extend( {

	trigger: function( type, data ) {
		return this.each( function() {
			jQuery.event.trigger( type, data, this );
		} );
	},
	triggerHandler: function( type, data ) {
		var elem = this[ 0 ];
		if ( elem ) {
			return jQuery.event.trigger( type, data, elem, true );
		}
	}
} );


// Support: Firefox <=44
// Firefox doesn't have focus(in | out) events
// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
//
// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1
// focus(in | out) events fire after focus & blur events,
// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857
if ( !support.focusin ) {
	jQuery.each( { focus: "focusin", blur: "focusout" }, function( orig, fix ) {

		// Attach a single capturing handler on the document while someone wants focusin/focusout
		var handler = function( event ) {
			jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );
		};

		jQuery.event.special[ fix ] = {
			setup: function() {

				// Handle: regular nodes (via `this.ownerDocument`), window
				// (via `this.document`) & document (via `this`).
				var doc = this.ownerDocument || this.document || this,
					attaches = dataPriv.access( doc, fix );

				if ( !attaches ) {
					doc.addEventListener( orig, handler, true );
				}
				dataPriv.access( doc, fix, ( attaches || 0 ) + 1 );
			},
			teardown: function() {
				var doc = this.ownerDocument || this.document || this,
					attaches = dataPriv.access( doc, fix ) - 1;

				if ( !attaches ) {
					doc.removeEventListener( orig, handler, true );
					dataPriv.remove( doc, fix );

				} else {
					dataPriv.access( doc, fix, attaches );
				}
			}
		};
	} );
}
var location = window.location;

var nonce = { guid: Date.now() };

var rquery = ( /\?/ );



// Cross-browser xml parsing
jQuery.parseXML = function( data ) {
	var xml, parserErrorElem;
	if ( !data || typeof data !== "string" ) {
		return null;
	}

	// Support: IE 9 - 11 only
	// IE throws on parseFromString with invalid input.
	try {
		xml = ( new window.DOMParser() ).parseFromString( data, "text/xml" );
	} catch ( e ) {}

	parserErrorElem = xml && xml.getElementsByTagName( "parsererror" )[ 0 ];
	if ( !xml || parserErrorElem ) {
		jQuery.error( "Invalid XML: " + (
			parserErrorElem ?
				jQuery.map( parserErrorElem.childNodes, function( el ) {
					return el.textContent;
				} ).join( "\n" ) :
				data
		) );
	}
	return xml;
};


var
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
	rsubmittable = /^(?:input|select|textarea|keygen)/i;

function buildParams( prefix, obj, traditional, add ) {
	var name;

	if ( Array.isArray( obj ) ) {

		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {

				// Treat each array item as a scalar.
				add( prefix, v );

			} else {

				// Item is non-scalar (array or object), encode its numeric index.
				buildParams(
					prefix + "[" + ( typeof v === "object" && v != null ? i : "" ) + "]",
					v,
					traditional,
					add
				);
			}
		} );

	} else if ( !traditional && toType( obj ) === "object" ) {

		// Serialize object item.
		for ( name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {

		// Serialize scalar item.
		add( prefix, obj );
	}
}

// Serialize an array of form elements or a set of
// key/values into a query string
jQuery.param = function( a, traditional ) {
	var prefix,
		s = [],
		add = function( key, valueOrFunction ) {

			// If value is a function, invoke it and use its return value
			var value = isFunction( valueOrFunction ) ?
				valueOrFunction() :
				valueOrFunction;

			s[ s.length ] = encodeURIComponent( key ) + "=" +
				encodeURIComponent( value == null ? "" : value );
		};

	if ( a == null ) {
		return "";
	}

	// If an array was passed in, assume that it is an array of form elements.
	if ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {

		// Serialize the form elements
		jQuery.each( a, function() {
			add( this.name, this.value );
		} );

	} else {

		// If traditional, encode the "old" way (the way 1.3.2 or older
		// did it), otherwise encode params recursively.
		for ( prefix in a ) {
			buildParams( prefix, a[ prefix ], traditional, add );
		}
	}

	// Return the resulting serialization
	return s.join( "&" );
};

jQuery.fn.extend( {
	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},
	serializeArray: function() {
		return this.map( function() {

			// Can add propHook for "elements" to filter or add form elements
			var elements = jQuery.prop( this, "elements" );
			return elements ? jQuery.makeArray( elements ) : this;
		} ).filter( function() {
			var type = this.type;

			// Use .is( ":disabled" ) so that fieldset[disabled] works
			return this.name && !jQuery( this ).is( ":disabled" ) &&
				rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
				( this.checked || !rcheckableType.test( type ) );
		} ).map( function( _i, elem ) {
			var val = jQuery( this ).val();

			if ( val == null ) {
				return null;
			}

			if ( Array.isArray( val ) ) {
				return jQuery.map( val, function( val ) {
					return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
				} );
			}

			return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		} ).get();
	}
} );


var
	r20 = /%20/g,
	rhash = /#.*$/,
	rantiCache = /([?&])_=[^&]*/,
	rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,

	// trac-7653, trac-8125, trac-8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Avoid comment-prolog char sequence (trac-10098); must appease lint and evade compression
	allTypes = "*/".concat( "*" ),

	// Anchor tag for parsing the document origin
	originAnchor = document.createElement( "a" );

originAnchor.href = location.href;

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		var dataType,
			i = 0,
			dataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];

		if ( isFunction( func ) ) {

			// For each dataType in the dataTypeExpression
			while ( ( dataType = dataTypes[ i++ ] ) ) {

				// Prepend if requested
				if ( dataType[ 0 ] === "+" ) {
					dataType = dataType.slice( 1 ) || "*";
					( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );

				// Otherwise append
				} else {
					( structure[ dataType ] = structure[ dataType ] || [] ).push( func );
				}
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

	var inspected = {},
		seekingTransport = ( structure === transports );

	function inspect( dataType ) {
		var selected;
		inspected[ dataType ] = true;
		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
			var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
			if ( typeof dataTypeOrTransport === "string" &&
				!seekingTransport && !inspected[ dataTypeOrTransport ] ) {

				options.dataTypes.unshift( dataTypeOrTransport );
				inspect( dataTypeOrTransport );
				return false;
			} else if ( seekingTransport ) {
				return !( selected = dataTypeOrTransport );
			}
		} );
		return selected;
	}

	return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes trac-9887
function ajaxExtend( target, src ) {
	var key, deep,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};

	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}

	return target;
}

/* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {

	var ct, type, finalDataType, firstDataType,
		contents = s.contents,
		dataTypes = s.dataTypes;

	// Remove auto dataType and get content-type in the process
	while ( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader( "Content-Type" );
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {

		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[ 0 ] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}

		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

/* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */
function ajaxConvert( s, response, jqXHR, isSuccess ) {
	var conv2, current, conv, tmp, prev,
		converters = {},

		// Work with a copy of dataTypes in case we need to modify it for conversion
		dataTypes = s.dataTypes.slice();

	// Create converters map with lowercased keys
	if ( dataTypes[ 1 ] ) {
		for ( conv in s.converters ) {
			converters[ conv.toLowerCase() ] = s.converters[ conv ];
		}
	}

	current = dataTypes.shift();

	// Convert to each sequential dataType
	while ( current ) {

		if ( s.responseFields[ current ] ) {
			jqXHR[ s.responseFields[ current ] ] = response;
		}

		// Apply the dataFilter if provided
		if ( !prev && isSuccess && s.dataFilter ) {
			response = s.dataFilter( response, s.dataType );
		}

		prev = current;
		current = dataTypes.shift();

		if ( current ) {

			// There's only work to do if current dataType is non-auto
			if ( current === "*" ) {

				current = prev;

			// Convert response if prev dataType is non-auto and differs from current
			} else if ( prev !== "*" && prev !== current ) {

				// Seek a direct converter
				conv = converters[ prev + " " + current ] || converters[ "* " + current ];

				// If none found, seek a pair
				if ( !conv ) {
					for ( conv2 in converters ) {

						// If conv2 outputs current
						tmp = conv2.split( " " );
						if ( tmp[ 1 ] === current ) {

							// If prev can be converted to accepted input
							conv = converters[ prev + " " + tmp[ 0 ] ] ||
								converters[ "* " + tmp[ 0 ] ];
							if ( conv ) {

								// Condense equivalence converters
								if ( conv === true ) {
									conv = converters[ conv2 ];

								// Otherwise, insert the intermediate dataType
								} else if ( converters[ conv2 ] !== true ) {
									current = tmp[ 0 ];
									dataTypes.unshift( tmp[ 1 ] );
								}
								break;
							}
						}
					}
				}

				// Apply converter (if not an equivalence)
				if ( conv !== true ) {

					// Unless errors are allowed to bubble, catch and return them
					if ( conv && s.throws ) {
						response = conv( response );
					} else {
						try {
							response = conv( response );
						} catch ( e ) {
							return {
								state: "parsererror",
								error: conv ? e : "No conversion from " + prev + " to " + current
							};
						}
					}
				}
			}
		}
	}

	return { state: "success", data: response };
}

jQuery.extend( {

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {},

	ajaxSettings: {
		url: location.href,
		type: "GET",
		isLocal: rlocalProtocol.test( location.protocol ),
		global: true,
		processData: true,
		async: true,
		contentType: "application/x-www-form-urlencoded; charset=UTF-8",

		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

		accepts: {
			"*": allTypes,
			text: "text/plain",
			html: "text/html",
			xml: "application/xml, text/xml",
			json: "application/json, text/javascript"
		},

		contents: {
			xml: /\bxml\b/,
			html: /\bhtml/,
			json: /\bjson\b/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText",
			json: "responseJSON"
		},

		// Data converters
		// Keys separate source (or catchall "*") and destination types with a single space
		converters: {

			// Convert anything to text
			"* text": String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": JSON.parse,

			// Parse text as xml
			"text xml": jQuery.parseXML
		},

		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			url: true,
			context: true
		}
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		return settings ?

			// Building a settings object
			ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

			// Extending ajaxSettings
			ajaxExtend( jQuery.ajaxSettings, target );
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var transport,

			// URL without anti-cache param
			cacheURL,

			// Response headers
			responseHeadersString,
			responseHeaders,

			// timeout handle
			timeoutTimer,

			// Url cleanup var
			urlAnchor,

			// Request state (becomes false upon send and true upon completion)
			completed,

			// To know if global events are to be dispatched
			fireGlobals,

			// Loop variable
			i,

			// uncached part of the url
			uncached,

			// Create the final options object
			s = jQuery.ajaxSetup( {}, options ),

			// Callbacks context
			callbackContext = s.context || s,

			// Context for global events is callbackContext if it is a DOM node or jQuery collection
			globalEventContext = s.context &&
				( callbackContext.nodeType || callbackContext.jquery ) ?
				jQuery( callbackContext ) :
				jQuery.event,

			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks( "once memory" ),

			// Status-dependent callbacks
			statusCode = s.statusCode || {},

			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},

			// Default abort message
			strAbort = "canceled",

			// Fake xhr
			jqXHR = {
				readyState: 0,

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( completed ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while ( ( match = rheaders.exec( responseHeadersString ) ) ) {
								responseHeaders[ match[ 1 ].toLowerCase() + " " ] =
									( responseHeaders[ match[ 1 ].toLowerCase() + " " ] || [] )
										.concat( match[ 2 ] );
							}
						}
						match = responseHeaders[ key.toLowerCase() + " " ];
					}
					return match == null ? null : match.join( ", " );
				},

				// Raw string
				getAllResponseHeaders: function() {
					return completed ? responseHeadersString : null;
				},

				// Caches the header
				setRequestHeader: function( name, value ) {
					if ( completed == null ) {
						name = requestHeadersNames[ name.toLowerCase() ] =
							requestHeadersNames[ name.toLowerCase() ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( completed == null ) {
						s.mimeType = type;
					}
					return this;
				},

				// Status-dependent callbacks
				statusCode: function( map ) {
					var code;
					if ( map ) {
						if ( completed ) {

							// Execute the appropriate callbacks
							jqXHR.always( map[ jqXHR.status ] );
						} else {

							// Lazy-add the new callbacks in a way that preserves old ones
							for ( code in map ) {
								statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
							}
						}
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					var finalText = statusText || strAbort;
					if ( transport ) {
						transport.abort( finalText );
					}
					done( 0, finalText );
					return this;
				}
			};

		// Attach deferreds
		deferred.promise( jqXHR );

		// Add protocol if not provided (prefilters might expect it)
		// Handle falsy url in the settings object (trac-10093: consistency with old signature)
		// We also use the url parameter if available
		s.url = ( ( url || s.url || location.href ) + "" )
			.replace( rprotocol, location.protocol + "//" );

		// Alias method option to type as per ticket trac-12004
		s.type = options.method || options.type || s.method || s.type;

		// Extract dataTypes list
		s.dataTypes = ( s.dataType || "*" ).toLowerCase().match( rnothtmlwhite ) || [ "" ];

		// A cross-domain request is in order when the origin doesn't match the current origin.
		if ( s.crossDomain == null ) {
			urlAnchor = document.createElement( "a" );

			// Support: IE <=8 - 11, Edge 12 - 15
			// IE throws exception on accessing the href property if url is malformed,
			// e.g. http://example.com:80x/
			try {
				urlAnchor.href = s.url;

				// Support: IE <=8 - 11 only
				// Anchor's host property isn't correctly set when s.url is relative
				urlAnchor.href = urlAnchor.href;
				s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !==
					urlAnchor.protocol + "//" + urlAnchor.host;
			} catch ( e ) {

				// If there is an error parsing the URL, assume it is crossDomain,
				// it can be rejected by the transport if it is invalid
				s.crossDomain = true;
			}
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefilter, stop there
		if ( completed ) {
			return jqXHR;
		}

		// We can fire global events as of now if asked to
		// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (trac-15118)
		fireGlobals = jQuery.event && s.global;

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger( "ajaxStart" );
		}

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Save the URL in case we're toying with the If-Modified-Since
		// and/or If-None-Match header later on
		// Remove hash to simplify url manipulation
		cacheURL = s.url.replace( rhash, "" );

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// Remember the hash so we can put it back
			uncached = s.url.slice( cacheURL.length );

			// If data is available and should be processed, append data to url
			if ( s.data && ( s.processData || typeof s.data === "string" ) ) {
				cacheURL += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data;

				// trac-9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}

			// Add or update anti-cache param if needed
			if ( s.cache === false ) {
				cacheURL = cacheURL.replace( rantiCache, "$1" );
				uncached = ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + ( nonce.guid++ ) +
					uncached;
			}

			// Put hash and anti-cache on the URL that will be requested (gh-1732)
			s.url = cacheURL + uncached;

		// Change '%20' to '+' if this is encoded form body content (gh-2658)
		} else if ( s.data && s.processData &&
			( s.contentType || "" ).indexOf( "application/x-www-form-urlencoded" ) === 0 ) {
			s.data = s.data.replace( r20, "+" );
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			if ( jQuery.lastModified[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
			}
			if ( jQuery.etag[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?
				s.accepts[ s.dataTypes[ 0 ] ] +
					( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend &&
			( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {

			// Abort if not done already and return
			return jqXHR.abort();
		}

		// Aborting is no longer a cancellation
		strAbort = "abort";

		// Install callbacks on deferreds
		completeDeferred.add( s.complete );
		jqXHR.done( s.success );
		jqXHR.fail( s.error );

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;

			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}

			// If request was aborted inside ajaxSend, stop there
			if ( completed ) {
				return jqXHR;
			}

			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = window.setTimeout( function() {
					jqXHR.abort( "timeout" );
				}, s.timeout );
			}

			try {
				completed = false;
				transport.send( requestHeaders, done );
			} catch ( e ) {

				// Rethrow post-completion exceptions
				if ( completed ) {
					throw e;
				}

				// Propagate others as results
				done( -1, e );
			}
		}

		// Callback for when everything is done
		function done( status, nativeStatusText, responses, headers ) {
			var isSuccess, success, error, response, modified,
				statusText = nativeStatusText;

			// Ignore repeat invocations
			if ( completed ) {
				return;
			}

			completed = true;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				window.clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;

			// Determine if successful
			isSuccess = status >= 200 && status < 300 || status === 304;

			// Get response data
			if ( responses ) {
				response = ajaxHandleResponses( s, jqXHR, responses );
			}

			// Use a noop converter for missing script but not if jsonp
			if ( !isSuccess &&
				jQuery.inArray( "script", s.dataTypes ) > -1 &&
				jQuery.inArray( "json", s.dataTypes ) < 0 ) {
				s.converters[ "text script" ] = function() {};
			}

			// Convert no matter what (that way responseXXX fields are always set)
			response = ajaxConvert( s, response, jqXHR, isSuccess );

			// If successful, handle type chaining
			if ( isSuccess ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {
					modified = jqXHR.getResponseHeader( "Last-Modified" );
					if ( modified ) {
						jQuery.lastModified[ cacheURL ] = modified;
					}
					modified = jqXHR.getResponseHeader( "etag" );
					if ( modified ) {
						jQuery.etag[ cacheURL ] = modified;
					}
				}

				// if no content
				if ( status === 204 || s.type === "HEAD" ) {
					statusText = "nocontent";

				// if not modified
				} else if ( status === 304 ) {
					statusText = "notmodified";

				// If we have data, let's convert it
				} else {
					statusText = response.state;
					success = response.data;
					error = response.error;
					isSuccess = !error;
				}
			} else {

				// Extract error from statusText and normalize for non-aborts
				error = statusText;
				if ( status || !statusText ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = ( nativeStatusText || statusText ) + "";

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
					[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );

				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger( "ajaxStop" );
				}
			}
		}

		return jqXHR;
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	}
} );

jQuery.each( [ "get", "post" ], function( _i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {

		// Shift arguments if data argument was omitted
		if ( isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		// The url can be an options object (which then must have .url)
		return jQuery.ajax( jQuery.extend( {
			url: url,
			type: method,
			dataType: type,
			data: data,
			success: callback
		}, jQuery.isPlainObject( url ) && url ) );
	};
} );

jQuery.ajaxPrefilter( function( s ) {
	var i;
	for ( i in s.headers ) {
		if ( i.toLowerCase() === "content-type" ) {
			s.contentType = s.headers[ i ] || "";
		}
	}
} );


jQuery._evalUrl = function( url, options, doc ) {
	return jQuery.ajax( {
		url: url,

		// Make this explicit, since user can override this through ajaxSetup (trac-11264)
		type: "GET",
		dataType: "script",
		cache: true,
		async: false,
		global: false,

		// Only evaluate the response if it is successful (gh-4126)
		// dataFilter is not invoked for failure responses, so using it instead
		// of the default converter is kludgy but it works.
		converters: {
			"text script": function() {}
		},
		dataFilter: function( response ) {
			jQuery.globalEval( response, options, doc );
		}
	} );
};


jQuery.fn.extend( {
	wrapAll: function( html ) {
		var wrap;

		if ( this[ 0 ] ) {
			if ( isFunction( html ) ) {
				html = html.call( this[ 0 ] );
			}

			// The elements to wrap the target around
			wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );

			if ( this[ 0 ].parentNode ) {
				wrap.insertBefore( this[ 0 ] );
			}

			wrap.map( function() {
				var elem = this;

				while ( elem.firstElementChild ) {
					elem = elem.firstElementChild;
				}

				return elem;
			} ).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( isFunction( html ) ) {
			return this.each( function( i ) {
				jQuery( this ).wrapInner( html.call( this, i ) );
			} );
		}

		return this.each( function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		} );
	},

	wrap: function( html ) {
		var htmlIsFunction = isFunction( html );

		return this.each( function( i ) {
			jQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );
		} );
	},

	unwrap: function( selector ) {
		this.parent( selector ).not( "body" ).each( function() {
			jQuery( this ).replaceWith( this.childNodes );
		} );
		return this;
	}
} );


jQuery.expr.pseudos.hidden = function( elem ) {
	return !jQuery.expr.pseudos.visible( elem );
};
jQuery.expr.pseudos.visible = function( elem ) {
	return !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );
};




jQuery.ajaxSettings.xhr = function() {
	try {
		return new window.XMLHttpRequest();
	} catch ( e ) {}
};

var xhrSuccessStatus = {

		// File protocol always yields status code 0, assume 200
		0: 200,

		// Support: IE <=9 only
		// trac-1450: sometimes IE returns 1223 when it should be 204
		1223: 204
	},
	xhrSupported = jQuery.ajaxSettings.xhr();

support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
support.ajax = xhrSupported = !!xhrSupported;

jQuery.ajaxTransport( function( options ) {
	var callback, errorCallback;

	// Cross domain only allowed if supported through XMLHttpRequest
	if ( support.cors || xhrSupported && !options.crossDomain ) {
		return {
			send: function( headers, complete ) {
				var i,
					xhr = options.xhr();

				xhr.open(
					options.type,
					options.url,
					options.async,
					options.username,
					options.password
				);

				// Apply custom fields if provided
				if ( options.xhrFields ) {
					for ( i in options.xhrFields ) {
						xhr[ i ] = options.xhrFields[ i ];
					}
				}

				// Override mime type if needed
				if ( options.mimeType && xhr.overrideMimeType ) {
					xhr.overrideMimeType( options.mimeType );
				}

				// X-Requested-With header
				// For cross-domain requests, seeing as conditions for a preflight are
				// akin to a jigsaw puzzle, we simply never set it to be sure.
				// (it can always be set on a per-request basis or even using ajaxSetup)
				// For same-domain requests, won't change header if already provided.
				if ( !options.crossDomain && !headers[ "X-Requested-With" ] ) {
					headers[ "X-Requested-With" ] = "XMLHttpRequest";
				}

				// Set headers
				for ( i in headers ) {
					xhr.setRequestHeader( i, headers[ i ] );
				}

				// Callback
				callback = function( type ) {
					return function() {
						if ( callback ) {
							callback = errorCallback = xhr.onload =
								xhr.onerror = xhr.onabort = xhr.ontimeout =
									xhr.onreadystatechange = null;

							if ( type === "abort" ) {
								xhr.abort();
							} else if ( type === "error" ) {

								// Support: IE <=9 only
								// On a manual native abort, IE9 throws
								// errors on any property access that is not readyState
								if ( typeof xhr.status !== "number" ) {
									complete( 0, "error" );
								} else {
									complete(

										// File: protocol always yields status 0; see trac-8605, trac-14207
										xhr.status,
										xhr.statusText
									);
								}
							} else {
								complete(
									xhrSuccessStatus[ xhr.status ] || xhr.status,
									xhr.statusText,

									// Support: IE <=9 only
									// IE9 has no XHR2 but throws on binary (trac-11426)
									// For XHR2 non-text, let the caller handle it (gh-2498)
									( xhr.responseType || "text" ) !== "text"  ||
									typeof xhr.responseText !== "string" ?
										{ binary: xhr.response } :
										{ text: xhr.responseText },
									xhr.getAllResponseHeaders()
								);
							}
						}
					};
				};

				// Listen to events
				xhr.onload = callback();
				errorCallback = xhr.onerror = xhr.ontimeout = callback( "error" );

				// Support: IE 9 only
				// Use onreadystatechange to replace onabort
				// to handle uncaught aborts
				if ( xhr.onabort !== undefined ) {
					xhr.onabort = errorCallback;
				} else {
					xhr.onreadystatechange = function() {

						// Check readyState before timeout as it changes
						if ( xhr.readyState === 4 ) {

							// Allow onerror to be called first,
							// but that will not handle a native abort
							// Also, save errorCallback to a variable
							// as xhr.onerror cannot be accessed
							window.setTimeout( function() {
								if ( callback ) {
									errorCallback();
								}
							} );
						}
					};
				}

				// Create the abort callback
				callback = callback( "abort" );

				try {

					// Do send the request (this may raise an exception)
					xhr.send( options.hasContent && options.data || null );
				} catch ( e ) {

					// trac-14683: Only rethrow if this hasn't been notified as an error yet
					if ( callback ) {
						throw e;
					}
				}
			},

			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)
jQuery.ajaxPrefilter( function( s ) {
	if ( s.crossDomain ) {
		s.contents.script = false;
	}
} );

// Install script dataType
jQuery.ajaxSetup( {
	accepts: {
		script: "text/javascript, application/javascript, " +
			"application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /\b(?:java|ecma)script\b/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
} );

// Handle cache's special case and crossDomain
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
	}
} );

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function( s ) {

	// This transport only deals with cross domain or forced-by-attrs requests
	if ( s.crossDomain || s.scriptAttrs ) {
		var script, callback;
		return {
			send: function( _, complete ) {
				script = jQuery( "<script>" )
					.attr( s.scriptAttrs || {} )
					.prop( { charset: s.scriptCharset, src: s.url } )
					.on( "load error", callback = function( evt ) {
						script.remove();
						callback = null;
						if ( evt ) {
							complete( evt.type === "error" ? 404 : 200, evt.type );
						}
					} );

				// Use native DOM manipulation to avoid our domManip AJAX trickery
				document.head.appendChild( script[ 0 ] );
			},
			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




var oldCallbacks = [],
	rjsonp = /(=)\?(?=&|$)|\?\?/;

// Default jsonp settings
jQuery.ajaxSetup( {
	jsonp: "callback",
	jsonpCallback: function() {
		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce.guid++ ) );
		this[ callback ] = true;
		return callback;
	}
} );

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var callbackName, overwritten, responseContainer,
		jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
			"url" :
			typeof s.data === "string" &&
				( s.contentType || "" )
					.indexOf( "application/x-www-form-urlencoded" ) === 0 &&
				rjsonp.test( s.data ) && "data"
		);

	// Handle iff the expected data type is "jsonp" or we have a parameter to set
	if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

		// Get callback name, remembering preexisting value associated with it
		callbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?
			s.jsonpCallback() :
			s.jsonpCallback;

		// Insert callback into url or form data
		if ( jsonProp ) {
			s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
		} else if ( s.jsonp !== false ) {
			s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
		}

		// Use data converter to retrieve json after script execution
		s.converters[ "script json" ] = function() {
			if ( !responseContainer ) {
				jQuery.error( callbackName + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// Force json dataType
		s.dataTypes[ 0 ] = "json";

		// Install callback
		overwritten = window[ callbackName ];
		window[ callbackName ] = function() {
			responseContainer = arguments;
		};

		// Clean-up function (fires after converters)
		jqXHR.always( function() {

			// If previous value didn't exist - remove it
			if ( overwritten === undefined ) {
				jQuery( window ).removeProp( callbackName );

			// Otherwise restore preexisting value
			} else {
				window[ callbackName ] = overwritten;
			}

			// Save back as free
			if ( s[ callbackName ] ) {

				// Make sure that re-using the options doesn't screw things around
				s.jsonpCallback = originalSettings.jsonpCallback;

				// Save the callback name for future use
				oldCallbacks.push( callbackName );
			}

			// Call if it was a function and we have a response
			if ( responseContainer && isFunction( overwritten ) ) {
				overwritten( responseContainer[ 0 ] );
			}

			responseContainer = overwritten = undefined;
		} );

		// Delegate to script
		return "script";
	}
} );




// Support: Safari 8 only
// In Safari 8 documents created via document.implementation.createHTMLDocument
// collapse sibling forms: the second one becomes a child of the first one.
// Because of that, this security measure has to be disabled in Safari 8.
// https://bugs.webkit.org/show_bug.cgi?id=137337
support.createHTMLDocument = ( function() {
	var body = document.implementation.createHTMLDocument( "" ).body;
	body.innerHTML = "<form></form><form></form>";
	return body.childNodes.length === 2;
} )();


// Argument "data" should be string of html
// context (optional): If specified, the fragment will be created in this context,
// defaults to document
// keepScripts (optional): If true, will include scripts passed in the html string
jQuery.parseHTML = function( data, context, keepScripts ) {
	if ( typeof data !== "string" ) {
		return [];
	}
	if ( typeof context === "boolean" ) {
		keepScripts = context;
		context = false;
	}

	var base, parsed, scripts;

	if ( !context ) {

		// Stop scripts or inline event handlers from being executed immediately
		// by using document.implementation
		if ( support.createHTMLDocument ) {
			context = document.implementation.createHTMLDocument( "" );

			// Set the base href for the created document
			// so any parsed elements with URLs
			// are based on the document's URL (gh-2965)
			base = context.createElement( "base" );
			base.href = document.location.href;
			context.head.appendChild( base );
		} else {
			context = document;
		}
	}

	parsed = rsingleTag.exec( data );
	scripts = !keepScripts && [];

	// Single tag
	if ( parsed ) {
		return [ context.createElement( parsed[ 1 ] ) ];
	}

	parsed = buildFragment( [ data ], context, scripts );

	if ( scripts && scripts.length ) {
		jQuery( scripts ).remove();
	}

	return jQuery.merge( [], parsed.childNodes );
};


/**
 * Load a url into a page
 */
jQuery.fn.load = function( url, params, callback ) {
	var selector, type, response,
		self = this,
		off = url.indexOf( " " );

	if ( off > -1 ) {
		selector = stripAndCollapse( url.slice( off ) );
		url = url.slice( 0, off );
	}

	// If it's a function
	if ( isFunction( params ) ) {

		// We assume that it's the callback
		callback = params;
		params = undefined;

	// Otherwise, build a param string
	} else if ( params && typeof params === "object" ) {
		type = "POST";
	}

	// If we have elements to modify, make the request
	if ( self.length > 0 ) {
		jQuery.ajax( {
			url: url,

			// If "type" variable is undefined, then "GET" method will be used.
			// Make value of this field explicit since
			// user can override it through ajaxSetup method
			type: type || "GET",
			dataType: "html",
			data: params
		} ).done( function( responseText ) {

			// Save response for use in complete callback
			response = arguments;

			self.html( selector ?

				// If a selector was specified, locate the right elements in a dummy div
				// Exclude scripts to avoid IE 'Permission Denied' errors
				jQuery( "<div>" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :

				// Otherwise use the full result
				responseText );

		// If the request succeeds, this function gets "data", "status", "jqXHR"
		// but they are ignored because response was set above.
		// If it fails, this function gets "jqXHR", "status", "error"
		} ).always( callback && function( jqXHR, status ) {
			self.each( function() {
				callback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );
			} );
		} );
	}

	return this;
};




jQuery.expr.pseudos.animated = function( elem ) {
	return jQuery.grep( jQuery.timers, function( fn ) {
		return elem === fn.elem;
	} ).length;
};




jQuery.offset = {
	setOffset: function( elem, options, i ) {
		var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
			position = jQuery.css( elem, "position" ),
			curElem = jQuery( elem ),
			props = {};

		// Set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		curOffset = curElem.offset();
		curCSSTop = jQuery.css( elem, "top" );
		curCSSLeft = jQuery.css( elem, "left" );
		calculatePosition = ( position === "absolute" || position === "fixed" ) &&
			( curCSSTop + curCSSLeft ).indexOf( "auto" ) > -1;

		// Need to be able to calculate position if either
		// top or left is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;

		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( isFunction( options ) ) {

			// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
			options = options.call( elem, i, jQuery.extend( {}, curOffset ) );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );

		} else {
			curElem.css( props );
		}
	}
};

jQuery.fn.extend( {

	// offset() relates an element's border box to the document origin
	offset: function( options ) {

		// Preserve chaining for setter
		if ( arguments.length ) {
			return options === undefined ?
				this :
				this.each( function( i ) {
					jQuery.offset.setOffset( this, options, i );
				} );
		}

		var rect, win,
			elem = this[ 0 ];

		if ( !elem ) {
			return;
		}

		// Return zeros for disconnected and hidden (display: none) elements (gh-2310)
		// Support: IE <=11 only
		// Running getBoundingClientRect on a
		// disconnected node in IE throws an error
		if ( !elem.getClientRects().length ) {
			return { top: 0, left: 0 };
		}

		// Get document-relative position by adding viewport scroll to viewport-relative gBCR
		rect = elem.getBoundingClientRect();
		win = elem.ownerDocument.defaultView;
		return {
			top: rect.top + win.pageYOffset,
			left: rect.left + win.pageXOffset
		};
	},

	// position() relates an element's margin box to its offset parent's padding box
	// This corresponds to the behavior of CSS absolute positioning
	position: function() {
		if ( !this[ 0 ] ) {
			return;
		}

		var offsetParent, offset, doc,
			elem = this[ 0 ],
			parentOffset = { top: 0, left: 0 };

		// position:fixed elements are offset from the viewport, which itself always has zero offset
		if ( jQuery.css( elem, "position" ) === "fixed" ) {

			// Assume position:fixed implies availability of getBoundingClientRect
			offset = elem.getBoundingClientRect();

		} else {
			offset = this.offset();

			// Account for the *real* offset parent, which can be the document or its root element
			// when a statically positioned element is identified
			doc = elem.ownerDocument;
			offsetParent = elem.offsetParent || doc.documentElement;
			while ( offsetParent &&
				( offsetParent === doc.body || offsetParent === doc.documentElement ) &&
				jQuery.css( offsetParent, "position" ) === "static" ) {

				offsetParent = offsetParent.parentNode;
			}
			if ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {

				// Incorporate borders into its offset, since they are outside its content origin
				parentOffset = jQuery( offsetParent ).offset();
				parentOffset.top += jQuery.css( offsetParent, "borderTopWidth", true );
				parentOffset.left += jQuery.css( offsetParent, "borderLeftWidth", true );
			}
		}

		// Subtract parent offsets and element margins
		return {
			top: offset.top - parentOffset.top - jQuery.css( elem, "marginTop", true ),
			left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
		};
	},

	// This method will return documentElement in the following cases:
	// 1) For the element inside the iframe without offsetParent, this method will return
	//    documentElement of the parent window
	// 2) For the hidden or detached element
	// 3) For body or html element, i.e. in case of the html node - it will return itself
	//
	// but those exceptions were never presented as a real life use-cases
	// and might be considered as more preferable results.
	//
	// This logic, however, is not guaranteed and can change at any point in the future
	offsetParent: function() {
		return this.map( function() {
			var offsetParent = this.offsetParent;

			while ( offsetParent && jQuery.css( offsetParent, "position" ) === "static" ) {
				offsetParent = offsetParent.offsetParent;
			}

			return offsetParent || documentElement;
		} );
	}
} );

// Create scrollLeft and scrollTop methods
jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
	var top = "pageYOffset" === prop;

	jQuery.fn[ method ] = function( val ) {
		return access( this, function( elem, method, val ) {

			// Coalesce documents and windows
			var win;
			if ( isWindow( elem ) ) {
				win = elem;
			} else if ( elem.nodeType === 9 ) {
				win = elem.defaultView;
			}

			if ( val === undefined ) {
				return win ? win[ prop ] : elem[ method ];
			}

			if ( win ) {
				win.scrollTo(
					!top ? val : win.pageXOffset,
					top ? val : win.pageYOffset
				);

			} else {
				elem[ method ] = val;
			}
		}, method, val, arguments.length );
	};
} );

// Support: Safari <=7 - 9.1, Chrome <=37 - 49
// Add the top/left cssHooks using jQuery.fn.position
// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347
// getComputedStyle returns percent when specified for top/left/bottom/right;
// rather than make the css module depend on the offset module, just check for it here
jQuery.each( [ "top", "left" ], function( _i, prop ) {
	jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
		function( elem, computed ) {
			if ( computed ) {
				computed = curCSS( elem, prop );

				// If curCSS returns percentage, fallback to offset
				return rnumnonpx.test( computed ) ?
					jQuery( elem ).position()[ prop ] + "px" :
					computed;
			}
		}
	);
} );


// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
	jQuery.each( {
		padding: "inner" + name,
		content: type,
		"": "outer" + name
	}, function( defaultExtra, funcName ) {

		// Margin is only for outerHeight, outerWidth
		jQuery.fn[ funcName ] = function( margin, value ) {
			var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

			return access( this, function( elem, type, value ) {
				var doc;

				if ( isWindow( elem ) ) {

					// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)
					return funcName.indexOf( "outer" ) === 0 ?
						elem[ "inner" + name ] :
						elem.document.documentElement[ "client" + name ];
				}

				// Get document width or height
				if ( elem.nodeType === 9 ) {
					doc = elem.documentElement;

					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
					// whichever is greatest
					return Math.max(
						elem.body[ "scroll" + name ], doc[ "scroll" + name ],
						elem.body[ "offset" + name ], doc[ "offset" + name ],
						doc[ "client" + name ]
					);
				}

				return value === undefined ?

					// Get width or height on the element, requesting but not forcing parseFloat
					jQuery.css( elem, type, extra ) :

					// Set width or height on the element
					jQuery.style( elem, type, value, extra );
			}, type, chainable ? margin : undefined, chainable );
		};
	} );
} );


jQuery.each( [
	"ajaxStart",
	"ajaxStop",
	"ajaxComplete",
	"ajaxError",
	"ajaxSuccess",
	"ajaxSend"
], function( _i, type ) {
	jQuery.fn[ type ] = function( fn ) {
		return this.on( type, fn );
	};
} );




jQuery.fn.extend( {

	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},

	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {

		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length === 1 ?
			this.off( selector, "**" ) :
			this.off( types, selector || "**", fn );
	},

	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	}
} );

jQuery.each(
	( "blur focus focusin focusout resize scroll click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup contextmenu" ).split( " " ),
	function( _i, name ) {

		// Handle event binding
		jQuery.fn[ name ] = function( data, fn ) {
			return arguments.length > 0 ?
				this.on( name, null, data, fn ) :
				this.trigger( name );
		};
	}
);




// Support: Android <=4.0 only
// Make sure we trim BOM and NBSP
// Require that the "whitespace run" starts from a non-whitespace
// to avoid O(N^2) behavior when the engine would try matching "\s+$" at each space position.
var rtrim = /^[\s\uFEFF\xA0]+|([^\s\uFEFF\xA0])[\s\uFEFF\xA0]+$/g;

// Bind a function to a context, optionally partially applying any
// arguments.
// jQuery.proxy is deprecated to promote standards (specifically Function#bind)
// However, it is not slated for removal any time soon
jQuery.proxy = function( fn, context ) {
	var tmp, args, proxy;

	if ( typeof context === "string" ) {
		tmp = fn[ context ];
		context = fn;
		fn = tmp;
	}

	// Quick check to determine if target is callable, in the spec
	// this throws a TypeError, but we will just return undefined.
	if ( !isFunction( fn ) ) {
		return undefined;
	}

	// Simulated bind
	args = slice.call( arguments, 2 );
	proxy = function() {
		return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
	};

	// Set the guid of unique handler to the same of original handler, so it can be removed
	proxy.guid = fn.guid = fn.guid || jQuery.guid++;

	return proxy;
};

jQuery.holdReady = function( hold ) {
	if ( hold ) {
		jQuery.readyWait++;
	} else {
		jQuery.ready( true );
	}
};
jQuery.isArray = Array.isArray;
jQuery.parseJSON = JSON.parse;
jQuery.nodeName = nodeName;
jQuery.isFunction = isFunction;
jQuery.isWindow = isWindow;
jQuery.camelCase = camelCase;
jQuery.type = toType;

jQuery.now = Date.now;

jQuery.isNumeric = function( obj ) {

	// As of jQuery 3.0, isNumeric is limited to
	// strings and numbers (primitives or objects)
	// that can be coerced to finite numbers (gh-2662)
	var type = jQuery.type( obj );
	return ( type === "number" || type === "string" ) &&

		// parseFloat NaNs numeric-cast false positives ("")
		// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
		// subtraction forces infinities to NaN
		!isNaN( obj - parseFloat( obj ) );
};

jQuery.trim = function( text ) {
	return text == null ?
		"" :
		( text + "" ).replace( rtrim, "$1" );
};



// Register as a named AMD module, since jQuery can be concatenated with other
// files that may use define, but not via a proper concatenation script that
// understands anonymous AMD modules. A named AMD is safest and most robust
// way to register. Lowercase jquery is used because AMD module names are
// derived from file names, and jQuery is normally delivered in a lowercase
// file name. Do this after creating the global so that if an AMD module wants
// to call noConflict to hide this version of jQuery, it will work.

// Note that for maximum portability, libraries that are not jQuery should
// declare themselves as anonymous modules, and avoid setting a global if an
// AMD loader is present. jQuery is a special case. For more information, see
// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

if ( true ) {
	!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function() {
		return jQuery;
	}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
}




var

	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$;

jQuery.noConflict = function( deep ) {
	if ( window.$ === jQuery ) {
		window.$ = _$;
	}

	if ( deep && window.jQuery === jQuery ) {
		window.jQuery = _jQuery;
	}

	return jQuery;
};

// Expose jQuery and $ identifiers, even in AMD
// (trac-7102#comment:10, https://github.com/jquery/jquery/pull/557)
// and CommonJS for browser emulators (trac-13566)
if ( typeof noGlobal === "undefined" ) {
	window.jQuery = window.$ = jQuery;
}




return jQuery;
} );


/***/ }),

/***/ "./node_modules/lodash.clamp/index.js":
/*!********************************************!*\
  !*** ./node_modules/lodash.clamp/index.js ***!
  \********************************************/
/***/ ((module) => {

/**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

/** Used as references for various `Number` constants. */
var NAN = 0 / 0;

/** `Object#toString` result references. */
var symbolTag = '[object Symbol]';

/** Used to match leading and trailing whitespace. */
var reTrim = /^\s+|\s+$/g;

/** Used to detect bad signed hexadecimal string values. */
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

/** Used to detect binary string values. */
var reIsBinary = /^0b[01]+$/i;

/** Used to detect octal string values. */
var reIsOctal = /^0o[0-7]+$/i;

/** Built-in method references without a dependency on `root`. */
var freeParseInt = parseInt;

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var objectToString = objectProto.toString;

/**
 * The base implementation of `_.clamp` which doesn't coerce arguments.
 *
 * @private
 * @param {number} number The number to clamp.
 * @param {number} [lower] The lower bound.
 * @param {number} upper The upper bound.
 * @returns {number} Returns the clamped number.
 */
function baseClamp(number, lower, upper) {
  if (number === number) {
    if (upper !== undefined) {
      number = number <= upper ? number : upper;
    }
    if (lower !== undefined) {
      number = number >= lower ? number : lower;
    }
  }
  return number;
}

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return !!value && (type == 'object' || type == 'function');
}

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return !!value && typeof value == 'object';
}

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (isObjectLike(value) && objectToString.call(value) == symbolTag);
}

/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */
function toNumber(value) {
  if (typeof value == 'number') {
    return value;
  }
  if (isSymbol(value)) {
    return NAN;
  }
  if (isObject(value)) {
    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
    value = isObject(other) ? (other + '') : other;
  }
  if (typeof value != 'string') {
    return value === 0 ? value : +value;
  }
  value = value.replace(reTrim, '');
  var isBinary = reIsBinary.test(value);
  return (isBinary || reIsOctal.test(value))
    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
    : (reIsBadHex.test(value) ? NAN : +value);
}

/**
 * Clamps `number` within the inclusive `lower` and `upper` bounds.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Number
 * @param {number} number The number to clamp.
 * @param {number} [lower] The lower bound.
 * @param {number} upper The upper bound.
 * @returns {number} Returns the clamped number.
 * @example
 *
 * _.clamp(-10, -5, 5);
 * // => -5
 *
 * _.clamp(10, -5, 5);
 * // => 5
 */
function clamp(number, lower, upper) {
  if (upper === undefined) {
    upper = lower;
    lower = undefined;
  }
  if (upper !== undefined) {
    upper = toNumber(upper);
    upper = upper === upper ? upper : 0;
  }
  if (lower !== undefined) {
    lower = toNumber(lower);
    lower = lower === lower ? lower : 0;
  }
  return baseClamp(toNumber(number), lower, upper);
}

module.exports = clamp;


/***/ }),

/***/ "./node_modules/lodash.debounce/index.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash.debounce/index.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

/** Used as the `TypeError` message for "Functions" methods. */
var FUNC_ERROR_TEXT = 'Expected a function';

/** Used as references for various `Number` constants. */
var NAN = 0 / 0;

/** `Object#toString` result references. */
var symbolTag = '[object Symbol]';

/** Used to match leading and trailing whitespace. */
var reTrim = /^\s+|\s+$/g;

/** Used to detect bad signed hexadecimal string values. */
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

/** Used to detect binary string values. */
var reIsBinary = /^0b[01]+$/i;

/** Used to detect octal string values. */
var reIsOctal = /^0o[0-7]+$/i;

/** Built-in method references without a dependency on `root`. */
var freeParseInt = parseInt;

/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof __webpack_require__.g == 'object' && __webpack_require__.g && __webpack_require__.g.Object === Object && __webpack_require__.g;

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var objectToString = objectProto.toString;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max,
    nativeMin = Math.min;

/**
 * Gets the timestamp of the number of milliseconds that have elapsed since
 * the Unix epoch (1 January 1970 00:00:00 UTC).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Date
 * @returns {number} Returns the timestamp.
 * @example
 *
 * _.defer(function(stamp) {
 *   console.log(_.now() - stamp);
 * }, _.now());
 * // => Logs the number of milliseconds it took for the deferred invocation.
 */
var now = function() {
  return root.Date.now();
};

/**
 * Creates a debounced function that delays invoking `func` until after `wait`
 * milliseconds have elapsed since the last time the debounced function was
 * invoked. The debounced function comes with a `cancel` method to cancel
 * delayed `func` invocations and a `flush` method to immediately invoke them.
 * Provide `options` to indicate whether `func` should be invoked on the
 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
 * with the last arguments provided to the debounced function. Subsequent
 * calls to the debounced function return the result of the last `func`
 * invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the debounced function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.debounce` and `_.throttle`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to debounce.
 * @param {number} [wait=0] The number of milliseconds to delay.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=false]
 *  Specify invoking on the leading edge of the timeout.
 * @param {number} [options.maxWait]
 *  The maximum time `func` is allowed to be delayed before it's invoked.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new debounced function.
 * @example
 *
 * // Avoid costly calculations while the window size is in flux.
 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
 *
 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
 * jQuery(element).on('click', _.debounce(sendMail, 300, {
 *   'leading': true,
 *   'trailing': false
 * }));
 *
 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
 * var source = new EventSource('/stream');
 * jQuery(source).on('message', debounced);
 *
 * // Cancel the trailing debounced invocation.
 * jQuery(window).on('popstate', debounced.cancel);
 */
function debounce(func, wait, options) {
  var lastArgs,
      lastThis,
      maxWait,
      result,
      timerId,
      lastCallTime,
      lastInvokeTime = 0,
      leading = false,
      maxing = false,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  wait = toNumber(wait) || 0;
  if (isObject(options)) {
    leading = !!options.leading;
    maxing = 'maxWait' in options;
    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }

  function invokeFunc(time) {
    var args = lastArgs,
        thisArg = lastThis;

    lastArgs = lastThis = undefined;
    lastInvokeTime = time;
    result = func.apply(thisArg, args);
    return result;
  }

  function leadingEdge(time) {
    // Reset any `maxWait` timer.
    lastInvokeTime = time;
    // Start the timer for the trailing edge.
    timerId = setTimeout(timerExpired, wait);
    // Invoke the leading edge.
    return leading ? invokeFunc(time) : result;
  }

  function remainingWait(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime,
        result = wait - timeSinceLastCall;

    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
  }

  function shouldInvoke(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime;

    // Either this is the first call, activity has stopped and we're at the
    // trailing edge, the system time has gone backwards and we're treating
    // it as the trailing edge, or we've hit the `maxWait` limit.
    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
  }

  function timerExpired() {
    var time = now();
    if (shouldInvoke(time)) {
      return trailingEdge(time);
    }
    // Restart the timer.
    timerId = setTimeout(timerExpired, remainingWait(time));
  }

  function trailingEdge(time) {
    timerId = undefined;

    // Only invoke if we have `lastArgs` which means `func` has been
    // debounced at least once.
    if (trailing && lastArgs) {
      return invokeFunc(time);
    }
    lastArgs = lastThis = undefined;
    return result;
  }

  function cancel() {
    if (timerId !== undefined) {
      clearTimeout(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = undefined;
  }

  function flush() {
    return timerId === undefined ? result : trailingEdge(now());
  }

  function debounced() {
    var time = now(),
        isInvoking = shouldInvoke(time);

    lastArgs = arguments;
    lastThis = this;
    lastCallTime = time;

    if (isInvoking) {
      if (timerId === undefined) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        // Handle invocations in a tight loop.
        timerId = setTimeout(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === undefined) {
      timerId = setTimeout(timerExpired, wait);
    }
    return result;
  }
  debounced.cancel = cancel;
  debounced.flush = flush;
  return debounced;
}

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return !!value && (type == 'object' || type == 'function');
}

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return !!value && typeof value == 'object';
}

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (isObjectLike(value) && objectToString.call(value) == symbolTag);
}

/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */
function toNumber(value) {
  if (typeof value == 'number') {
    return value;
  }
  if (isSymbol(value)) {
    return NAN;
  }
  if (isObject(value)) {
    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
    value = isObject(other) ? (other + '') : other;
  }
  if (typeof value != 'string') {
    return value === 0 ? value : +value;
  }
  value = value.replace(reTrim, '');
  var isBinary = reIsBinary.test(value);
  return (isBinary || reIsOctal.test(value))
    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
    : (reIsBadHex.test(value) ? NAN : +value);
}

module.exports = debounce;


/***/ }),

/***/ "./node_modules/lodash/lodash.js":
/*!***************************************!*\
  !*** ./node_modules/lodash/lodash.js ***!
  \***************************************/
/***/ (function(module, exports, __webpack_require__) {

/* module decorator */ module = __webpack_require__.nmd(module);
var __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
;(function() {

  /** Used as a safe reference for `undefined` in pre-ES5 environments. */
  var undefined;

  /** Used as the semantic version number. */
  var VERSION = '4.17.21';

  /** Used as the size to enable large array optimizations. */
  var LARGE_ARRAY_SIZE = 200;

  /** Error message constants. */
  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',
      FUNC_ERROR_TEXT = 'Expected a function',
      INVALID_TEMPL_VAR_ERROR_TEXT = 'Invalid `variable` option passed into `_.template`';

  /** Used to stand-in for `undefined` hash values. */
  var HASH_UNDEFINED = '__lodash_hash_undefined__';

  /** Used as the maximum memoize cache size. */
  var MAX_MEMOIZE_SIZE = 500;

  /** Used as the internal argument placeholder. */
  var PLACEHOLDER = '__lodash_placeholder__';

  /** Used to compose bitmasks for cloning. */
  var CLONE_DEEP_FLAG = 1,
      CLONE_FLAT_FLAG = 2,
      CLONE_SYMBOLS_FLAG = 4;

  /** Used to compose bitmasks for value comparisons. */
  var COMPARE_PARTIAL_FLAG = 1,
      COMPARE_UNORDERED_FLAG = 2;

  /** Used to compose bitmasks for function metadata. */
  var WRAP_BIND_FLAG = 1,
      WRAP_BIND_KEY_FLAG = 2,
      WRAP_CURRY_BOUND_FLAG = 4,
      WRAP_CURRY_FLAG = 8,
      WRAP_CURRY_RIGHT_FLAG = 16,
      WRAP_PARTIAL_FLAG = 32,
      WRAP_PARTIAL_RIGHT_FLAG = 64,
      WRAP_ARY_FLAG = 128,
      WRAP_REARG_FLAG = 256,
      WRAP_FLIP_FLAG = 512;

  /** Used as default options for `_.truncate`. */
  var DEFAULT_TRUNC_LENGTH = 30,
      DEFAULT_TRUNC_OMISSION = '...';

  /** Used to detect hot functions by number of calls within a span of milliseconds. */
  var HOT_COUNT = 800,
      HOT_SPAN = 16;

  /** Used to indicate the type of lazy iteratees. */
  var LAZY_FILTER_FLAG = 1,
      LAZY_MAP_FLAG = 2,
      LAZY_WHILE_FLAG = 3;

  /** Used as references for various `Number` constants. */
  var INFINITY = 1 / 0,
      MAX_SAFE_INTEGER = 9007199254740991,
      MAX_INTEGER = 1.7976931348623157e+308,
      NAN = 0 / 0;

  /** Used as references for the maximum length and index of an array. */
  var MAX_ARRAY_LENGTH = 4294967295,
      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,
      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;

  /** Used to associate wrap methods with their bit flags. */
  var wrapFlags = [
    ['ary', WRAP_ARY_FLAG],
    ['bind', WRAP_BIND_FLAG],
    ['bindKey', WRAP_BIND_KEY_FLAG],
    ['curry', WRAP_CURRY_FLAG],
    ['curryRight', WRAP_CURRY_RIGHT_FLAG],
    ['flip', WRAP_FLIP_FLAG],
    ['partial', WRAP_PARTIAL_FLAG],
    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],
    ['rearg', WRAP_REARG_FLAG]
  ];

  /** `Object#toString` result references. */
  var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      asyncTag = '[object AsyncFunction]',
      boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      domExcTag = '[object DOMException]',
      errorTag = '[object Error]',
      funcTag = '[object Function]',
      genTag = '[object GeneratorFunction]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      nullTag = '[object Null]',
      objectTag = '[object Object]',
      promiseTag = '[object Promise]',
      proxyTag = '[object Proxy]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      symbolTag = '[object Symbol]',
      undefinedTag = '[object Undefined]',
      weakMapTag = '[object WeakMap]',
      weakSetTag = '[object WeakSet]';

  var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]',
      float32Tag = '[object Float32Array]',
      float64Tag = '[object Float64Array]',
      int8Tag = '[object Int8Array]',
      int16Tag = '[object Int16Array]',
      int32Tag = '[object Int32Array]',
      uint8Tag = '[object Uint8Array]',
      uint8ClampedTag = '[object Uint8ClampedArray]',
      uint16Tag = '[object Uint16Array]',
      uint32Tag = '[object Uint32Array]';

  /** Used to match empty string literals in compiled template source. */
  var reEmptyStringLeading = /\b__p \+= '';/g,
      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;

  /** Used to match HTML entities and HTML characters. */
  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,
      reUnescapedHtml = /[&<>"']/g,
      reHasEscapedHtml = RegExp(reEscapedHtml.source),
      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);

  /** Used to match template delimiters. */
  var reEscape = /<%-([\s\S]+?)%>/g,
      reEvaluate = /<%([\s\S]+?)%>/g,
      reInterpolate = /<%=([\s\S]+?)%>/g;

  /** Used to match property names within property paths. */
  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
      reIsPlainProp = /^\w*$/,
      rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

  /**
   * Used to match `RegExp`
   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
   */
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
      reHasRegExpChar = RegExp(reRegExpChar.source);

  /** Used to match leading whitespace. */
  var reTrimStart = /^\s+/;

  /** Used to match a single whitespace character. */
  var reWhitespace = /\s/;

  /** Used to match wrap detail comments. */
  var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
      reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
      reSplitDetails = /,? & /;

  /** Used to match words composed of alphanumeric characters. */
  var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;

  /**
   * Used to validate the `validate` option in `_.template` variable.
   *
   * Forbids characters which could potentially change the meaning of the function argument definition:
   * - "()," (modification of function parameters)
   * - "=" (default value)
   * - "[]{}" (destructuring of function parameters)
   * - "/" (beginning of a comment)
   * - whitespace
   */
  var reForbiddenIdentifierChars = /[()=,{}\[\]\/\s]/;

  /** Used to match backslashes in property paths. */
  var reEscapeChar = /\\(\\)?/g;

  /**
   * Used to match
   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).
   */
  var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;

  /** Used to match `RegExp` flags from their coerced string values. */
  var reFlags = /\w*$/;

  /** Used to detect bad signed hexadecimal string values. */
  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

  /** Used to detect binary string values. */
  var reIsBinary = /^0b[01]+$/i;

  /** Used to detect host constructors (Safari). */
  var reIsHostCtor = /^\[object .+?Constructor\]$/;

  /** Used to detect octal string values. */
  var reIsOctal = /^0o[0-7]+$/i;

  /** Used to detect unsigned integer values. */
  var reIsUint = /^(?:0|[1-9]\d*)$/;

  /** Used to match Latin Unicode letters (excluding mathematical operators). */
  var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;

  /** Used to ensure capturing order of template delimiters. */
  var reNoMatch = /($^)/;

  /** Used to match unescaped characters in compiled string literals. */
  var reUnescapedString = /['\n\r\u2028\u2029\\]/g;

  /** Used to compose unicode character classes. */
  var rsAstralRange = '\\ud800-\\udfff',
      rsComboMarksRange = '\\u0300-\\u036f',
      reComboHalfMarksRange = '\\ufe20-\\ufe2f',
      rsComboSymbolsRange = '\\u20d0-\\u20ff',
      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
      rsDingbatRange = '\\u2700-\\u27bf',
      rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
      rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
      rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
      rsPunctuationRange = '\\u2000-\\u206f',
      rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
      rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
      rsVarRange = '\\ufe0e\\ufe0f',
      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;

  /** Used to compose unicode capture groups. */
  var rsApos = "['\u2019]",
      rsAstral = '[' + rsAstralRange + ']',
      rsBreak = '[' + rsBreakRange + ']',
      rsCombo = '[' + rsComboRange + ']',
      rsDigits = '\\d+',
      rsDingbat = '[' + rsDingbatRange + ']',
      rsLower = '[' + rsLowerRange + ']',
      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
      rsFitz = '\\ud83c[\\udffb-\\udfff]',
      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
      rsNonAstral = '[^' + rsAstralRange + ']',
      rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
      rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
      rsUpper = '[' + rsUpperRange + ']',
      rsZWJ = '\\u200d';

  /** Used to compose unicode regexes. */
  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
      reOptMod = rsModifier + '?',
      rsOptVar = '[' + rsVarRange + ']?',
      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
      rsOrdLower = '\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])',
      rsOrdUpper = '\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])',
      rsSeq = rsOptVar + reOptMod + rsOptJoin,
      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,
      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

  /** Used to match apostrophes. */
  var reApos = RegExp(rsApos, 'g');

  /**
   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
   */
  var reComboMark = RegExp(rsCombo, 'g');

  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

  /** Used to match complex or compound words. */
  var reUnicodeWord = RegExp([
    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',
    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,
    rsUpper + '+' + rsOptContrUpper,
    rsOrdUpper,
    rsOrdLower,
    rsDigits,
    rsEmoji
  ].join('|'), 'g');

  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');

  /** Used to detect strings that need a more robust regexp to match words. */
  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;

  /** Used to assign default `context` object properties. */
  var contextProps = [
    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',
    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',
    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',
    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',
    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'
  ];

  /** Used to make template sourceURLs easier to identify. */
  var templateCounter = -1;

  /** Used to identify `toStringTag` values of typed arrays. */
  var typedArrayTags = {};
  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
  typedArrayTags[uint32Tag] = true;
  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
  typedArrayTags[errorTag] = typedArrayTags[funcTag] =
  typedArrayTags[mapTag] = typedArrayTags[numberTag] =
  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
  typedArrayTags[setTag] = typedArrayTags[stringTag] =
  typedArrayTags[weakMapTag] = false;

  /** Used to identify `toStringTag` values supported by `_.clone`. */
  var cloneableTags = {};
  cloneableTags[argsTag] = cloneableTags[arrayTag] =
  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
  cloneableTags[boolTag] = cloneableTags[dateTag] =
  cloneableTags[float32Tag] = cloneableTags[float64Tag] =
  cloneableTags[int8Tag] = cloneableTags[int16Tag] =
  cloneableTags[int32Tag] = cloneableTags[mapTag] =
  cloneableTags[numberTag] = cloneableTags[objectTag] =
  cloneableTags[regexpTag] = cloneableTags[setTag] =
  cloneableTags[stringTag] = cloneableTags[symbolTag] =
  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
  cloneableTags[errorTag] = cloneableTags[funcTag] =
  cloneableTags[weakMapTag] = false;

  /** Used to map Latin Unicode letters to basic Latin letters. */
  var deburredLetters = {
    // Latin-1 Supplement block.
    '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
    '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
    '\xc7': 'C',  '\xe7': 'c',
    '\xd0': 'D',  '\xf0': 'd',
    '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
    '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
    '\xcc': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
    '\xec': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
    '\xd1': 'N',  '\xf1': 'n',
    '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
    '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
    '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
    '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
    '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
    '\xc6': 'Ae', '\xe6': 'ae',
    '\xde': 'Th', '\xfe': 'th',
    '\xdf': 'ss',
    // Latin Extended-A block.
    '\u0100': 'A',  '\u0102': 'A', '\u0104': 'A',
    '\u0101': 'a',  '\u0103': 'a', '\u0105': 'a',
    '\u0106': 'C',  '\u0108': 'C', '\u010a': 'C', '\u010c': 'C',
    '\u0107': 'c',  '\u0109': 'c', '\u010b': 'c', '\u010d': 'c',
    '\u010e': 'D',  '\u0110': 'D', '\u010f': 'd', '\u0111': 'd',
    '\u0112': 'E',  '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011a': 'E',
    '\u0113': 'e',  '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011b': 'e',
    '\u011c': 'G',  '\u011e': 'G', '\u0120': 'G', '\u0122': 'G',
    '\u011d': 'g',  '\u011f': 'g', '\u0121': 'g', '\u0123': 'g',
    '\u0124': 'H',  '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
    '\u0128': 'I',  '\u012a': 'I', '\u012c': 'I', '\u012e': 'I', '\u0130': 'I',
    '\u0129': 'i',  '\u012b': 'i', '\u012d': 'i', '\u012f': 'i', '\u0131': 'i',
    '\u0134': 'J',  '\u0135': 'j',
    '\u0136': 'K',  '\u0137': 'k', '\u0138': 'k',
    '\u0139': 'L',  '\u013b': 'L', '\u013d': 'L', '\u013f': 'L', '\u0141': 'L',
    '\u013a': 'l',  '\u013c': 'l', '\u013e': 'l', '\u0140': 'l', '\u0142': 'l',
    '\u0143': 'N',  '\u0145': 'N', '\u0147': 'N', '\u014a': 'N',
    '\u0144': 'n',  '\u0146': 'n', '\u0148': 'n', '\u014b': 'n',
    '\u014c': 'O',  '\u014e': 'O', '\u0150': 'O',
    '\u014d': 'o',  '\u014f': 'o', '\u0151': 'o',
    '\u0154': 'R',  '\u0156': 'R', '\u0158': 'R',
    '\u0155': 'r',  '\u0157': 'r', '\u0159': 'r',
    '\u015a': 'S',  '\u015c': 'S', '\u015e': 'S', '\u0160': 'S',
    '\u015b': 's',  '\u015d': 's', '\u015f': 's', '\u0161': 's',
    '\u0162': 'T',  '\u0164': 'T', '\u0166': 'T',
    '\u0163': 't',  '\u0165': 't', '\u0167': 't',
    '\u0168': 'U',  '\u016a': 'U', '\u016c': 'U', '\u016e': 'U', '\u0170': 'U', '\u0172': 'U',
    '\u0169': 'u',  '\u016b': 'u', '\u016d': 'u', '\u016f': 'u', '\u0171': 'u', '\u0173': 'u',
    '\u0174': 'W',  '\u0175': 'w',
    '\u0176': 'Y',  '\u0177': 'y', '\u0178': 'Y',
    '\u0179': 'Z',  '\u017b': 'Z', '\u017d': 'Z',
    '\u017a': 'z',  '\u017c': 'z', '\u017e': 'z',
    '\u0132': 'IJ', '\u0133': 'ij',
    '\u0152': 'Oe', '\u0153': 'oe',
    '\u0149': "'n", '\u017f': 's'
  };

  /** Used to map characters to HTML entities. */
  var htmlEscapes = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#39;'
  };

  /** Used to map HTML entities to characters. */
  var htmlUnescapes = {
    '&amp;': '&',
    '&lt;': '<',
    '&gt;': '>',
    '&quot;': '"',
    '&#39;': "'"
  };

  /** Used to escape characters for inclusion in compiled string literals. */
  var stringEscapes = {
    '\\': '\\',
    "'": "'",
    '\n': 'n',
    '\r': 'r',
    '\u2028': 'u2028',
    '\u2029': 'u2029'
  };

  /** Built-in method references without a dependency on `root`. */
  var freeParseFloat = parseFloat,
      freeParseInt = parseInt;

  /** Detect free variable `global` from Node.js. */
  var freeGlobal = typeof __webpack_require__.g == 'object' && __webpack_require__.g && __webpack_require__.g.Object === Object && __webpack_require__.g;

  /** Detect free variable `self`. */
  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

  /** Used as a reference to the global object. */
  var root = freeGlobal || freeSelf || Function('return this')();

  /** Detect free variable `exports`. */
  var freeExports =  true && exports && !exports.nodeType && exports;

  /** Detect free variable `module`. */
  var freeModule = freeExports && "object" == 'object' && module && !module.nodeType && module;

  /** Detect the popular CommonJS extension `module.exports`. */
  var moduleExports = freeModule && freeModule.exports === freeExports;

  /** Detect free variable `process` from Node.js. */
  var freeProcess = moduleExports && freeGlobal.process;

  /** Used to access faster Node.js helpers. */
  var nodeUtil = (function() {
    try {
      // Use `util.types` for Node.js 10+.
      var types = freeModule && freeModule.require && freeModule.require('util').types;

      if (types) {
        return types;
      }

      // Legacy `process.binding('util')` for Node.js < 10.
      return freeProcess && freeProcess.binding && freeProcess.binding('util');
    } catch (e) {}
  }());

  /* Node.js helper references. */
  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,
      nodeIsDate = nodeUtil && nodeUtil.isDate,
      nodeIsMap = nodeUtil && nodeUtil.isMap,
      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,
      nodeIsSet = nodeUtil && nodeUtil.isSet,
      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

  /*--------------------------------------------------------------------------*/

  /**
   * A faster alternative to `Function#apply`, this function invokes `func`
   * with the `this` binding of `thisArg` and the arguments of `args`.
   *
   * @private
   * @param {Function} func The function to invoke.
   * @param {*} thisArg The `this` binding of `func`.
   * @param {Array} args The arguments to invoke `func` with.
   * @returns {*} Returns the result of `func`.
   */
  function apply(func, thisArg, args) {
    switch (args.length) {
      case 0: return func.call(thisArg);
      case 1: return func.call(thisArg, args[0]);
      case 2: return func.call(thisArg, args[0], args[1]);
      case 3: return func.call(thisArg, args[0], args[1], args[2]);
    }
    return func.apply(thisArg, args);
  }

  /**
   * A specialized version of `baseAggregator` for arrays.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} setter The function to set `accumulator` values.
   * @param {Function} iteratee The iteratee to transform keys.
   * @param {Object} accumulator The initial aggregated object.
   * @returns {Function} Returns `accumulator`.
   */
  function arrayAggregator(array, setter, iteratee, accumulator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      var value = array[index];
      setter(accumulator, value, iteratee(value), array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.forEach` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEach(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (iteratee(array[index], index, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.forEachRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEachRight(array, iteratee) {
    var length = array == null ? 0 : array.length;

    while (length--) {
      if (iteratee(array[length], length, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.every` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if all elements pass the predicate check,
   *  else `false`.
   */
  function arrayEvery(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (!predicate(array[index], index, array)) {
        return false;
      }
    }
    return true;
  }

  /**
   * A specialized version of `_.filter` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {Array} Returns the new filtered array.
   */
  function arrayFilter(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (predicate(value, index, array)) {
        result[resIndex++] = value;
      }
    }
    return result;
  }

  /**
   * A specialized version of `_.includes` for arrays without support for
   * specifying an index to search from.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludes(array, value) {
    var length = array == null ? 0 : array.length;
    return !!length && baseIndexOf(array, value, 0) > -1;
  }

  /**
   * This function is like `arrayIncludes` except that it accepts a comparator.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludesWith(array, value, comparator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (comparator(value, array[index])) {
        return true;
      }
    }
    return false;
  }

  /**
   * A specialized version of `_.map` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the new mapped array.
   */
  function arrayMap(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length,
        result = Array(length);

    while (++index < length) {
      result[index] = iteratee(array[index], index, array);
    }
    return result;
  }

  /**
   * Appends the elements of `values` to `array`.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {Array} values The values to append.
   * @returns {Array} Returns `array`.
   */
  function arrayPush(array, values) {
    var index = -1,
        length = values.length,
        offset = array.length;

    while (++index < length) {
      array[offset + index] = values[index];
    }
    return array;
  }

  /**
   * A specialized version of `_.reduce` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the first element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduce(array, iteratee, accumulator, initAccum) {
    var index = -1,
        length = array == null ? 0 : array.length;

    if (initAccum && length) {
      accumulator = array[++index];
    }
    while (++index < length) {
      accumulator = iteratee(accumulator, array[index], index, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.reduceRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the last element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduceRight(array, iteratee, accumulator, initAccum) {
    var length = array == null ? 0 : array.length;
    if (initAccum && length) {
      accumulator = array[--length];
    }
    while (length--) {
      accumulator = iteratee(accumulator, array[length], length, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.some` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if any element passes the predicate check,
   *  else `false`.
   */
  function arraySome(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (predicate(array[index], index, array)) {
        return true;
      }
    }
    return false;
  }

  /**
   * Gets the size of an ASCII `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  var asciiSize = baseProperty('length');

  /**
   * Converts an ASCII `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function asciiToArray(string) {
    return string.split('');
  }

  /**
   * Splits an ASCII `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function asciiWords(string) {
    return string.match(reAsciiWord) || [];
  }

  /**
   * The base implementation of methods like `_.findKey` and `_.findLastKey`,
   * without support for iteratee shorthands, which iterates over `collection`
   * using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the found element or its key, else `undefined`.
   */
  function baseFindKey(collection, predicate, eachFunc) {
    var result;
    eachFunc(collection, function(value, key, collection) {
      if (predicate(value, key, collection)) {
        result = key;
        return false;
      }
    });
    return result;
  }

  /**
   * The base implementation of `_.findIndex` and `_.findLastIndex` without
   * support for iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {number} fromIndex The index to search from.
   * @param {boolean} [fromRight] Specify iterating from right to left.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseFindIndex(array, predicate, fromIndex, fromRight) {
    var length = array.length,
        index = fromIndex + (fromRight ? 1 : -1);

    while ((fromRight ? index-- : ++index < length)) {
      if (predicate(array[index], index, array)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOf(array, value, fromIndex) {
    return value === value
      ? strictIndexOf(array, value, fromIndex)
      : baseFindIndex(array, baseIsNaN, fromIndex);
  }

  /**
   * This function is like `baseIndexOf` except that it accepts a comparator.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOfWith(array, value, fromIndex, comparator) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (comparator(array[index], value)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.isNaN` without support for number objects.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
   */
  function baseIsNaN(value) {
    return value !== value;
  }

  /**
   * The base implementation of `_.mean` and `_.meanBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the mean.
   */
  function baseMean(array, iteratee) {
    var length = array == null ? 0 : array.length;
    return length ? (baseSum(array, iteratee) / length) : NAN;
  }

  /**
   * The base implementation of `_.property` without support for deep paths.
   *
   * @private
   * @param {string} key The key of the property to get.
   * @returns {Function} Returns the new accessor function.
   */
  function baseProperty(key) {
    return function(object) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * The base implementation of `_.propertyOf` without support for deep paths.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Function} Returns the new accessor function.
   */
  function basePropertyOf(object) {
    return function(key) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * The base implementation of `_.reduce` and `_.reduceRight`, without support
   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} accumulator The initial value.
   * @param {boolean} initAccum Specify using the first or last element of
   *  `collection` as the initial value.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the accumulated value.
   */
  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
    eachFunc(collection, function(value, index, collection) {
      accumulator = initAccum
        ? (initAccum = false, value)
        : iteratee(accumulator, value, index, collection);
    });
    return accumulator;
  }

  /**
   * The base implementation of `_.sortBy` which uses `comparer` to define the
   * sort order of `array` and replaces criteria objects with their corresponding
   * values.
   *
   * @private
   * @param {Array} array The array to sort.
   * @param {Function} comparer The function to define sort order.
   * @returns {Array} Returns `array`.
   */
  function baseSortBy(array, comparer) {
    var length = array.length;

    array.sort(comparer);
    while (length--) {
      array[length] = array[length].value;
    }
    return array;
  }

  /**
   * The base implementation of `_.sum` and `_.sumBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the sum.
   */
  function baseSum(array, iteratee) {
    var result,
        index = -1,
        length = array.length;

    while (++index < length) {
      var current = iteratee(array[index]);
      if (current !== undefined) {
        result = result === undefined ? current : (result + current);
      }
    }
    return result;
  }

  /**
   * The base implementation of `_.times` without support for iteratee shorthands
   * or max array length checks.
   *
   * @private
   * @param {number} n The number of times to invoke `iteratee`.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the array of results.
   */
  function baseTimes(n, iteratee) {
    var index = -1,
        result = Array(n);

    while (++index < n) {
      result[index] = iteratee(index);
    }
    return result;
  }

  /**
   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
   * of key-value pairs for `object` corresponding to the property names of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the key-value pairs.
   */
  function baseToPairs(object, props) {
    return arrayMap(props, function(key) {
      return [key, object[key]];
    });
  }

  /**
   * The base implementation of `_.trim`.
   *
   * @private
   * @param {string} string The string to trim.
   * @returns {string} Returns the trimmed string.
   */
  function baseTrim(string) {
    return string
      ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')
      : string;
  }

  /**
   * The base implementation of `_.unary` without support for storing metadata.
   *
   * @private
   * @param {Function} func The function to cap arguments for.
   * @returns {Function} Returns the new capped function.
   */
  function baseUnary(func) {
    return function(value) {
      return func(value);
    };
  }

  /**
   * The base implementation of `_.values` and `_.valuesIn` which creates an
   * array of `object` property values corresponding to the property names
   * of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the array of property values.
   */
  function baseValues(object, props) {
    return arrayMap(props, function(key) {
      return object[key];
    });
  }

  /**
   * Checks if a `cache` value for `key` exists.
   *
   * @private
   * @param {Object} cache The cache to query.
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function cacheHas(cache, key) {
    return cache.has(key);
  }

  /**
   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the first unmatched string symbol.
   */
  function charsStartIndex(strSymbols, chrSymbols) {
    var index = -1,
        length = strSymbols.length;

    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the last unmatched string symbol.
   */
  function charsEndIndex(strSymbols, chrSymbols) {
    var index = strSymbols.length;

    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Gets the number of `placeholder` occurrences in `array`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} placeholder The placeholder to search for.
   * @returns {number} Returns the placeholder count.
   */
  function countHolders(array, placeholder) {
    var length = array.length,
        result = 0;

    while (length--) {
      if (array[length] === placeholder) {
        ++result;
      }
    }
    return result;
  }

  /**
   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
   * letters to basic Latin letters.
   *
   * @private
   * @param {string} letter The matched letter to deburr.
   * @returns {string} Returns the deburred letter.
   */
  var deburrLetter = basePropertyOf(deburredLetters);

  /**
   * Used by `_.escape` to convert characters to HTML entities.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  var escapeHtmlChar = basePropertyOf(htmlEscapes);

  /**
   * Used by `_.template` to escape characters for inclusion in compiled string literals.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  function escapeStringChar(chr) {
    return '\\' + stringEscapes[chr];
  }

  /**
   * Gets the value at `key` of `object`.
   *
   * @private
   * @param {Object} [object] The object to query.
   * @param {string} key The key of the property to get.
   * @returns {*} Returns the property value.
   */
  function getValue(object, key) {
    return object == null ? undefined : object[key];
  }

  /**
   * Checks if `string` contains Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a symbol is found, else `false`.
   */
  function hasUnicode(string) {
    return reHasUnicode.test(string);
  }

  /**
   * Checks if `string` contains a word composed of Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a word is found, else `false`.
   */
  function hasUnicodeWord(string) {
    return reHasUnicodeWord.test(string);
  }

  /**
   * Converts `iterator` to an array.
   *
   * @private
   * @param {Object} iterator The iterator to convert.
   * @returns {Array} Returns the converted array.
   */
  function iteratorToArray(iterator) {
    var data,
        result = [];

    while (!(data = iterator.next()).done) {
      result.push(data.value);
    }
    return result;
  }

  /**
   * Converts `map` to its key-value pairs.
   *
   * @private
   * @param {Object} map The map to convert.
   * @returns {Array} Returns the key-value pairs.
   */
  function mapToArray(map) {
    var index = -1,
        result = Array(map.size);

    map.forEach(function(value, key) {
      result[++index] = [key, value];
    });
    return result;
  }

  /**
   * Creates a unary function that invokes `func` with its argument transformed.
   *
   * @private
   * @param {Function} func The function to wrap.
   * @param {Function} transform The argument transform.
   * @returns {Function} Returns the new function.
   */
  function overArg(func, transform) {
    return function(arg) {
      return func(transform(arg));
    };
  }

  /**
   * Replaces all `placeholder` elements in `array` with an internal placeholder
   * and returns an array of their indexes.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {*} placeholder The placeholder to replace.
   * @returns {Array} Returns the new array of placeholder indexes.
   */
  function replaceHolders(array, placeholder) {
    var index = -1,
        length = array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (value === placeholder || value === PLACEHOLDER) {
        array[index] = PLACEHOLDER;
        result[resIndex++] = index;
      }
    }
    return result;
  }

  /**
   * Converts `set` to an array of its values.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the values.
   */
  function setToArray(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = value;
    });
    return result;
  }

  /**
   * Converts `set` to its value-value pairs.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the value-value pairs.
   */
  function setToPairs(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = [value, value];
    });
    return result;
  }

  /**
   * A specialized version of `_.indexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictIndexOf(array, value, fromIndex) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (array[index] === value) {
        return index;
      }
    }
    return -1;
  }

  /**
   * A specialized version of `_.lastIndexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictLastIndexOf(array, value, fromIndex) {
    var index = fromIndex + 1;
    while (index--) {
      if (array[index] === value) {
        return index;
      }
    }
    return index;
  }

  /**
   * Gets the number of symbols in `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the string size.
   */
  function stringSize(string) {
    return hasUnicode(string)
      ? unicodeSize(string)
      : asciiSize(string);
  }

  /**
   * Converts `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function stringToArray(string) {
    return hasUnicode(string)
      ? unicodeToArray(string)
      : asciiToArray(string);
  }

  /**
   * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace
   * character of `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the index of the last non-whitespace character.
   */
  function trimmedEndIndex(string) {
    var index = string.length;

    while (index-- && reWhitespace.test(string.charAt(index))) {}
    return index;
  }

  /**
   * Used by `_.unescape` to convert HTML entities to characters.
   *
   * @private
   * @param {string} chr The matched character to unescape.
   * @returns {string} Returns the unescaped character.
   */
  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);

  /**
   * Gets the size of a Unicode `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  function unicodeSize(string) {
    var result = reUnicode.lastIndex = 0;
    while (reUnicode.test(string)) {
      ++result;
    }
    return result;
  }

  /**
   * Converts a Unicode `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function unicodeToArray(string) {
    return string.match(reUnicode) || [];
  }

  /**
   * Splits a Unicode `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function unicodeWords(string) {
    return string.match(reUnicodeWord) || [];
  }

  /*--------------------------------------------------------------------------*/

  /**
   * Create a new pristine `lodash` function using the `context` object.
   *
   * @static
   * @memberOf _
   * @since 1.1.0
   * @category Util
   * @param {Object} [context=root] The context object.
   * @returns {Function} Returns a new `lodash` function.
   * @example
   *
   * _.mixin({ 'foo': _.constant('foo') });
   *
   * var lodash = _.runInContext();
   * lodash.mixin({ 'bar': lodash.constant('bar') });
   *
   * _.isFunction(_.foo);
   * // => true
   * _.isFunction(_.bar);
   * // => false
   *
   * lodash.isFunction(lodash.foo);
   * // => false
   * lodash.isFunction(lodash.bar);
   * // => true
   *
   * // Create a suped-up `defer` in Node.js.
   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
   */
  var runInContext = (function runInContext(context) {
    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));

    /** Built-in constructor references. */
    var Array = context.Array,
        Date = context.Date,
        Error = context.Error,
        Function = context.Function,
        Math = context.Math,
        Object = context.Object,
        RegExp = context.RegExp,
        String = context.String,
        TypeError = context.TypeError;

    /** Used for built-in method references. */
    var arrayProto = Array.prototype,
        funcProto = Function.prototype,
        objectProto = Object.prototype;

    /** Used to detect overreaching core-js shims. */
    var coreJsData = context['__core-js_shared__'];

    /** Used to resolve the decompiled source of functions. */
    var funcToString = funcProto.toString;

    /** Used to check objects for own properties. */
    var hasOwnProperty = objectProto.hasOwnProperty;

    /** Used to generate unique IDs. */
    var idCounter = 0;

    /** Used to detect methods masquerading as native. */
    var maskSrcKey = (function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
      return uid ? ('Symbol(src)_1.' + uid) : '';
    }());

    /**
     * Used to resolve the
     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
     * of values.
     */
    var nativeObjectToString = objectProto.toString;

    /** Used to infer the `Object` constructor. */
    var objectCtorString = funcToString.call(Object);

    /** Used to restore the original `_` reference in `_.noConflict`. */
    var oldDash = root._;

    /** Used to detect if a method is native. */
    var reIsNative = RegExp('^' +
      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
      .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
    );

    /** Built-in value references. */
    var Buffer = moduleExports ? context.Buffer : undefined,
        Symbol = context.Symbol,
        Uint8Array = context.Uint8Array,
        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,
        getPrototype = overArg(Object.getPrototypeOf, Object),
        objectCreate = Object.create,
        propertyIsEnumerable = objectProto.propertyIsEnumerable,
        splice = arrayProto.splice,
        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,
        symIterator = Symbol ? Symbol.iterator : undefined,
        symToStringTag = Symbol ? Symbol.toStringTag : undefined;

    var defineProperty = (function() {
      try {
        var func = getNative(Object, 'defineProperty');
        func({}, '', {});
        return func;
      } catch (e) {}
    }());

    /** Mocked built-ins. */
    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,
        ctxNow = Date && Date.now !== root.Date.now && Date.now,
        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeCeil = Math.ceil,
        nativeFloor = Math.floor,
        nativeGetSymbols = Object.getOwnPropertySymbols,
        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
        nativeIsFinite = context.isFinite,
        nativeJoin = arrayProto.join,
        nativeKeys = overArg(Object.keys, Object),
        nativeMax = Math.max,
        nativeMin = Math.min,
        nativeNow = Date.now,
        nativeParseInt = context.parseInt,
        nativeRandom = Math.random,
        nativeReverse = arrayProto.reverse;

    /* Built-in method references that are verified to be native. */
    var DataView = getNative(context, 'DataView'),
        Map = getNative(context, 'Map'),
        Promise = getNative(context, 'Promise'),
        Set = getNative(context, 'Set'),
        WeakMap = getNative(context, 'WeakMap'),
        nativeCreate = getNative(Object, 'create');

    /** Used to store function metadata. */
    var metaMap = WeakMap && new WeakMap;

    /** Used to lookup unminified function names. */
    var realNames = {};

    /** Used to detect maps, sets, and weakmaps. */
    var dataViewCtorString = toSource(DataView),
        mapCtorString = toSource(Map),
        promiseCtorString = toSource(Promise),
        setCtorString = toSource(Set),
        weakMapCtorString = toSource(WeakMap);

    /** Used to convert symbols to primitives and strings. */
    var symbolProto = Symbol ? Symbol.prototype : undefined,
        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,
        symbolToString = symbolProto ? symbolProto.toString : undefined;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` object which wraps `value` to enable implicit method
     * chain sequences. Methods that operate on and return arrays, collections,
     * and functions can be chained together. Methods that retrieve a single value
     * or may return a primitive value will automatically end the chain sequence
     * and return the unwrapped value. Otherwise, the value must be unwrapped
     * with `_#value`.
     *
     * Explicit chain sequences, which must be unwrapped with `_#value`, may be
     * enabled using `_.chain`.
     *
     * The execution of chained methods is lazy, that is, it's deferred until
     * `_#value` is implicitly or explicitly called.
     *
     * Lazy evaluation allows several methods to support shortcut fusion.
     * Shortcut fusion is an optimization to merge iteratee calls; this avoids
     * the creation of intermediate arrays and can greatly reduce the number of
     * iteratee executions. Sections of a chain sequence qualify for shortcut
     * fusion if the section is applied to an array and iteratees accept only
     * one argument. The heuristic for whether a section qualifies for shortcut
     * fusion is subject to change.
     *
     * Chaining is supported in custom builds as long as the `_#value` method is
     * directly or indirectly included in the build.
     *
     * In addition to lodash methods, wrappers have `Array` and `String` methods.
     *
     * The wrapper `Array` methods are:
     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
     *
     * The wrapper `String` methods are:
     * `replace` and `split`
     *
     * The wrapper methods that support shortcut fusion are:
     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
     *
     * The chainable wrapper methods are:
     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
     * `zipObject`, `zipObjectDeep`, and `zipWith`
     *
     * The wrapper methods that are **not** chainable by default are:
     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
     * `upperFirst`, `value`, and `words`
     *
     * @name _
     * @constructor
     * @category Seq
     * @param {*} value The value to wrap in a `lodash` instance.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2, 3]);
     *
     * // Returns an unwrapped value.
     * wrapped.reduce(_.add);
     * // => 6
     *
     * // Returns a wrapped value.
     * var squares = wrapped.map(square);
     *
     * _.isArray(squares);
     * // => false
     *
     * _.isArray(squares.value());
     * // => true
     */
    function lodash(value) {
      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
        if (value instanceof LodashWrapper) {
          return value;
        }
        if (hasOwnProperty.call(value, '__wrapped__')) {
          return wrapperClone(value);
        }
      }
      return new LodashWrapper(value);
    }

    /**
     * The base implementation of `_.create` without support for assigning
     * properties to the created object.
     *
     * @private
     * @param {Object} proto The object to inherit from.
     * @returns {Object} Returns the new object.
     */
    var baseCreate = (function() {
      function object() {}
      return function(proto) {
        if (!isObject(proto)) {
          return {};
        }
        if (objectCreate) {
          return objectCreate(proto);
        }
        object.prototype = proto;
        var result = new object;
        object.prototype = undefined;
        return result;
      };
    }());

    /**
     * The function whose prototype chain sequence wrappers inherit from.
     *
     * @private
     */
    function baseLodash() {
      // No operation performed.
    }

    /**
     * The base constructor for creating `lodash` wrapper objects.
     *
     * @private
     * @param {*} value The value to wrap.
     * @param {boolean} [chainAll] Enable explicit method chain sequences.
     */
    function LodashWrapper(value, chainAll) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__chain__ = !!chainAll;
      this.__index__ = 0;
      this.__values__ = undefined;
    }

    /**
     * By default, the template delimiters used by lodash are like those in
     * embedded Ruby (ERB) as well as ES2015 template strings. Change the
     * following template settings to use alternative delimiters.
     *
     * @static
     * @memberOf _
     * @type {Object}
     */
    lodash.templateSettings = {

      /**
       * Used to detect `data` property values to be HTML-escaped.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'escape': reEscape,

      /**
       * Used to detect code to be evaluated.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'evaluate': reEvaluate,

      /**
       * Used to detect `data` property values to inject.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'interpolate': reInterpolate,

      /**
       * Used to reference the data object in the template text.
       *
       * @memberOf _.templateSettings
       * @type {string}
       */
      'variable': '',

      /**
       * Used to import variables into the compiled template.
       *
       * @memberOf _.templateSettings
       * @type {Object}
       */
      'imports': {

        /**
         * A reference to the `lodash` function.
         *
         * @memberOf _.templateSettings.imports
         * @type {Function}
         */
        '_': lodash
      }
    };

    // Ensure wrappers are instances of `baseLodash`.
    lodash.prototype = baseLodash.prototype;
    lodash.prototype.constructor = lodash;

    LodashWrapper.prototype = baseCreate(baseLodash.prototype);
    LodashWrapper.prototype.constructor = LodashWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
     *
     * @private
     * @constructor
     * @param {*} value The value to wrap.
     */
    function LazyWrapper(value) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__dir__ = 1;
      this.__filtered__ = false;
      this.__iteratees__ = [];
      this.__takeCount__ = MAX_ARRAY_LENGTH;
      this.__views__ = [];
    }

    /**
     * Creates a clone of the lazy wrapper object.
     *
     * @private
     * @name clone
     * @memberOf LazyWrapper
     * @returns {Object} Returns the cloned `LazyWrapper` object.
     */
    function lazyClone() {
      var result = new LazyWrapper(this.__wrapped__);
      result.__actions__ = copyArray(this.__actions__);
      result.__dir__ = this.__dir__;
      result.__filtered__ = this.__filtered__;
      result.__iteratees__ = copyArray(this.__iteratees__);
      result.__takeCount__ = this.__takeCount__;
      result.__views__ = copyArray(this.__views__);
      return result;
    }

    /**
     * Reverses the direction of lazy iteration.
     *
     * @private
     * @name reverse
     * @memberOf LazyWrapper
     * @returns {Object} Returns the new reversed `LazyWrapper` object.
     */
    function lazyReverse() {
      if (this.__filtered__) {
        var result = new LazyWrapper(this);
        result.__dir__ = -1;
        result.__filtered__ = true;
      } else {
        result = this.clone();
        result.__dir__ *= -1;
      }
      return result;
    }

    /**
     * Extracts the unwrapped value from its lazy wrapper.
     *
     * @private
     * @name value
     * @memberOf LazyWrapper
     * @returns {*} Returns the unwrapped value.
     */
    function lazyValue() {
      var array = this.__wrapped__.value(),
          dir = this.__dir__,
          isArr = isArray(array),
          isRight = dir < 0,
          arrLength = isArr ? array.length : 0,
          view = getView(0, arrLength, this.__views__),
          start = view.start,
          end = view.end,
          length = end - start,
          index = isRight ? end : (start - 1),
          iteratees = this.__iteratees__,
          iterLength = iteratees.length,
          resIndex = 0,
          takeCount = nativeMin(length, this.__takeCount__);

      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {
        return baseWrapperValue(array, this.__actions__);
      }
      var result = [];

      outer:
      while (length-- && resIndex < takeCount) {
        index += dir;

        var iterIndex = -1,
            value = array[index];

        while (++iterIndex < iterLength) {
          var data = iteratees[iterIndex],
              iteratee = data.iteratee,
              type = data.type,
              computed = iteratee(value);

          if (type == LAZY_MAP_FLAG) {
            value = computed;
          } else if (!computed) {
            if (type == LAZY_FILTER_FLAG) {
              continue outer;
            } else {
              break outer;
            }
          }
        }
        result[resIndex++] = value;
      }
      return result;
    }

    // Ensure `LazyWrapper` is an instance of `baseLodash`.
    LazyWrapper.prototype = baseCreate(baseLodash.prototype);
    LazyWrapper.prototype.constructor = LazyWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a hash object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Hash(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the hash.
     *
     * @private
     * @name clear
     * @memberOf Hash
     */
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the hash.
     *
     * @private
     * @name delete
     * @memberOf Hash
     * @param {Object} hash The hash to modify.
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function hashDelete(key) {
      var result = this.has(key) && delete this.__data__[key];
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the hash value for `key`.
     *
     * @private
     * @name get
     * @memberOf Hash
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? undefined : result;
      }
      return hasOwnProperty.call(data, key) ? data[key] : undefined;
    }

    /**
     * Checks if a hash value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Hash
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
    }

    /**
     * Sets the hash `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Hash
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the hash instance.
     */
    function hashSet(key, value) {
      var data = this.__data__;
      this.size += this.has(key) ? 0 : 1;
      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
      return this;
    }

    // Add methods to `Hash`.
    Hash.prototype.clear = hashClear;
    Hash.prototype['delete'] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an list cache object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function ListCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the list cache.
     *
     * @private
     * @name clear
     * @memberOf ListCache
     */
    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the list cache.
     *
     * @private
     * @name delete
     * @memberOf ListCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function listCacheDelete(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      --this.size;
      return true;
    }

    /**
     * Gets the list cache value for `key`.
     *
     * @private
     * @name get
     * @memberOf ListCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function listCacheGet(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      return index < 0 ? undefined : data[index][1];
    }

    /**
     * Checks if a list cache value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf ListCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }

    /**
     * Sets the list cache `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf ListCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the list cache instance.
     */
    function listCacheSet(key, value) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        ++this.size;
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }

    // Add methods to `ListCache`.
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype['delete'] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a map cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function MapCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the map.
     *
     * @private
     * @name clear
     * @memberOf MapCache
     */
    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        'hash': new Hash,
        'map': new (Map || ListCache),
        'string': new Hash
      };
    }

    /**
     * Removes `key` and its value from the map.
     *
     * @private
     * @name delete
     * @memberOf MapCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function mapCacheDelete(key) {
      var result = getMapData(this, key)['delete'](key);
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the map value for `key`.
     *
     * @private
     * @name get
     * @memberOf MapCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }

    /**
     * Checks if a map value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf MapCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }

    /**
     * Sets the map `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf MapCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the map cache instance.
     */
    function mapCacheSet(key, value) {
      var data = getMapData(this, key),
          size = data.size;

      data.set(key, value);
      this.size += data.size == size ? 0 : 1;
      return this;
    }

    // Add methods to `MapCache`.
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype['delete'] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     *
     * Creates an array cache object to store unique values.
     *
     * @private
     * @constructor
     * @param {Array} [values] The values to cache.
     */
    function SetCache(values) {
      var index = -1,
          length = values == null ? 0 : values.length;

      this.__data__ = new MapCache;
      while (++index < length) {
        this.add(values[index]);
      }
    }

    /**
     * Adds `value` to the array cache.
     *
     * @private
     * @name add
     * @memberOf SetCache
     * @alias push
     * @param {*} value The value to cache.
     * @returns {Object} Returns the cache instance.
     */
    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }

    /**
     * Checks if `value` is in the array cache.
     *
     * @private
     * @name has
     * @memberOf SetCache
     * @param {*} value The value to search for.
     * @returns {number} Returns `true` if `value` is found, else `false`.
     */
    function setCacheHas(value) {
      return this.__data__.has(value);
    }

    // Add methods to `SetCache`.
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a stack cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Stack(entries) {
      var data = this.__data__ = new ListCache(entries);
      this.size = data.size;
    }

    /**
     * Removes all key-value entries from the stack.
     *
     * @private
     * @name clear
     * @memberOf Stack
     */
    function stackClear() {
      this.__data__ = new ListCache;
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the stack.
     *
     * @private
     * @name delete
     * @memberOf Stack
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function stackDelete(key) {
      var data = this.__data__,
          result = data['delete'](key);

      this.size = data.size;
      return result;
    }

    /**
     * Gets the stack value for `key`.
     *
     * @private
     * @name get
     * @memberOf Stack
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function stackGet(key) {
      return this.__data__.get(key);
    }

    /**
     * Checks if a stack value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Stack
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function stackHas(key) {
      return this.__data__.has(key);
    }

    /**
     * Sets the stack `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Stack
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the stack cache instance.
     */
    function stackSet(key, value) {
      var data = this.__data__;
      if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
          pairs.push([key, value]);
          this.size = ++data.size;
          return this;
        }
        data = this.__data__ = new MapCache(pairs);
      }
      data.set(key, value);
      this.size = data.size;
      return this;
    }

    // Add methods to `Stack`.
    Stack.prototype.clear = stackClear;
    Stack.prototype['delete'] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of the enumerable property names of the array-like `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @param {boolean} inherited Specify returning inherited property names.
     * @returns {Array} Returns the array of property names.
     */
    function arrayLikeKeys(value, inherited) {
      var isArr = isArray(value),
          isArg = !isArr && isArguments(value),
          isBuff = !isArr && !isArg && isBuffer(value),
          isType = !isArr && !isArg && !isBuff && isTypedArray(value),
          skipIndexes = isArr || isArg || isBuff || isType,
          result = skipIndexes ? baseTimes(value.length, String) : [],
          length = result.length;

      for (var key in value) {
        if ((inherited || hasOwnProperty.call(value, key)) &&
            !(skipIndexes && (
               // Safari 9 has enumerable `arguments.length` in strict mode.
               key == 'length' ||
               // Node.js 0.10 has enumerable non-index properties on buffers.
               (isBuff && (key == 'offset' || key == 'parent')) ||
               // PhantomJS 2 has enumerable non-index properties on typed arrays.
               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
               // Skip index properties.
               isIndex(key, length)
            ))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * A specialized version of `_.sample` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @returns {*} Returns the random element.
     */
    function arraySample(array) {
      var length = array.length;
      return length ? array[baseRandom(0, length - 1)] : undefined;
    }

    /**
     * A specialized version of `_.sampleSize` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function arraySampleSize(array, n) {
      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
    }

    /**
     * A specialized version of `_.shuffle` for arrays.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function arrayShuffle(array) {
      return shuffleSelf(copyArray(array));
    }

    /**
     * This function is like `assignValue` except that it doesn't assign
     * `undefined` values.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignMergeValue(object, key, value) {
      if ((value !== undefined && !eq(object[key], value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Assigns `value` to `key` of `object` if the existing value is not equivalent
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignValue(object, key, value) {
      var objValue = object[key];
      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Gets the index at which the `key` is found in `array` of key-value pairs.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {*} key The key to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     */
    function assocIndexOf(array, key) {
      var length = array.length;
      while (length--) {
        if (eq(array[length][0], key)) {
          return length;
        }
      }
      return -1;
    }

    /**
     * Aggregates elements of `collection` on `accumulator` with keys transformed
     * by `iteratee` and values set by `setter`.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform keys.
     * @param {Object} accumulator The initial aggregated object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseAggregator(collection, setter, iteratee, accumulator) {
      baseEach(collection, function(value, key, collection) {
        setter(accumulator, value, iteratee(value), collection);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.assign` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssign(object, source) {
      return object && copyObject(source, keys(source), object);
    }

    /**
     * The base implementation of `_.assignIn` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssignIn(object, source) {
      return object && copyObject(source, keysIn(source), object);
    }

    /**
     * The base implementation of `assignValue` and `assignMergeValue` without
     * value checks.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function baseAssignValue(object, key, value) {
      if (key == '__proto__' && defineProperty) {
        defineProperty(object, key, {
          'configurable': true,
          'enumerable': true,
          'value': value,
          'writable': true
        });
      } else {
        object[key] = value;
      }
    }

    /**
     * The base implementation of `_.at` without support for individual paths.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {string[]} paths The property paths to pick.
     * @returns {Array} Returns the picked elements.
     */
    function baseAt(object, paths) {
      var index = -1,
          length = paths.length,
          result = Array(length),
          skip = object == null;

      while (++index < length) {
        result[index] = skip ? undefined : get(object, paths[index]);
      }
      return result;
    }

    /**
     * The base implementation of `_.clamp` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     */
    function baseClamp(number, lower, upper) {
      if (number === number) {
        if (upper !== undefined) {
          number = number <= upper ? number : upper;
        }
        if (lower !== undefined) {
          number = number >= lower ? number : lower;
        }
      }
      return number;
    }

    /**
     * The base implementation of `_.clone` and `_.cloneDeep` which tracks
     * traversed objects.
     *
     * @private
     * @param {*} value The value to clone.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Deep clone
     *  2 - Flatten inherited properties
     *  4 - Clone symbols
     * @param {Function} [customizer] The function to customize cloning.
     * @param {string} [key] The key of `value`.
     * @param {Object} [object] The parent object of `value`.
     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
     * @returns {*} Returns the cloned value.
     */
    function baseClone(value, bitmask, customizer, key, object, stack) {
      var result,
          isDeep = bitmask & CLONE_DEEP_FLAG,
          isFlat = bitmask & CLONE_FLAT_FLAG,
          isFull = bitmask & CLONE_SYMBOLS_FLAG;

      if (customizer) {
        result = object ? customizer(value, key, object, stack) : customizer(value);
      }
      if (result !== undefined) {
        return result;
      }
      if (!isObject(value)) {
        return value;
      }
      var isArr = isArray(value);
      if (isArr) {
        result = initCloneArray(value);
        if (!isDeep) {
          return copyArray(value, result);
        }
      } else {
        var tag = getTag(value),
            isFunc = tag == funcTag || tag == genTag;

        if (isBuffer(value)) {
          return cloneBuffer(value, isDeep);
        }
        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
          result = (isFlat || isFunc) ? {} : initCloneObject(value);
          if (!isDeep) {
            return isFlat
              ? copySymbolsIn(value, baseAssignIn(result, value))
              : copySymbols(value, baseAssign(result, value));
          }
        } else {
          if (!cloneableTags[tag]) {
            return object ? value : {};
          }
          result = initCloneByTag(value, tag, isDeep);
        }
      }
      // Check for circular references and return its corresponding clone.
      stack || (stack = new Stack);
      var stacked = stack.get(value);
      if (stacked) {
        return stacked;
      }
      stack.set(value, result);

      if (isSet(value)) {
        value.forEach(function(subValue) {
          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
        });
      } else if (isMap(value)) {
        value.forEach(function(subValue, key) {
          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
        });
      }

      var keysFunc = isFull
        ? (isFlat ? getAllKeysIn : getAllKeys)
        : (isFlat ? keysIn : keys);

      var props = isArr ? undefined : keysFunc(value);
      arrayEach(props || value, function(subValue, key) {
        if (props) {
          key = subValue;
          subValue = value[key];
        }
        // Recursively populate clone (susceptible to call stack limits).
        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
      });
      return result;
    }

    /**
     * The base implementation of `_.conforms` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     */
    function baseConforms(source) {
      var props = keys(source);
      return function(object) {
        return baseConformsTo(object, source, props);
      };
    }

    /**
     * The base implementation of `_.conformsTo` which accepts `props` to check.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     */
    function baseConformsTo(object, source, props) {
      var length = props.length;
      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (length--) {
        var key = props[length],
            predicate = source[key],
            value = object[key];

        if ((value === undefined && !(key in object)) || !predicate(value)) {
          return false;
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.delay` and `_.defer` which accepts `args`
     * to provide to `func`.
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {Array} args The arguments to provide to `func`.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    function baseDelay(func, wait, args) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return setTimeout(function() { func.apply(undefined, args); }, wait);
    }

    /**
     * The base implementation of methods like `_.difference` without support
     * for excluding multiple arrays or iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Array} values The values to exclude.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     */
    function baseDifference(array, values, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          isCommon = true,
          length = array.length,
          result = [],
          valuesLength = values.length;

      if (!length) {
        return result;
      }
      if (iteratee) {
        values = arrayMap(values, baseUnary(iteratee));
      }
      if (comparator) {
        includes = arrayIncludesWith;
        isCommon = false;
      }
      else if (values.length >= LARGE_ARRAY_SIZE) {
        includes = cacheHas;
        isCommon = false;
        values = new SetCache(values);
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee == null ? value : iteratee(value);

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var valuesIndex = valuesLength;
          while (valuesIndex--) {
            if (values[valuesIndex] === computed) {
              continue outer;
            }
          }
          result.push(value);
        }
        else if (!includes(values, computed, comparator)) {
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.forEach` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEach = createBaseEach(baseForOwn);

    /**
     * The base implementation of `_.forEachRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEachRight = createBaseEach(baseForOwnRight, true);

    /**
     * The base implementation of `_.every` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`
     */
    function baseEvery(collection, predicate) {
      var result = true;
      baseEach(collection, function(value, index, collection) {
        result = !!predicate(value, index, collection);
        return result;
      });
      return result;
    }

    /**
     * The base implementation of methods like `_.max` and `_.min` which accepts a
     * `comparator` to determine the extremum value.
     *
     * @private
     * @param {Array} array The array to iterate over.
     * @param {Function} iteratee The iteratee invoked per iteration.
     * @param {Function} comparator The comparator used to compare values.
     * @returns {*} Returns the extremum value.
     */
    function baseExtremum(array, iteratee, comparator) {
      var index = -1,
          length = array.length;

      while (++index < length) {
        var value = array[index],
            current = iteratee(value);

        if (current != null && (computed === undefined
              ? (current === current && !isSymbol(current))
              : comparator(current, computed)
            )) {
          var computed = current,
              result = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.fill` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     */
    function baseFill(array, value, start, end) {
      var length = array.length;

      start = toInteger(start);
      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = (end === undefined || end > length) ? length : toInteger(end);
      if (end < 0) {
        end += length;
      }
      end = start > end ? 0 : toLength(end);
      while (start < end) {
        array[start++] = value;
      }
      return array;
    }

    /**
     * The base implementation of `_.filter` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     */
    function baseFilter(collection, predicate) {
      var result = [];
      baseEach(collection, function(value, index, collection) {
        if (predicate(value, index, collection)) {
          result.push(value);
        }
      });
      return result;
    }

    /**
     * The base implementation of `_.flatten` with support for restricting flattening.
     *
     * @private
     * @param {Array} array The array to flatten.
     * @param {number} depth The maximum recursion depth.
     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
     * @param {Array} [result=[]] The initial result value.
     * @returns {Array} Returns the new flattened array.
     */
    function baseFlatten(array, depth, predicate, isStrict, result) {
      var index = -1,
          length = array.length;

      predicate || (predicate = isFlattenable);
      result || (result = []);

      while (++index < length) {
        var value = array[index];
        if (depth > 0 && predicate(value)) {
          if (depth > 1) {
            // Recursively flatten arrays (susceptible to call stack limits).
            baseFlatten(value, depth - 1, predicate, isStrict, result);
          } else {
            arrayPush(result, value);
          }
        } else if (!isStrict) {
          result[result.length] = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `baseForOwn` which iterates over `object`
     * properties returned by `keysFunc` and invokes `iteratee` for each property.
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseFor = createBaseFor();

    /**
     * This function is like `baseFor` except that it iterates over properties
     * in the opposite order.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseForRight = createBaseFor(true);

    /**
     * The base implementation of `_.forOwn` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwn(object, iteratee) {
      return object && baseFor(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwnRight(object, iteratee) {
      return object && baseForRight(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.functions` which creates an array of
     * `object` function property names filtered from `props`.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Array} props The property names to filter.
     * @returns {Array} Returns the function names.
     */
    function baseFunctions(object, props) {
      return arrayFilter(props, function(key) {
        return isFunction(object[key]);
      });
    }

    /**
     * The base implementation of `_.get` without support for default values.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @returns {*} Returns the resolved value.
     */
    function baseGet(object, path) {
      path = castPath(path, object);

      var index = 0,
          length = path.length;

      while (object != null && index < length) {
        object = object[toKey(path[index++])];
      }
      return (index && index == length) ? object : undefined;
    }

    /**
     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
     * `keysFunc` and `symbolsFunc` to get the enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @param {Function} symbolsFunc The function to get the symbols of `object`.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
      var result = keysFunc(object);
      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
    }

    /**
     * The base implementation of `getTag` without fallbacks for buggy environments.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    function baseGetTag(value) {
      if (value == null) {
        return value === undefined ? undefinedTag : nullTag;
      }
      return (symToStringTag && symToStringTag in Object(value))
        ? getRawTag(value)
        : objectToString(value);
    }

    /**
     * The base implementation of `_.gt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     */
    function baseGt(value, other) {
      return value > other;
    }

    /**
     * The base implementation of `_.has` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHas(object, key) {
      return object != null && hasOwnProperty.call(object, key);
    }

    /**
     * The base implementation of `_.hasIn` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHasIn(object, key) {
      return object != null && key in Object(object);
    }

    /**
     * The base implementation of `_.inRange` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to check.
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     */
    function baseInRange(number, start, end) {
      return number >= nativeMin(start, end) && number < nativeMax(start, end);
    }

    /**
     * The base implementation of methods like `_.intersection`, without support
     * for iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of shared values.
     */
    function baseIntersection(arrays, iteratee, comparator) {
      var includes = comparator ? arrayIncludesWith : arrayIncludes,
          length = arrays[0].length,
          othLength = arrays.length,
          othIndex = othLength,
          caches = Array(othLength),
          maxLength = Infinity,
          result = [];

      while (othIndex--) {
        var array = arrays[othIndex];
        if (othIndex && iteratee) {
          array = arrayMap(array, baseUnary(iteratee));
        }
        maxLength = nativeMin(array.length, maxLength);
        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
          ? new SetCache(othIndex && array)
          : undefined;
      }
      array = arrays[0];

      var index = -1,
          seen = caches[0];

      outer:
      while (++index < length && result.length < maxLength) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (!(seen
              ? cacheHas(seen, computed)
              : includes(result, computed, comparator)
            )) {
          othIndex = othLength;
          while (--othIndex) {
            var cache = caches[othIndex];
            if (!(cache
                  ? cacheHas(cache, computed)
                  : includes(arrays[othIndex], computed, comparator))
                ) {
              continue outer;
            }
          }
          if (seen) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.invert` and `_.invertBy` which inverts
     * `object` with values transformed by `iteratee` and set by `setter`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform values.
     * @param {Object} accumulator The initial inverted object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseInverter(object, setter, iteratee, accumulator) {
      baseForOwn(object, function(value, key, object) {
        setter(accumulator, iteratee(value), key, object);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.invoke` without support for individual
     * method arguments.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {Array} args The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     */
    function baseInvoke(object, path, args) {
      path = castPath(path, object);
      object = parent(object, path);
      var func = object == null ? object : object[toKey(last(path))];
      return func == null ? undefined : apply(func, object, args);
    }

    /**
     * The base implementation of `_.isArguments`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     */
    function baseIsArguments(value) {
      return isObjectLike(value) && baseGetTag(value) == argsTag;
    }

    /**
     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     */
    function baseIsArrayBuffer(value) {
      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
    }

    /**
     * The base implementation of `_.isDate` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     */
    function baseIsDate(value) {
      return isObjectLike(value) && baseGetTag(value) == dateTag;
    }

    /**
     * The base implementation of `_.isEqual` which supports partial comparisons
     * and tracks traversed objects.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Unordered comparison
     *  2 - Partial comparison
     * @param {Function} [customizer] The function to customize comparisons.
     * @param {Object} [stack] Tracks traversed `value` and `other` objects.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     */
    function baseIsEqual(value, other, bitmask, customizer, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
    }

    /**
     * A specialized version of `baseIsEqual` for arrays and objects which performs
     * deep comparisons and tracks traversed objects enabling objects with circular
     * references to be compared.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} [stack] Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
      var objIsArr = isArray(object),
          othIsArr = isArray(other),
          objTag = objIsArr ? arrayTag : getTag(object),
          othTag = othIsArr ? arrayTag : getTag(other);

      objTag = objTag == argsTag ? objectTag : objTag;
      othTag = othTag == argsTag ? objectTag : othTag;

      var objIsObj = objTag == objectTag,
          othIsObj = othTag == objectTag,
          isSameTag = objTag == othTag;

      if (isSameTag && isBuffer(object)) {
        if (!isBuffer(other)) {
          return false;
        }
        objIsArr = true;
        objIsObj = false;
      }
      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack);
        return (objIsArr || isTypedArray(object))
          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
      }
      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object.value() : object,
              othUnwrapped = othIsWrapped ? other.value() : other;

          stack || (stack = new Stack);
          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack);
      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
    }

    /**
     * The base implementation of `_.isMap` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     */
    function baseIsMap(value) {
      return isObjectLike(value) && getTag(value) == mapTag;
    }

    /**
     * The base implementation of `_.isMatch` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Array} matchData The property names, values, and compare flags to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     */
    function baseIsMatch(object, source, matchData, customizer) {
      var index = matchData.length,
          length = index,
          noCustomizer = !customizer;

      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (index--) {
        var data = matchData[index];
        if ((noCustomizer && data[2])
              ? data[1] !== object[data[0]]
              : !(data[0] in object)
            ) {
          return false;
        }
      }
      while (++index < length) {
        data = matchData[index];
        var key = data[0],
            objValue = object[key],
            srcValue = data[1];

        if (noCustomizer && data[2]) {
          if (objValue === undefined && !(key in object)) {
            return false;
          }
        } else {
          var stack = new Stack;
          if (customizer) {
            var result = customizer(objValue, srcValue, key, object, source, stack);
          }
          if (!(result === undefined
                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
                : result
              )) {
            return false;
          }
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.isNative` without bad shim checks.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     */
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }

    /**
     * The base implementation of `_.isRegExp` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     */
    function baseIsRegExp(value) {
      return isObjectLike(value) && baseGetTag(value) == regexpTag;
    }

    /**
     * The base implementation of `_.isSet` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     */
    function baseIsSet(value) {
      return isObjectLike(value) && getTag(value) == setTag;
    }

    /**
     * The base implementation of `_.isTypedArray` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     */
    function baseIsTypedArray(value) {
      return isObjectLike(value) &&
        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }

    /**
     * The base implementation of `_.iteratee`.
     *
     * @private
     * @param {*} [value=_.identity] The value to convert to an iteratee.
     * @returns {Function} Returns the iteratee.
     */
    function baseIteratee(value) {
      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
      if (typeof value == 'function') {
        return value;
      }
      if (value == null) {
        return identity;
      }
      if (typeof value == 'object') {
        return isArray(value)
          ? baseMatchesProperty(value[0], value[1])
          : baseMatches(value);
      }
      return property(value);
    }

    /**
     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeys(object) {
      if (!isPrototype(object)) {
        return nativeKeys(object);
      }
      var result = [];
      for (var key in Object(object)) {
        if (hasOwnProperty.call(object, key) && key != 'constructor') {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeysIn(object) {
      if (!isObject(object)) {
        return nativeKeysIn(object);
      }
      var isProto = isPrototype(object),
          result = [];

      for (var key in object) {
        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.lt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     */
    function baseLt(value, other) {
      return value < other;
    }

    /**
     * The base implementation of `_.map` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     */
    function baseMap(collection, iteratee) {
      var index = -1,
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value, key, collection) {
        result[++index] = iteratee(value, key, collection);
      });
      return result;
    }

    /**
     * The base implementation of `_.matches` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatches(source) {
      var matchData = getMatchData(source);
      if (matchData.length == 1 && matchData[0][2]) {
        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
      }
      return function(object) {
        return object === source || baseIsMatch(object, source, matchData);
      };
    }

    /**
     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
     *
     * @private
     * @param {string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatchesProperty(path, srcValue) {
      if (isKey(path) && isStrictComparable(srcValue)) {
        return matchesStrictComparable(toKey(path), srcValue);
      }
      return function(object) {
        var objValue = get(object, path);
        return (objValue === undefined && objValue === srcValue)
          ? hasIn(object, path)
          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
      };
    }

    /**
     * The base implementation of `_.merge` without support for multiple sources.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} [customizer] The function to customize merged values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMerge(object, source, srcIndex, customizer, stack) {
      if (object === source) {
        return;
      }
      baseFor(source, function(srcValue, key) {
        stack || (stack = new Stack);
        if (isObject(srcValue)) {
          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
        }
        else {
          var newValue = customizer
            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)
            : undefined;

          if (newValue === undefined) {
            newValue = srcValue;
          }
          assignMergeValue(object, key, newValue);
        }
      }, keysIn);
    }

    /**
     * A specialized version of `baseMerge` for arrays and objects which performs
     * deep merges and tracks traversed objects enabling objects with circular
     * references to be merged.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {string} key The key of the value to merge.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} mergeFunc The function to merge values.
     * @param {Function} [customizer] The function to customize assigned values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
      var objValue = safeGet(object, key),
          srcValue = safeGet(source, key),
          stacked = stack.get(srcValue);

      if (stacked) {
        assignMergeValue(object, key, stacked);
        return;
      }
      var newValue = customizer
        ? customizer(objValue, srcValue, (key + ''), object, source, stack)
        : undefined;

      var isCommon = newValue === undefined;

      if (isCommon) {
        var isArr = isArray(srcValue),
            isBuff = !isArr && isBuffer(srcValue),
            isTyped = !isArr && !isBuff && isTypedArray(srcValue);

        newValue = srcValue;
        if (isArr || isBuff || isTyped) {
          if (isArray(objValue)) {
            newValue = objValue;
          }
          else if (isArrayLikeObject(objValue)) {
            newValue = copyArray(objValue);
          }
          else if (isBuff) {
            isCommon = false;
            newValue = cloneBuffer(srcValue, true);
          }
          else if (isTyped) {
            isCommon = false;
            newValue = cloneTypedArray(srcValue, true);
          }
          else {
            newValue = [];
          }
        }
        else if (isPlainObject(srcValue) || isArguments(srcValue)) {
          newValue = objValue;
          if (isArguments(objValue)) {
            newValue = toPlainObject(objValue);
          }
          else if (!isObject(objValue) || isFunction(objValue)) {
            newValue = initCloneObject(srcValue);
          }
        }
        else {
          isCommon = false;
        }
      }
      if (isCommon) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, newValue);
        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
        stack['delete'](srcValue);
      }
      assignMergeValue(object, key, newValue);
    }

    /**
     * The base implementation of `_.nth` which doesn't coerce arguments.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {number} n The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     */
    function baseNth(array, n) {
      var length = array.length;
      if (!length) {
        return;
      }
      n += n < 0 ? length : 0;
      return isIndex(n, length) ? array[n] : undefined;
    }

    /**
     * The base implementation of `_.orderBy` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
     * @param {string[]} orders The sort orders of `iteratees`.
     * @returns {Array} Returns the new sorted array.
     */
    function baseOrderBy(collection, iteratees, orders) {
      if (iteratees.length) {
        iteratees = arrayMap(iteratees, function(iteratee) {
          if (isArray(iteratee)) {
            return function(value) {
              return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);
            }
          }
          return iteratee;
        });
      } else {
        iteratees = [identity];
      }

      var index = -1;
      iteratees = arrayMap(iteratees, baseUnary(getIteratee()));

      var result = baseMap(collection, function(value, key, collection) {
        var criteria = arrayMap(iteratees, function(iteratee) {
          return iteratee(value);
        });
        return { 'criteria': criteria, 'index': ++index, 'value': value };
      });

      return baseSortBy(result, function(object, other) {
        return compareMultiple(object, other, orders);
      });
    }

    /**
     * The base implementation of `_.pick` without support for individual
     * property identifiers.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @returns {Object} Returns the new object.
     */
    function basePick(object, paths) {
      return basePickBy(object, paths, function(value, path) {
        return hasIn(object, path);
      });
    }

    /**
     * The base implementation of  `_.pickBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @param {Function} predicate The function invoked per property.
     * @returns {Object} Returns the new object.
     */
    function basePickBy(object, paths, predicate) {
      var index = -1,
          length = paths.length,
          result = {};

      while (++index < length) {
        var path = paths[index],
            value = baseGet(object, path);

        if (predicate(value, path)) {
          baseSet(result, castPath(path, object), value);
        }
      }
      return result;
    }

    /**
     * A specialized version of `baseProperty` which supports deep paths.
     *
     * @private
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     */
    function basePropertyDeep(path) {
      return function(object) {
        return baseGet(object, path);
      };
    }

    /**
     * The base implementation of `_.pullAllBy` without support for iteratee
     * shorthands.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     */
    function basePullAll(array, values, iteratee, comparator) {
      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
          index = -1,
          length = values.length,
          seen = array;

      if (array === values) {
        values = copyArray(values);
      }
      if (iteratee) {
        seen = arrayMap(array, baseUnary(iteratee));
      }
      while (++index < length) {
        var fromIndex = 0,
            value = values[index],
            computed = iteratee ? iteratee(value) : value;

        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
          if (seen !== array) {
            splice.call(seen, fromIndex, 1);
          }
          splice.call(array, fromIndex, 1);
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.pullAt` without support for individual
     * indexes or capturing the removed elements.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {number[]} indexes The indexes of elements to remove.
     * @returns {Array} Returns `array`.
     */
    function basePullAt(array, indexes) {
      var length = array ? indexes.length : 0,
          lastIndex = length - 1;

      while (length--) {
        var index = indexes[length];
        if (length == lastIndex || index !== previous) {
          var previous = index;
          if (isIndex(index)) {
            splice.call(array, index, 1);
          } else {
            baseUnset(array, index);
          }
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.random` without support for returning
     * floating-point numbers.
     *
     * @private
     * @param {number} lower The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the random number.
     */
    function baseRandom(lower, upper) {
      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
    }

    /**
     * The base implementation of `_.range` and `_.rangeRight` which doesn't
     * coerce arguments.
     *
     * @private
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @param {number} step The value to increment or decrement by.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the range of numbers.
     */
    function baseRange(start, end, step, fromRight) {
      var index = -1,
          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
          result = Array(length);

      while (length--) {
        result[fromRight ? length : ++index] = start;
        start += step;
      }
      return result;
    }

    /**
     * The base implementation of `_.repeat` which doesn't coerce arguments.
     *
     * @private
     * @param {string} string The string to repeat.
     * @param {number} n The number of times to repeat the string.
     * @returns {string} Returns the repeated string.
     */
    function baseRepeat(string, n) {
      var result = '';
      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
        return result;
      }
      // Leverage the exponentiation by squaring algorithm for a faster repeat.
      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
      do {
        if (n % 2) {
          result += string;
        }
        n = nativeFloor(n / 2);
        if (n) {
          string += string;
        }
      } while (n);

      return result;
    }

    /**
     * The base implementation of `_.rest` which doesn't validate or coerce arguments.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     */
    function baseRest(func, start) {
      return setToString(overRest(func, start, identity), func + '');
    }

    /**
     * The base implementation of `_.sample`.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     */
    function baseSample(collection) {
      return arraySample(values(collection));
    }

    /**
     * The base implementation of `_.sampleSize` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function baseSampleSize(collection, n) {
      var array = values(collection);
      return shuffleSelf(array, baseClamp(n, 0, array.length));
    }

    /**
     * The base implementation of `_.set`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseSet(object, path, value, customizer) {
      if (!isObject(object)) {
        return object;
      }
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          lastIndex = length - 1,
          nested = object;

      while (nested != null && ++index < length) {
        var key = toKey(path[index]),
            newValue = value;

        if (key === '__proto__' || key === 'constructor' || key === 'prototype') {
          return object;
        }

        if (index != lastIndex) {
          var objValue = nested[key];
          newValue = customizer ? customizer(objValue, key, nested) : undefined;
          if (newValue === undefined) {
            newValue = isObject(objValue)
              ? objValue
              : (isIndex(path[index + 1]) ? [] : {});
          }
        }
        assignValue(nested, key, newValue);
        nested = nested[key];
      }
      return object;
    }

    /**
     * The base implementation of `setData` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var baseSetData = !metaMap ? identity : function(func, data) {
      metaMap.set(func, data);
      return func;
    };

    /**
     * The base implementation of `setToString` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var baseSetToString = !defineProperty ? identity : function(func, string) {
      return defineProperty(func, 'toString', {
        'configurable': true,
        'enumerable': false,
        'value': constant(string),
        'writable': true
      });
    };

    /**
     * The base implementation of `_.shuffle`.
     *
     * @private
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function baseShuffle(collection) {
      return shuffleSelf(values(collection));
    }

    /**
     * The base implementation of `_.slice` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseSlice(array, start, end) {
      var index = -1,
          length = array.length;

      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = end > length ? length : end;
      if (end < 0) {
        end += length;
      }
      length = start > end ? 0 : ((end - start) >>> 0);
      start >>>= 0;

      var result = Array(length);
      while (++index < length) {
        result[index] = array[index + start];
      }
      return result;
    }

    /**
     * The base implementation of `_.some` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     */
    function baseSome(collection, predicate) {
      var result;

      baseEach(collection, function(value, index, collection) {
        result = predicate(value, index, collection);
        return !result;
      });
      return !!result;
    }

    /**
     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
     * performs a binary search of `array` to determine the index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndex(array, value, retHighest) {
      var low = 0,
          high = array == null ? low : array.length;

      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
        while (low < high) {
          var mid = (low + high) >>> 1,
              computed = array[mid];

          if (computed !== null && !isSymbol(computed) &&
              (retHighest ? (computed <= value) : (computed < value))) {
            low = mid + 1;
          } else {
            high = mid;
          }
        }
        return high;
      }
      return baseSortedIndexBy(array, value, identity, retHighest);
    }

    /**
     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
     * which invokes `iteratee` for `value` and each element of `array` to compute
     * their sort ranking. The iteratee is invoked with one argument; (value).
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} iteratee The iteratee invoked per element.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndexBy(array, value, iteratee, retHighest) {
      var low = 0,
          high = array == null ? 0 : array.length;
      if (high === 0) {
        return 0;
      }

      value = iteratee(value);
      var valIsNaN = value !== value,
          valIsNull = value === null,
          valIsSymbol = isSymbol(value),
          valIsUndefined = value === undefined;

      while (low < high) {
        var mid = nativeFloor((low + high) / 2),
            computed = iteratee(array[mid]),
            othIsDefined = computed !== undefined,
            othIsNull = computed === null,
            othIsReflexive = computed === computed,
            othIsSymbol = isSymbol(computed);

        if (valIsNaN) {
          var setLow = retHighest || othIsReflexive;
        } else if (valIsUndefined) {
          setLow = othIsReflexive && (retHighest || othIsDefined);
        } else if (valIsNull) {
          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
        } else if (valIsSymbol) {
          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
        } else if (othIsNull || othIsSymbol) {
          setLow = false;
        } else {
          setLow = retHighest ? (computed <= value) : (computed < value);
        }
        if (setLow) {
          low = mid + 1;
        } else {
          high = mid;
        }
      }
      return nativeMin(high, MAX_ARRAY_INDEX);
    }

    /**
     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without
     * support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseSortedUniq(array, iteratee) {
      var index = -1,
          length = array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        if (!index || !eq(computed, seen)) {
          var seen = computed;
          result[resIndex++] = value === 0 ? 0 : value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.toNumber` which doesn't ensure correct
     * conversions of binary, hexadecimal, or octal string values.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     */
    function baseToNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      return +value;
    }

    /**
     * The base implementation of `_.toString` which doesn't convert nullish
     * values to empty strings.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {string} Returns the string.
     */
    function baseToString(value) {
      // Exit early for strings to avoid a performance hit in some environments.
      if (typeof value == 'string') {
        return value;
      }
      if (isArray(value)) {
        // Recursively convert values (susceptible to call stack limits).
        return arrayMap(value, baseToString) + '';
      }
      if (isSymbol(value)) {
        return symbolToString ? symbolToString.call(value) : '';
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * The base implementation of `_.uniqBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseUniq(array, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          length = array.length,
          isCommon = true,
          result = [],
          seen = result;

      if (comparator) {
        isCommon = false;
        includes = arrayIncludesWith;
      }
      else if (length >= LARGE_ARRAY_SIZE) {
        var set = iteratee ? null : createSet(array);
        if (set) {
          return setToArray(set);
        }
        isCommon = false;
        includes = cacheHas;
        seen = new SetCache;
      }
      else {
        seen = iteratee ? [] : result;
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var seenIndex = seen.length;
          while (seenIndex--) {
            if (seen[seenIndex] === computed) {
              continue outer;
            }
          }
          if (iteratee) {
            seen.push(computed);
          }
          result.push(value);
        }
        else if (!includes(seen, computed, comparator)) {
          if (seen !== result) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.unset`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The property path to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     */
    function baseUnset(object, path) {
      path = castPath(path, object);
      object = parent(object, path);
      return object == null || delete object[toKey(last(path))];
    }

    /**
     * The base implementation of `_.update`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to update.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseUpdate(object, path, updater, customizer) {
      return baseSet(object, path, updater(baseGet(object, path)), customizer);
    }

    /**
     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
     * without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {Function} predicate The function invoked per iteration.
     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseWhile(array, predicate, isDrop, fromRight) {
      var length = array.length,
          index = fromRight ? length : -1;

      while ((fromRight ? index-- : ++index < length) &&
        predicate(array[index], index, array)) {}

      return isDrop
        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))
        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));
    }

    /**
     * The base implementation of `wrapperValue` which returns the result of
     * performing a sequence of actions on the unwrapped `value`, where each
     * successive action is supplied the return value of the previous.
     *
     * @private
     * @param {*} value The unwrapped value.
     * @param {Array} actions Actions to perform to resolve the unwrapped value.
     * @returns {*} Returns the resolved value.
     */
    function baseWrapperValue(value, actions) {
      var result = value;
      if (result instanceof LazyWrapper) {
        result = result.value();
      }
      return arrayReduce(actions, function(result, action) {
        return action.func.apply(action.thisArg, arrayPush([result], action.args));
      }, result);
    }

    /**
     * The base implementation of methods like `_.xor`, without support for
     * iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of values.
     */
    function baseXor(arrays, iteratee, comparator) {
      var length = arrays.length;
      if (length < 2) {
        return length ? baseUniq(arrays[0]) : [];
      }
      var index = -1,
          result = Array(length);

      while (++index < length) {
        var array = arrays[index],
            othIndex = -1;

        while (++othIndex < length) {
          if (othIndex != index) {
            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);
          }
        }
      }
      return baseUniq(baseFlatten(result, 1), iteratee, comparator);
    }

    /**
     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
     *
     * @private
     * @param {Array} props The property identifiers.
     * @param {Array} values The property values.
     * @param {Function} assignFunc The function to assign values.
     * @returns {Object} Returns the new object.
     */
    function baseZipObject(props, values, assignFunc) {
      var index = -1,
          length = props.length,
          valsLength = values.length,
          result = {};

      while (++index < length) {
        var value = index < valsLength ? values[index] : undefined;
        assignFunc(result, props[index], value);
      }
      return result;
    }

    /**
     * Casts `value` to an empty array if it's not an array like object.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Array|Object} Returns the cast array-like object.
     */
    function castArrayLikeObject(value) {
      return isArrayLikeObject(value) ? value : [];
    }

    /**
     * Casts `value` to `identity` if it's not a function.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Function} Returns cast function.
     */
    function castFunction(value) {
      return typeof value == 'function' ? value : identity;
    }

    /**
     * Casts `value` to a path array if it's not one.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {Object} [object] The object to query keys on.
     * @returns {Array} Returns the cast property path array.
     */
    function castPath(value, object) {
      if (isArray(value)) {
        return value;
      }
      return isKey(value, object) ? [value] : stringToPath(toString(value));
    }

    /**
     * A `baseRest` alias which can be replaced with `identity` by module
     * replacement plugins.
     *
     * @private
     * @type {Function}
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    var castRest = baseRest;

    /**
     * Casts `array` to a slice if it's needed.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {number} start The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the cast slice.
     */
    function castSlice(array, start, end) {
      var length = array.length;
      end = end === undefined ? length : end;
      return (!start && end >= length) ? array : baseSlice(array, start, end);
    }

    /**
     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).
     *
     * @private
     * @param {number|Object} id The timer id or timeout object of the timer to clear.
     */
    var clearTimeout = ctxClearTimeout || function(id) {
      return root.clearTimeout(id);
    };

    /**
     * Creates a clone of  `buffer`.
     *
     * @private
     * @param {Buffer} buffer The buffer to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Buffer} Returns the cloned buffer.
     */
    function cloneBuffer(buffer, isDeep) {
      if (isDeep) {
        return buffer.slice();
      }
      var length = buffer.length,
          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

      buffer.copy(result);
      return result;
    }

    /**
     * Creates a clone of `arrayBuffer`.
     *
     * @private
     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
     * @returns {ArrayBuffer} Returns the cloned array buffer.
     */
    function cloneArrayBuffer(arrayBuffer) {
      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
      new Uint8Array(result).set(new Uint8Array(arrayBuffer));
      return result;
    }

    /**
     * Creates a clone of `dataView`.
     *
     * @private
     * @param {Object} dataView The data view to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned data view.
     */
    function cloneDataView(dataView, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
    }

    /**
     * Creates a clone of `regexp`.
     *
     * @private
     * @param {Object} regexp The regexp to clone.
     * @returns {Object} Returns the cloned regexp.
     */
    function cloneRegExp(regexp) {
      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
      result.lastIndex = regexp.lastIndex;
      return result;
    }

    /**
     * Creates a clone of the `symbol` object.
     *
     * @private
     * @param {Object} symbol The symbol object to clone.
     * @returns {Object} Returns the cloned symbol object.
     */
    function cloneSymbol(symbol) {
      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
    }

    /**
     * Creates a clone of `typedArray`.
     *
     * @private
     * @param {Object} typedArray The typed array to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned typed array.
     */
    function cloneTypedArray(typedArray, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
    }

    /**
     * Compares values to sort them in ascending order.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {number} Returns the sort order indicator for `value`.
     */
    function compareAscending(value, other) {
      if (value !== other) {
        var valIsDefined = value !== undefined,
            valIsNull = value === null,
            valIsReflexive = value === value,
            valIsSymbol = isSymbol(value);

        var othIsDefined = other !== undefined,
            othIsNull = other === null,
            othIsReflexive = other === other,
            othIsSymbol = isSymbol(other);

        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
            (valIsNull && othIsDefined && othIsReflexive) ||
            (!valIsDefined && othIsReflexive) ||
            !valIsReflexive) {
          return 1;
        }
        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
            (othIsNull && valIsDefined && valIsReflexive) ||
            (!othIsDefined && valIsReflexive) ||
            !othIsReflexive) {
          return -1;
        }
      }
      return 0;
    }

    /**
     * Used by `_.orderBy` to compare multiple properties of a value to another
     * and stable sort them.
     *
     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
     * specify an order of "desc" for descending or "asc" for ascending sort order
     * of corresponding values.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {boolean[]|string[]} orders The order to sort by for each property.
     * @returns {number} Returns the sort order indicator for `object`.
     */
    function compareMultiple(object, other, orders) {
      var index = -1,
          objCriteria = object.criteria,
          othCriteria = other.criteria,
          length = objCriteria.length,
          ordersLength = orders.length;

      while (++index < length) {
        var result = compareAscending(objCriteria[index], othCriteria[index]);
        if (result) {
          if (index >= ordersLength) {
            return result;
          }
          var order = orders[index];
          return result * (order == 'desc' ? -1 : 1);
        }
      }
      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
      // that causes it, under certain circumstances, to provide the same value for
      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
      // for more details.
      //
      // This also ensures a stable sort in V8 and other engines.
      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
      return object.index - other.index;
    }

    /**
     * Creates an array that is the composition of partially applied arguments,
     * placeholders, and provided arguments into a single array of arguments.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to prepend to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgs(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersLength = holders.length,
          leftIndex = -1,
          leftLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(leftLength + rangeLength),
          isUncurried = !isCurried;

      while (++leftIndex < leftLength) {
        result[leftIndex] = partials[leftIndex];
      }
      while (++argsIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[holders[argsIndex]] = args[argsIndex];
        }
      }
      while (rangeLength--) {
        result[leftIndex++] = args[argsIndex++];
      }
      return result;
    }

    /**
     * This function is like `composeArgs` except that the arguments composition
     * is tailored for `_.partialRight`.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to append to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgsRight(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersIndex = -1,
          holdersLength = holders.length,
          rightIndex = -1,
          rightLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(rangeLength + rightLength),
          isUncurried = !isCurried;

      while (++argsIndex < rangeLength) {
        result[argsIndex] = args[argsIndex];
      }
      var offset = argsIndex;
      while (++rightIndex < rightLength) {
        result[offset + rightIndex] = partials[rightIndex];
      }
      while (++holdersIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[offset + holders[holdersIndex]] = args[argsIndex++];
        }
      }
      return result;
    }

    /**
     * Copies the values of `source` to `array`.
     *
     * @private
     * @param {Array} source The array to copy values from.
     * @param {Array} [array=[]] The array to copy values to.
     * @returns {Array} Returns `array`.
     */
    function copyArray(source, array) {
      var index = -1,
          length = source.length;

      array || (array = Array(length));
      while (++index < length) {
        array[index] = source[index];
      }
      return array;
    }

    /**
     * Copies properties of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy properties from.
     * @param {Array} props The property identifiers to copy.
     * @param {Object} [object={}] The object to copy properties to.
     * @param {Function} [customizer] The function to customize copied values.
     * @returns {Object} Returns `object`.
     */
    function copyObject(source, props, object, customizer) {
      var isNew = !object;
      object || (object = {});

      var index = -1,
          length = props.length;

      while (++index < length) {
        var key = props[index];

        var newValue = customizer
          ? customizer(object[key], source[key], key, object, source)
          : undefined;

        if (newValue === undefined) {
          newValue = source[key];
        }
        if (isNew) {
          baseAssignValue(object, key, newValue);
        } else {
          assignValue(object, key, newValue);
        }
      }
      return object;
    }

    /**
     * Copies own symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbols(source, object) {
      return copyObject(source, getSymbols(source), object);
    }

    /**
     * Copies own and inherited symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbolsIn(source, object) {
      return copyObject(source, getSymbolsIn(source), object);
    }

    /**
     * Creates a function like `_.groupBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} [initializer] The accumulator object initializer.
     * @returns {Function} Returns the new aggregator function.
     */
    function createAggregator(setter, initializer) {
      return function(collection, iteratee) {
        var func = isArray(collection) ? arrayAggregator : baseAggregator,
            accumulator = initializer ? initializer() : {};

        return func(collection, setter, getIteratee(iteratee, 2), accumulator);
      };
    }

    /**
     * Creates a function like `_.assign`.
     *
     * @private
     * @param {Function} assigner The function to assign values.
     * @returns {Function} Returns the new assigner function.
     */
    function createAssigner(assigner) {
      return baseRest(function(object, sources) {
        var index = -1,
            length = sources.length,
            customizer = length > 1 ? sources[length - 1] : undefined,
            guard = length > 2 ? sources[2] : undefined;

        customizer = (assigner.length > 3 && typeof customizer == 'function')
          ? (length--, customizer)
          : undefined;

        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
          customizer = length < 3 ? undefined : customizer;
          length = 1;
        }
        object = Object(object);
        while (++index < length) {
          var source = sources[index];
          if (source) {
            assigner(object, source, index, customizer);
          }
        }
        return object;
      });
    }

    /**
     * Creates a `baseEach` or `baseEachRight` function.
     *
     * @private
     * @param {Function} eachFunc The function to iterate over a collection.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseEach(eachFunc, fromRight) {
      return function(collection, iteratee) {
        if (collection == null) {
          return collection;
        }
        if (!isArrayLike(collection)) {
          return eachFunc(collection, iteratee);
        }
        var length = collection.length,
            index = fromRight ? length : -1,
            iterable = Object(collection);

        while ((fromRight ? index-- : ++index < length)) {
          if (iteratee(iterable[index], index, iterable) === false) {
            break;
          }
        }
        return collection;
      };
    }

    /**
     * Creates a base function for methods like `_.forIn` and `_.forOwn`.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseFor(fromRight) {
      return function(object, iteratee, keysFunc) {
        var index = -1,
            iterable = Object(object),
            props = keysFunc(object),
            length = props.length;

        while (length--) {
          var key = props[fromRight ? length : ++index];
          if (iteratee(iterable[key], key, iterable) === false) {
            break;
          }
        }
        return object;
      };
    }

    /**
     * Creates a function that wraps `func` to invoke it with the optional `this`
     * binding of `thisArg`.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createBind(func, bitmask, thisArg) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return fn.apply(isBind ? thisArg : this, arguments);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.lowerFirst`.
     *
     * @private
     * @param {string} methodName The name of the `String` case method to use.
     * @returns {Function} Returns the new case function.
     */
    function createCaseFirst(methodName) {
      return function(string) {
        string = toString(string);

        var strSymbols = hasUnicode(string)
          ? stringToArray(string)
          : undefined;

        var chr = strSymbols
          ? strSymbols[0]
          : string.charAt(0);

        var trailing = strSymbols
          ? castSlice(strSymbols, 1).join('')
          : string.slice(1);

        return chr[methodName]() + trailing;
      };
    }

    /**
     * Creates a function like `_.camelCase`.
     *
     * @private
     * @param {Function} callback The function to combine each word.
     * @returns {Function} Returns the new compounder function.
     */
    function createCompounder(callback) {
      return function(string) {
        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
      };
    }

    /**
     * Creates a function that produces an instance of `Ctor` regardless of
     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
     *
     * @private
     * @param {Function} Ctor The constructor to wrap.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCtor(Ctor) {
      return function() {
        // Use a `switch` statement to work with class constructors. See
        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
        // for more details.
        var args = arguments;
        switch (args.length) {
          case 0: return new Ctor;
          case 1: return new Ctor(args[0]);
          case 2: return new Ctor(args[0], args[1]);
          case 3: return new Ctor(args[0], args[1], args[2]);
          case 4: return new Ctor(args[0], args[1], args[2], args[3]);
          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
        }
        var thisBinding = baseCreate(Ctor.prototype),
            result = Ctor.apply(thisBinding, args);

        // Mimic the constructor's `return` behavior.
        // See https://es5.github.io/#x13.2.2 for more details.
        return isObject(result) ? result : thisBinding;
      };
    }

    /**
     * Creates a function that wraps `func` to enable currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {number} arity The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCurry(func, bitmask, arity) {
      var Ctor = createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length,
            placeholder = getHolder(wrapper);

        while (index--) {
          args[index] = arguments[index];
        }
        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
          ? []
          : replaceHolders(args, placeholder);

        length -= holders.length;
        if (length < arity) {
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, undefined,
            args, holders, undefined, undefined, arity - length);
        }
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return apply(fn, this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.find` or `_.findLast` function.
     *
     * @private
     * @param {Function} findIndexFunc The function to find the collection index.
     * @returns {Function} Returns the new find function.
     */
    function createFind(findIndexFunc) {
      return function(collection, predicate, fromIndex) {
        var iterable = Object(collection);
        if (!isArrayLike(collection)) {
          var iteratee = getIteratee(predicate, 3);
          collection = keys(collection);
          predicate = function(key) { return iteratee(iterable[key], key, iterable); };
        }
        var index = findIndexFunc(collection, predicate, fromIndex);
        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
      };
    }

    /**
     * Creates a `_.flow` or `_.flowRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new flow function.
     */
    function createFlow(fromRight) {
      return flatRest(function(funcs) {
        var length = funcs.length,
            index = length,
            prereq = LodashWrapper.prototype.thru;

        if (fromRight) {
          funcs.reverse();
        }
        while (index--) {
          var func = funcs[index];
          if (typeof func != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
            var wrapper = new LodashWrapper([], true);
          }
        }
        index = wrapper ? index : length;
        while (++index < length) {
          func = funcs[index];

          var funcName = getFuncName(func),
              data = funcName == 'wrapper' ? getData(func) : undefined;

          if (data && isLaziable(data[0]) &&
                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&
                !data[4].length && data[9] == 1
              ) {
            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
          } else {
            wrapper = (func.length == 1 && isLaziable(func))
              ? wrapper[funcName]()
              : wrapper.thru(func);
          }
        }
        return function() {
          var args = arguments,
              value = args[0];

          if (wrapper && args.length == 1 && isArray(value)) {
            return wrapper.plant(value).value();
          }
          var index = 0,
              result = length ? funcs[index].apply(this, args) : value;

          while (++index < length) {
            result = funcs[index].call(this, result);
          }
          return result;
        };
      });
    }

    /**
     * Creates a function that wraps `func` to invoke it with optional `this`
     * binding of `thisArg`, partial application, and currying.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [partialsRight] The arguments to append to those provided
     *  to the new function.
     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
      var isAry = bitmask & WRAP_ARY_FLAG,
          isBind = bitmask & WRAP_BIND_FLAG,
          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
          isFlip = bitmask & WRAP_FLIP_FLAG,
          Ctor = isBindKey ? undefined : createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length;

        while (index--) {
          args[index] = arguments[index];
        }
        if (isCurried) {
          var placeholder = getHolder(wrapper),
              holdersCount = countHolders(args, placeholder);
        }
        if (partials) {
          args = composeArgs(args, partials, holders, isCurried);
        }
        if (partialsRight) {
          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
        }
        length -= holdersCount;
        if (isCurried && length < arity) {
          var newHolders = replaceHolders(args, placeholder);
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, thisArg,
            args, newHolders, argPos, ary, arity - length
          );
        }
        var thisBinding = isBind ? thisArg : this,
            fn = isBindKey ? thisBinding[func] : func;

        length = args.length;
        if (argPos) {
          args = reorder(args, argPos);
        } else if (isFlip && length > 1) {
          args.reverse();
        }
        if (isAry && ary < length) {
          args.length = ary;
        }
        if (this && this !== root && this instanceof wrapper) {
          fn = Ctor || createCtor(fn);
        }
        return fn.apply(thisBinding, args);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.invertBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} toIteratee The function to resolve iteratees.
     * @returns {Function} Returns the new inverter function.
     */
    function createInverter(setter, toIteratee) {
      return function(object, iteratee) {
        return baseInverter(object, setter, toIteratee(iteratee), {});
      };
    }

    /**
     * Creates a function that performs a mathematical operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @param {number} [defaultValue] The value used for `undefined` arguments.
     * @returns {Function} Returns the new mathematical operation function.
     */
    function createMathOperation(operator, defaultValue) {
      return function(value, other) {
        var result;
        if (value === undefined && other === undefined) {
          return defaultValue;
        }
        if (value !== undefined) {
          result = value;
        }
        if (other !== undefined) {
          if (result === undefined) {
            return other;
          }
          if (typeof value == 'string' || typeof other == 'string') {
            value = baseToString(value);
            other = baseToString(other);
          } else {
            value = baseToNumber(value);
            other = baseToNumber(other);
          }
          result = operator(value, other);
        }
        return result;
      };
    }

    /**
     * Creates a function like `_.over`.
     *
     * @private
     * @param {Function} arrayFunc The function to iterate over iteratees.
     * @returns {Function} Returns the new over function.
     */
    function createOver(arrayFunc) {
      return flatRest(function(iteratees) {
        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
        return baseRest(function(args) {
          var thisArg = this;
          return arrayFunc(iteratees, function(iteratee) {
            return apply(iteratee, thisArg, args);
          });
        });
      });
    }

    /**
     * Creates the padding for `string` based on `length`. The `chars` string
     * is truncated if the number of characters exceeds `length`.
     *
     * @private
     * @param {number} length The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padding for `string`.
     */
    function createPadding(length, chars) {
      chars = chars === undefined ? ' ' : baseToString(chars);

      var charsLength = chars.length;
      if (charsLength < 2) {
        return charsLength ? baseRepeat(chars, length) : chars;
      }
      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
      return hasUnicode(chars)
        ? castSlice(stringToArray(result), 0, length).join('')
        : result.slice(0, length);
    }

    /**
     * Creates a function that wraps `func` to invoke it with the `this` binding
     * of `thisArg` and `partials` prepended to the arguments it receives.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {Array} partials The arguments to prepend to those provided to
     *  the new function.
     * @returns {Function} Returns the new wrapped function.
     */
    function createPartial(func, bitmask, thisArg, partials) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var argsIndex = -1,
            argsLength = arguments.length,
            leftIndex = -1,
            leftLength = partials.length,
            args = Array(leftLength + argsLength),
            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;

        while (++leftIndex < leftLength) {
          args[leftIndex] = partials[leftIndex];
        }
        while (argsLength--) {
          args[leftIndex++] = arguments[++argsIndex];
        }
        return apply(fn, isBind ? thisArg : this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.range` or `_.rangeRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new range function.
     */
    function createRange(fromRight) {
      return function(start, end, step) {
        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
          end = step = undefined;
        }
        // Ensure the sign of `-0` is preserved.
        start = toFinite(start);
        if (end === undefined) {
          end = start;
          start = 0;
        } else {
          end = toFinite(end);
        }
        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);
        return baseRange(start, end, step, fromRight);
      };
    }

    /**
     * Creates a function that performs a relational operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @returns {Function} Returns the new relational operation function.
     */
    function createRelationalOperation(operator) {
      return function(value, other) {
        if (!(typeof value == 'string' && typeof other == 'string')) {
          value = toNumber(value);
          other = toNumber(other);
        }
        return operator(value, other);
      };
    }

    /**
     * Creates a function that wraps `func` to continue currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {Function} wrapFunc The function to create the `func` wrapper.
     * @param {*} placeholder The placeholder value.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
      var isCurry = bitmask & WRAP_CURRY_FLAG,
          newHolders = isCurry ? holders : undefined,
          newHoldersRight = isCurry ? undefined : holders,
          newPartials = isCurry ? partials : undefined,
          newPartialsRight = isCurry ? undefined : partials;

      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);
      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);

      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
      }
      var newData = [
        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
        newHoldersRight, argPos, ary, arity
      ];

      var result = wrapFunc.apply(undefined, newData);
      if (isLaziable(func)) {
        setData(result, newData);
      }
      result.placeholder = placeholder;
      return setWrapToString(result, func, bitmask);
    }

    /**
     * Creates a function like `_.round`.
     *
     * @private
     * @param {string} methodName The name of the `Math` method to use when rounding.
     * @returns {Function} Returns the new round function.
     */
    function createRound(methodName) {
      var func = Math[methodName];
      return function(number, precision) {
        number = toNumber(number);
        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);
        if (precision && nativeIsFinite(number)) {
          // Shift with exponential notation to avoid floating-point issues.
          // See [MDN](https://mdn.io/round#Examples) for more details.
          var pair = (toString(number) + 'e').split('e'),
              value = func(pair[0] + 'e' + (+pair[1] + precision));

          pair = (toString(value) + 'e').split('e');
          return +(pair[0] + 'e' + (+pair[1] - precision));
        }
        return func(number);
      };
    }

    /**
     * Creates a set object of `values`.
     *
     * @private
     * @param {Array} values The values to add to the set.
     * @returns {Object} Returns the new set.
     */
    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
      return new Set(values);
    };

    /**
     * Creates a `_.toPairs` or `_.toPairsIn` function.
     *
     * @private
     * @param {Function} keysFunc The function to get the keys of a given object.
     * @returns {Function} Returns the new pairs function.
     */
    function createToPairs(keysFunc) {
      return function(object) {
        var tag = getTag(object);
        if (tag == mapTag) {
          return mapToArray(object);
        }
        if (tag == setTag) {
          return setToPairs(object);
        }
        return baseToPairs(object, keysFunc(object));
      };
    }

    /**
     * Creates a function that either curries or invokes `func` with optional
     * `this` binding and partially applied arguments.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags.
     *    1 - `_.bind`
     *    2 - `_.bindKey`
     *    4 - `_.curry` or `_.curryRight` of a bound function
     *    8 - `_.curry`
     *   16 - `_.curryRight`
     *   32 - `_.partial`
     *   64 - `_.partialRight`
     *  128 - `_.rearg`
     *  256 - `_.ary`
     *  512 - `_.flip`
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to be partially applied.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
      if (!isBindKey && typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var length = partials ? partials.length : 0;
      if (!length) {
        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
        partials = holders = undefined;
      }
      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
      arity = arity === undefined ? arity : toInteger(arity);
      length -= holders ? holders.length : 0;

      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
        var partialsRight = partials,
            holdersRight = holders;

        partials = holders = undefined;
      }
      var data = isBindKey ? undefined : getData(func);

      var newData = [
        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
        argPos, ary, arity
      ];

      if (data) {
        mergeData(newData, data);
      }
      func = newData[0];
      bitmask = newData[1];
      thisArg = newData[2];
      partials = newData[3];
      holders = newData[4];
      arity = newData[9] = newData[9] === undefined
        ? (isBindKey ? 0 : func.length)
        : nativeMax(newData[9] - length, 0);

      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
      }
      if (!bitmask || bitmask == WRAP_BIND_FLAG) {
        var result = createBind(func, bitmask, thisArg);
      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
        result = createCurry(func, bitmask, arity);
      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
        result = createPartial(func, bitmask, thisArg, partials);
      } else {
        result = createHybrid.apply(undefined, newData);
      }
      var setter = data ? baseSetData : setData;
      return setWrapToString(setter(result, newData), func, bitmask);
    }

    /**
     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties
     * of source objects to the destination object for all destination properties
     * that resolve to `undefined`.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to assign.
     * @param {Object} object The parent object of `objValue`.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsAssignIn(objValue, srcValue, key, object) {
      if (objValue === undefined ||
          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {
        return srcValue;
      }
      return objValue;
    }

    /**
     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source
     * objects into destination objects that are passed thru.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to merge.
     * @param {Object} object The parent object of `objValue`.
     * @param {Object} source The parent object of `srcValue`.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
      if (isObject(objValue) && isObject(srcValue)) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, objValue);
        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);
        stack['delete'](srcValue);
      }
      return objValue;
    }

    /**
     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
     * objects.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {string} key The key of the property to inspect.
     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
     */
    function customOmitClone(value) {
      return isPlainObject(value) ? undefined : value;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for arrays with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Array} array The array to compare.
     * @param {Array} other The other array to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `array` and `other` objects.
     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
     */
    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          arrLength = array.length,
          othLength = other.length;

      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }
      // Check that cyclic values are equal.
      var arrStacked = stack.get(array);
      var othStacked = stack.get(other);
      if (arrStacked && othStacked) {
        return arrStacked == other && othStacked == array;
      }
      var index = -1,
          result = true,
          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

      stack.set(array, other);
      stack.set(other, array);

      // Ignore non-index properties.
      while (++index < arrLength) {
        var arrValue = array[index],
            othValue = other[index];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, arrValue, index, other, array, stack)
            : customizer(arrValue, othValue, index, array, other, stack);
        }
        if (compared !== undefined) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }
        // Recursively compare arrays (susceptible to call stack limits).
        if (seen) {
          if (!arraySome(other, function(othValue, othIndex) {
                if (!cacheHas(seen, othIndex) &&
                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                  return seen.push(othIndex);
                }
              })) {
            result = false;
            break;
          }
        } else if (!(
              arrValue === othValue ||
                equalFunc(arrValue, othValue, bitmask, customizer, stack)
            )) {
          result = false;
          break;
        }
      }
      stack['delete'](array);
      stack['delete'](other);
      return result;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for comparing objects of
     * the same `toStringTag`.
     *
     * **Note:** This function only supports comparing values with tags of
     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {string} tag The `toStringTag` of the objects to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
      switch (tag) {
        case dataViewTag:
          if ((object.byteLength != other.byteLength) ||
              (object.byteOffset != other.byteOffset)) {
            return false;
          }
          object = object.buffer;
          other = other.buffer;

        case arrayBufferTag:
          if ((object.byteLength != other.byteLength) ||
              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
            return false;
          }
          return true;

        case boolTag:
        case dateTag:
        case numberTag:
          // Coerce booleans to `1` or `0` and dates to milliseconds.
          // Invalid dates are coerced to `NaN`.
          return eq(+object, +other);

        case errorTag:
          return object.name == other.name && object.message == other.message;

        case regexpTag:
        case stringTag:
          // Coerce regexes to strings and treat strings, primitives and objects,
          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
          // for more details.
          return object == (other + '');

        case mapTag:
          var convert = mapToArray;

        case setTag:
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
          convert || (convert = setToArray);

          if (object.size != other.size && !isPartial) {
            return false;
          }
          // Assume cyclic values are equal.
          var stacked = stack.get(object);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= COMPARE_UNORDERED_FLAG;

          // Recursively compare objects (susceptible to call stack limits).
          stack.set(object, other);
          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
          stack['delete'](object);
          return result;

        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object) == symbolValueOf.call(other);
          }
      }
      return false;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for objects with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          objProps = getAllKeys(object),
          objLength = objProps.length,
          othProps = getAllKeys(other),
          othLength = othProps.length;

      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index = objLength;
      while (index--) {
        var key = objProps[index];
        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
          return false;
        }
      }
      // Check that cyclic values are equal.
      var objStacked = stack.get(object);
      var othStacked = stack.get(other);
      if (objStacked && othStacked) {
        return objStacked == other && othStacked == object;
      }
      var result = true;
      stack.set(object, other);
      stack.set(other, object);

      var skipCtor = isPartial;
      while (++index < objLength) {
        key = objProps[index];
        var objValue = object[key],
            othValue = other[key];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, objValue, key, other, object, stack)
            : customizer(objValue, othValue, key, object, other, stack);
        }
        // Recursively compare objects (susceptible to call stack limits).
        if (!(compared === undefined
              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
              : compared
            )) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key == 'constructor');
      }
      if (result && !skipCtor) {
        var objCtor = object.constructor,
            othCtor = other.constructor;

        // Non `Object` object instances with different constructors are not equal.
        if (objCtor != othCtor &&
            ('constructor' in object && 'constructor' in other) &&
            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
              typeof othCtor == 'function' && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack['delete'](object);
      stack['delete'](other);
      return result;
    }

    /**
     * A specialized version of `baseRest` which flattens the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    function flatRest(func) {
      return setToString(overRest(func, undefined, flatten), func + '');
    }

    /**
     * Creates an array of own enumerable property names and symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeys(object) {
      return baseGetAllKeys(object, keys, getSymbols);
    }

    /**
     * Creates an array of own and inherited enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeysIn(object) {
      return baseGetAllKeys(object, keysIn, getSymbolsIn);
    }

    /**
     * Gets metadata for `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {*} Returns the metadata for `func`.
     */
    var getData = !metaMap ? noop : function(func) {
      return metaMap.get(func);
    };

    /**
     * Gets the name of `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {string} Returns the function name.
     */
    function getFuncName(func) {
      var result = (func.name + ''),
          array = realNames[result],
          length = hasOwnProperty.call(realNames, result) ? array.length : 0;

      while (length--) {
        var data = array[length],
            otherFunc = data.func;
        if (otherFunc == null || otherFunc == func) {
          return data.name;
        }
      }
      return result;
    }

    /**
     * Gets the argument placeholder value for `func`.
     *
     * @private
     * @param {Function} func The function to inspect.
     * @returns {*} Returns the placeholder value.
     */
    function getHolder(func) {
      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;
      return object.placeholder;
    }

    /**
     * Gets the appropriate "iteratee" function. If `_.iteratee` is customized,
     * this function returns the custom method, otherwise it returns `baseIteratee`.
     * If arguments are provided, the chosen function is invoked with them and
     * its result is returned.
     *
     * @private
     * @param {*} [value] The value to convert to an iteratee.
     * @param {number} [arity] The arity of the created iteratee.
     * @returns {Function} Returns the chosen function or its result.
     */
    function getIteratee() {
      var result = lodash.iteratee || iteratee;
      result = result === iteratee ? baseIteratee : result;
      return arguments.length ? result(arguments[0], arguments[1]) : result;
    }

    /**
     * Gets the data for `map`.
     *
     * @private
     * @param {Object} map The map to query.
     * @param {string} key The reference key.
     * @returns {*} Returns the map data.
     */
    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key)
        ? data[typeof key == 'string' ? 'string' : 'hash']
        : data.map;
    }

    /**
     * Gets the property names, values, and compare flags of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the match data of `object`.
     */
    function getMatchData(object) {
      var result = keys(object),
          length = result.length;

      while (length--) {
        var key = result[length],
            value = object[key];

        result[length] = [key, value, isStrictComparable(value)];
      }
      return result;
    }

    /**
     * Gets the native function at `key` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the method to get.
     * @returns {*} Returns the function if it's native, else `undefined`.
     */
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : undefined;
    }

    /**
     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the raw `toStringTag`.
     */
    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag),
          tag = value[symToStringTag];

      try {
        value[symToStringTag] = undefined;
        var unmasked = true;
      } catch (e) {}

      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }

    /**
     * Creates an array of the own enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
      if (object == null) {
        return [];
      }
      object = Object(object);
      return arrayFilter(nativeGetSymbols(object), function(symbol) {
        return propertyIsEnumerable.call(object, symbol);
      });
    };

    /**
     * Creates an array of the own and inherited enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
      var result = [];
      while (object) {
        arrayPush(result, getSymbols(object));
        object = getPrototype(object);
      }
      return result;
    };

    /**
     * Gets the `toStringTag` of `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    var getTag = baseGetTag;

    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
        (Map && getTag(new Map) != mapTag) ||
        (Promise && getTag(Promise.resolve()) != promiseTag) ||
        (Set && getTag(new Set) != setTag) ||
        (WeakMap && getTag(new WeakMap) != weakMapTag)) {
      getTag = function(value) {
        var result = baseGetTag(value),
            Ctor = result == objectTag ? value.constructor : undefined,
            ctorString = Ctor ? toSource(Ctor) : '';

        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString: return dataViewTag;
            case mapCtorString: return mapTag;
            case promiseCtorString: return promiseTag;
            case setCtorString: return setTag;
            case weakMapCtorString: return weakMapTag;
          }
        }
        return result;
      };
    }

    /**
     * Gets the view, applying any `transforms` to the `start` and `end` positions.
     *
     * @private
     * @param {number} start The start of the view.
     * @param {number} end The end of the view.
     * @param {Array} transforms The transformations to apply to the view.
     * @returns {Object} Returns an object containing the `start` and `end`
     *  positions of the view.
     */
    function getView(start, end, transforms) {
      var index = -1,
          length = transforms.length;

      while (++index < length) {
        var data = transforms[index],
            size = data.size;

        switch (data.type) {
          case 'drop':      start += size; break;
          case 'dropRight': end -= size; break;
          case 'take':      end = nativeMin(end, start + size); break;
          case 'takeRight': start = nativeMax(start, end - size); break;
        }
      }
      return { 'start': start, 'end': end };
    }

    /**
     * Extracts wrapper details from the `source` body comment.
     *
     * @private
     * @param {string} source The source to inspect.
     * @returns {Array} Returns the wrapper details.
     */
    function getWrapDetails(source) {
      var match = source.match(reWrapDetails);
      return match ? match[1].split(reSplitDetails) : [];
    }

    /**
     * Checks if `path` exists on `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @param {Function} hasFunc The function to check properties.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     */
    function hasPath(object, path, hasFunc) {
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          result = false;

      while (++index < length) {
        var key = toKey(path[index]);
        if (!(result = object != null && hasFunc(object, key))) {
          break;
        }
        object = object[key];
      }
      if (result || ++index != length) {
        return result;
      }
      length = object == null ? 0 : object.length;
      return !!length && isLength(length) && isIndex(key, length) &&
        (isArray(object) || isArguments(object));
    }

    /**
     * Initializes an array clone.
     *
     * @private
     * @param {Array} array The array to clone.
     * @returns {Array} Returns the initialized clone.
     */
    function initCloneArray(array) {
      var length = array.length,
          result = new array.constructor(length);

      // Add properties assigned by `RegExp#exec`.
      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
        result.index = array.index;
        result.input = array.input;
      }
      return result;
    }

    /**
     * Initializes an object clone.
     *
     * @private
     * @param {Object} object The object to clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneObject(object) {
      return (typeof object.constructor == 'function' && !isPrototype(object))
        ? baseCreate(getPrototype(object))
        : {};
    }

    /**
     * Initializes an object clone based on its `toStringTag`.
     *
     * **Note:** This function only supports cloning values with tags of
     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
     *
     * @private
     * @param {Object} object The object to clone.
     * @param {string} tag The `toStringTag` of the object to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneByTag(object, tag, isDeep) {
      var Ctor = object.constructor;
      switch (tag) {
        case arrayBufferTag:
          return cloneArrayBuffer(object);

        case boolTag:
        case dateTag:
          return new Ctor(+object);

        case dataViewTag:
          return cloneDataView(object, isDeep);

        case float32Tag: case float64Tag:
        case int8Tag: case int16Tag: case int32Tag:
        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
          return cloneTypedArray(object, isDeep);

        case mapTag:
          return new Ctor;

        case numberTag:
        case stringTag:
          return new Ctor(object);

        case regexpTag:
          return cloneRegExp(object);

        case setTag:
          return new Ctor;

        case symbolTag:
          return cloneSymbol(object);
      }
    }

    /**
     * Inserts wrapper `details` in a comment at the top of the `source` body.
     *
     * @private
     * @param {string} source The source to modify.
     * @returns {Array} details The details to insert.
     * @returns {string} Returns the modified source.
     */
    function insertWrapDetails(source, details) {
      var length = details.length;
      if (!length) {
        return source;
      }
      var lastIndex = length - 1;
      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
      details = details.join(length > 2 ? ', ' : ' ');
      return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
    }

    /**
     * Checks if `value` is a flattenable `arguments` object or array.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
     */
    function isFlattenable(value) {
      return isArray(value) || isArguments(value) ||
        !!(spreadableSymbol && value && value[spreadableSymbol]);
    }

    /**
     * Checks if `value` is a valid array-like index.
     *
     * @private
     * @param {*} value The value to check.
     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
     */
    function isIndex(value, length) {
      var type = typeof value;
      length = length == null ? MAX_SAFE_INTEGER : length;

      return !!length &&
        (type == 'number' ||
          (type != 'symbol' && reIsUint.test(value))) &&
            (value > -1 && value % 1 == 0 && value < length);
    }

    /**
     * Checks if the given arguments are from an iteratee call.
     *
     * @private
     * @param {*} value The potential iteratee value argument.
     * @param {*} index The potential iteratee index or key argument.
     * @param {*} object The potential iteratee object argument.
     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
     *  else `false`.
     */
    function isIterateeCall(value, index, object) {
      if (!isObject(object)) {
        return false;
      }
      var type = typeof index;
      if (type == 'number'
            ? (isArrayLike(object) && isIndex(index, object.length))
            : (type == 'string' && index in object)
          ) {
        return eq(object[index], value);
      }
      return false;
    }

    /**
     * Checks if `value` is a property name and not a property path.
     *
     * @private
     * @param {*} value The value to check.
     * @param {Object} [object] The object to query keys on.
     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
     */
    function isKey(value, object) {
      if (isArray(value)) {
        return false;
      }
      var type = typeof value;
      if (type == 'number' || type == 'symbol' || type == 'boolean' ||
          value == null || isSymbol(value)) {
        return true;
      }
      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
        (object != null && value in Object(object));
    }

    /**
     * Checks if `value` is suitable for use as unique object key.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
     */
    function isKeyable(value) {
      var type = typeof value;
      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
        ? (value !== '__proto__')
        : (value === null);
    }

    /**
     * Checks if `func` has a lazy counterpart.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
     *  else `false`.
     */
    function isLaziable(func) {
      var funcName = getFuncName(func),
          other = lodash[funcName];

      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
        return false;
      }
      if (func === other) {
        return true;
      }
      var data = getData(other);
      return !!data && func === data[0];
    }

    /**
     * Checks if `func` has its source masked.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` is masked, else `false`.
     */
    function isMasked(func) {
      return !!maskSrcKey && (maskSrcKey in func);
    }

    /**
     * Checks if `func` is capable of being masked.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.
     */
    var isMaskable = coreJsData ? isFunction : stubFalse;

    /**
     * Checks if `value` is likely a prototype object.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
     */
    function isPrototype(value) {
      var Ctor = value && value.constructor,
          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

      return value === proto;
    }

    /**
     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` if suitable for strict
     *  equality comparisons, else `false`.
     */
    function isStrictComparable(value) {
      return value === value && !isObject(value);
    }

    /**
     * A specialized version of `matchesProperty` for source values suitable
     * for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {string} key The key of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function matchesStrictComparable(key, srcValue) {
      return function(object) {
        if (object == null) {
          return false;
        }
        return object[key] === srcValue &&
          (srcValue !== undefined || (key in Object(object)));
      };
    }

    /**
     * A specialized version of `_.memoize` which clears the memoized function's
     * cache when it exceeds `MAX_MEMOIZE_SIZE`.
     *
     * @private
     * @param {Function} func The function to have its output memoized.
     * @returns {Function} Returns the new memoized function.
     */
    function memoizeCapped(func) {
      var result = memoize(func, function(key) {
        if (cache.size === MAX_MEMOIZE_SIZE) {
          cache.clear();
        }
        return key;
      });

      var cache = result.cache;
      return result;
    }

    /**
     * Merges the function metadata of `source` into `data`.
     *
     * Merging metadata reduces the number of wrappers used to invoke a function.
     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
     * may be applied regardless of execution order. Methods like `_.ary` and
     * `_.rearg` modify function arguments, making the order in which they are
     * executed important, preventing the merging of metadata. However, we make
     * an exception for a safe combined case where curried functions have `_.ary`
     * and or `_.rearg` applied.
     *
     * @private
     * @param {Array} data The destination metadata.
     * @param {Array} source The source metadata.
     * @returns {Array} Returns `data`.
     */
    function mergeData(data, source) {
      var bitmask = data[1],
          srcBitmask = source[1],
          newBitmask = bitmask | srcBitmask,
          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);

      var isCombo =
        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||
        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||
        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));

      // Exit early if metadata can't be merged.
      if (!(isCommon || isCombo)) {
        return data;
      }
      // Use source `thisArg` if available.
      if (srcBitmask & WRAP_BIND_FLAG) {
        data[2] = source[2];
        // Set when currying a bound function.
        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
      }
      // Compose partial arguments.
      var value = source[3];
      if (value) {
        var partials = data[3];
        data[3] = partials ? composeArgs(partials, value, source[4]) : value;
        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
      }
      // Compose partial right arguments.
      value = source[5];
      if (value) {
        partials = data[5];
        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
      }
      // Use source `argPos` if available.
      value = source[7];
      if (value) {
        data[7] = value;
      }
      // Use source `ary` if it's smaller.
      if (srcBitmask & WRAP_ARY_FLAG) {
        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
      }
      // Use source `arity` if one is not provided.
      if (data[9] == null) {
        data[9] = source[9];
      }
      // Use source `func` and merge bitmasks.
      data[0] = source[0];
      data[1] = newBitmask;

      return data;
    }

    /**
     * This function is like
     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * except that it includes inherited enumerable properties.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function nativeKeysIn(object) {
      var result = [];
      if (object != null) {
        for (var key in Object(object)) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * Converts `value` to a string using `Object.prototype.toString`.
     *
     * @private
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     */
    function objectToString(value) {
      return nativeObjectToString.call(value);
    }

    /**
     * A specialized version of `baseRest` which transforms the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @param {Function} transform The rest array transform.
     * @returns {Function} Returns the new function.
     */
    function overRest(func, start, transform) {
      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
      return function() {
        var args = arguments,
            index = -1,
            length = nativeMax(args.length - start, 0),
            array = Array(length);

        while (++index < length) {
          array[index] = args[start + index];
        }
        index = -1;
        var otherArgs = Array(start + 1);
        while (++index < start) {
          otherArgs[index] = args[index];
        }
        otherArgs[start] = transform(array);
        return apply(func, this, otherArgs);
      };
    }

    /**
     * Gets the parent value at `path` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array} path The path to get the parent value of.
     * @returns {*} Returns the parent value.
     */
    function parent(object, path) {
      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
    }

    /**
     * Reorder `array` according to the specified indexes where the element at
     * the first index is assigned as the first element, the element at
     * the second index is assigned as the second element, and so on.
     *
     * @private
     * @param {Array} array The array to reorder.
     * @param {Array} indexes The arranged array indexes.
     * @returns {Array} Returns `array`.
     */
    function reorder(array, indexes) {
      var arrLength = array.length,
          length = nativeMin(indexes.length, arrLength),
          oldArray = copyArray(array);

      while (length--) {
        var index = indexes[length];
        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
      }
      return array;
    }

    /**
     * Gets the value at `key`, unless `key` is "__proto__" or "constructor".
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the property to get.
     * @returns {*} Returns the property value.
     */
    function safeGet(object, key) {
      if (key === 'constructor' && typeof object[key] === 'function') {
        return;
      }

      if (key == '__proto__') {
        return;
      }

      return object[key];
    }

    /**
     * Sets metadata for `func`.
     *
     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
     * period of time, it will trip its breaker and transition to an identity
     * function to avoid garbage collection pauses in V8. See
     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
     * for more details.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var setData = shortOut(baseSetData);

    /**
     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    var setTimeout = ctxSetTimeout || function(func, wait) {
      return root.setTimeout(func, wait);
    };

    /**
     * Sets the `toString` method of `func` to return `string`.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var setToString = shortOut(baseSetToString);

    /**
     * Sets the `toString` method of `wrapper` to mimic the source of `reference`
     * with wrapper details in a comment at the top of the source body.
     *
     * @private
     * @param {Function} wrapper The function to modify.
     * @param {Function} reference The reference function.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Function} Returns `wrapper`.
     */
    function setWrapToString(wrapper, reference, bitmask) {
      var source = (reference + '');
      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
    }

    /**
     * Creates a function that'll short out and invoke `identity` instead
     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
     * milliseconds.
     *
     * @private
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new shortable function.
     */
    function shortOut(func) {
      var count = 0,
          lastCalled = 0;

      return function() {
        var stamp = nativeNow(),
            remaining = HOT_SPAN - (stamp - lastCalled);

        lastCalled = stamp;
        if (remaining > 0) {
          if (++count >= HOT_COUNT) {
            return arguments[0];
          }
        } else {
          count = 0;
        }
        return func.apply(undefined, arguments);
      };
    }

    /**
     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @param {number} [size=array.length] The size of `array`.
     * @returns {Array} Returns `array`.
     */
    function shuffleSelf(array, size) {
      var index = -1,
          length = array.length,
          lastIndex = length - 1;

      size = size === undefined ? length : size;
      while (++index < size) {
        var rand = baseRandom(index, lastIndex),
            value = array[rand];

        array[rand] = array[index];
        array[index] = value;
      }
      array.length = size;
      return array;
    }

    /**
     * Converts `string` to a property path array.
     *
     * @private
     * @param {string} string The string to convert.
     * @returns {Array} Returns the property path array.
     */
    var stringToPath = memoizeCapped(function(string) {
      var result = [];
      if (string.charCodeAt(0) === 46 /* . */) {
        result.push('');
      }
      string.replace(rePropName, function(match, number, quote, subString) {
        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
      });
      return result;
    });

    /**
     * Converts `value` to a string key if it's not a string or symbol.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {string|symbol} Returns the key.
     */
    function toKey(value) {
      if (typeof value == 'string' || isSymbol(value)) {
        return value;
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * Converts `func` to its source code.
     *
     * @private
     * @param {Function} func The function to convert.
     * @returns {string} Returns the source code.
     */
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e) {}
        try {
          return (func + '');
        } catch (e) {}
      }
      return '';
    }

    /**
     * Updates wrapper `details` based on `bitmask` flags.
     *
     * @private
     * @returns {Array} details The details to modify.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Array} Returns `details`.
     */
    function updateWrapDetails(details, bitmask) {
      arrayEach(wrapFlags, function(pair) {
        var value = '_.' + pair[0];
        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {
          details.push(value);
        }
      });
      return details.sort();
    }

    /**
     * Creates a clone of `wrapper`.
     *
     * @private
     * @param {Object} wrapper The wrapper to clone.
     * @returns {Object} Returns the cloned wrapper.
     */
    function wrapperClone(wrapper) {
      if (wrapper instanceof LazyWrapper) {
        return wrapper.clone();
      }
      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
      result.__actions__ = copyArray(wrapper.__actions__);
      result.__index__  = wrapper.__index__;
      result.__values__ = wrapper.__values__;
      return result;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of elements split into groups the length of `size`.
     * If `array` can't be split evenly, the final chunk will be the remaining
     * elements.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to process.
     * @param {number} [size=1] The length of each chunk
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the new array of chunks.
     * @example
     *
     * _.chunk(['a', 'b', 'c', 'd'], 2);
     * // => [['a', 'b'], ['c', 'd']]
     *
     * _.chunk(['a', 'b', 'c', 'd'], 3);
     * // => [['a', 'b', 'c'], ['d']]
     */
    function chunk(array, size, guard) {
      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {
        size = 1;
      } else {
        size = nativeMax(toInteger(size), 0);
      }
      var length = array == null ? 0 : array.length;
      if (!length || size < 1) {
        return [];
      }
      var index = 0,
          resIndex = 0,
          result = Array(nativeCeil(length / size));

      while (index < length) {
        result[resIndex++] = baseSlice(array, index, (index += size));
      }
      return result;
    }

    /**
     * Creates an array with all falsey values removed. The values `false`, `null`,
     * `0`, `""`, `undefined`, and `NaN` are falsey.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to compact.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.compact([0, 1, false, 2, '', 3]);
     * // => [1, 2, 3]
     */
    function compact(array) {
      var index = -1,
          length = array == null ? 0 : array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index];
        if (value) {
          result[resIndex++] = value;
        }
      }
      return result;
    }

    /**
     * Creates a new array concatenating `array` with any additional arrays
     * and/or values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to concatenate.
     * @param {...*} [values] The values to concatenate.
     * @returns {Array} Returns the new concatenated array.
     * @example
     *
     * var array = [1];
     * var other = _.concat(array, 2, [3], [[4]]);
     *
     * console.log(other);
     * // => [1, 2, 3, [4]]
     *
     * console.log(array);
     * // => [1]
     */
    function concat() {
      var length = arguments.length;
      if (!length) {
        return [];
      }
      var args = Array(length - 1),
          array = arguments[0],
          index = length;

      while (index--) {
        args[index - 1] = arguments[index];
      }
      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
    }

    /**
     * Creates an array of `array` values not included in the other given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * **Note:** Unlike `_.pullAll`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.without, _.xor
     * @example
     *
     * _.difference([2, 1], [2, 3]);
     * // => [1]
     */
    var difference = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `iteratee` which
     * is invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var differenceBy = baseRest(function(array, values) {
      var iteratee = last(values);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `comparator`
     * which is invoked to compare elements of `array` to `values`. The order and
     * references of result values are determined by the first array. The comparator
     * is invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     *
     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }]
     */
    var differenceWith = baseRest(function(array, values) {
      var comparator = last(values);
      if (isArrayLikeObject(comparator)) {
        comparator = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)
        : [];
    });

    /**
     * Creates a slice of `array` with `n` elements dropped from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.drop([1, 2, 3]);
     * // => [2, 3]
     *
     * _.drop([1, 2, 3], 2);
     * // => [3]
     *
     * _.drop([1, 2, 3], 5);
     * // => []
     *
     * _.drop([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function drop(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with `n` elements dropped from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.dropRight([1, 2, 3]);
     * // => [1, 2]
     *
     * _.dropRight([1, 2, 3], 2);
     * // => [1]
     *
     * _.dropRight([1, 2, 3], 5);
     * // => []
     *
     * _.dropRight([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function dropRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the end.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.dropRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropRightWhile(users, ['active', false]);
     * // => objects for ['barney']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropRightWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true, true)
        : [];
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the beginning.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.dropWhile(users, function(o) { return !o.active; });
     * // => objects for ['pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropWhile(users, ['active', false]);
     * // => objects for ['pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true)
        : [];
    }

    /**
     * Fills elements of `array` with `value` from `start` up to, but not
     * including, `end`.
     *
     * **Note:** This method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Array
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.fill(array, 'a');
     * console.log(array);
     * // => ['a', 'a', 'a']
     *
     * _.fill(Array(3), 2);
     * // => [2, 2, 2]
     *
     * _.fill([4, 6, 8, 10], '*', 1, 3);
     * // => [4, '*', '*', 10]
     */
    function fill(array, value, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
        start = 0;
        end = length;
      }
      return baseFill(array, value, start, end);
    }

    /**
     * This method is like `_.find` except that it returns the index of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.findIndex(users, function(o) { return o.user == 'barney'; });
     * // => 0
     *
     * // The `_.matches` iteratee shorthand.
     * _.findIndex(users, { 'user': 'fred', 'active': false });
     * // => 1
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findIndex(users, ['active', false]);
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.findIndex(users, 'active');
     * // => 2
     */
    function findIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index);
    }

    /**
     * This method is like `_.findIndex` except that it iterates over elements
     * of `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
     * // => 2
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastIndex(users, { 'user': 'barney', 'active': true });
     * // => 0
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastIndex(users, ['active', false]);
     * // => 2
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastIndex(users, 'active');
     * // => 0
     */
    function findLastIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length - 1;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = fromIndex < 0
          ? nativeMax(length + index, 0)
          : nativeMin(index, length - 1);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index, true);
    }

    /**
     * Flattens `array` a single level deep.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flatten([1, [2, [3, [4]], 5]]);
     * // => [1, 2, [3, [4]], 5]
     */
    function flatten(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, 1) : [];
    }

    /**
     * Recursively flattens `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flattenDeep([1, [2, [3, [4]], 5]]);
     * // => [1, 2, 3, 4, 5]
     */
    function flattenDeep(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, INFINITY) : [];
    }

    /**
     * Recursively flatten `array` up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * var array = [1, [2, [3, [4]], 5]];
     *
     * _.flattenDepth(array, 1);
     * // => [1, 2, [3, [4]], 5]
     *
     * _.flattenDepth(array, 2);
     * // => [1, 2, 3, [4], 5]
     */
    function flattenDepth(array, depth) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(array, depth);
    }

    /**
     * The inverse of `_.toPairs`; this method returns an object composed
     * from key-value `pairs`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} pairs The key-value pairs.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.fromPairs([['a', 1], ['b', 2]]);
     * // => { 'a': 1, 'b': 2 }
     */
    function fromPairs(pairs) {
      var index = -1,
          length = pairs == null ? 0 : pairs.length,
          result = {};

      while (++index < length) {
        var pair = pairs[index];
        result[pair[0]] = pair[1];
      }
      return result;
    }

    /**
     * Gets the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias first
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the first element of `array`.
     * @example
     *
     * _.head([1, 2, 3]);
     * // => 1
     *
     * _.head([]);
     * // => undefined
     */
    function head(array) {
      return (array && array.length) ? array[0] : undefined;
    }

    /**
     * Gets the index at which the first occurrence of `value` is found in `array`
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. If `fromIndex` is negative, it's used as the
     * offset from the end of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.indexOf([1, 2, 1, 2], 2);
     * // => 1
     *
     * // Search from the `fromIndex`.
     * _.indexOf([1, 2, 1, 2], 2, 2);
     * // => 3
     */
    function indexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseIndexOf(array, value, index);
    }

    /**
     * Gets all but the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.initial([1, 2, 3]);
     * // => [1, 2]
     */
    function initial(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 0, -1) : [];
    }

    /**
     * Creates an array of unique values that are included in all given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersection([2, 1], [2, 3]);
     * // => [2]
     */
    var intersection = baseRest(function(arrays) {
      var mapped = arrayMap(arrays, castArrayLikeObject);
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped)
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `iteratee`
     * which is invoked for each element of each `arrays` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [2.1]
     *
     * // The `_.property` iteratee shorthand.
     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }]
     */
    var intersectionBy = baseRest(function(arrays) {
      var iteratee = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      if (iteratee === last(mapped)) {
        iteratee = undefined;
      } else {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, getIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `comparator`
     * which is invoked to compare elements of `arrays`. The order and references
     * of result values are determined by the first array. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.intersectionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }]
     */
    var intersectionWith = baseRest(function(arrays) {
      var comparator = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      comparator = typeof comparator == 'function' ? comparator : undefined;
      if (comparator) {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, undefined, comparator)
        : [];
    });

    /**
     * Converts all elements in `array` into a string separated by `separator`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to convert.
     * @param {string} [separator=','] The element separator.
     * @returns {string} Returns the joined string.
     * @example
     *
     * _.join(['a', 'b', 'c'], '~');
     * // => 'a~b~c'
     */
    function join(array, separator) {
      return array == null ? '' : nativeJoin.call(array, separator);
    }

    /**
     * Gets the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the last element of `array`.
     * @example
     *
     * _.last([1, 2, 3]);
     * // => 3
     */
    function last(array) {
      var length = array == null ? 0 : array.length;
      return length ? array[length - 1] : undefined;
    }

    /**
     * This method is like `_.indexOf` except that it iterates over elements of
     * `array` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.lastIndexOf([1, 2, 1, 2], 2);
     * // => 3
     *
     * // Search from the `fromIndex`.
     * _.lastIndexOf([1, 2, 1, 2], 2, 2);
     * // => 1
     */
    function lastIndexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
      }
      return value === value
        ? strictLastIndexOf(array, value, index)
        : baseFindIndex(array, baseIsNaN, index, true);
    }

    /**
     * Gets the element at index `n` of `array`. If `n` is negative, the nth
     * element from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.11.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=0] The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     *
     * _.nth(array, 1);
     * // => 'b'
     *
     * _.nth(array, -2);
     * // => 'c';
     */
    function nth(array, n) {
      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;
    }

    /**
     * Removes all given values from `array` using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
     * to remove elements from an array by predicate.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...*} [values] The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pull(array, 'a', 'c');
     * console.log(array);
     * // => ['b', 'b']
     */
    var pull = baseRest(pullAll);

    /**
     * This method is like `_.pull` except that it accepts an array of values to remove.
     *
     * **Note:** Unlike `_.difference`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pullAll(array, ['a', 'c']);
     * console.log(array);
     * // => ['b', 'b']
     */
    function pullAll(array, values) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values)
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `iteratee` which is
     * invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The iteratee is invoked with one argument: (value).
     *
     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
     *
     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
     * console.log(array);
     * // => [{ 'x': 2 }]
     */
    function pullAllBy(array, values, iteratee) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, getIteratee(iteratee, 2))
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `comparator` which
     * is invoked to compare elements of `array` to `values`. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
     *
     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
     * console.log(array);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
     */
    function pullAllWith(array, values, comparator) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, undefined, comparator)
        : array;
    }

    /**
     * Removes elements from `array` corresponding to `indexes` and returns an
     * array of removed elements.
     *
     * **Note:** Unlike `_.at`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...(number|number[])} [indexes] The indexes of elements to remove.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     * var pulled = _.pullAt(array, [1, 3]);
     *
     * console.log(array);
     * // => ['a', 'c']
     *
     * console.log(pulled);
     * // => ['b', 'd']
     */
    var pullAt = flatRest(function(array, indexes) {
      var length = array == null ? 0 : array.length,
          result = baseAt(array, indexes);

      basePullAt(array, arrayMap(indexes, function(index) {
        return isIndex(index, length) ? +index : index;
      }).sort(compareAscending));

      return result;
    });

    /**
     * Removes all elements from `array` that `predicate` returns truthy for
     * and returns an array of the removed elements. The predicate is invoked
     * with three arguments: (value, index, array).
     *
     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
     * to pull elements from an array by value.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = [1, 2, 3, 4];
     * var evens = _.remove(array, function(n) {
     *   return n % 2 == 0;
     * });
     *
     * console.log(array);
     * // => [1, 3]
     *
     * console.log(evens);
     * // => [2, 4]
     */
    function remove(array, predicate) {
      var result = [];
      if (!(array && array.length)) {
        return result;
      }
      var index = -1,
          indexes = [],
          length = array.length;

      predicate = getIteratee(predicate, 3);
      while (++index < length) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result.push(value);
          indexes.push(index);
        }
      }
      basePullAt(array, indexes);
      return result;
    }

    /**
     * Reverses `array` so that the first element becomes the last, the second
     * element becomes the second to last, and so on.
     *
     * **Note:** This method mutates `array` and is based on
     * [`Array#reverse`](https://mdn.io/Array/reverse).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.reverse(array);
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function reverse(array) {
      return array == null ? array : nativeReverse.call(array);
    }

    /**
     * Creates a slice of `array` from `start` up to, but not including, `end`.
     *
     * **Note:** This method is used instead of
     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
     * returned.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function slice(array, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
        start = 0;
        end = length;
      }
      else {
        start = start == null ? 0 : toInteger(start);
        end = end === undefined ? length : toInteger(end);
      }
      return baseSlice(array, start, end);
    }

    /**
     * Uses a binary search to determine the lowest index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedIndex([30, 50], 40);
     * // => 1
     */
    function sortedIndex(array, value) {
      return baseSortedIndex(array, value);
    }

    /**
     * This method is like `_.sortedIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');
     * // => 0
     */
    function sortedIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
    }

    /**
     * This method is like `_.indexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);
     * // => 1
     */
    function sortedIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value);
        if (index < length && eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.sortedIndex` except that it returns the highest
     * index at which `value` should be inserted into `array` in order to
     * maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);
     * // => 4
     */
    function sortedLastIndex(array, value) {
      return baseSortedIndex(array, value, true);
    }

    /**
     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 1
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');
     * // => 1
     */
    function sortedLastIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);
    }

    /**
     * This method is like `_.lastIndexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);
     * // => 3
     */
    function sortedLastIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value, true) - 1;
        if (eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.uniq` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniq([1, 1, 2]);
     * // => [1, 2]
     */
    function sortedUniq(array) {
      return (array && array.length)
        ? baseSortedUniq(array)
        : [];
    }

    /**
     * This method is like `_.uniqBy` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
     * // => [1.1, 2.3]
     */
    function sortedUniqBy(array, iteratee) {
      return (array && array.length)
        ? baseSortedUniq(array, getIteratee(iteratee, 2))
        : [];
    }

    /**
     * Gets all but the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.tail([1, 2, 3]);
     * // => [2, 3]
     */
    function tail(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 1, length) : [];
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.take([1, 2, 3]);
     * // => [1]
     *
     * _.take([1, 2, 3], 2);
     * // => [1, 2]
     *
     * _.take([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.take([1, 2, 3], 0);
     * // => []
     */
    function take(array, n, guard) {
      if (!(array && array.length)) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.takeRight([1, 2, 3]);
     * // => [3]
     *
     * _.takeRight([1, 2, 3], 2);
     * // => [2, 3]
     *
     * _.takeRight([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.takeRight([1, 2, 3], 0);
     * // => []
     */
    function takeRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with elements taken from the end. Elements are
     * taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.takeRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeRightWhile(users, ['active', false]);
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeRightWhile(users, 'active');
     * // => []
     */
    function takeRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), false, true)
        : [];
    }

    /**
     * Creates a slice of `array` with elements taken from the beginning. Elements
     * are taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.takeWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeWhile(users, ['active', false]);
     * // => objects for ['barney', 'fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeWhile(users, 'active');
     * // => []
     */
    function takeWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3))
        : [];
    }

    /**
     * Creates an array of unique values, in order, from all given arrays using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.union([2], [1, 2]);
     * // => [2, 1]
     */
    var union = baseRest(function(arrays) {
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
    });

    /**
     * This method is like `_.union` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which uniqueness is computed. Result values are chosen from the first
     * array in which the value occurs. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.unionBy([2.1], [1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    var unionBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.union` except that it accepts `comparator` which
     * is invoked to compare elements of `arrays`. Result values are chosen from
     * the first array in which the value occurs. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.unionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var unionWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
    });

    /**
     * Creates a duplicate-free version of an array, using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons, in which only the first occurrence of each element
     * is kept. The order of result values is determined by the order they occur
     * in the array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniq([2, 1, 2]);
     * // => [2, 1]
     */
    function uniq(array) {
      return (array && array.length) ? baseUniq(array) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * uniqueness is computed. The order of result values is determined by the
     * order they occur in the array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    function uniqBy(array, iteratee) {
      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `comparator` which
     * is invoked to compare elements of `array`. The order of result values is
     * determined by the order they occur in the array.The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.uniqWith(objects, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
     */
    function uniqWith(array, comparator) {
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];
    }

    /**
     * This method is like `_.zip` except that it accepts an array of grouped
     * elements and creates an array regrouping the elements to their pre-zip
     * configuration.
     *
     * @static
     * @memberOf _
     * @since 1.2.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     *
     * _.unzip(zipped);
     * // => [['a', 'b'], [1, 2], [true, false]]
     */
    function unzip(array) {
      if (!(array && array.length)) {
        return [];
      }
      var length = 0;
      array = arrayFilter(array, function(group) {
        if (isArrayLikeObject(group)) {
          length = nativeMax(group.length, length);
          return true;
        }
      });
      return baseTimes(length, function(index) {
        return arrayMap(array, baseProperty(index));
      });
    }

    /**
     * This method is like `_.unzip` except that it accepts `iteratee` to specify
     * how regrouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  regrouped values.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
     * // => [[1, 10, 100], [2, 20, 200]]
     *
     * _.unzipWith(zipped, _.add);
     * // => [3, 30, 300]
     */
    function unzipWith(array, iteratee) {
      if (!(array && array.length)) {
        return [];
      }
      var result = unzip(array);
      if (iteratee == null) {
        return result;
      }
      return arrayMap(result, function(group) {
        return apply(iteratee, undefined, group);
      });
    }

    /**
     * Creates an array excluding all given values using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.pull`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...*} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.xor
     * @example
     *
     * _.without([2, 1, 2, 3], 1, 2);
     * // => [3]
     */
    var without = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, values)
        : [];
    });

    /**
     * Creates an array of unique values that is the
     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
     * of the given arrays. The order of result values is determined by the order
     * they occur in the arrays.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.without
     * @example
     *
     * _.xor([2, 1], [2, 3]);
     * // => [1, 3]
     */
    var xor = baseRest(function(arrays) {
      return baseXor(arrayFilter(arrays, isArrayLikeObject));
    });

    /**
     * This method is like `_.xor` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which by which they're compared. The order of result values is determined
     * by the order they occur in the arrays. The iteratee is invoked with one
     * argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2, 3.4]
     *
     * // The `_.property` iteratee shorthand.
     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var xorBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.xor` except that it accepts `comparator` which is
     * invoked to compare elements of `arrays`. The order of result values is
     * determined by the order they occur in the arrays. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.xorWith(objects, others, _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var xorWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
    });

    /**
     * Creates an array of grouped elements, the first of which contains the
     * first elements of the given arrays, the second of which contains the
     * second elements of the given arrays, and so on.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     */
    var zip = baseRest(unzip);

    /**
     * This method is like `_.fromPairs` except that it accepts two arrays,
     * one of property identifiers and one of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 0.4.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObject(['a', 'b'], [1, 2]);
     * // => { 'a': 1, 'b': 2 }
     */
    function zipObject(props, values) {
      return baseZipObject(props || [], values || [], assignValue);
    }

    /**
     * This method is like `_.zipObject` except that it supports property paths.
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
     */
    function zipObjectDeep(props, values) {
      return baseZipObject(props || [], values || [], baseSet);
    }

    /**
     * This method is like `_.zip` except that it accepts `iteratee` to specify
     * how grouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  grouped values.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
     *   return a + b + c;
     * });
     * // => [111, 222]
     */
    var zipWith = baseRest(function(arrays) {
      var length = arrays.length,
          iteratee = length > 1 ? arrays[length - 1] : undefined;

      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
      return unzipWith(arrays, iteratee);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` wrapper instance that wraps `value` with explicit method
     * chain sequences enabled. The result of such sequences must be unwrapped
     * with `_#value`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Seq
     * @param {*} value The value to wrap.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36 },
     *   { 'user': 'fred',    'age': 40 },
     *   { 'user': 'pebbles', 'age': 1 }
     * ];
     *
     * var youngest = _
     *   .chain(users)
     *   .sortBy('age')
     *   .map(function(o) {
     *     return o.user + ' is ' + o.age;
     *   })
     *   .head()
     *   .value();
     * // => 'pebbles is 1'
     */
    function chain(value) {
      var result = lodash(value);
      result.__chain__ = true;
      return result;
    }

    /**
     * This method invokes `interceptor` and returns `value`. The interceptor
     * is invoked with one argument; (value). The purpose of this method is to
     * "tap into" a method chain sequence in order to modify intermediate results.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns `value`.
     * @example
     *
     * _([1, 2, 3])
     *  .tap(function(array) {
     *    // Mutate input array.
     *    array.pop();
     *  })
     *  .reverse()
     *  .value();
     * // => [2, 1]
     */
    function tap(value, interceptor) {
      interceptor(value);
      return value;
    }

    /**
     * This method is like `_.tap` except that it returns the result of `interceptor`.
     * The purpose of this method is to "pass thru" values replacing intermediate
     * results in a method chain sequence.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns the result of `interceptor`.
     * @example
     *
     * _('  abc  ')
     *  .chain()
     *  .trim()
     *  .thru(function(value) {
     *    return [value];
     *  })
     *  .value();
     * // => ['abc']
     */
    function thru(value, interceptor) {
      return interceptor(value);
    }

    /**
     * This method is the wrapper version of `_.at`.
     *
     * @name at
     * @memberOf _
     * @since 1.0.0
     * @category Seq
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _(object).at(['a[0].b.c', 'a[1]']).value();
     * // => [3, 4]
     */
    var wrapperAt = flatRest(function(paths) {
      var length = paths.length,
          start = length ? paths[0] : 0,
          value = this.__wrapped__,
          interceptor = function(object) { return baseAt(object, paths); };

      if (length > 1 || this.__actions__.length ||
          !(value instanceof LazyWrapper) || !isIndex(start)) {
        return this.thru(interceptor);
      }
      value = value.slice(start, +start + (length ? 1 : 0));
      value.__actions__.push({
        'func': thru,
        'args': [interceptor],
        'thisArg': undefined
      });
      return new LodashWrapper(value, this.__chain__).thru(function(array) {
        if (length && !array.length) {
          array.push(undefined);
        }
        return array;
      });
    });

    /**
     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
     *
     * @name chain
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 }
     * ];
     *
     * // A sequence without explicit chaining.
     * _(users).head();
     * // => { 'user': 'barney', 'age': 36 }
     *
     * // A sequence with explicit chaining.
     * _(users)
     *   .chain()
     *   .head()
     *   .pick('user')
     *   .value();
     * // => { 'user': 'barney' }
     */
    function wrapperChain() {
      return chain(this);
    }

    /**
     * Executes the chain sequence and returns the wrapped result.
     *
     * @name commit
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2];
     * var wrapped = _(array).push(3);
     *
     * console.log(array);
     * // => [1, 2]
     *
     * wrapped = wrapped.commit();
     * console.log(array);
     * // => [1, 2, 3]
     *
     * wrapped.last();
     * // => 3
     *
     * console.log(array);
     * // => [1, 2, 3]
     */
    function wrapperCommit() {
      return new LodashWrapper(this.value(), this.__chain__);
    }

    /**
     * Gets the next value on a wrapped object following the
     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
     *
     * @name next
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the next iterator value.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 1 }
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 2 }
     *
     * wrapped.next();
     * // => { 'done': true, 'value': undefined }
     */
    function wrapperNext() {
      if (this.__values__ === undefined) {
        this.__values__ = toArray(this.value());
      }
      var done = this.__index__ >= this.__values__.length,
          value = done ? undefined : this.__values__[this.__index__++];

      return { 'done': done, 'value': value };
    }

    /**
     * Enables the wrapper to be iterable.
     *
     * @name Symbol.iterator
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the wrapper object.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped[Symbol.iterator]() === wrapped;
     * // => true
     *
     * Array.from(wrapped);
     * // => [1, 2]
     */
    function wrapperToIterator() {
      return this;
    }

    /**
     * Creates a clone of the chain sequence planting `value` as the wrapped value.
     *
     * @name plant
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @param {*} value The value to plant.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2]).map(square);
     * var other = wrapped.plant([3, 4]);
     *
     * other.value();
     * // => [9, 16]
     *
     * wrapped.value();
     * // => [1, 4]
     */
    function wrapperPlant(value) {
      var result,
          parent = this;

      while (parent instanceof baseLodash) {
        var clone = wrapperClone(parent);
        clone.__index__ = 0;
        clone.__values__ = undefined;
        if (result) {
          previous.__wrapped__ = clone;
        } else {
          result = clone;
        }
        var previous = clone;
        parent = parent.__wrapped__;
      }
      previous.__wrapped__ = value;
      return result;
    }

    /**
     * This method is the wrapper version of `_.reverse`.
     *
     * **Note:** This method mutates the wrapped array.
     *
     * @name reverse
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _(array).reverse().value()
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function wrapperReverse() {
      var value = this.__wrapped__;
      if (value instanceof LazyWrapper) {
        var wrapped = value;
        if (this.__actions__.length) {
          wrapped = new LazyWrapper(this);
        }
        wrapped = wrapped.reverse();
        wrapped.__actions__.push({
          'func': thru,
          'args': [reverse],
          'thisArg': undefined
        });
        return new LodashWrapper(wrapped, this.__chain__);
      }
      return this.thru(reverse);
    }

    /**
     * Executes the chain sequence to resolve the unwrapped value.
     *
     * @name value
     * @memberOf _
     * @since 0.1.0
     * @alias toJSON, valueOf
     * @category Seq
     * @returns {*} Returns the resolved unwrapped value.
     * @example
     *
     * _([1, 2, 3]).value();
     * // => [1, 2, 3]
     */
    function wrapperValue() {
      return baseWrapperValue(this.__wrapped__, this.__actions__);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the number of times the key was returned by `iteratee`. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.countBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': 1, '6': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.countBy(['one', 'two', 'three'], 'length');
     * // => { '3': 2, '5': 1 }
     */
    var countBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        ++result[key];
      } else {
        baseAssignValue(result, key, 1);
      }
    });

    /**
     * Checks if `predicate` returns truthy for **all** elements of `collection`.
     * Iteration is stopped once `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * **Note:** This method returns `true` for
     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
     * elements of empty collections.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`.
     * @example
     *
     * _.every([true, 1, null, 'yes'], Boolean);
     * // => false
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.every(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.every(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.every(users, 'active');
     * // => false
     */
    function every(collection, predicate, guard) {
      var func = isArray(collection) ? arrayEvery : baseEvery;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning an array of all elements
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * **Note:** Unlike `_.remove`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.reject
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * _.filter(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, { 'age': 36, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.filter(users, 'active');
     * // => objects for ['barney']
     *
     * // Combining several predicates using `_.overEvery` or `_.overSome`.
     * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));
     * // => objects for ['fred', 'barney']
     */
    function filter(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning the first element
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': true },
     *   { 'user': 'fred',    'age': 40, 'active': false },
     *   { 'user': 'pebbles', 'age': 1,  'active': true }
     * ];
     *
     * _.find(users, function(o) { return o.age < 40; });
     * // => object for 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.find(users, { 'age': 1, 'active': true });
     * // => object for 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.find(users, ['active', false]);
     * // => object for 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.find(users, 'active');
     * // => object for 'barney'
     */
    var find = createFind(findIndex);

    /**
     * This method is like `_.find` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=collection.length-1] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * _.findLast([1, 2, 3, 4], function(n) {
     *   return n % 2 == 1;
     * });
     * // => 3
     */
    var findLast = createFind(findLastIndex);

    /**
     * Creates a flattened array of values by running each element in `collection`
     * thru `iteratee` and flattening the mapped results. The iteratee is invoked
     * with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [n, n];
     * }
     *
     * _.flatMap([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMap(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), 1);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDeep([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMapDeep(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), INFINITY);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDepth([1, 2], duplicate, 2);
     * // => [[1, 1], [2, 2]]
     */
    function flatMapDepth(collection, iteratee, depth) {
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(map(collection, iteratee), depth);
    }

    /**
     * Iterates over elements of `collection` and invokes `iteratee` for each element.
     * The iteratee is invoked with three arguments: (value, index|key, collection).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * **Note:** As with other "Collections" methods, objects with a "length"
     * property are iterated like arrays. To avoid this behavior use `_.forIn`
     * or `_.forOwn` for object iteration.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias each
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEachRight
     * @example
     *
     * _.forEach([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `1` then `2`.
     *
     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forEach(collection, iteratee) {
      var func = isArray(collection) ? arrayEach : baseEach;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forEach` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @alias eachRight
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEach
     * @example
     *
     * _.forEachRight([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `2` then `1`.
     */
    function forEachRight(collection, iteratee) {
      var func = isArray(collection) ? arrayEachRight : baseEachRight;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The order of grouped values
     * is determined by the order they occur in `collection`. The corresponding
     * value of each key is an array of elements responsible for generating the
     * key. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.groupBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': [4.2], '6': [6.1, 6.3] }
     *
     * // The `_.property` iteratee shorthand.
     * _.groupBy(['one', 'two', 'three'], 'length');
     * // => { '3': ['one', 'two'], '5': ['three'] }
     */
    var groupBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        result[key].push(value);
      } else {
        baseAssignValue(result, key, [value]);
      }
    });

    /**
     * Checks if `value` is in `collection`. If `collection` is a string, it's
     * checked for a substring of `value`, otherwise
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * is used for equality comparisons. If `fromIndex` is negative, it's used as
     * the offset from the end of `collection`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {boolean} Returns `true` if `value` is found, else `false`.
     * @example
     *
     * _.includes([1, 2, 3], 1);
     * // => true
     *
     * _.includes([1, 2, 3], 1, 2);
     * // => false
     *
     * _.includes({ 'a': 1, 'b': 2 }, 1);
     * // => true
     *
     * _.includes('abcd', 'bc');
     * // => true
     */
    function includes(collection, value, fromIndex, guard) {
      collection = isArrayLike(collection) ? collection : values(collection);
      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;

      var length = collection.length;
      if (fromIndex < 0) {
        fromIndex = nativeMax(length + fromIndex, 0);
      }
      return isString(collection)
        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
    }

    /**
     * Invokes the method at `path` of each element in `collection`, returning
     * an array of the results of each invoked method. Any additional arguments
     * are provided to each invoked method. If `path` is a function, it's invoked
     * for, and `this` bound to, each element in `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array|Function|string} path The path of the method to invoke or
     *  the function invoked per iteration.
     * @param {...*} [args] The arguments to invoke each method with.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
     * // => [[1, 5, 7], [1, 2, 3]]
     *
     * _.invokeMap([123, 456], String.prototype.split, '');
     * // => [['1', '2', '3'], ['4', '5', '6']]
     */
    var invokeMap = baseRest(function(collection, path, args) {
      var index = -1,
          isFunc = typeof path == 'function',
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value) {
        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
      });
      return result;
    });

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the last element responsible for generating the key. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * var array = [
     *   { 'dir': 'left', 'code': 97 },
     *   { 'dir': 'right', 'code': 100 }
     * ];
     *
     * _.keyBy(array, function(o) {
     *   return String.fromCharCode(o.code);
     * });
     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
     *
     * _.keyBy(array, 'dir');
     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
     */
    var keyBy = createAggregator(function(result, value, key) {
      baseAssignValue(result, key, value);
    });

    /**
     * Creates an array of values by running each element in `collection` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
     *
     * The guarded methods are:
     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * _.map([4, 8], square);
     * // => [16, 64]
     *
     * _.map({ 'a': 4, 'b': 8 }, square);
     * // => [16, 64] (iteration order is not guaranteed)
     *
     * var users = [
     *   { 'user': 'barney' },
     *   { 'user': 'fred' }
     * ];
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, 'user');
     * // => ['barney', 'fred']
     */
    function map(collection, iteratee) {
      var func = isArray(collection) ? arrayMap : baseMap;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.sortBy` except that it allows specifying the sort
     * orders of the iteratees to sort by. If `orders` is unspecified, all values
     * are sorted in ascending order. Otherwise, specify an order of "desc" for
     * descending or "asc" for ascending sort order of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @param {string[]} [orders] The sort orders of `iteratees`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 34 },
     *   { 'user': 'fred',   'age': 40 },
     *   { 'user': 'barney', 'age': 36 }
     * ];
     *
     * // Sort by `user` in ascending order and by `age` in descending order.
     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     */
    function orderBy(collection, iteratees, orders, guard) {
      if (collection == null) {
        return [];
      }
      if (!isArray(iteratees)) {
        iteratees = iteratees == null ? [] : [iteratees];
      }
      orders = guard ? undefined : orders;
      if (!isArray(orders)) {
        orders = orders == null ? [] : [orders];
      }
      return baseOrderBy(collection, iteratees, orders);
    }

    /**
     * Creates an array of elements split into two groups, the first of which
     * contains elements `predicate` returns truthy for, the second of which
     * contains elements `predicate` returns falsey for. The predicate is
     * invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of grouped elements.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': false },
     *   { 'user': 'fred',    'age': 40, 'active': true },
     *   { 'user': 'pebbles', 'age': 1,  'active': false }
     * ];
     *
     * _.partition(users, function(o) { return o.active; });
     * // => objects for [['fred'], ['barney', 'pebbles']]
     *
     * // The `_.matches` iteratee shorthand.
     * _.partition(users, { 'age': 1, 'active': false });
     * // => objects for [['pebbles'], ['barney', 'fred']]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.partition(users, ['active', false]);
     * // => objects for [['barney', 'pebbles'], ['fred']]
     *
     * // The `_.property` iteratee shorthand.
     * _.partition(users, 'active');
     * // => objects for [['fred'], ['barney', 'pebbles']]
     */
    var partition = createAggregator(function(result, value, key) {
      result[key ? 0 : 1].push(value);
    }, function() { return [[], []]; });

    /**
     * Reduces `collection` to a value which is the accumulated result of running
     * each element in `collection` thru `iteratee`, where each successive
     * invocation is supplied the return value of the previous. If `accumulator`
     * is not given, the first element of `collection` is used as the initial
     * value. The iteratee is invoked with four arguments:
     * (accumulator, value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.reduce`, `_.reduceRight`, and `_.transform`.
     *
     * The guarded methods are:
     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
     * and `sortBy`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduceRight
     * @example
     *
     * _.reduce([1, 2], function(sum, n) {
     *   return sum + n;
     * }, 0);
     * // => 3
     *
     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     *   return result;
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
     */
    function reduce(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduce : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
    }

    /**
     * This method is like `_.reduce` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduce
     * @example
     *
     * var array = [[0, 1], [2, 3], [4, 5]];
     *
     * _.reduceRight(array, function(flattened, other) {
     *   return flattened.concat(other);
     * }, []);
     * // => [4, 5, 2, 3, 0, 1]
     */
    function reduceRight(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduceRight : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
    }

    /**
     * The opposite of `_.filter`; this method returns the elements of `collection`
     * that `predicate` does **not** return truthy for.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.filter
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': true }
     * ];
     *
     * _.reject(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.reject(users, { 'age': 40, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.reject(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.reject(users, 'active');
     * // => objects for ['barney']
     */
    function reject(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, negate(getIteratee(predicate, 3)));
    }

    /**
     * Gets a random element from `collection`.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     * @example
     *
     * _.sample([1, 2, 3, 4]);
     * // => 2
     */
    function sample(collection) {
      var func = isArray(collection) ? arraySample : baseSample;
      return func(collection);
    }

    /**
     * Gets `n` random elements at unique keys from `collection` up to the
     * size of `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @param {number} [n=1] The number of elements to sample.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the random elements.
     * @example
     *
     * _.sampleSize([1, 2, 3], 2);
     * // => [3, 1]
     *
     * _.sampleSize([1, 2, 3], 4);
     * // => [2, 3, 1]
     */
    function sampleSize(collection, n, guard) {
      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      var func = isArray(collection) ? arraySampleSize : baseSampleSize;
      return func(collection, n);
    }

    /**
     * Creates an array of shuffled values, using a version of the
     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     * @example
     *
     * _.shuffle([1, 2, 3, 4]);
     * // => [4, 1, 3, 2]
     */
    function shuffle(collection) {
      var func = isArray(collection) ? arrayShuffle : baseShuffle;
      return func(collection);
    }

    /**
     * Gets the size of `collection` by returning its length for array-like
     * values or the number of own enumerable string keyed properties for objects.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @returns {number} Returns the collection size.
     * @example
     *
     * _.size([1, 2, 3]);
     * // => 3
     *
     * _.size({ 'a': 1, 'b': 2 });
     * // => 2
     *
     * _.size('pebbles');
     * // => 7
     */
    function size(collection) {
      if (collection == null) {
        return 0;
      }
      if (isArrayLike(collection)) {
        return isString(collection) ? stringSize(collection) : collection.length;
      }
      var tag = getTag(collection);
      if (tag == mapTag || tag == setTag) {
        return collection.size;
      }
      return baseKeys(collection).length;
    }

    /**
     * Checks if `predicate` returns truthy for **any** element of `collection`.
     * Iteration is stopped once `predicate` returns truthy. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     * @example
     *
     * _.some([null, 0, 'yes', false], Boolean);
     * // => true
     *
     * var users = [
     *   { 'user': 'barney', 'active': true },
     *   { 'user': 'fred',   'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.some(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.some(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.some(users, 'active');
     * // => true
     */
    function some(collection, predicate, guard) {
      var func = isArray(collection) ? arraySome : baseSome;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Creates an array of elements, sorted in ascending order by the results of
     * running each element in a collection thru each iteratee. This method
     * performs a stable sort, that is, it preserves the original sort order of
     * equal elements. The iteratees are invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 30 },
     *   { 'user': 'barney', 'age': 34 }
     * ];
     *
     * _.sortBy(users, [function(o) { return o.user; }]);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]
     *
     * _.sortBy(users, ['user', 'age']);
     * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]
     */
    var sortBy = baseRest(function(collection, iteratees) {
      if (collection == null) {
        return [];
      }
      var length = iteratees.length;
      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
        iteratees = [];
      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
        iteratees = [iteratees[0]];
      }
      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Gets the timestamp of the number of milliseconds that have elapsed since
     * the Unix epoch (1 January 1970 00:00:00 UTC).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Date
     * @returns {number} Returns the timestamp.
     * @example
     *
     * _.defer(function(stamp) {
     *   console.log(_.now() - stamp);
     * }, _.now());
     * // => Logs the number of milliseconds it took for the deferred invocation.
     */
    var now = ctxNow || function() {
      return root.Date.now();
    };

    /*------------------------------------------------------------------------*/

    /**
     * The opposite of `_.before`; this method creates a function that invokes
     * `func` once it's called `n` or more times.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {number} n The number of calls before `func` is invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var saves = ['profile', 'settings'];
     *
     * var done = _.after(saves.length, function() {
     *   console.log('done saving!');
     * });
     *
     * _.forEach(saves, function(type) {
     *   asyncSave({ 'type': type, 'complete': done });
     * });
     * // => Logs 'done saving!' after the two async saves have completed.
     */
    function after(n, func) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n < 1) {
          return func.apply(this, arguments);
        }
      };
    }

    /**
     * Creates a function that invokes `func`, with up to `n` arguments,
     * ignoring any additional arguments.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @param {number} [n=func.length] The arity cap.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.ary(parseInt, 1));
     * // => [6, 8, 10]
     */
    function ary(func, n, guard) {
      n = guard ? undefined : n;
      n = (func && n == null) ? func.length : n;
      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
    }

    /**
     * Creates a function that invokes `func`, with the `this` binding and arguments
     * of the created function, while it's called less than `n` times. Subsequent
     * calls to the created function return the result of the last `func` invocation.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {number} n The number of calls at which `func` is no longer invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * jQuery(element).on('click', _.before(5, addContactToList));
     * // => Allows adding up to 4 contacts to the list.
     */
    function before(n, func) {
      var result;
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n > 0) {
          result = func.apply(this, arguments);
        }
        if (n <= 1) {
          func = undefined;
        }
        return result;
      };
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of `thisArg`
     * and `partials` prepended to the arguments it receives.
     *
     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for partially applied arguments.
     *
     * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
     * property of bound functions.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to bind.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * function greet(greeting, punctuation) {
     *   return greeting + ' ' + this.user + punctuation;
     * }
     *
     * var object = { 'user': 'fred' };
     *
     * var bound = _.bind(greet, object, 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bind(greet, object, _, '!');
     * bound('hi');
     * // => 'hi fred!'
     */
    var bind = baseRest(function(func, thisArg, partials) {
      var bitmask = WRAP_BIND_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bind));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(func, bitmask, thisArg, partials, holders);
    });

    /**
     * Creates a function that invokes the method at `object[key]` with `partials`
     * prepended to the arguments it receives.
     *
     * This method differs from `_.bind` by allowing bound functions to reference
     * methods that may be redefined or don't yet exist. See
     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
     * for more details.
     *
     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Function
     * @param {Object} object The object to invoke the method on.
     * @param {string} key The key of the method.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * var object = {
     *   'user': 'fred',
     *   'greet': function(greeting, punctuation) {
     *     return greeting + ' ' + this.user + punctuation;
     *   }
     * };
     *
     * var bound = _.bindKey(object, 'greet', 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * object.greet = function(greeting, punctuation) {
     *   return greeting + 'ya ' + this.user + punctuation;
     * };
     *
     * bound('!');
     * // => 'hiya fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bindKey(object, 'greet', _, '!');
     * bound('hi');
     * // => 'hiya fred!'
     */
    var bindKey = baseRest(function(object, key, partials) {
      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bindKey));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(key, bitmask, object, partials, holders);
    });

    /**
     * Creates a function that accepts arguments of `func` and either invokes
     * `func` returning its result, if at least `arity` number of arguments have
     * been provided, or returns a function that accepts the remaining `func`
     * arguments, and so on. The arity of `func` may be specified if `func.length`
     * is not sufficient.
     *
     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curry(abc);
     *
     * curried(1)(2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(1)(_, 3)(2);
     * // => [1, 2, 3]
     */
    function curry(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curry.placeholder;
      return result;
    }

    /**
     * This method is like `_.curry` except that arguments are applied to `func`
     * in the manner of `_.partialRight` instead of `_.partial`.
     *
     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curryRight(abc);
     *
     * curried(3)(2)(1);
     * // => [1, 2, 3]
     *
     * curried(2, 3)(1);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(3)(1, _)(2);
     * // => [1, 2, 3]
     */
    function curryRight(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curryRight.placeholder;
      return result;
    }

    /**
     * Creates a debounced function that delays invoking `func` until after `wait`
     * milliseconds have elapsed since the last time the debounced function was
     * invoked. The debounced function comes with a `cancel` method to cancel
     * delayed `func` invocations and a `flush` method to immediately invoke them.
     * Provide `options` to indicate whether `func` should be invoked on the
     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
     * with the last arguments provided to the debounced function. Subsequent
     * calls to the debounced function return the result of the last `func`
     * invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the debounced function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.debounce` and `_.throttle`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to debounce.
     * @param {number} [wait=0] The number of milliseconds to delay.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=false]
     *  Specify invoking on the leading edge of the timeout.
     * @param {number} [options.maxWait]
     *  The maximum time `func` is allowed to be delayed before it's invoked.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new debounced function.
     * @example
     *
     * // Avoid costly calculations while the window size is in flux.
     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
     *
     * // Invoke `sendMail` when clicked, debouncing subsequent calls.
     * jQuery(element).on('click', _.debounce(sendMail, 300, {
     *   'leading': true,
     *   'trailing': false
     * }));
     *
     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
     * var source = new EventSource('/stream');
     * jQuery(source).on('message', debounced);
     *
     * // Cancel the trailing debounced invocation.
     * jQuery(window).on('popstate', debounced.cancel);
     */
    function debounce(func, wait, options) {
      var lastArgs,
          lastThis,
          maxWait,
          result,
          timerId,
          lastCallTime,
          lastInvokeTime = 0,
          leading = false,
          maxing = false,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      wait = toNumber(wait) || 0;
      if (isObject(options)) {
        leading = !!options.leading;
        maxing = 'maxWait' in options;
        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }

      function invokeFunc(time) {
        var args = lastArgs,
            thisArg = lastThis;

        lastArgs = lastThis = undefined;
        lastInvokeTime = time;
        result = func.apply(thisArg, args);
        return result;
      }

      function leadingEdge(time) {
        // Reset any `maxWait` timer.
        lastInvokeTime = time;
        // Start the timer for the trailing edge.
        timerId = setTimeout(timerExpired, wait);
        // Invoke the leading edge.
        return leading ? invokeFunc(time) : result;
      }

      function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime,
            timeWaiting = wait - timeSinceLastCall;

        return maxing
          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)
          : timeWaiting;
      }

      function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime;

        // Either this is the first call, activity has stopped and we're at the
        // trailing edge, the system time has gone backwards and we're treating
        // it as the trailing edge, or we've hit the `maxWait` limit.
        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
      }

      function timerExpired() {
        var time = now();
        if (shouldInvoke(time)) {
          return trailingEdge(time);
        }
        // Restart the timer.
        timerId = setTimeout(timerExpired, remainingWait(time));
      }

      function trailingEdge(time) {
        timerId = undefined;

        // Only invoke if we have `lastArgs` which means `func` has been
        // debounced at least once.
        if (trailing && lastArgs) {
          return invokeFunc(time);
        }
        lastArgs = lastThis = undefined;
        return result;
      }

      function cancel() {
        if (timerId !== undefined) {
          clearTimeout(timerId);
        }
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = undefined;
      }

      function flush() {
        return timerId === undefined ? result : trailingEdge(now());
      }

      function debounced() {
        var time = now(),
            isInvoking = shouldInvoke(time);

        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time;

        if (isInvoking) {
          if (timerId === undefined) {
            return leadingEdge(lastCallTime);
          }
          if (maxing) {
            // Handle invocations in a tight loop.
            clearTimeout(timerId);
            timerId = setTimeout(timerExpired, wait);
            return invokeFunc(lastCallTime);
          }
        }
        if (timerId === undefined) {
          timerId = setTimeout(timerExpired, wait);
        }
        return result;
      }
      debounced.cancel = cancel;
      debounced.flush = flush;
      return debounced;
    }

    /**
     * Defers invoking the `func` until the current call stack has cleared. Any
     * additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to defer.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.defer(function(text) {
     *   console.log(text);
     * }, 'deferred');
     * // => Logs 'deferred' after one millisecond.
     */
    var defer = baseRest(function(func, args) {
      return baseDelay(func, 1, args);
    });

    /**
     * Invokes `func` after `wait` milliseconds. Any additional arguments are
     * provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.delay(function(text) {
     *   console.log(text);
     * }, 1000, 'later');
     * // => Logs 'later' after one second.
     */
    var delay = baseRest(function(func, wait, args) {
      return baseDelay(func, toNumber(wait) || 0, args);
    });

    /**
     * Creates a function that invokes `func` with arguments reversed.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to flip arguments for.
     * @returns {Function} Returns the new flipped function.
     * @example
     *
     * var flipped = _.flip(function() {
     *   return _.toArray(arguments);
     * });
     *
     * flipped('a', 'b', 'c', 'd');
     * // => ['d', 'c', 'b', 'a']
     */
    function flip(func) {
      return createWrap(func, WRAP_FLIP_FLAG);
    }

    /**
     * Creates a function that memoizes the result of `func`. If `resolver` is
     * provided, it determines the cache key for storing the result based on the
     * arguments provided to the memoized function. By default, the first argument
     * provided to the memoized function is used as the map cache key. The `func`
     * is invoked with the `this` binding of the memoized function.
     *
     * **Note:** The cache is exposed as the `cache` property on the memoized
     * function. Its creation may be customized by replacing the `_.memoize.Cache`
     * constructor with one whose instances implement the
     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
     * method interface of `clear`, `delete`, `get`, `has`, and `set`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to have its output memoized.
     * @param {Function} [resolver] The function to resolve the cache key.
     * @returns {Function} Returns the new memoized function.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     * var other = { 'c': 3, 'd': 4 };
     *
     * var values = _.memoize(_.values);
     * values(object);
     * // => [1, 2]
     *
     * values(other);
     * // => [3, 4]
     *
     * object.a = 2;
     * values(object);
     * // => [1, 2]
     *
     * // Modify the result cache.
     * values.cache.set(object, ['a', 'b']);
     * values(object);
     * // => ['a', 'b']
     *
     * // Replace `_.memoize.Cache`.
     * _.memoize.Cache = WeakMap;
     */
    function memoize(func, resolver) {
      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var memoized = function() {
        var args = arguments,
            key = resolver ? resolver.apply(this, args) : args[0],
            cache = memoized.cache;

        if (cache.has(key)) {
          return cache.get(key);
        }
        var result = func.apply(this, args);
        memoized.cache = cache.set(key, result) || cache;
        return result;
      };
      memoized.cache = new (memoize.Cache || MapCache);
      return memoized;
    }

    // Expose `MapCache`.
    memoize.Cache = MapCache;

    /**
     * Creates a function that negates the result of the predicate `func`. The
     * `func` predicate is invoked with the `this` binding and arguments of the
     * created function.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} predicate The predicate to negate.
     * @returns {Function} Returns the new negated function.
     * @example
     *
     * function isEven(n) {
     *   return n % 2 == 0;
     * }
     *
     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
     * // => [1, 3, 5]
     */
    function negate(predicate) {
      if (typeof predicate != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return function() {
        var args = arguments;
        switch (args.length) {
          case 0: return !predicate.call(this);
          case 1: return !predicate.call(this, args[0]);
          case 2: return !predicate.call(this, args[0], args[1]);
          case 3: return !predicate.call(this, args[0], args[1], args[2]);
        }
        return !predicate.apply(this, args);
      };
    }

    /**
     * Creates a function that is restricted to invoking `func` once. Repeat calls
     * to the function return the value of the first invocation. The `func` is
     * invoked with the `this` binding and arguments of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var initialize = _.once(createApplication);
     * initialize();
     * initialize();
     * // => `createApplication` is invoked once
     */
    function once(func) {
      return before(2, func);
    }

    /**
     * Creates a function that invokes `func` with its arguments transformed.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Function
     * @param {Function} func The function to wrap.
     * @param {...(Function|Function[])} [transforms=[_.identity]]
     *  The argument transforms.
     * @returns {Function} Returns the new function.
     * @example
     *
     * function doubled(n) {
     *   return n * 2;
     * }
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var func = _.overArgs(function(x, y) {
     *   return [x, y];
     * }, [square, doubled]);
     *
     * func(9, 3);
     * // => [81, 6]
     *
     * func(10, 5);
     * // => [100, 10]
     */
    var overArgs = castRest(function(func, transforms) {
      transforms = (transforms.length == 1 && isArray(transforms[0]))
        ? arrayMap(transforms[0], baseUnary(getIteratee()))
        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));

      var funcsLength = transforms.length;
      return baseRest(function(args) {
        var index = -1,
            length = nativeMin(args.length, funcsLength);

        while (++index < length) {
          args[index] = transforms[index].call(this, args[index]);
        }
        return apply(func, this, args);
      });
    });

    /**
     * Creates a function that invokes `func` with `partials` prepended to the
     * arguments it receives. This method is like `_.bind` except it does **not**
     * alter the `this` binding.
     *
     * The `_.partial.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 0.2.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var sayHelloTo = _.partial(greet, 'hello');
     * sayHelloTo('fred');
     * // => 'hello fred'
     *
     * // Partially applied with placeholders.
     * var greetFred = _.partial(greet, _, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     */
    var partial = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partial));
      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
    });

    /**
     * This method is like `_.partial` except that partially applied arguments
     * are appended to the arguments it receives.
     *
     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var greetFred = _.partialRight(greet, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     *
     * // Partially applied with placeholders.
     * var sayHelloTo = _.partialRight(greet, 'hello', _);
     * sayHelloTo('fred');
     * // => 'hello fred'
     */
    var partialRight = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partialRight));
      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
    });

    /**
     * Creates a function that invokes `func` with arguments arranged according
     * to the specified `indexes` where the argument value at the first index is
     * provided as the first argument, the argument value at the second index is
     * provided as the second argument, and so on.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to rearrange arguments for.
     * @param {...(number|number[])} indexes The arranged argument indexes.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var rearged = _.rearg(function(a, b, c) {
     *   return [a, b, c];
     * }, [2, 0, 1]);
     *
     * rearged('b', 'c', 'a')
     * // => ['a', 'b', 'c']
     */
    var rearg = flatRest(function(func, indexes) {
      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
    });

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * created function and arguments from `start` and beyond provided as
     * an array.
     *
     * **Note:** This method is based on the
     * [rest parameter](https://mdn.io/rest_parameters).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.rest(function(what, names) {
     *   return what + ' ' + _.initial(names).join(', ') +
     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
     * });
     *
     * say('hello', 'fred', 'barney', 'pebbles');
     * // => 'hello fred, barney, & pebbles'
     */
    function rest(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start === undefined ? start : toInteger(start);
      return baseRest(func, start);
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * create function and an array of arguments much like
     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).
     *
     * **Note:** This method is based on the
     * [spread operator](https://mdn.io/spread_operator).
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Function
     * @param {Function} func The function to spread arguments over.
     * @param {number} [start=0] The start position of the spread.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.spread(function(who, what) {
     *   return who + ' says ' + what;
     * });
     *
     * say(['fred', 'hello']);
     * // => 'fred says hello'
     *
     * var numbers = Promise.all([
     *   Promise.resolve(40),
     *   Promise.resolve(36)
     * ]);
     *
     * numbers.then(_.spread(function(x, y) {
     *   return x + y;
     * }));
     * // => a Promise of 76
     */
    function spread(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start == null ? 0 : nativeMax(toInteger(start), 0);
      return baseRest(function(args) {
        var array = args[start],
            otherArgs = castSlice(args, 0, start);

        if (array) {
          arrayPush(otherArgs, array);
        }
        return apply(func, this, otherArgs);
      });
    }

    /**
     * Creates a throttled function that only invokes `func` at most once per
     * every `wait` milliseconds. The throttled function comes with a `cancel`
     * method to cancel delayed `func` invocations and a `flush` method to
     * immediately invoke them. Provide `options` to indicate whether `func`
     * should be invoked on the leading and/or trailing edge of the `wait`
     * timeout. The `func` is invoked with the last arguments provided to the
     * throttled function. Subsequent calls to the throttled function return the
     * result of the last `func` invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the throttled function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.throttle` and `_.debounce`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to throttle.
     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=true]
     *  Specify invoking on the leading edge of the timeout.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new throttled function.
     * @example
     *
     * // Avoid excessively updating the position while scrolling.
     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
     *
     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
     * jQuery(element).on('click', throttled);
     *
     * // Cancel the trailing throttled invocation.
     * jQuery(window).on('popstate', throttled.cancel);
     */
    function throttle(func, wait, options) {
      var leading = true,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      if (isObject(options)) {
        leading = 'leading' in options ? !!options.leading : leading;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }
      return debounce(func, wait, {
        'leading': leading,
        'maxWait': wait,
        'trailing': trailing
      });
    }

    /**
     * Creates a function that accepts up to one argument, ignoring any
     * additional arguments.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.unary(parseInt));
     * // => [6, 8, 10]
     */
    function unary(func) {
      return ary(func, 1);
    }

    /**
     * Creates a function that provides `value` to `wrapper` as its first
     * argument. Any additional arguments provided to the function are appended
     * to those provided to the `wrapper`. The wrapper is invoked with the `this`
     * binding of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {*} value The value to wrap.
     * @param {Function} [wrapper=identity] The wrapper function.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var p = _.wrap(_.escape, function(func, text) {
     *   return '<p>' + func(text) + '</p>';
     * });
     *
     * p('fred, barney, & pebbles');
     * // => '<p>fred, barney, &amp; pebbles</p>'
     */
    function wrap(value, wrapper) {
      return partial(castFunction(wrapper), value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Casts `value` as an array if it's not one.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Lang
     * @param {*} value The value to inspect.
     * @returns {Array} Returns the cast array.
     * @example
     *
     * _.castArray(1);
     * // => [1]
     *
     * _.castArray({ 'a': 1 });
     * // => [{ 'a': 1 }]
     *
     * _.castArray('abc');
     * // => ['abc']
     *
     * _.castArray(null);
     * // => [null]
     *
     * _.castArray(undefined);
     * // => [undefined]
     *
     * _.castArray();
     * // => []
     *
     * var array = [1, 2, 3];
     * console.log(_.castArray(array) === array);
     * // => true
     */
    function castArray() {
      if (!arguments.length) {
        return [];
      }
      var value = arguments[0];
      return isArray(value) ? value : [value];
    }

    /**
     * Creates a shallow clone of `value`.
     *
     * **Note:** This method is loosely based on the
     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
     * and supports cloning arrays, array buffers, booleans, date objects, maps,
     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
     * arrays. The own enumerable properties of `arguments` objects are cloned
     * as plain objects. An empty object is returned for uncloneable values such
     * as error objects, functions, DOM nodes, and WeakMaps.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to clone.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeep
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var shallow = _.clone(objects);
     * console.log(shallow[0] === objects[0]);
     * // => true
     */
    function clone(value) {
      return baseClone(value, CLONE_SYMBOLS_FLAG);
    }

    /**
     * This method is like `_.clone` except that it accepts `customizer` which
     * is invoked to produce the cloned value. If `customizer` returns `undefined`,
     * cloning is handled by the method instead. The `customizer` is invoked with
     * up to four arguments; (value [, index|key, object, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeepWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(false);
     *   }
     * }
     *
     * var el = _.cloneWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 0
     */
    function cloneWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
    }

    /**
     * This method is like `_.clone` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @returns {*} Returns the deep cloned value.
     * @see _.clone
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var deep = _.cloneDeep(objects);
     * console.log(deep[0] === objects[0]);
     * // => false
     */
    function cloneDeep(value) {
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
    }

    /**
     * This method is like `_.cloneWith` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the deep cloned value.
     * @see _.cloneWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(true);
     *   }
     * }
     *
     * var el = _.cloneDeepWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 20
     */
    function cloneDeepWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
    }

    /**
     * Checks if `object` conforms to `source` by invoking the predicate
     * properties of `source` with the corresponding property values of `object`.
     *
     * **Note:** This method is equivalent to `_.conforms` when `source` is
     * partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });
     * // => true
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });
     * // => false
     */
    function conformsTo(object, source) {
      return source == null || baseConformsTo(object, source, keys(source));
    }

    /**
     * Performs a
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * comparison between two values to determine if they are equivalent.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.eq(object, object);
     * // => true
     *
     * _.eq(object, other);
     * // => false
     *
     * _.eq('a', 'a');
     * // => true
     *
     * _.eq('a', Object('a'));
     * // => false
     *
     * _.eq(NaN, NaN);
     * // => true
     */
    function eq(value, other) {
      return value === other || (value !== value && other !== other);
    }

    /**
     * Checks if `value` is greater than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     * @see _.lt
     * @example
     *
     * _.gt(3, 1);
     * // => true
     *
     * _.gt(3, 3);
     * // => false
     *
     * _.gt(1, 3);
     * // => false
     */
    var gt = createRelationalOperation(baseGt);

    /**
     * Checks if `value` is greater than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than or equal to
     *  `other`, else `false`.
     * @see _.lte
     * @example
     *
     * _.gte(3, 1);
     * // => true
     *
     * _.gte(3, 3);
     * // => true
     *
     * _.gte(1, 3);
     * // => false
     */
    var gte = createRelationalOperation(function(value, other) {
      return value >= other;
    });

    /**
     * Checks if `value` is likely an `arguments` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     *  else `false`.
     * @example
     *
     * _.isArguments(function() { return arguments; }());
     * // => true
     *
     * _.isArguments([1, 2, 3]);
     * // => false
     */
    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
        !propertyIsEnumerable.call(value, 'callee');
    };

    /**
     * Checks if `value` is classified as an `Array` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array, else `false`.
     * @example
     *
     * _.isArray([1, 2, 3]);
     * // => true
     *
     * _.isArray(document.body.children);
     * // => false
     *
     * _.isArray('abc');
     * // => false
     *
     * _.isArray(_.noop);
     * // => false
     */
    var isArray = Array.isArray;

    /**
     * Checks if `value` is classified as an `ArrayBuffer` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     * @example
     *
     * _.isArrayBuffer(new ArrayBuffer(2));
     * // => true
     *
     * _.isArrayBuffer(new Array(2));
     * // => false
     */
    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;

    /**
     * Checks if `value` is array-like. A value is considered array-like if it's
     * not a function and has a `value.length` that's an integer greater than or
     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
     * @example
     *
     * _.isArrayLike([1, 2, 3]);
     * // => true
     *
     * _.isArrayLike(document.body.children);
     * // => true
     *
     * _.isArrayLike('abc');
     * // => true
     *
     * _.isArrayLike(_.noop);
     * // => false
     */
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }

    /**
     * This method is like `_.isArrayLike` except that it also checks if `value`
     * is an object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array-like object,
     *  else `false`.
     * @example
     *
     * _.isArrayLikeObject([1, 2, 3]);
     * // => true
     *
     * _.isArrayLikeObject(document.body.children);
     * // => true
     *
     * _.isArrayLikeObject('abc');
     * // => false
     *
     * _.isArrayLikeObject(_.noop);
     * // => false
     */
    function isArrayLikeObject(value) {
      return isObjectLike(value) && isArrayLike(value);
    }

    /**
     * Checks if `value` is classified as a boolean primitive or object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
     * @example
     *
     * _.isBoolean(false);
     * // => true
     *
     * _.isBoolean(null);
     * // => false
     */
    function isBoolean(value) {
      return value === true || value === false ||
        (isObjectLike(value) && baseGetTag(value) == boolTag);
    }

    /**
     * Checks if `value` is a buffer.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
     * @example
     *
     * _.isBuffer(new Buffer(2));
     * // => true
     *
     * _.isBuffer(new Uint8Array(2));
     * // => false
     */
    var isBuffer = nativeIsBuffer || stubFalse;

    /**
     * Checks if `value` is classified as a `Date` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     * @example
     *
     * _.isDate(new Date);
     * // => true
     *
     * _.isDate('Mon April 23 2012');
     * // => false
     */
    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;

    /**
     * Checks if `value` is likely a DOM element.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
     * @example
     *
     * _.isElement(document.body);
     * // => true
     *
     * _.isElement('<body>');
     * // => false
     */
    function isElement(value) {
      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
    }

    /**
     * Checks if `value` is an empty object, collection, map, or set.
     *
     * Objects are considered empty if they have no own enumerable string keyed
     * properties.
     *
     * Array-like values such as `arguments` objects, arrays, buffers, strings, or
     * jQuery-like collections are considered empty if they have a `length` of `0`.
     * Similarly, maps and sets are considered empty if they have a `size` of `0`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is empty, else `false`.
     * @example
     *
     * _.isEmpty(null);
     * // => true
     *
     * _.isEmpty(true);
     * // => true
     *
     * _.isEmpty(1);
     * // => true
     *
     * _.isEmpty([1, 2, 3]);
     * // => false
     *
     * _.isEmpty({ 'a': 1 });
     * // => false
     */
    function isEmpty(value) {
      if (value == null) {
        return true;
      }
      if (isArrayLike(value) &&
          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||
            isBuffer(value) || isTypedArray(value) || isArguments(value))) {
        return !value.length;
      }
      var tag = getTag(value);
      if (tag == mapTag || tag == setTag) {
        return !value.size;
      }
      if (isPrototype(value)) {
        return !baseKeys(value).length;
      }
      for (var key in value) {
        if (hasOwnProperty.call(value, key)) {
          return false;
        }
      }
      return true;
    }

    /**
     * Performs a deep comparison between two values to determine if they are
     * equivalent.
     *
     * **Note:** This method supports comparing arrays, array buffers, booleans,
     * date objects, error objects, maps, numbers, `Object` objects, regexes,
     * sets, strings, symbols, and typed arrays. `Object` objects are compared
     * by their own, not inherited, enumerable properties. Functions and DOM
     * nodes are compared by strict equality, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.isEqual(object, other);
     * // => true
     *
     * object === other;
     * // => false
     */
    function isEqual(value, other) {
      return baseIsEqual(value, other);
    }

    /**
     * This method is like `_.isEqual` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with up to
     * six arguments: (objValue, othValue [, index|key, object, other, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, othValue) {
     *   if (isGreeting(objValue) && isGreeting(othValue)) {
     *     return true;
     *   }
     * }
     *
     * var array = ['hello', 'goodbye'];
     * var other = ['hi', 'goodbye'];
     *
     * _.isEqualWith(array, other, customizer);
     * // => true
     */
    function isEqualWith(value, other, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      var result = customizer ? customizer(value, other) : undefined;
      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;
    }

    /**
     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
     * `SyntaxError`, `TypeError`, or `URIError` object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
     * @example
     *
     * _.isError(new Error);
     * // => true
     *
     * _.isError(Error);
     * // => false
     */
    function isError(value) {
      if (!isObjectLike(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == errorTag || tag == domExcTag ||
        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));
    }

    /**
     * Checks if `value` is a finite primitive number.
     *
     * **Note:** This method is based on
     * [`Number.isFinite`](https://mdn.io/Number/isFinite).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
     * @example
     *
     * _.isFinite(3);
     * // => true
     *
     * _.isFinite(Number.MIN_VALUE);
     * // => true
     *
     * _.isFinite(Infinity);
     * // => false
     *
     * _.isFinite('3');
     * // => false
     */
    function isFinite(value) {
      return typeof value == 'number' && nativeIsFinite(value);
    }

    /**
     * Checks if `value` is classified as a `Function` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a function, else `false`.
     * @example
     *
     * _.isFunction(_);
     * // => true
     *
     * _.isFunction(/abc/);
     * // => false
     */
    function isFunction(value) {
      if (!isObject(value)) {
        return false;
      }
      // The use of `Object#toString` avoids issues with the `typeof` operator
      // in Safari 9 which returns 'object' for typed arrays and other constructors.
      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }

    /**
     * Checks if `value` is an integer.
     *
     * **Note:** This method is based on
     * [`Number.isInteger`](https://mdn.io/Number/isInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
     * @example
     *
     * _.isInteger(3);
     * // => true
     *
     * _.isInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isInteger(Infinity);
     * // => false
     *
     * _.isInteger('3');
     * // => false
     */
    function isInteger(value) {
      return typeof value == 'number' && value == toInteger(value);
    }

    /**
     * Checks if `value` is a valid array-like length.
     *
     * **Note:** This method is loosely based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
     * @example
     *
     * _.isLength(3);
     * // => true
     *
     * _.isLength(Number.MIN_VALUE);
     * // => false
     *
     * _.isLength(Infinity);
     * // => false
     *
     * _.isLength('3');
     * // => false
     */
    function isLength(value) {
      return typeof value == 'number' &&
        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is the
     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
     * @example
     *
     * _.isObject({});
     * // => true
     *
     * _.isObject([1, 2, 3]);
     * // => true
     *
     * _.isObject(_.noop);
     * // => true
     *
     * _.isObject(null);
     * // => false
     */
    function isObject(value) {
      var type = typeof value;
      return value != null && (type == 'object' || type == 'function');
    }

    /**
     * Checks if `value` is object-like. A value is object-like if it's not `null`
     * and has a `typeof` result of "object".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
     * @example
     *
     * _.isObjectLike({});
     * // => true
     *
     * _.isObjectLike([1, 2, 3]);
     * // => true
     *
     * _.isObjectLike(_.noop);
     * // => false
     *
     * _.isObjectLike(null);
     * // => false
     */
    function isObjectLike(value) {
      return value != null && typeof value == 'object';
    }

    /**
     * Checks if `value` is classified as a `Map` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     * @example
     *
     * _.isMap(new Map);
     * // => true
     *
     * _.isMap(new WeakMap);
     * // => false
     */
    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

    /**
     * Performs a partial deep comparison between `object` and `source` to
     * determine if `object` contains equivalent property values.
     *
     * **Note:** This method is equivalent to `_.matches` when `source` is
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.isMatch(object, { 'b': 2 });
     * // => true
     *
     * _.isMatch(object, { 'b': 1 });
     * // => false
     */
    function isMatch(object, source) {
      return object === source || baseIsMatch(object, source, getMatchData(source));
    }

    /**
     * This method is like `_.isMatch` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with five
     * arguments: (objValue, srcValue, index|key, object, source).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, srcValue) {
     *   if (isGreeting(objValue) && isGreeting(srcValue)) {
     *     return true;
     *   }
     * }
     *
     * var object = { 'greeting': 'hello' };
     * var source = { 'greeting': 'hi' };
     *
     * _.isMatchWith(object, source, customizer);
     * // => true
     */
    function isMatchWith(object, source, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseIsMatch(object, source, getMatchData(source), customizer);
    }

    /**
     * Checks if `value` is `NaN`.
     *
     * **Note:** This method is based on
     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
     * `undefined` and other non-number values.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
     * @example
     *
     * _.isNaN(NaN);
     * // => true
     *
     * _.isNaN(new Number(NaN));
     * // => true
     *
     * isNaN(undefined);
     * // => true
     *
     * _.isNaN(undefined);
     * // => false
     */
    function isNaN(value) {
      // An `NaN` primitive is the only value that is not equal to itself.
      // Perform the `toStringTag` check first to avoid errors with some
      // ActiveX objects in IE.
      return isNumber(value) && value != +value;
    }

    /**
     * Checks if `value` is a pristine native function.
     *
     * **Note:** This method can't reliably detect native functions in the presence
     * of the core-js package because core-js circumvents this kind of detection.
     * Despite multiple requests, the core-js maintainer has made it clear: any
     * attempt to fix the detection will be obstructed. As a result, we're left
     * with little choice but to throw an error. Unfortunately, this also affects
     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),
     * which rely on core-js.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     * @example
     *
     * _.isNative(Array.prototype.push);
     * // => true
     *
     * _.isNative(_);
     * // => false
     */
    function isNative(value) {
      if (isMaskable(value)) {
        throw new Error(CORE_ERROR_TEXT);
      }
      return baseIsNative(value);
    }

    /**
     * Checks if `value` is `null`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
     * @example
     *
     * _.isNull(null);
     * // => true
     *
     * _.isNull(void 0);
     * // => false
     */
    function isNull(value) {
      return value === null;
    }

    /**
     * Checks if `value` is `null` or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
     * @example
     *
     * _.isNil(null);
     * // => true
     *
     * _.isNil(void 0);
     * // => true
     *
     * _.isNil(NaN);
     * // => false
     */
    function isNil(value) {
      return value == null;
    }

    /**
     * Checks if `value` is classified as a `Number` primitive or object.
     *
     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
     * classified as numbers, use the `_.isFinite` method.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a number, else `false`.
     * @example
     *
     * _.isNumber(3);
     * // => true
     *
     * _.isNumber(Number.MIN_VALUE);
     * // => true
     *
     * _.isNumber(Infinity);
     * // => true
     *
     * _.isNumber('3');
     * // => false
     */
    function isNumber(value) {
      return typeof value == 'number' ||
        (isObjectLike(value) && baseGetTag(value) == numberTag);
    }

    /**
     * Checks if `value` is a plain object, that is, an object created by the
     * `Object` constructor or one with a `[[Prototype]]` of `null`.
     *
     * @static
     * @memberOf _
     * @since 0.8.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * _.isPlainObject(new Foo);
     * // => false
     *
     * _.isPlainObject([1, 2, 3]);
     * // => false
     *
     * _.isPlainObject({ 'x': 0, 'y': 0 });
     * // => true
     *
     * _.isPlainObject(Object.create(null));
     * // => true
     */
    function isPlainObject(value) {
      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
        return false;
      }
      var proto = getPrototype(value);
      if (proto === null) {
        return true;
      }
      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
      return typeof Ctor == 'function' && Ctor instanceof Ctor &&
        funcToString.call(Ctor) == objectCtorString;
    }

    /**
     * Checks if `value` is classified as a `RegExp` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     * @example
     *
     * _.isRegExp(/abc/);
     * // => true
     *
     * _.isRegExp('/abc/');
     * // => false
     */
    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;

    /**
     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
     * double precision number which isn't the result of a rounded unsafe integer.
     *
     * **Note:** This method is based on
     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.
     * @example
     *
     * _.isSafeInteger(3);
     * // => true
     *
     * _.isSafeInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isSafeInteger(Infinity);
     * // => false
     *
     * _.isSafeInteger('3');
     * // => false
     */
    function isSafeInteger(value) {
      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is classified as a `Set` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     * @example
     *
     * _.isSet(new Set);
     * // => true
     *
     * _.isSet(new WeakSet);
     * // => false
     */
    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

    /**
     * Checks if `value` is classified as a `String` primitive or object.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a string, else `false`.
     * @example
     *
     * _.isString('abc');
     * // => true
     *
     * _.isString(1);
     * // => false
     */
    function isString(value) {
      return typeof value == 'string' ||
        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);
    }

    /**
     * Checks if `value` is classified as a `Symbol` primitive or object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
     * @example
     *
     * _.isSymbol(Symbol.iterator);
     * // => true
     *
     * _.isSymbol('abc');
     * // => false
     */
    function isSymbol(value) {
      return typeof value == 'symbol' ||
        (isObjectLike(value) && baseGetTag(value) == symbolTag);
    }

    /**
     * Checks if `value` is classified as a typed array.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     * @example
     *
     * _.isTypedArray(new Uint8Array);
     * // => true
     *
     * _.isTypedArray([]);
     * // => false
     */
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

    /**
     * Checks if `value` is `undefined`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
     * @example
     *
     * _.isUndefined(void 0);
     * // => true
     *
     * _.isUndefined(null);
     * // => false
     */
    function isUndefined(value) {
      return value === undefined;
    }

    /**
     * Checks if `value` is classified as a `WeakMap` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
     * @example
     *
     * _.isWeakMap(new WeakMap);
     * // => true
     *
     * _.isWeakMap(new Map);
     * // => false
     */
    function isWeakMap(value) {
      return isObjectLike(value) && getTag(value) == weakMapTag;
    }

    /**
     * Checks if `value` is classified as a `WeakSet` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.
     * @example
     *
     * _.isWeakSet(new WeakSet);
     * // => true
     *
     * _.isWeakSet(new Set);
     * // => false
     */
    function isWeakSet(value) {
      return isObjectLike(value) && baseGetTag(value) == weakSetTag;
    }

    /**
     * Checks if `value` is less than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     * @see _.gt
     * @example
     *
     * _.lt(1, 3);
     * // => true
     *
     * _.lt(3, 3);
     * // => false
     *
     * _.lt(3, 1);
     * // => false
     */
    var lt = createRelationalOperation(baseLt);

    /**
     * Checks if `value` is less than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than or equal to
     *  `other`, else `false`.
     * @see _.gte
     * @example
     *
     * _.lte(1, 3);
     * // => true
     *
     * _.lte(3, 3);
     * // => true
     *
     * _.lte(3, 1);
     * // => false
     */
    var lte = createRelationalOperation(function(value, other) {
      return value <= other;
    });

    /**
     * Converts `value` to an array.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Array} Returns the converted array.
     * @example
     *
     * _.toArray({ 'a': 1, 'b': 2 });
     * // => [1, 2]
     *
     * _.toArray('abc');
     * // => ['a', 'b', 'c']
     *
     * _.toArray(1);
     * // => []
     *
     * _.toArray(null);
     * // => []
     */
    function toArray(value) {
      if (!value) {
        return [];
      }
      if (isArrayLike(value)) {
        return isString(value) ? stringToArray(value) : copyArray(value);
      }
      if (symIterator && value[symIterator]) {
        return iteratorToArray(value[symIterator]());
      }
      var tag = getTag(value),
          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);

      return func(value);
    }

    /**
     * Converts `value` to a finite number.
     *
     * @static
     * @memberOf _
     * @since 4.12.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted number.
     * @example
     *
     * _.toFinite(3.2);
     * // => 3.2
     *
     * _.toFinite(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toFinite(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toFinite('3.2');
     * // => 3.2
     */
    function toFinite(value) {
      if (!value) {
        return value === 0 ? value : 0;
      }
      value = toNumber(value);
      if (value === INFINITY || value === -INFINITY) {
        var sign = (value < 0 ? -1 : 1);
        return sign * MAX_INTEGER;
      }
      return value === value ? value : 0;
    }

    /**
     * Converts `value` to an integer.
     *
     * **Note:** This method is loosely based on
     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toInteger(3.2);
     * // => 3
     *
     * _.toInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toInteger(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toInteger('3.2');
     * // => 3
     */
    function toInteger(value) {
      var result = toFinite(value),
          remainder = result % 1;

      return result === result ? (remainder ? result - remainder : result) : 0;
    }

    /**
     * Converts `value` to an integer suitable for use as the length of an
     * array-like object.
     *
     * **Note:** This method is based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toLength(3.2);
     * // => 3
     *
     * _.toLength(Number.MIN_VALUE);
     * // => 0
     *
     * _.toLength(Infinity);
     * // => 4294967295
     *
     * _.toLength('3.2');
     * // => 3
     */
    function toLength(value) {
      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
    }

    /**
     * Converts `value` to a number.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     * @example
     *
     * _.toNumber(3.2);
     * // => 3.2
     *
     * _.toNumber(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toNumber(Infinity);
     * // => Infinity
     *
     * _.toNumber('3.2');
     * // => 3.2
     */
    function toNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
        value = isObject(other) ? (other + '') : other;
      }
      if (typeof value != 'string') {
        return value === 0 ? value : +value;
      }
      value = baseTrim(value);
      var isBinary = reIsBinary.test(value);
      return (isBinary || reIsOctal.test(value))
        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
        : (reIsBadHex.test(value) ? NAN : +value);
    }

    /**
     * Converts `value` to a plain object flattening inherited enumerable string
     * keyed properties of `value` to own properties of the plain object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Object} Returns the converted plain object.
     * @example
     *
     * function Foo() {
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.assign({ 'a': 1 }, new Foo);
     * // => { 'a': 1, 'b': 2 }
     *
     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
     * // => { 'a': 1, 'b': 2, 'c': 3 }
     */
    function toPlainObject(value) {
      return copyObject(value, keysIn(value));
    }

    /**
     * Converts `value` to a safe integer. A safe integer can be compared and
     * represented correctly.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toSafeInteger(3.2);
     * // => 3
     *
     * _.toSafeInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toSafeInteger(Infinity);
     * // => 9007199254740991
     *
     * _.toSafeInteger('3.2');
     * // => 3
     */
    function toSafeInteger(value) {
      return value
        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)
        : (value === 0 ? value : 0);
    }

    /**
     * Converts `value` to a string. An empty string is returned for `null`
     * and `undefined` values. The sign of `-0` is preserved.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.toString(null);
     * // => ''
     *
     * _.toString(-0);
     * // => '-0'
     *
     * _.toString([1, 2, 3]);
     * // => '1,2,3'
     */
    function toString(value) {
      return value == null ? '' : baseToString(value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Assigns own enumerable string keyed properties of source objects to the
     * destination object. Source objects are applied from left to right.
     * Subsequent sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object` and is loosely based on
     * [`Object.assign`](https://mdn.io/Object/assign).
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assignIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assign({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'c': 3 }
     */
    var assign = createAssigner(function(object, source) {
      if (isPrototype(source) || isArrayLike(source)) {
        copyObject(source, keys(source), object);
        return;
      }
      for (var key in source) {
        if (hasOwnProperty.call(source, key)) {
          assignValue(object, key, source[key]);
        }
      }
    });

    /**
     * This method is like `_.assign` except that it iterates over own and
     * inherited source properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extend
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assign
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assignIn({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
     */
    var assignIn = createAssigner(function(object, source) {
      copyObject(source, keysIn(source), object);
    });

    /**
     * This method is like `_.assignIn` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extendWith
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignInWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keysIn(source), object, customizer);
    });

    /**
     * This method is like `_.assign` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignInWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keys(source), object, customizer);
    });

    /**
     * Creates an array of values corresponding to `paths` of `object`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Array} Returns the picked values.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _.at(object, ['a[0].b.c', 'a[1]']);
     * // => [3, 4]
     */
    var at = flatRest(baseAt);

    /**
     * Creates an object that inherits from the `prototype` object. If a
     * `properties` object is given, its own enumerable string keyed properties
     * are assigned to the created object.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Object
     * @param {Object} prototype The object to inherit from.
     * @param {Object} [properties] The properties to assign to the object.
     * @returns {Object} Returns the new object.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * function Circle() {
     *   Shape.call(this);
     * }
     *
     * Circle.prototype = _.create(Shape.prototype, {
     *   'constructor': Circle
     * });
     *
     * var circle = new Circle;
     * circle instanceof Circle;
     * // => true
     *
     * circle instanceof Shape;
     * // => true
     */
    function create(prototype, properties) {
      var result = baseCreate(prototype);
      return properties == null ? result : baseAssign(result, properties);
    }

    /**
     * Assigns own and inherited enumerable string keyed properties of source
     * objects to the destination object for all destination properties that
     * resolve to `undefined`. Source objects are applied from left to right.
     * Once a property is set, additional values of the same property are ignored.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaultsDeep
     * @example
     *
     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var defaults = baseRest(function(object, sources) {
      object = Object(object);

      var index = -1;
      var length = sources.length;
      var guard = length > 2 ? sources[2] : undefined;

      if (guard && isIterateeCall(sources[0], sources[1], guard)) {
        length = 1;
      }

      while (++index < length) {
        var source = sources[index];
        var props = keysIn(source);
        var propsIndex = -1;
        var propsLength = props.length;

        while (++propsIndex < propsLength) {
          var key = props[propsIndex];
          var value = object[key];

          if (value === undefined ||
              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {
            object[key] = source[key];
          }
        }
      }

      return object;
    });

    /**
     * This method is like `_.defaults` except that it recursively assigns
     * default properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaults
     * @example
     *
     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });
     * // => { 'a': { 'b': 2, 'c': 3 } }
     */
    var defaultsDeep = baseRest(function(args) {
      args.push(undefined, customDefaultsMerge);
      return apply(mergeWith, undefined, args);
    });

    /**
     * This method is like `_.find` except that it returns the key of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findKey(users, function(o) { return o.age < 40; });
     * // => 'barney' (iteration order is not guaranteed)
     *
     * // The `_.matches` iteratee shorthand.
     * _.findKey(users, { 'age': 1, 'active': true });
     * // => 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findKey(users, 'active');
     * // => 'barney'
     */
    function findKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
    }

    /**
     * This method is like `_.findKey` except that it iterates over elements of
     * a collection in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findLastKey(users, function(o) { return o.age < 40; });
     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastKey(users, { 'age': 36, 'active': true });
     * // => 'barney'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastKey(users, 'active');
     * // => 'pebbles'
     */
    function findLastKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
    }

    /**
     * Iterates over own and inherited enumerable string keyed properties of an
     * object and invokes `iteratee` for each property. The iteratee is invoked
     * with three arguments: (value, key, object). Iteratee functions may exit
     * iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forInRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forIn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
     */
    function forIn(object, iteratee) {
      return object == null
        ? object
        : baseFor(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * This method is like `_.forIn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forInRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
     */
    function forInRight(object, iteratee) {
      return object == null
        ? object
        : baseForRight(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * Iterates over own enumerable string keyed properties of an object and
     * invokes `iteratee` for each property. The iteratee is invoked with three
     * arguments: (value, key, object). Iteratee functions may exit iteration
     * early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwnRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forOwn(object, iteratee) {
      return object && baseForOwn(object, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forOwn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwnRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
     */
    function forOwnRight(object, iteratee) {
      return object && baseForOwnRight(object, getIteratee(iteratee, 3));
    }

    /**
     * Creates an array of function property names from own enumerable properties
     * of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functionsIn
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functions(new Foo);
     * // => ['a', 'b']
     */
    function functions(object) {
      return object == null ? [] : baseFunctions(object, keys(object));
    }

    /**
     * Creates an array of function property names from own and inherited
     * enumerable properties of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functions
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functionsIn(new Foo);
     * // => ['a', 'b', 'c']
     */
    function functionsIn(object) {
      return object == null ? [] : baseFunctions(object, keysIn(object));
    }

    /**
     * Gets the value at `path` of `object`. If the resolved value is
     * `undefined`, the `defaultValue` is returned in its place.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.get(object, 'a[0].b.c');
     * // => 3
     *
     * _.get(object, ['a', '0', 'b', 'c']);
     * // => 3
     *
     * _.get(object, 'a.b.c', 'default');
     * // => 'default'
     */
    function get(object, path, defaultValue) {
      var result = object == null ? undefined : baseGet(object, path);
      return result === undefined ? defaultValue : result;
    }

    /**
     * Checks if `path` is a direct property of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = { 'a': { 'b': 2 } };
     * var other = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.has(object, 'a');
     * // => true
     *
     * _.has(object, 'a.b');
     * // => true
     *
     * _.has(object, ['a', 'b']);
     * // => true
     *
     * _.has(other, 'a');
     * // => false
     */
    function has(object, path) {
      return object != null && hasPath(object, path, baseHas);
    }

    /**
     * Checks if `path` is a direct or inherited property of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.hasIn(object, 'a');
     * // => true
     *
     * _.hasIn(object, 'a.b');
     * // => true
     *
     * _.hasIn(object, ['a', 'b']);
     * // => true
     *
     * _.hasIn(object, 'b');
     * // => false
     */
    function hasIn(object, path) {
      return object != null && hasPath(object, path, baseHasIn);
    }

    /**
     * Creates an object composed of the inverted keys and values of `object`.
     * If `object` contains duplicate values, subsequent values overwrite
     * property assignments of previous values.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Object
     * @param {Object} object The object to invert.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invert(object);
     * // => { '1': 'c', '2': 'b' }
     */
    var invert = createInverter(function(result, value, key) {
      if (value != null &&
          typeof value.toString != 'function') {
        value = nativeObjectToString.call(value);
      }

      result[value] = key;
    }, constant(identity));

    /**
     * This method is like `_.invert` except that the inverted object is generated
     * from the results of running each element of `object` thru `iteratee`. The
     * corresponding inverted value of each inverted key is an array of keys
     * responsible for generating the inverted value. The iteratee is invoked
     * with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Object
     * @param {Object} object The object to invert.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invertBy(object);
     * // => { '1': ['a', 'c'], '2': ['b'] }
     *
     * _.invertBy(object, function(value) {
     *   return 'group' + value;
     * });
     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
     */
    var invertBy = createInverter(function(result, value, key) {
      if (value != null &&
          typeof value.toString != 'function') {
        value = nativeObjectToString.call(value);
      }

      if (hasOwnProperty.call(result, value)) {
        result[value].push(key);
      } else {
        result[value] = [key];
      }
    }, getIteratee);

    /**
     * Invokes the method at `path` of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
     *
     * _.invoke(object, 'a[0].b.c.slice', 1, 3);
     * // => [2, 3]
     */
    var invoke = baseRest(baseInvoke);

    /**
     * Creates an array of the own enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects. See the
     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * for more details.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keys(new Foo);
     * // => ['a', 'b'] (iteration order is not guaranteed)
     *
     * _.keys('hi');
     * // => ['0', '1']
     */
    function keys(object) {
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
    }

    /**
     * Creates an array of the own and inherited enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keysIn(new Foo);
     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
     */
    function keysIn(object) {
      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
    }

    /**
     * The opposite of `_.mapValues`; this method creates an object with the
     * same values as `object` and keys generated by running each own enumerable
     * string keyed property of `object` thru `iteratee`. The iteratee is invoked
     * with three arguments: (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapValues
     * @example
     *
     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
     *   return key + value;
     * });
     * // => { 'a1': 1, 'b2': 2 }
     */
    function mapKeys(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, iteratee(value, key, object), value);
      });
      return result;
    }

    /**
     * Creates an object with the same keys as `object` and values generated
     * by running each own enumerable string keyed property of `object` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapKeys
     * @example
     *
     * var users = {
     *   'fred':    { 'user': 'fred',    'age': 40 },
     *   'pebbles': { 'user': 'pebbles', 'age': 1 }
     * };
     *
     * _.mapValues(users, function(o) { return o.age; });
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     *
     * // The `_.property` iteratee shorthand.
     * _.mapValues(users, 'age');
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     */
    function mapValues(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, key, iteratee(value, key, object));
      });
      return result;
    }

    /**
     * This method is like `_.assign` except that it recursively merges own and
     * inherited enumerable string keyed properties of source objects into the
     * destination object. Source properties that resolve to `undefined` are
     * skipped if a destination value exists. Array and plain object properties
     * are merged recursively. Other objects and value types are overridden by
     * assignment. Source objects are applied from left to right. Subsequent
     * sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {
     *   'a': [{ 'b': 2 }, { 'd': 4 }]
     * };
     *
     * var other = {
     *   'a': [{ 'c': 3 }, { 'e': 5 }]
     * };
     *
     * _.merge(object, other);
     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
     */
    var merge = createAssigner(function(object, source, srcIndex) {
      baseMerge(object, source, srcIndex);
    });

    /**
     * This method is like `_.merge` except that it accepts `customizer` which
     * is invoked to produce the merged values of the destination and source
     * properties. If `customizer` returns `undefined`, merging is handled by the
     * method instead. The `customizer` is invoked with six arguments:
     * (objValue, srcValue, key, object, source, stack).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} customizer The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   if (_.isArray(objValue)) {
     *     return objValue.concat(srcValue);
     *   }
     * }
     *
     * var object = { 'a': [1], 'b': [2] };
     * var other = { 'a': [3], 'b': [4] };
     *
     * _.mergeWith(object, other, customizer);
     * // => { 'a': [1, 3], 'b': [2, 4] }
     */
    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
      baseMerge(object, source, srcIndex, customizer);
    });

    /**
     * The opposite of `_.pick`; this method creates an object composed of the
     * own and inherited enumerable property paths of `object` that are not omitted.
     *
     * **Note:** This method is considerably slower than `_.pick`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to omit.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omit(object, ['a', 'c']);
     * // => { 'b': '2' }
     */
    var omit = flatRest(function(object, paths) {
      var result = {};
      if (object == null) {
        return result;
      }
      var isDeep = false;
      paths = arrayMap(paths, function(path) {
        path = castPath(path, object);
        isDeep || (isDeep = path.length > 1);
        return path;
      });
      copyObject(object, getAllKeysIn(object), result);
      if (isDeep) {
        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
      }
      var length = paths.length;
      while (length--) {
        baseUnset(result, paths[length]);
      }
      return result;
    });

    /**
     * The opposite of `_.pickBy`; this method creates an object composed of
     * the own and inherited enumerable string keyed properties of `object` that
     * `predicate` doesn't return truthy for. The predicate is invoked with two
     * arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omitBy(object, _.isNumber);
     * // => { 'b': '2' }
     */
    function omitBy(object, predicate) {
      return pickBy(object, negate(getIteratee(predicate)));
    }

    /**
     * Creates an object composed of the picked `object` properties.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pick(object, ['a', 'c']);
     * // => { 'a': 1, 'c': 3 }
     */
    var pick = flatRest(function(object, paths) {
      return object == null ? {} : basePick(object, paths);
    });

    /**
     * Creates an object composed of the `object` properties `predicate` returns
     * truthy for. The predicate is invoked with two arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pickBy(object, _.isNumber);
     * // => { 'a': 1, 'c': 3 }
     */
    function pickBy(object, predicate) {
      if (object == null) {
        return {};
      }
      var props = arrayMap(getAllKeysIn(object), function(prop) {
        return [prop];
      });
      predicate = getIteratee(predicate);
      return basePickBy(object, props, function(value, path) {
        return predicate(value, path[0]);
      });
    }

    /**
     * This method is like `_.get` except that if the resolved value is a
     * function it's invoked with the `this` binding of its parent object and
     * its result is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to resolve.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
     *
     * _.result(object, 'a[0].b.c1');
     * // => 3
     *
     * _.result(object, 'a[0].b.c2');
     * // => 4
     *
     * _.result(object, 'a[0].b.c3', 'default');
     * // => 'default'
     *
     * _.result(object, 'a[0].b.c3', _.constant('default'));
     * // => 'default'
     */
    function result(object, path, defaultValue) {
      path = castPath(path, object);

      var index = -1,
          length = path.length;

      // Ensure the loop is entered when path is empty.
      if (!length) {
        length = 1;
        object = undefined;
      }
      while (++index < length) {
        var value = object == null ? undefined : object[toKey(path[index])];
        if (value === undefined) {
          index = length;
          value = defaultValue;
        }
        object = isFunction(value) ? value.call(object) : value;
      }
      return object;
    }

    /**
     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
     * it's created. Arrays are created for missing index properties while objects
     * are created for all other missing properties. Use `_.setWith` to customize
     * `path` creation.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.set(object, 'a[0].b.c', 4);
     * console.log(object.a[0].b.c);
     * // => 4
     *
     * _.set(object, ['x', '0', 'y', 'z'], 5);
     * console.log(object.x[0].y.z);
     * // => 5
     */
    function set(object, path, value) {
      return object == null ? object : baseSet(object, path, value);
    }

    /**
     * This method is like `_.set` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.setWith(object, '[0][1]', 'a', Object);
     * // => { '0': { '1': 'a' } }
     */
    function setWith(object, path, value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseSet(object, path, value, customizer);
    }

    /**
     * Creates an array of own enumerable string keyed-value pairs for `object`
     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
     * entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entries
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairs(new Foo);
     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
     */
    var toPairs = createToPairs(keys);

    /**
     * Creates an array of own and inherited enumerable string keyed-value pairs
     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map
     * or set, its entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entriesIn
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairsIn(new Foo);
     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
     */
    var toPairsIn = createToPairs(keysIn);

    /**
     * An alternative to `_.reduce`; this method transforms `object` to a new
     * `accumulator` object which is the result of running each of its own
     * enumerable string keyed properties thru `iteratee`, with each invocation
     * potentially mutating the `accumulator` object. If `accumulator` is not
     * provided, a new object with the same `[[Prototype]]` will be used. The
     * iteratee is invoked with four arguments: (accumulator, value, key, object).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The custom accumulator value.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * _.transform([2, 3, 4], function(result, n) {
     *   result.push(n *= n);
     *   return n % 2 == 0;
     * }, []);
     * // => [4, 9]
     *
     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] }
     */
    function transform(object, iteratee, accumulator) {
      var isArr = isArray(object),
          isArrLike = isArr || isBuffer(object) || isTypedArray(object);

      iteratee = getIteratee(iteratee, 4);
      if (accumulator == null) {
        var Ctor = object && object.constructor;
        if (isArrLike) {
          accumulator = isArr ? new Ctor : [];
        }
        else if (isObject(object)) {
          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
        }
        else {
          accumulator = {};
        }
      }
      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {
        return iteratee(accumulator, value, index, object);
      });
      return accumulator;
    }

    /**
     * Removes the property at `path` of `object`.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 7 } }] };
     * _.unset(object, 'a[0].b.c');
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     *
     * _.unset(object, ['a', '0', 'b', 'c']);
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     */
    function unset(object, path) {
      return object == null ? true : baseUnset(object, path);
    }

    /**
     * This method is like `_.set` except that accepts `updater` to produce the
     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
     * is invoked with one argument: (value).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.update(object, 'a[0].b.c', function(n) { return n * n; });
     * console.log(object.a[0].b.c);
     * // => 9
     *
     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
     * console.log(object.x[0].y.z);
     * // => 0
     */
    function update(object, path, updater) {
      return object == null ? object : baseUpdate(object, path, castFunction(updater));
    }

    /**
     * This method is like `_.update` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.updateWith(object, '[0][1]', _.constant('a'), Object);
     * // => { '0': { '1': 'a' } }
     */
    function updateWith(object, path, updater, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
    }

    /**
     * Creates an array of the own enumerable string keyed property values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.values(new Foo);
     * // => [1, 2] (iteration order is not guaranteed)
     *
     * _.values('hi');
     * // => ['h', 'i']
     */
    function values(object) {
      return object == null ? [] : baseValues(object, keys(object));
    }

    /**
     * Creates an array of the own and inherited enumerable string keyed property
     * values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.valuesIn(new Foo);
     * // => [1, 2, 3] (iteration order is not guaranteed)
     */
    function valuesIn(object) {
      return object == null ? [] : baseValues(object, keysIn(object));
    }

    /*------------------------------------------------------------------------*/

    /**
     * Clamps `number` within the inclusive `lower` and `upper` bounds.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Number
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     * @example
     *
     * _.clamp(-10, -5, 5);
     * // => -5
     *
     * _.clamp(10, -5, 5);
     * // => 5
     */
    function clamp(number, lower, upper) {
      if (upper === undefined) {
        upper = lower;
        lower = undefined;
      }
      if (upper !== undefined) {
        upper = toNumber(upper);
        upper = upper === upper ? upper : 0;
      }
      if (lower !== undefined) {
        lower = toNumber(lower);
        lower = lower === lower ? lower : 0;
      }
      return baseClamp(toNumber(number), lower, upper);
    }

    /**
     * Checks if `n` is between `start` and up to, but not including, `end`. If
     * `end` is not specified, it's set to `start` with `start` then set to `0`.
     * If `start` is greater than `end` the params are swapped to support
     * negative ranges.
     *
     * @static
     * @memberOf _
     * @since 3.3.0
     * @category Number
     * @param {number} number The number to check.
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     * @see _.range, _.rangeRight
     * @example
     *
     * _.inRange(3, 2, 4);
     * // => true
     *
     * _.inRange(4, 8);
     * // => true
     *
     * _.inRange(4, 2);
     * // => false
     *
     * _.inRange(2, 2);
     * // => false
     *
     * _.inRange(1.2, 2);
     * // => true
     *
     * _.inRange(5.2, 4);
     * // => false
     *
     * _.inRange(-3, -2, -6);
     * // => true
     */
    function inRange(number, start, end) {
      start = toFinite(start);
      if (end === undefined) {
        end = start;
        start = 0;
      } else {
        end = toFinite(end);
      }
      number = toNumber(number);
      return baseInRange(number, start, end);
    }

    /**
     * Produces a random number between the inclusive `lower` and `upper` bounds.
     * If only one argument is provided a number between `0` and the given number
     * is returned. If `floating` is `true`, or either `lower` or `upper` are
     * floats, a floating-point number is returned instead of an integer.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Number
     * @param {number} [lower=0] The lower bound.
     * @param {number} [upper=1] The upper bound.
     * @param {boolean} [floating] Specify returning a floating-point number.
     * @returns {number} Returns the random number.
     * @example
     *
     * _.random(0, 5);
     * // => an integer between 0 and 5
     *
     * _.random(5);
     * // => also an integer between 0 and 5
     *
     * _.random(5, true);
     * // => a floating-point number between 0 and 5
     *
     * _.random(1.2, 5.2);
     * // => a floating-point number between 1.2 and 5.2
     */
    function random(lower, upper, floating) {
      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {
        upper = floating = undefined;
      }
      if (floating === undefined) {
        if (typeof upper == 'boolean') {
          floating = upper;
          upper = undefined;
        }
        else if (typeof lower == 'boolean') {
          floating = lower;
          lower = undefined;
        }
      }
      if (lower === undefined && upper === undefined) {
        lower = 0;
        upper = 1;
      }
      else {
        lower = toFinite(lower);
        if (upper === undefined) {
          upper = lower;
          lower = 0;
        } else {
          upper = toFinite(upper);
        }
      }
      if (lower > upper) {
        var temp = lower;
        lower = upper;
        upper = temp;
      }
      if (floating || lower % 1 || upper % 1) {
        var rand = nativeRandom();
        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);
      }
      return baseRandom(lower, upper);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the camel cased string.
     * @example
     *
     * _.camelCase('Foo Bar');
     * // => 'fooBar'
     *
     * _.camelCase('--foo-bar--');
     * // => 'fooBar'
     *
     * _.camelCase('__FOO_BAR__');
     * // => 'fooBar'
     */
    var camelCase = createCompounder(function(result, word, index) {
      word = word.toLowerCase();
      return result + (index ? capitalize(word) : word);
    });

    /**
     * Converts the first character of `string` to upper case and the remaining
     * to lower case.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to capitalize.
     * @returns {string} Returns the capitalized string.
     * @example
     *
     * _.capitalize('FRED');
     * // => 'Fred'
     */
    function capitalize(string) {
      return upperFirst(toString(string).toLowerCase());
    }

    /**
     * Deburrs `string` by converting
     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
     * letters to basic Latin letters and removing
     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to deburr.
     * @returns {string} Returns the deburred string.
     * @example
     *
     * _.deburr('déjà vu');
     * // => 'deja vu'
     */
    function deburr(string) {
      string = toString(string);
      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
    }

    /**
     * Checks if `string` ends with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=string.length] The position to search up to.
     * @returns {boolean} Returns `true` if `string` ends with `target`,
     *  else `false`.
     * @example
     *
     * _.endsWith('abc', 'c');
     * // => true
     *
     * _.endsWith('abc', 'b');
     * // => false
     *
     * _.endsWith('abc', 'b', 2);
     * // => true
     */
    function endsWith(string, target, position) {
      string = toString(string);
      target = baseToString(target);

      var length = string.length;
      position = position === undefined
        ? length
        : baseClamp(toInteger(position), 0, length);

      var end = position;
      position -= target.length;
      return position >= 0 && string.slice(position, end) == target;
    }

    /**
     * Converts the characters "&", "<", ">", '"', and "'" in `string` to their
     * corresponding HTML entities.
     *
     * **Note:** No other characters are escaped. To escape additional
     * characters use a third-party library like [_he_](https://mths.be/he).
     *
     * Though the ">" character is escaped for symmetry, characters like
     * ">" and "/" don't need escaping in HTML and have no special meaning
     * unless they're part of a tag or unquoted attribute value. See
     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
     * (under "semi-related fun fact") for more details.
     *
     * When working with HTML you should always
     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
     * XSS vectors.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escape('fred, barney, & pebbles');
     * // => 'fred, barney, &amp; pebbles'
     */
    function escape(string) {
      string = toString(string);
      return (string && reHasUnescapedHtml.test(string))
        ? string.replace(reUnescapedHtml, escapeHtmlChar)
        : string;
    }

    /**
     * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
     * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escapeRegExp('[lodash](https://lodash.com/)');
     * // => '\[lodash\]\(https://lodash\.com/\)'
     */
    function escapeRegExp(string) {
      string = toString(string);
      return (string && reHasRegExpChar.test(string))
        ? string.replace(reRegExpChar, '\\$&')
        : string;
    }

    /**
     * Converts `string` to
     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the kebab cased string.
     * @example
     *
     * _.kebabCase('Foo Bar');
     * // => 'foo-bar'
     *
     * _.kebabCase('fooBar');
     * // => 'foo-bar'
     *
     * _.kebabCase('__FOO_BAR__');
     * // => 'foo-bar'
     */
    var kebabCase = createCompounder(function(result, word, index) {
      return result + (index ? '-' : '') + word.toLowerCase();
    });

    /**
     * Converts `string`, as space separated words, to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.lowerCase('--Foo-Bar--');
     * // => 'foo bar'
     *
     * _.lowerCase('fooBar');
     * // => 'foo bar'
     *
     * _.lowerCase('__FOO_BAR__');
     * // => 'foo bar'
     */
    var lowerCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toLowerCase();
    });

    /**
     * Converts the first character of `string` to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.lowerFirst('Fred');
     * // => 'fred'
     *
     * _.lowerFirst('FRED');
     * // => 'fRED'
     */
    var lowerFirst = createCaseFirst('toLowerCase');

    /**
     * Pads `string` on the left and right sides if it's shorter than `length`.
     * Padding characters are truncated if they can't be evenly divided by `length`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.pad('abc', 8);
     * // => '  abc   '
     *
     * _.pad('abc', 8, '_-');
     * // => '_-abc_-_'
     *
     * _.pad('abc', 3);
     * // => 'abc'
     */
    function pad(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      if (!length || strLength >= length) {
        return string;
      }
      var mid = (length - strLength) / 2;
      return (
        createPadding(nativeFloor(mid), chars) +
        string +
        createPadding(nativeCeil(mid), chars)
      );
    }

    /**
     * Pads `string` on the right side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padEnd('abc', 6);
     * // => 'abc   '
     *
     * _.padEnd('abc', 6, '_-');
     * // => 'abc_-_'
     *
     * _.padEnd('abc', 3);
     * // => 'abc'
     */
    function padEnd(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (string + createPadding(length - strLength, chars))
        : string;
    }

    /**
     * Pads `string` on the left side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padStart('abc', 6);
     * // => '   abc'
     *
     * _.padStart('abc', 6, '_-');
     * // => '_-_abc'
     *
     * _.padStart('abc', 3);
     * // => 'abc'
     */
    function padStart(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (createPadding(length - strLength, chars) + string)
        : string;
    }

    /**
     * Converts `string` to an integer of the specified radix. If `radix` is
     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
     * hexadecimal, in which case a `radix` of `16` is used.
     *
     * **Note:** This method aligns with the
     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category String
     * @param {string} string The string to convert.
     * @param {number} [radix=10] The radix to interpret `value` by.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.parseInt('08');
     * // => 8
     *
     * _.map(['6', '08', '10'], _.parseInt);
     * // => [6, 8, 10]
     */
    function parseInt(string, radix, guard) {
      if (guard || radix == null) {
        radix = 0;
      } else if (radix) {
        radix = +radix;
      }
      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);
    }

    /**
     * Repeats the given string `n` times.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to repeat.
     * @param {number} [n=1] The number of times to repeat the string.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the repeated string.
     * @example
     *
     * _.repeat('*', 3);
     * // => '***'
     *
     * _.repeat('abc', 2);
     * // => 'abcabc'
     *
     * _.repeat('abc', 0);
     * // => ''
     */
    function repeat(string, n, guard) {
      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      return baseRepeat(toString(string), n);
    }

    /**
     * Replaces matches for `pattern` in `string` with `replacement`.
     *
     * **Note:** This method is based on
     * [`String#replace`](https://mdn.io/String/replace).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to modify.
     * @param {RegExp|string} pattern The pattern to replace.
     * @param {Function|string} replacement The match replacement.
     * @returns {string} Returns the modified string.
     * @example
     *
     * _.replace('Hi Fred', 'Fred', 'Barney');
     * // => 'Hi Barney'
     */
    function replace() {
      var args = arguments,
          string = toString(args[0]);

      return args.length < 3 ? string : string.replace(args[1], args[2]);
    }

    /**
     * Converts `string` to
     * [snake case](https://en.wikipedia.org/wiki/Snake_case).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the snake cased string.
     * @example
     *
     * _.snakeCase('Foo Bar');
     * // => 'foo_bar'
     *
     * _.snakeCase('fooBar');
     * // => 'foo_bar'
     *
     * _.snakeCase('--FOO-BAR--');
     * // => 'foo_bar'
     */
    var snakeCase = createCompounder(function(result, word, index) {
      return result + (index ? '_' : '') + word.toLowerCase();
    });

    /**
     * Splits `string` by `separator`.
     *
     * **Note:** This method is based on
     * [`String#split`](https://mdn.io/String/split).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to split.
     * @param {RegExp|string} separator The separator pattern to split by.
     * @param {number} [limit] The length to truncate results to.
     * @returns {Array} Returns the string segments.
     * @example
     *
     * _.split('a-b-c', '-', 2);
     * // => ['a', 'b']
     */
    function split(string, separator, limit) {
      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {
        separator = limit = undefined;
      }
      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;
      if (!limit) {
        return [];
      }
      string = toString(string);
      if (string && (
            typeof separator == 'string' ||
            (separator != null && !isRegExp(separator))
          )) {
        separator = baseToString(separator);
        if (!separator && hasUnicode(string)) {
          return castSlice(stringToArray(string), 0, limit);
        }
      }
      return string.split(separator, limit);
    }

    /**
     * Converts `string` to
     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
     *
     * @static
     * @memberOf _
     * @since 3.1.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the start cased string.
     * @example
     *
     * _.startCase('--foo-bar--');
     * // => 'Foo Bar'
     *
     * _.startCase('fooBar');
     * // => 'Foo Bar'
     *
     * _.startCase('__FOO_BAR__');
     * // => 'FOO BAR'
     */
    var startCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + upperFirst(word);
    });

    /**
     * Checks if `string` starts with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=0] The position to search from.
     * @returns {boolean} Returns `true` if `string` starts with `target`,
     *  else `false`.
     * @example
     *
     * _.startsWith('abc', 'a');
     * // => true
     *
     * _.startsWith('abc', 'b');
     * // => false
     *
     * _.startsWith('abc', 'b', 1);
     * // => true
     */
    function startsWith(string, target, position) {
      string = toString(string);
      position = position == null
        ? 0
        : baseClamp(toInteger(position), 0, string.length);

      target = baseToString(target);
      return string.slice(position, position + target.length) == target;
    }

    /**
     * Creates a compiled template function that can interpolate data properties
     * in "interpolate" delimiters, HTML-escape interpolated data properties in
     * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
     * properties may be accessed as free variables in the template. If a setting
     * object is given, it takes precedence over `_.templateSettings` values.
     *
     * **Note:** In the development build `_.template` utilizes
     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
     * for easier debugging.
     *
     * For more information on precompiling templates see
     * [lodash's custom builds documentation](https://lodash.com/custom-builds).
     *
     * For more information on Chrome extension sandboxes see
     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The template string.
     * @param {Object} [options={}] The options object.
     * @param {RegExp} [options.escape=_.templateSettings.escape]
     *  The HTML "escape" delimiter.
     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
     *  The "evaluate" delimiter.
     * @param {Object} [options.imports=_.templateSettings.imports]
     *  An object to import into the template as free variables.
     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
     *  The "interpolate" delimiter.
     * @param {string} [options.sourceURL='lodash.templateSources[n]']
     *  The sourceURL of the compiled template.
     * @param {string} [options.variable='obj']
     *  The data object variable name.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the compiled template function.
     * @example
     *
     * // Use the "interpolate" delimiter to create a compiled template.
     * var compiled = _.template('hello <%= user %>!');
     * compiled({ 'user': 'fred' });
     * // => 'hello fred!'
     *
     * // Use the HTML "escape" delimiter to escape data property values.
     * var compiled = _.template('<b><%- value %></b>');
     * compiled({ 'value': '<script>' });
     * // => '<b>&lt;script&gt;</b>'
     *
     * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the internal `print` function in "evaluate" delimiters.
     * var compiled = _.template('<% print("hello " + user); %>!');
     * compiled({ 'user': 'barney' });
     * // => 'hello barney!'
     *
     * // Use the ES template literal delimiter as an "interpolate" delimiter.
     * // Disable support by replacing the "interpolate" delimiter.
     * var compiled = _.template('hello ${ user }!');
     * compiled({ 'user': 'pebbles' });
     * // => 'hello pebbles!'
     *
     * // Use backslashes to treat delimiters as plain text.
     * var compiled = _.template('<%= "\\<%- value %\\>" %>');
     * compiled({ 'value': 'ignored' });
     * // => '<%- value %>'
     *
     * // Use the `imports` option to import `jQuery` as `jq`.
     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the `sourceURL` option to specify a custom sourceURL for the template.
     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
     * compiled(data);
     * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
     *
     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
     * compiled.source;
     * // => function(data) {
     * //   var __t, __p = '';
     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
     * //   return __p;
     * // }
     *
     * // Use custom template delimiters.
     * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
     * var compiled = _.template('hello {{ user }}!');
     * compiled({ 'user': 'mustache' });
     * // => 'hello mustache!'
     *
     * // Use the `source` property to inline compiled templates for meaningful
     * // line numbers in error messages and stack traces.
     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\
     *   var JST = {\
     *     "main": ' + _.template(mainText).source + '\
     *   };\
     * ');
     */
    function template(string, options, guard) {
      // Based on John Resig's `tmpl` implementation
      // (http://ejohn.org/blog/javascript-micro-templating/)
      // and Laura Doktorova's doT.js (https://github.com/olado/doT).
      var settings = lodash.templateSettings;

      if (guard && isIterateeCall(string, options, guard)) {
        options = undefined;
      }
      string = toString(string);
      options = assignInWith({}, options, settings, customDefaultsAssignIn);

      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),
          importsKeys = keys(imports),
          importsValues = baseValues(imports, importsKeys);

      var isEscaping,
          isEvaluating,
          index = 0,
          interpolate = options.interpolate || reNoMatch,
          source = "__p += '";

      // Compile the regexp to match each delimiter.
      var reDelimiters = RegExp(
        (options.escape || reNoMatch).source + '|' +
        interpolate.source + '|' +
        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +
        (options.evaluate || reNoMatch).source + '|$'
      , 'g');

      // Use a sourceURL for easier debugging.
      // The sourceURL gets injected into the source that's eval-ed, so be careful
      // to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in
      // and escape the comment, thus injecting code that gets evaled.
      var sourceURL = '//# sourceURL=' +
        (hasOwnProperty.call(options, 'sourceURL')
          ? (options.sourceURL + '').replace(/\s/g, ' ')
          : ('lodash.templateSources[' + (++templateCounter) + ']')
        ) + '\n';

      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
        interpolateValue || (interpolateValue = esTemplateValue);

        // Escape characters that can't be included in string literals.
        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);

        // Replace delimiters with snippets.
        if (escapeValue) {
          isEscaping = true;
          source += "' +\n__e(" + escapeValue + ") +\n'";
        }
        if (evaluateValue) {
          isEvaluating = true;
          source += "';\n" + evaluateValue + ";\n__p += '";
        }
        if (interpolateValue) {
          source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
        }
        index = offset + match.length;

        // The JS engine embedded in Adobe products needs `match` returned in
        // order to produce the correct `offset` value.
        return match;
      });

      source += "';\n";

      // If `variable` is not specified wrap a with-statement around the generated
      // code to add the data object to the top of the scope chain.
      var variable = hasOwnProperty.call(options, 'variable') && options.variable;
      if (!variable) {
        source = 'with (obj) {\n' + source + '\n}\n';
      }
      // Throw an error if a forbidden character was found in `variable`, to prevent
      // potential command injection attacks.
      else if (reForbiddenIdentifierChars.test(variable)) {
        throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);
      }

      // Cleanup code by stripping empty strings.
      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)
        .replace(reEmptyStringMiddle, '$1')
        .replace(reEmptyStringTrailing, '$1;');

      // Frame code as the function body.
      source = 'function(' + (variable || 'obj') + ') {\n' +
        (variable
          ? ''
          : 'obj || (obj = {});\n'
        ) +
        "var __t, __p = ''" +
        (isEscaping
           ? ', __e = _.escape'
           : ''
        ) +
        (isEvaluating
          ? ', __j = Array.prototype.join;\n' +
            "function print() { __p += __j.call(arguments, '') }\n"
          : ';\n'
        ) +
        source +
        'return __p\n}';

      var result = attempt(function() {
        return Function(importsKeys, sourceURL + 'return ' + source)
          .apply(undefined, importsValues);
      });

      // Provide the compiled function's source by its `toString` method or
      // the `source` property as a convenience for inlining compiled templates.
      result.source = source;
      if (isError(result)) {
        throw result;
      }
      return result;
    }

    /**
     * Converts `string`, as a whole, to lower case just like
     * [String#toLowerCase](https://mdn.io/toLowerCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.toLower('--Foo-Bar--');
     * // => '--foo-bar--'
     *
     * _.toLower('fooBar');
     * // => 'foobar'
     *
     * _.toLower('__FOO_BAR__');
     * // => '__foo_bar__'
     */
    function toLower(value) {
      return toString(value).toLowerCase();
    }

    /**
     * Converts `string`, as a whole, to upper case just like
     * [String#toUpperCase](https://mdn.io/toUpperCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.toUpper('--foo-bar--');
     * // => '--FOO-BAR--'
     *
     * _.toUpper('fooBar');
     * // => 'FOOBAR'
     *
     * _.toUpper('__foo_bar__');
     * // => '__FOO_BAR__'
     */
    function toUpper(value) {
      return toString(value).toUpperCase();
    }

    /**
     * Removes leading and trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trim('  abc  ');
     * // => 'abc'
     *
     * _.trim('-_-abc-_-', '_-');
     * // => 'abc'
     *
     * _.map(['  foo  ', '  bar  '], _.trim);
     * // => ['foo', 'bar']
     */
    function trim(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return baseTrim(string);
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          chrSymbols = stringToArray(chars),
          start = charsStartIndex(strSymbols, chrSymbols),
          end = charsEndIndex(strSymbols, chrSymbols) + 1;

      return castSlice(strSymbols, start, end).join('');
    }

    /**
     * Removes trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimEnd('  abc  ');
     * // => '  abc'
     *
     * _.trimEnd('-_-abc-_-', '_-');
     * // => '-_-abc'
     */
    function trimEnd(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.slice(0, trimmedEndIndex(string) + 1);
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;

      return castSlice(strSymbols, 0, end).join('');
    }

    /**
     * Removes leading whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimStart('  abc  ');
     * // => 'abc  '
     *
     * _.trimStart('-_-abc-_-', '_-');
     * // => 'abc-_-'
     */
    function trimStart(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrimStart, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          start = charsStartIndex(strSymbols, stringToArray(chars));

      return castSlice(strSymbols, start).join('');
    }

    /**
     * Truncates `string` if it's longer than the given maximum string length.
     * The last characters of the truncated string are replaced with the omission
     * string which defaults to "...".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to truncate.
     * @param {Object} [options={}] The options object.
     * @param {number} [options.length=30] The maximum string length.
     * @param {string} [options.omission='...'] The string to indicate text is omitted.
     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
     * @returns {string} Returns the truncated string.
     * @example
     *
     * _.truncate('hi-diddly-ho there, neighborino');
     * // => 'hi-diddly-ho there, neighbo...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': ' '
     * });
     * // => 'hi-diddly-ho there,...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': /,? +/
     * });
     * // => 'hi-diddly-ho there...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'omission': ' [...]'
     * });
     * // => 'hi-diddly-ho there, neig [...]'
     */
    function truncate(string, options) {
      var length = DEFAULT_TRUNC_LENGTH,
          omission = DEFAULT_TRUNC_OMISSION;

      if (isObject(options)) {
        var separator = 'separator' in options ? options.separator : separator;
        length = 'length' in options ? toInteger(options.length) : length;
        omission = 'omission' in options ? baseToString(options.omission) : omission;
      }
      string = toString(string);

      var strLength = string.length;
      if (hasUnicode(string)) {
        var strSymbols = stringToArray(string);
        strLength = strSymbols.length;
      }
      if (length >= strLength) {
        return string;
      }
      var end = length - stringSize(omission);
      if (end < 1) {
        return omission;
      }
      var result = strSymbols
        ? castSlice(strSymbols, 0, end).join('')
        : string.slice(0, end);

      if (separator === undefined) {
        return result + omission;
      }
      if (strSymbols) {
        end += (result.length - end);
      }
      if (isRegExp(separator)) {
        if (string.slice(end).search(separator)) {
          var match,
              substring = result;

          if (!separator.global) {
            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');
          }
          separator.lastIndex = 0;
          while ((match = separator.exec(substring))) {
            var newEnd = match.index;
          }
          result = result.slice(0, newEnd === undefined ? end : newEnd);
        }
      } else if (string.indexOf(baseToString(separator), end) != end) {
        var index = result.lastIndexOf(separator);
        if (index > -1) {
          result = result.slice(0, index);
        }
      }
      return result + omission;
    }

    /**
     * The inverse of `_.escape`; this method converts the HTML entities
     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to
     * their corresponding characters.
     *
     * **Note:** No other HTML entities are unescaped. To unescape additional
     * HTML entities use a third-party library like [_he_](https://mths.be/he).
     *
     * @static
     * @memberOf _
     * @since 0.6.0
     * @category String
     * @param {string} [string=''] The string to unescape.
     * @returns {string} Returns the unescaped string.
     * @example
     *
     * _.unescape('fred, barney, &amp; pebbles');
     * // => 'fred, barney, & pebbles'
     */
    function unescape(string) {
      string = toString(string);
      return (string && reHasEscapedHtml.test(string))
        ? string.replace(reEscapedHtml, unescapeHtmlChar)
        : string;
    }

    /**
     * Converts `string`, as space separated words, to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.upperCase('--foo-bar');
     * // => 'FOO BAR'
     *
     * _.upperCase('fooBar');
     * // => 'FOO BAR'
     *
     * _.upperCase('__foo_bar__');
     * // => 'FOO BAR'
     */
    var upperCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toUpperCase();
    });

    /**
     * Converts the first character of `string` to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.upperFirst('fred');
     * // => 'Fred'
     *
     * _.upperFirst('FRED');
     * // => 'FRED'
     */
    var upperFirst = createCaseFirst('toUpperCase');

    /**
     * Splits `string` into an array of its words.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {RegExp|string} [pattern] The pattern to match words.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the words of `string`.
     * @example
     *
     * _.words('fred, barney, & pebbles');
     * // => ['fred', 'barney', 'pebbles']
     *
     * _.words('fred, barney, & pebbles', /[^, ]+/g);
     * // => ['fred', 'barney', '&', 'pebbles']
     */
    function words(string, pattern, guard) {
      string = toString(string);
      pattern = guard ? undefined : pattern;

      if (pattern === undefined) {
        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
      }
      return string.match(pattern) || [];
    }

    /*------------------------------------------------------------------------*/

    /**
     * Attempts to invoke `func`, returning either the result or the caught error
     * object. Any additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Function} func The function to attempt.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {*} Returns the `func` result or error object.
     * @example
     *
     * // Avoid throwing errors for invalid selectors.
     * var elements = _.attempt(function(selector) {
     *   return document.querySelectorAll(selector);
     * }, '>_>');
     *
     * if (_.isError(elements)) {
     *   elements = [];
     * }
     */
    var attempt = baseRest(function(func, args) {
      try {
        return apply(func, undefined, args);
      } catch (e) {
        return isError(e) ? e : new Error(e);
      }
    });

    /**
     * Binds methods of an object to the object itself, overwriting the existing
     * method.
     *
     * **Note:** This method doesn't set the "length" property of bound functions.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Object} object The object to bind and assign the bound methods to.
     * @param {...(string|string[])} methodNames The object method names to bind.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var view = {
     *   'label': 'docs',
     *   'click': function() {
     *     console.log('clicked ' + this.label);
     *   }
     * };
     *
     * _.bindAll(view, ['click']);
     * jQuery(element).on('click', view.click);
     * // => Logs 'clicked docs' when clicked.
     */
    var bindAll = flatRest(function(object, methodNames) {
      arrayEach(methodNames, function(key) {
        key = toKey(key);
        baseAssignValue(object, key, bind(object[key], object));
      });
      return object;
    });

    /**
     * Creates a function that iterates over `pairs` and invokes the corresponding
     * function of the first predicate to return truthy. The predicate-function
     * pairs are invoked with the `this` binding and arguments of the created
     * function.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Array} pairs The predicate-function pairs.
     * @returns {Function} Returns the new composite function.
     * @example
     *
     * var func = _.cond([
     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
     *   [_.stubTrue,                      _.constant('no match')]
     * ]);
     *
     * func({ 'a': 1, 'b': 2 });
     * // => 'matches A'
     *
     * func({ 'a': 0, 'b': 1 });
     * // => 'matches B'
     *
     * func({ 'a': '1', 'b': '2' });
     * // => 'no match'
     */
    function cond(pairs) {
      var length = pairs == null ? 0 : pairs.length,
          toIteratee = getIteratee();

      pairs = !length ? [] : arrayMap(pairs, function(pair) {
        if (typeof pair[1] != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        return [toIteratee(pair[0]), pair[1]];
      });

      return baseRest(function(args) {
        var index = -1;
        while (++index < length) {
          var pair = pairs[index];
          if (apply(pair[0], this, args)) {
            return apply(pair[1], this, args);
          }
        }
      });
    }

    /**
     * Creates a function that invokes the predicate properties of `source` with
     * the corresponding property values of a given object, returning `true` if
     * all predicates return truthy, else `false`.
     *
     * **Note:** The created function is equivalent to `_.conformsTo` with
     * `source` partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 2, 'b': 1 },
     *   { 'a': 1, 'b': 2 }
     * ];
     *
     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));
     * // => [{ 'a': 1, 'b': 2 }]
     */
    function conforms(source) {
      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that returns `value`.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {*} value The value to return from the new function.
     * @returns {Function} Returns the new constant function.
     * @example
     *
     * var objects = _.times(2, _.constant({ 'a': 1 }));
     *
     * console.log(objects);
     * // => [{ 'a': 1 }, { 'a': 1 }]
     *
     * console.log(objects[0] === objects[1]);
     * // => true
     */
    function constant(value) {
      return function() {
        return value;
      };
    }

    /**
     * Checks `value` to determine whether a default value should be returned in
     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,
     * or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Util
     * @param {*} value The value to check.
     * @param {*} defaultValue The default value.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * _.defaultTo(1, 10);
     * // => 1
     *
     * _.defaultTo(undefined, 10);
     * // => 10
     */
    function defaultTo(value, defaultValue) {
      return (value == null || value !== value) ? defaultValue : value;
    }

    /**
     * Creates a function that returns the result of invoking the given functions
     * with the `this` binding of the created function, where each successive
     * invocation is supplied the return value of the previous.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flowRight
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flow([_.add, square]);
     * addSquare(1, 2);
     * // => 9
     */
    var flow = createFlow();

    /**
     * This method is like `_.flow` except that it creates a function that
     * invokes the given functions from right to left.
     *
     * @static
     * @since 3.0.0
     * @memberOf _
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flow
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flowRight([square, _.add]);
     * addSquare(1, 2);
     * // => 9
     */
    var flowRight = createFlow(true);

    /**
     * This method returns the first argument it receives.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {*} value Any value.
     * @returns {*} Returns `value`.
     * @example
     *
     * var object = { 'a': 1 };
     *
     * console.log(_.identity(object) === object);
     * // => true
     */
    function identity(value) {
      return value;
    }

    /**
     * Creates a function that invokes `func` with the arguments of the created
     * function. If `func` is a property name, the created function returns the
     * property value for a given element. If `func` is an array or object, the
     * created function returns `true` for elements that contain the equivalent
     * source properties, otherwise it returns `false`.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Util
     * @param {*} [func=_.identity] The value to convert to a callback.
     * @returns {Function} Returns the callback.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, _.iteratee(['user', 'fred']));
     * // => [{ 'user': 'fred', 'age': 40 }]
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, _.iteratee('user'));
     * // => ['barney', 'fred']
     *
     * // Create custom iteratee shorthands.
     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
     *     return func.test(string);
     *   };
     * });
     *
     * _.filter(['abc', 'def'], /ef/);
     * // => ['def']
     */
    function iteratee(func) {
      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that performs a partial deep comparison between a given
     * object and `source`, returning `true` if the given object has equivalent
     * property values, else `false`.
     *
     * **Note:** The created function is equivalent to `_.isMatch` with `source`
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * **Note:** Multiple values can be checked by combining several matchers
     * using `_.overSome`
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));
     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]
     *
     * // Checking for several possible values
     * _.filter(objects, _.overSome([_.matches({ 'a': 1 }), _.matches({ 'a': 4 })]));
     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]
     */
    function matches(source) {
      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that performs a partial deep comparison between the
     * value at `path` of a given object to `srcValue`, returning `true` if the
     * object value is equivalent, else `false`.
     *
     * **Note:** Partial comparisons will match empty array and empty object
     * `srcValue` values against any array or object value, respectively. See
     * `_.isEqual` for a list of supported value comparisons.
     *
     * **Note:** Multiple values can be checked by combining several matchers
     * using `_.overSome`
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.find(objects, _.matchesProperty('a', 4));
     * // => { 'a': 4, 'b': 5, 'c': 6 }
     *
     * // Checking for several possible values
     * _.filter(objects, _.overSome([_.matchesProperty('a', 1), _.matchesProperty('a', 4)]));
     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]
     */
    function matchesProperty(path, srcValue) {
      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that invokes the method at `path` of a given object.
     * Any additional arguments are provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': _.constant(2) } },
     *   { 'a': { 'b': _.constant(1) } }
     * ];
     *
     * _.map(objects, _.method('a.b'));
     * // => [2, 1]
     *
     * _.map(objects, _.method(['a', 'b']));
     * // => [2, 1]
     */
    var method = baseRest(function(path, args) {
      return function(object) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * The opposite of `_.method`; this method creates a function that invokes
     * the method at a given path of `object`. Any additional arguments are
     * provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Object} object The object to query.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var array = _.times(3, _.constant),
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.methodOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
     * // => [2, 0]
     */
    var methodOf = baseRest(function(object, args) {
      return function(path) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * Adds all own enumerable string keyed function properties of a source
     * object to the destination object. If `object` is a function, then methods
     * are added to its prototype as well.
     *
     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
     * avoid conflicts caused by modifying the original.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Function|Object} [object=lodash] The destination object.
     * @param {Object} source The object of functions to add.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
     * @returns {Function|Object} Returns `object`.
     * @example
     *
     * function vowels(string) {
     *   return _.filter(string, function(v) {
     *     return /[aeiou]/i.test(v);
     *   });
     * }
     *
     * _.mixin({ 'vowels': vowels });
     * _.vowels('fred');
     * // => ['e']
     *
     * _('fred').vowels().value();
     * // => ['e']
     *
     * _.mixin({ 'vowels': vowels }, { 'chain': false });
     * _('fred').vowels();
     * // => ['e']
     */
    function mixin(object, source, options) {
      var props = keys(source),
          methodNames = baseFunctions(source, props);

      if (options == null &&
          !(isObject(source) && (methodNames.length || !props.length))) {
        options = source;
        source = object;
        object = this;
        methodNames = baseFunctions(source, keys(source));
      }
      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,
          isFunc = isFunction(object);

      arrayEach(methodNames, function(methodName) {
        var func = source[methodName];
        object[methodName] = func;
        if (isFunc) {
          object.prototype[methodName] = function() {
            var chainAll = this.__chain__;
            if (chain || chainAll) {
              var result = object(this.__wrapped__),
                  actions = result.__actions__ = copyArray(this.__actions__);

              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });
              result.__chain__ = chainAll;
              return result;
            }
            return func.apply(object, arrayPush([this.value()], arguments));
          };
        }
      });

      return object;
    }

    /**
     * Reverts the `_` variable to its previous value and returns a reference to
     * the `lodash` function.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @returns {Function} Returns the `lodash` function.
     * @example
     *
     * var lodash = _.noConflict();
     */
    function noConflict() {
      if (root._ === this) {
        root._ = oldDash;
      }
      return this;
    }

    /**
     * This method returns `undefined`.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Util
     * @example
     *
     * _.times(2, _.noop);
     * // => [undefined, undefined]
     */
    function noop() {
      // No operation performed.
    }

    /**
     * Creates a function that gets the argument at index `n`. If `n` is negative,
     * the nth argument from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [n=0] The index of the argument to return.
     * @returns {Function} Returns the new pass-thru function.
     * @example
     *
     * var func = _.nthArg(1);
     * func('a', 'b', 'c', 'd');
     * // => 'b'
     *
     * var func = _.nthArg(-2);
     * func('a', 'b', 'c', 'd');
     * // => 'c'
     */
    function nthArg(n) {
      n = toInteger(n);
      return baseRest(function(args) {
        return baseNth(args, n);
      });
    }

    /**
     * Creates a function that invokes `iteratees` with the arguments it receives
     * and returns their results.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to invoke.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.over([Math.max, Math.min]);
     *
     * func(1, 2, 3, 4);
     * // => [4, 1]
     */
    var over = createOver(arrayMap);

    /**
     * Creates a function that checks if **all** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * Following shorthands are possible for providing predicates.
     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.
     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overEvery([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => false
     *
     * func(NaN);
     * // => false
     */
    var overEvery = createOver(arrayEvery);

    /**
     * Creates a function that checks if **any** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * Following shorthands are possible for providing predicates.
     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.
     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overSome([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => true
     *
     * func(NaN);
     * // => false
     *
     * var matchesFunc = _.overSome([{ 'a': 1 }, { 'a': 2 }])
     * var matchesPropertyFunc = _.overSome([['a', 1], ['a', 2]])
     */
    var overSome = createOver(arraySome);

    /**
     * Creates a function that returns the value at `path` of a given object.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': 2 } },
     *   { 'a': { 'b': 1 } }
     * ];
     *
     * _.map(objects, _.property('a.b'));
     * // => [2, 1]
     *
     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
     * // => [1, 2]
     */
    function property(path) {
      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
    }

    /**
     * The opposite of `_.property`; this method creates a function that returns
     * the value at a given path of `object`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} object The object to query.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var array = [0, 1, 2],
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
     * // => [2, 0]
     */
    function propertyOf(object) {
      return function(path) {
        return object == null ? undefined : baseGet(object, path);
      };
    }

    /**
     * Creates an array of numbers (positive and/or negative) progressing from
     * `start` up to, but not including, `end`. A step of `-1` is used if a negative
     * `start` is specified without an `end` or `step`. If `end` is not specified,
     * it's set to `start` with `start` then set to `0`.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.rangeRight
     * @example
     *
     * _.range(4);
     * // => [0, 1, 2, 3]
     *
     * _.range(-4);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 5);
     * // => [1, 2, 3, 4]
     *
     * _.range(0, 20, 5);
     * // => [0, 5, 10, 15]
     *
     * _.range(0, -4, -1);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.range(0);
     * // => []
     */
    var range = createRange();

    /**
     * This method is like `_.range` except that it populates values in
     * descending order.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.range
     * @example
     *
     * _.rangeRight(4);
     * // => [3, 2, 1, 0]
     *
     * _.rangeRight(-4);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 5);
     * // => [4, 3, 2, 1]
     *
     * _.rangeRight(0, 20, 5);
     * // => [15, 10, 5, 0]
     *
     * _.rangeRight(0, -4, -1);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.rangeRight(0);
     * // => []
     */
    var rangeRight = createRange(true);

    /**
     * This method returns a new empty array.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Array} Returns the new empty array.
     * @example
     *
     * var arrays = _.times(2, _.stubArray);
     *
     * console.log(arrays);
     * // => [[], []]
     *
     * console.log(arrays[0] === arrays[1]);
     * // => false
     */
    function stubArray() {
      return [];
    }

    /**
     * This method returns `false`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `false`.
     * @example
     *
     * _.times(2, _.stubFalse);
     * // => [false, false]
     */
    function stubFalse() {
      return false;
    }

    /**
     * This method returns a new empty object.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Object} Returns the new empty object.
     * @example
     *
     * var objects = _.times(2, _.stubObject);
     *
     * console.log(objects);
     * // => [{}, {}]
     *
     * console.log(objects[0] === objects[1]);
     * // => false
     */
    function stubObject() {
      return {};
    }

    /**
     * This method returns an empty string.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {string} Returns the empty string.
     * @example
     *
     * _.times(2, _.stubString);
     * // => ['', '']
     */
    function stubString() {
      return '';
    }

    /**
     * This method returns `true`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `true`.
     * @example
     *
     * _.times(2, _.stubTrue);
     * // => [true, true]
     */
    function stubTrue() {
      return true;
    }

    /**
     * Invokes the iteratee `n` times, returning an array of the results of
     * each invocation. The iteratee is invoked with one argument; (index).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} n The number of times to invoke `iteratee`.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.times(3, String);
     * // => ['0', '1', '2']
     *
     *  _.times(4, _.constant(0));
     * // => [0, 0, 0, 0]
     */
    function times(n, iteratee) {
      n = toInteger(n);
      if (n < 1 || n > MAX_SAFE_INTEGER) {
        return [];
      }
      var index = MAX_ARRAY_LENGTH,
          length = nativeMin(n, MAX_ARRAY_LENGTH);

      iteratee = getIteratee(iteratee);
      n -= MAX_ARRAY_LENGTH;

      var result = baseTimes(length, iteratee);
      while (++index < n) {
        iteratee(index);
      }
      return result;
    }

    /**
     * Converts `value` to a property path array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {*} value The value to convert.
     * @returns {Array} Returns the new property path array.
     * @example
     *
     * _.toPath('a.b.c');
     * // => ['a', 'b', 'c']
     *
     * _.toPath('a[0].b.c');
     * // => ['a', '0', 'b', 'c']
     */
    function toPath(value) {
      if (isArray(value)) {
        return arrayMap(value, toKey);
      }
      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
    }

    /**
     * Generates a unique ID. If `prefix` is given, the ID is appended to it.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {string} [prefix=''] The value to prefix the ID with.
     * @returns {string} Returns the unique ID.
     * @example
     *
     * _.uniqueId('contact_');
     * // => 'contact_104'
     *
     * _.uniqueId();
     * // => '105'
     */
    function uniqueId(prefix) {
      var id = ++idCounter;
      return toString(prefix) + id;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Adds two numbers.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {number} augend The first number in an addition.
     * @param {number} addend The second number in an addition.
     * @returns {number} Returns the total.
     * @example
     *
     * _.add(6, 4);
     * // => 10
     */
    var add = createMathOperation(function(augend, addend) {
      return augend + addend;
    }, 0);

    /**
     * Computes `number` rounded up to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round up.
     * @param {number} [precision=0] The precision to round up to.
     * @returns {number} Returns the rounded up number.
     * @example
     *
     * _.ceil(4.006);
     * // => 5
     *
     * _.ceil(6.004, 2);
     * // => 6.01
     *
     * _.ceil(6040, -2);
     * // => 6100
     */
    var ceil = createRound('ceil');

    /**
     * Divide two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} dividend The first number in a division.
     * @param {number} divisor The second number in a division.
     * @returns {number} Returns the quotient.
     * @example
     *
     * _.divide(6, 4);
     * // => 1.5
     */
    var divide = createMathOperation(function(dividend, divisor) {
      return dividend / divisor;
    }, 1);

    /**
     * Computes `number` rounded down to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round down.
     * @param {number} [precision=0] The precision to round down to.
     * @returns {number} Returns the rounded down number.
     * @example
     *
     * _.floor(4.006);
     * // => 4
     *
     * _.floor(0.046, 2);
     * // => 0.04
     *
     * _.floor(4060, -2);
     * // => 4000
     */
    var floor = createRound('floor');

    /**
     * Computes the maximum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * _.max([4, 2, 8, 6]);
     * // => 8
     *
     * _.max([]);
     * // => undefined
     */
    function max(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseGt)
        : undefined;
    }

    /**
     * This method is like `_.max` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.maxBy(objects, function(o) { return o.n; });
     * // => { 'n': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.maxBy(objects, 'n');
     * // => { 'n': 2 }
     */
    function maxBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)
        : undefined;
    }

    /**
     * Computes the mean of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the mean.
     * @example
     *
     * _.mean([4, 2, 8, 6]);
     * // => 5
     */
    function mean(array) {
      return baseMean(array, identity);
    }

    /**
     * This method is like `_.mean` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be averaged.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the mean.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.meanBy(objects, function(o) { return o.n; });
     * // => 5
     *
     * // The `_.property` iteratee shorthand.
     * _.meanBy(objects, 'n');
     * // => 5
     */
    function meanBy(array, iteratee) {
      return baseMean(array, getIteratee(iteratee, 2));
    }

    /**
     * Computes the minimum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * _.min([4, 2, 8, 6]);
     * // => 2
     *
     * _.min([]);
     * // => undefined
     */
    function min(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseLt)
        : undefined;
    }

    /**
     * This method is like `_.min` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.minBy(objects, function(o) { return o.n; });
     * // => { 'n': 1 }
     *
     * // The `_.property` iteratee shorthand.
     * _.minBy(objects, 'n');
     * // => { 'n': 1 }
     */
    function minBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)
        : undefined;
    }

    /**
     * Multiply two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} multiplier The first number in a multiplication.
     * @param {number} multiplicand The second number in a multiplication.
     * @returns {number} Returns the product.
     * @example
     *
     * _.multiply(6, 4);
     * // => 24
     */
    var multiply = createMathOperation(function(multiplier, multiplicand) {
      return multiplier * multiplicand;
    }, 1);

    /**
     * Computes `number` rounded to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round.
     * @param {number} [precision=0] The precision to round to.
     * @returns {number} Returns the rounded number.
     * @example
     *
     * _.round(4.006);
     * // => 4
     *
     * _.round(4.006, 2);
     * // => 4.01
     *
     * _.round(4060, -2);
     * // => 4100
     */
    var round = createRound('round');

    /**
     * Subtract two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {number} minuend The first number in a subtraction.
     * @param {number} subtrahend The second number in a subtraction.
     * @returns {number} Returns the difference.
     * @example
     *
     * _.subtract(6, 4);
     * // => 2
     */
    var subtract = createMathOperation(function(minuend, subtrahend) {
      return minuend - subtrahend;
    }, 0);

    /**
     * Computes the sum of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the sum.
     * @example
     *
     * _.sum([4, 2, 8, 6]);
     * // => 20
     */
    function sum(array) {
      return (array && array.length)
        ? baseSum(array, identity)
        : 0;
    }

    /**
     * This method is like `_.sum` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be summed.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the sum.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.sumBy(objects, function(o) { return o.n; });
     * // => 20
     *
     * // The `_.property` iteratee shorthand.
     * _.sumBy(objects, 'n');
     * // => 20
     */
    function sumBy(array, iteratee) {
      return (array && array.length)
        ? baseSum(array, getIteratee(iteratee, 2))
        : 0;
    }

    /*------------------------------------------------------------------------*/

    // Add methods that return wrapped values in chain sequences.
    lodash.after = after;
    lodash.ary = ary;
    lodash.assign = assign;
    lodash.assignIn = assignIn;
    lodash.assignInWith = assignInWith;
    lodash.assignWith = assignWith;
    lodash.at = at;
    lodash.before = before;
    lodash.bind = bind;
    lodash.bindAll = bindAll;
    lodash.bindKey = bindKey;
    lodash.castArray = castArray;
    lodash.chain = chain;
    lodash.chunk = chunk;
    lodash.compact = compact;
    lodash.concat = concat;
    lodash.cond = cond;
    lodash.conforms = conforms;
    lodash.constant = constant;
    lodash.countBy = countBy;
    lodash.create = create;
    lodash.curry = curry;
    lodash.curryRight = curryRight;
    lodash.debounce = debounce;
    lodash.defaults = defaults;
    lodash.defaultsDeep = defaultsDeep;
    lodash.defer = defer;
    lodash.delay = delay;
    lodash.difference = difference;
    lodash.differenceBy = differenceBy;
    lodash.differenceWith = differenceWith;
    lodash.drop = drop;
    lodash.dropRight = dropRight;
    lodash.dropRightWhile = dropRightWhile;
    lodash.dropWhile = dropWhile;
    lodash.fill = fill;
    lodash.filter = filter;
    lodash.flatMap = flatMap;
    lodash.flatMapDeep = flatMapDeep;
    lodash.flatMapDepth = flatMapDepth;
    lodash.flatten = flatten;
    lodash.flattenDeep = flattenDeep;
    lodash.flattenDepth = flattenDepth;
    lodash.flip = flip;
    lodash.flow = flow;
    lodash.flowRight = flowRight;
    lodash.fromPairs = fromPairs;
    lodash.functions = functions;
    lodash.functionsIn = functionsIn;
    lodash.groupBy = groupBy;
    lodash.initial = initial;
    lodash.intersection = intersection;
    lodash.intersectionBy = intersectionBy;
    lodash.intersectionWith = intersectionWith;
    lodash.invert = invert;
    lodash.invertBy = invertBy;
    lodash.invokeMap = invokeMap;
    lodash.iteratee = iteratee;
    lodash.keyBy = keyBy;
    lodash.keys = keys;
    lodash.keysIn = keysIn;
    lodash.map = map;
    lodash.mapKeys = mapKeys;
    lodash.mapValues = mapValues;
    lodash.matches = matches;
    lodash.matchesProperty = matchesProperty;
    lodash.memoize = memoize;
    lodash.merge = merge;
    lodash.mergeWith = mergeWith;
    lodash.method = method;
    lodash.methodOf = methodOf;
    lodash.mixin = mixin;
    lodash.negate = negate;
    lodash.nthArg = nthArg;
    lodash.omit = omit;
    lodash.omitBy = omitBy;
    lodash.once = once;
    lodash.orderBy = orderBy;
    lodash.over = over;
    lodash.overArgs = overArgs;
    lodash.overEvery = overEvery;
    lodash.overSome = overSome;
    lodash.partial = partial;
    lodash.partialRight = partialRight;
    lodash.partition = partition;
    lodash.pick = pick;
    lodash.pickBy = pickBy;
    lodash.property = property;
    lodash.propertyOf = propertyOf;
    lodash.pull = pull;
    lodash.pullAll = pullAll;
    lodash.pullAllBy = pullAllBy;
    lodash.pullAllWith = pullAllWith;
    lodash.pullAt = pullAt;
    lodash.range = range;
    lodash.rangeRight = rangeRight;
    lodash.rearg = rearg;
    lodash.reject = reject;
    lodash.remove = remove;
    lodash.rest = rest;
    lodash.reverse = reverse;
    lodash.sampleSize = sampleSize;
    lodash.set = set;
    lodash.setWith = setWith;
    lodash.shuffle = shuffle;
    lodash.slice = slice;
    lodash.sortBy = sortBy;
    lodash.sortedUniq = sortedUniq;
    lodash.sortedUniqBy = sortedUniqBy;
    lodash.split = split;
    lodash.spread = spread;
    lodash.tail = tail;
    lodash.take = take;
    lodash.takeRight = takeRight;
    lodash.takeRightWhile = takeRightWhile;
    lodash.takeWhile = takeWhile;
    lodash.tap = tap;
    lodash.throttle = throttle;
    lodash.thru = thru;
    lodash.toArray = toArray;
    lodash.toPairs = toPairs;
    lodash.toPairsIn = toPairsIn;
    lodash.toPath = toPath;
    lodash.toPlainObject = toPlainObject;
    lodash.transform = transform;
    lodash.unary = unary;
    lodash.union = union;
    lodash.unionBy = unionBy;
    lodash.unionWith = unionWith;
    lodash.uniq = uniq;
    lodash.uniqBy = uniqBy;
    lodash.uniqWith = uniqWith;
    lodash.unset = unset;
    lodash.unzip = unzip;
    lodash.unzipWith = unzipWith;
    lodash.update = update;
    lodash.updateWith = updateWith;
    lodash.values = values;
    lodash.valuesIn = valuesIn;
    lodash.without = without;
    lodash.words = words;
    lodash.wrap = wrap;
    lodash.xor = xor;
    lodash.xorBy = xorBy;
    lodash.xorWith = xorWith;
    lodash.zip = zip;
    lodash.zipObject = zipObject;
    lodash.zipObjectDeep = zipObjectDeep;
    lodash.zipWith = zipWith;

    // Add aliases.
    lodash.entries = toPairs;
    lodash.entriesIn = toPairsIn;
    lodash.extend = assignIn;
    lodash.extendWith = assignInWith;

    // Add methods to `lodash.prototype`.
    mixin(lodash, lodash);

    /*------------------------------------------------------------------------*/

    // Add methods that return unwrapped values in chain sequences.
    lodash.add = add;
    lodash.attempt = attempt;
    lodash.camelCase = camelCase;
    lodash.capitalize = capitalize;
    lodash.ceil = ceil;
    lodash.clamp = clamp;
    lodash.clone = clone;
    lodash.cloneDeep = cloneDeep;
    lodash.cloneDeepWith = cloneDeepWith;
    lodash.cloneWith = cloneWith;
    lodash.conformsTo = conformsTo;
    lodash.deburr = deburr;
    lodash.defaultTo = defaultTo;
    lodash.divide = divide;
    lodash.endsWith = endsWith;
    lodash.eq = eq;
    lodash.escape = escape;
    lodash.escapeRegExp = escapeRegExp;
    lodash.every = every;
    lodash.find = find;
    lodash.findIndex = findIndex;
    lodash.findKey = findKey;
    lodash.findLast = findLast;
    lodash.findLastIndex = findLastIndex;
    lodash.findLastKey = findLastKey;
    lodash.floor = floor;
    lodash.forEach = forEach;
    lodash.forEachRight = forEachRight;
    lodash.forIn = forIn;
    lodash.forInRight = forInRight;
    lodash.forOwn = forOwn;
    lodash.forOwnRight = forOwnRight;
    lodash.get = get;
    lodash.gt = gt;
    lodash.gte = gte;
    lodash.has = has;
    lodash.hasIn = hasIn;
    lodash.head = head;
    lodash.identity = identity;
    lodash.includes = includes;
    lodash.indexOf = indexOf;
    lodash.inRange = inRange;
    lodash.invoke = invoke;
    lodash.isArguments = isArguments;
    lodash.isArray = isArray;
    lodash.isArrayBuffer = isArrayBuffer;
    lodash.isArrayLike = isArrayLike;
    lodash.isArrayLikeObject = isArrayLikeObject;
    lodash.isBoolean = isBoolean;
    lodash.isBuffer = isBuffer;
    lodash.isDate = isDate;
    lodash.isElement = isElement;
    lodash.isEmpty = isEmpty;
    lodash.isEqual = isEqual;
    lodash.isEqualWith = isEqualWith;
    lodash.isError = isError;
    lodash.isFinite = isFinite;
    lodash.isFunction = isFunction;
    lodash.isInteger = isInteger;
    lodash.isLength = isLength;
    lodash.isMap = isMap;
    lodash.isMatch = isMatch;
    lodash.isMatchWith = isMatchWith;
    lodash.isNaN = isNaN;
    lodash.isNative = isNative;
    lodash.isNil = isNil;
    lodash.isNull = isNull;
    lodash.isNumber = isNumber;
    lodash.isObject = isObject;
    lodash.isObjectLike = isObjectLike;
    lodash.isPlainObject = isPlainObject;
    lodash.isRegExp = isRegExp;
    lodash.isSafeInteger = isSafeInteger;
    lodash.isSet = isSet;
    lodash.isString = isString;
    lodash.isSymbol = isSymbol;
    lodash.isTypedArray = isTypedArray;
    lodash.isUndefined = isUndefined;
    lodash.isWeakMap = isWeakMap;
    lodash.isWeakSet = isWeakSet;
    lodash.join = join;
    lodash.kebabCase = kebabCase;
    lodash.last = last;
    lodash.lastIndexOf = lastIndexOf;
    lodash.lowerCase = lowerCase;
    lodash.lowerFirst = lowerFirst;
    lodash.lt = lt;
    lodash.lte = lte;
    lodash.max = max;
    lodash.maxBy = maxBy;
    lodash.mean = mean;
    lodash.meanBy = meanBy;
    lodash.min = min;
    lodash.minBy = minBy;
    lodash.stubArray = stubArray;
    lodash.stubFalse = stubFalse;
    lodash.stubObject = stubObject;
    lodash.stubString = stubString;
    lodash.stubTrue = stubTrue;
    lodash.multiply = multiply;
    lodash.nth = nth;
    lodash.noConflict = noConflict;
    lodash.noop = noop;
    lodash.now = now;
    lodash.pad = pad;
    lodash.padEnd = padEnd;
    lodash.padStart = padStart;
    lodash.parseInt = parseInt;
    lodash.random = random;
    lodash.reduce = reduce;
    lodash.reduceRight = reduceRight;
    lodash.repeat = repeat;
    lodash.replace = replace;
    lodash.result = result;
    lodash.round = round;
    lodash.runInContext = runInContext;
    lodash.sample = sample;
    lodash.size = size;
    lodash.snakeCase = snakeCase;
    lodash.some = some;
    lodash.sortedIndex = sortedIndex;
    lodash.sortedIndexBy = sortedIndexBy;
    lodash.sortedIndexOf = sortedIndexOf;
    lodash.sortedLastIndex = sortedLastIndex;
    lodash.sortedLastIndexBy = sortedLastIndexBy;
    lodash.sortedLastIndexOf = sortedLastIndexOf;
    lodash.startCase = startCase;
    lodash.startsWith = startsWith;
    lodash.subtract = subtract;
    lodash.sum = sum;
    lodash.sumBy = sumBy;
    lodash.template = template;
    lodash.times = times;
    lodash.toFinite = toFinite;
    lodash.toInteger = toInteger;
    lodash.toLength = toLength;
    lodash.toLower = toLower;
    lodash.toNumber = toNumber;
    lodash.toSafeInteger = toSafeInteger;
    lodash.toString = toString;
    lodash.toUpper = toUpper;
    lodash.trim = trim;
    lodash.trimEnd = trimEnd;
    lodash.trimStart = trimStart;
    lodash.truncate = truncate;
    lodash.unescape = unescape;
    lodash.uniqueId = uniqueId;
    lodash.upperCase = upperCase;
    lodash.upperFirst = upperFirst;

    // Add aliases.
    lodash.each = forEach;
    lodash.eachRight = forEachRight;
    lodash.first = head;

    mixin(lodash, (function() {
      var source = {};
      baseForOwn(lodash, function(func, methodName) {
        if (!hasOwnProperty.call(lodash.prototype, methodName)) {
          source[methodName] = func;
        }
      });
      return source;
    }()), { 'chain': false });

    /*------------------------------------------------------------------------*/

    /**
     * The semantic version number.
     *
     * @static
     * @memberOf _
     * @type {string}
     */
    lodash.VERSION = VERSION;

    // Assign default placeholders.
    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {
      lodash[methodName].placeholder = lodash;
    });

    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
    arrayEach(['drop', 'take'], function(methodName, index) {
      LazyWrapper.prototype[methodName] = function(n) {
        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);

        var result = (this.__filtered__ && !index)
          ? new LazyWrapper(this)
          : this.clone();

        if (result.__filtered__) {
          result.__takeCount__ = nativeMin(n, result.__takeCount__);
        } else {
          result.__views__.push({
            'size': nativeMin(n, MAX_ARRAY_LENGTH),
            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
          });
        }
        return result;
      };

      LazyWrapper.prototype[methodName + 'Right'] = function(n) {
        return this.reverse()[methodName](n).reverse();
      };
    });

    // Add `LazyWrapper` methods that accept an `iteratee` value.
    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {
      var type = index + 1,
          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;

      LazyWrapper.prototype[methodName] = function(iteratee) {
        var result = this.clone();
        result.__iteratees__.push({
          'iteratee': getIteratee(iteratee, 3),
          'type': type
        });
        result.__filtered__ = result.__filtered__ || isFilter;
        return result;
      };
    });

    // Add `LazyWrapper` methods for `_.head` and `_.last`.
    arrayEach(['head', 'last'], function(methodName, index) {
      var takeName = 'take' + (index ? 'Right' : '');

      LazyWrapper.prototype[methodName] = function() {
        return this[takeName](1).value()[0];
      };
    });

    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.
    arrayEach(['initial', 'tail'], function(methodName, index) {
      var dropName = 'drop' + (index ? '' : 'Right');

      LazyWrapper.prototype[methodName] = function() {
        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
      };
    });

    LazyWrapper.prototype.compact = function() {
      return this.filter(identity);
    };

    LazyWrapper.prototype.find = function(predicate) {
      return this.filter(predicate).head();
    };

    LazyWrapper.prototype.findLast = function(predicate) {
      return this.reverse().find(predicate);
    };

    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {
      if (typeof path == 'function') {
        return new LazyWrapper(this);
      }
      return this.map(function(value) {
        return baseInvoke(value, path, args);
      });
    });

    LazyWrapper.prototype.reject = function(predicate) {
      return this.filter(negate(getIteratee(predicate)));
    };

    LazyWrapper.prototype.slice = function(start, end) {
      start = toInteger(start);

      var result = this;
      if (result.__filtered__ && (start > 0 || end < 0)) {
        return new LazyWrapper(result);
      }
      if (start < 0) {
        result = result.takeRight(-start);
      } else if (start) {
        result = result.drop(start);
      }
      if (end !== undefined) {
        end = toInteger(end);
        result = end < 0 ? result.dropRight(-end) : result.take(end - start);
      }
      return result;
    };

    LazyWrapper.prototype.takeRightWhile = function(predicate) {
      return this.reverse().takeWhile(predicate).reverse();
    };

    LazyWrapper.prototype.toArray = function() {
      return this.take(MAX_ARRAY_LENGTH);
    };

    // Add `LazyWrapper` methods to `lodash.prototype`.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
          isTaker = /^(?:head|last)$/.test(methodName),
          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],
          retUnwrapped = isTaker || /^find/.test(methodName);

      if (!lodashFunc) {
        return;
      }
      lodash.prototype[methodName] = function() {
        var value = this.__wrapped__,
            args = isTaker ? [1] : arguments,
            isLazy = value instanceof LazyWrapper,
            iteratee = args[0],
            useLazy = isLazy || isArray(value);

        var interceptor = function(value) {
          var result = lodashFunc.apply(lodash, arrayPush([value], args));
          return (isTaker && chainAll) ? result[0] : result;
        };

        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
          // Avoid lazy use if the iteratee has a "length" value other than `1`.
          isLazy = useLazy = false;
        }
        var chainAll = this.__chain__,
            isHybrid = !!this.__actions__.length,
            isUnwrapped = retUnwrapped && !chainAll,
            onlyLazy = isLazy && !isHybrid;

        if (!retUnwrapped && useLazy) {
          value = onlyLazy ? value : new LazyWrapper(this);
          var result = func.apply(value, args);
          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });
          return new LodashWrapper(result, chainAll);
        }
        if (isUnwrapped && onlyLazy) {
          return func.apply(this, args);
        }
        result = this.thru(interceptor);
        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;
      };
    });

    // Add `Array` methods to `lodash.prototype`.
    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {
      var func = arrayProto[methodName],
          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
          retUnwrapped = /^(?:pop|shift)$/.test(methodName);

      lodash.prototype[methodName] = function() {
        var args = arguments;
        if (retUnwrapped && !this.__chain__) {
          var value = this.value();
          return func.apply(isArray(value) ? value : [], args);
        }
        return this[chainName](function(value) {
          return func.apply(isArray(value) ? value : [], args);
        });
      };
    });

    // Map minified method names to their real names.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var lodashFunc = lodash[methodName];
      if (lodashFunc) {
        var key = lodashFunc.name + '';
        if (!hasOwnProperty.call(realNames, key)) {
          realNames[key] = [];
        }
        realNames[key].push({ 'name': methodName, 'func': lodashFunc });
      }
    });

    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{
      'name': 'wrapper',
      'func': undefined
    }];

    // Add methods to `LazyWrapper`.
    LazyWrapper.prototype.clone = lazyClone;
    LazyWrapper.prototype.reverse = lazyReverse;
    LazyWrapper.prototype.value = lazyValue;

    // Add chain sequence methods to the `lodash` wrapper.
    lodash.prototype.at = wrapperAt;
    lodash.prototype.chain = wrapperChain;
    lodash.prototype.commit = wrapperCommit;
    lodash.prototype.next = wrapperNext;
    lodash.prototype.plant = wrapperPlant;
    lodash.prototype.reverse = wrapperReverse;
    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;

    // Add lazy aliases.
    lodash.prototype.first = lodash.prototype.head;

    if (symIterator) {
      lodash.prototype[symIterator] = wrapperToIterator;
    }
    return lodash;
  });

  /*--------------------------------------------------------------------------*/

  // Export lodash.
  var _ = runInContext();

  // Some AMD build optimizers, like r.js, check for condition patterns like:
  if (true) {
    // Expose Lodash on the global object to prevent errors when Lodash is
    // loaded by a script tag in the presence of an AMD loader.
    // See http://requirejs.org/docs/errors.html#mismatch for more details.
    // Use `_.noConflict` to remove Lodash from the global object.
    root._ = _;

    // Define as an anonymous module so, through path mapping, it can be
    // referenced as the "underscore" module.
    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {
      return _;
    }).call(exports, __webpack_require__, exports, module),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  }
  // Check for `exports` after `define` in case a build optimizer adds it.
  else {}
}.call(this));


/***/ }),

/***/ "./node_modules/smooth-scrollbar/decorators/boolean.js":
/*!*************************************************************!*\
  !*** ./node_modules/smooth-scrollbar/decorators/boolean.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "boolean": () => (/* binding */ boolean)
/* harmony export */ });
function boolean(proto, key) {
    var alias = "_" + key;
    Object.defineProperty(proto, key, {
        get: function () {
            return this[alias];
        },
        set: function (val) {
            Object.defineProperty(this, alias, {
                value: !!val,
                enumerable: false,
                writable: true,
                configurable: true,
            });
        },
        enumerable: true,
        configurable: true,
    });
}
//# sourceMappingURL=boolean.js.map

/***/ }),

/***/ "./node_modules/smooth-scrollbar/decorators/debounce.js":
/*!**************************************************************!*\
  !*** ./node_modules/smooth-scrollbar/decorators/debounce.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "debounce": () => (/* binding */ debounce)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "./node_modules/smooth-scrollbar/node_modules/tslib/tslib.es6.js");
/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash.debounce */ "./node_modules/lodash.debounce/index.js");
/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_debounce__WEBPACK_IMPORTED_MODULE_0__);


function debounce() {
    var options = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        options[_i] = arguments[_i];
    }
    return function (_proto, key, descriptor) {
        var fn = descriptor.value;
        return {
            get: function () {
                if (!this.hasOwnProperty(key)) {
                    Object.defineProperty(this, key, {
                        value: lodash_debounce__WEBPACK_IMPORTED_MODULE_0___default().apply(void 0, (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArrays)([fn], options)),
                    });
                }
                return this[key];
            },
        };
    };
}
//# sourceMappingURL=debounce.js.map

/***/ }),

/***/ "./node_modules/smooth-scrollbar/decorators/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/smooth-scrollbar/decorators/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "boolean": () => (/* reexport safe */ _boolean__WEBPACK_IMPORTED_MODULE_1__.boolean),
/* harmony export */   "debounce": () => (/* reexport safe */ _debounce__WEBPACK_IMPORTED_MODULE_2__.debounce),
/* harmony export */   "range": () => (/* reexport safe */ _range__WEBPACK_IMPORTED_MODULE_0__.range)
/* harmony export */ });
/* harmony import */ var _range__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./range */ "./node_modules/smooth-scrollbar/decorators/range.js");
/* harmony import */ var _boolean__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./boolean */ "./node_modules/smooth-scrollbar/decorators/boolean.js");
/* harmony import */ var _debounce__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./debounce */ "./node_modules/smooth-scrollbar/decorators/debounce.js");



//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/smooth-scrollbar/decorators/range.js":
/*!***********************************************************!*\
  !*** ./node_modules/smooth-scrollbar/decorators/range.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "range": () => (/* binding */ range)
/* harmony export */ });
/* harmony import */ var lodash_clamp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash.clamp */ "./node_modules/lodash.clamp/index.js");
/* harmony import */ var lodash_clamp__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_clamp__WEBPACK_IMPORTED_MODULE_0__);

function range(min, max) {
    if (min === void 0) { min = -Infinity; }
    if (max === void 0) { max = Infinity; }
    return function (proto, key) {
        var alias = "_" + key;
        Object.defineProperty(proto, key, {
            get: function () {
                return this[alias];
            },
            set: function (val) {
                Object.defineProperty(this, alias, {
                    value: lodash_clamp__WEBPACK_IMPORTED_MODULE_0___default()(val, min, max),
                    enumerable: false,
                    writable: true,
                    configurable: true,
                });
            },
            enumerable: true,
            configurable: true,
        });
    };
}
//# sourceMappingURL=range.js.map

/***/ }),

/***/ "./node_modules/smooth-scrollbar/events/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/smooth-scrollbar/events/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "keyboardHandler": () => (/* reexport safe */ _keyboard__WEBPACK_IMPORTED_MODULE_0__.keyboardHandler),
/* harmony export */   "mouseHandler": () => (/* reexport safe */ _mouse__WEBPACK_IMPORTED_MODULE_1__.mouseHandler),
/* harmony export */   "resizeHandler": () => (/* reexport safe */ _resize__WEBPACK_IMPORTED_MODULE_2__.resizeHandler),
/* harmony export */   "selectHandler": () => (/* reexport safe */ _select__WEBPACK_IMPORTED_MODULE_3__.selectHandler),
/* harmony export */   "touchHandler": () => (/* reexport safe */ _touch__WEBPACK_IMPORTED_MODULE_4__.touchHandler),
/* harmony export */   "wheelHandler": () => (/* reexport safe */ _wheel__WEBPACK_IMPORTED_MODULE_5__.wheelHandler)
/* harmony export */ });
/* harmony import */ var _keyboard__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./keyboard */ "./node_modules/smooth-scrollbar/events/keyboard.js");
/* harmony import */ var _mouse__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mouse */ "./node_modules/smooth-scrollbar/events/mouse.js");
/* harmony import */ var _resize__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./resize */ "./node_modules/smooth-scrollbar/events/resize.js");
/* harmony import */ var _select__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./select */ "./node_modules/smooth-scrollbar/events/select.js");
/* harmony import */ var _touch__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./touch */ "./node_modules/smooth-scrollbar/events/touch.js");
/* harmony import */ var _wheel__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./wheel */ "./node_modules/smooth-scrollbar/events/wheel.js");






//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/smooth-scrollbar/events/keyboard.js":
/*!**********************************************************!*\
  !*** ./node_modules/smooth-scrollbar/events/keyboard.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "keyboardHandler": () => (/* binding */ keyboardHandler)
/* harmony export */ });
/* harmony import */ var _utils___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/ */ "./node_modules/smooth-scrollbar/utils/index.js");

var KEY_CODE;
(function (KEY_CODE) {
    KEY_CODE[KEY_CODE["TAB"] = 9] = "TAB";
    KEY_CODE[KEY_CODE["SPACE"] = 32] = "SPACE";
    KEY_CODE[KEY_CODE["PAGE_UP"] = 33] = "PAGE_UP";
    KEY_CODE[KEY_CODE["PAGE_DOWN"] = 34] = "PAGE_DOWN";
    KEY_CODE[KEY_CODE["END"] = 35] = "END";
    KEY_CODE[KEY_CODE["HOME"] = 36] = "HOME";
    KEY_CODE[KEY_CODE["LEFT"] = 37] = "LEFT";
    KEY_CODE[KEY_CODE["UP"] = 38] = "UP";
    KEY_CODE[KEY_CODE["RIGHT"] = 39] = "RIGHT";
    KEY_CODE[KEY_CODE["DOWN"] = 40] = "DOWN";
})(KEY_CODE || (KEY_CODE = {}));
function keyboardHandler(scrollbar) {
    var addEvent = (0,_utils___WEBPACK_IMPORTED_MODULE_0__.eventScope)(scrollbar);
    var container = scrollbar.containerEl;
    addEvent(container, 'keydown', function (evt) {
        var activeElement = document.activeElement;
        if (activeElement !== container && !container.contains(activeElement)) {
            return;
        }
        if (isEditable(activeElement)) {
            return;
        }
        var delta = getKeyDelta(scrollbar, evt.keyCode || evt.which);
        if (!delta) {
            return;
        }
        var x = delta[0], y = delta[1];
        scrollbar.addTransformableMomentum(x, y, evt, function (willScroll) {
            if (willScroll) {
                evt.preventDefault();
            }
            else {
                scrollbar.containerEl.blur();
                if (scrollbar.parent) {
                    scrollbar.parent.containerEl.focus();
                }
            }
        });
    });
}
function getKeyDelta(scrollbar, keyCode) {
    var size = scrollbar.size, limit = scrollbar.limit, offset = scrollbar.offset;
    switch (keyCode) {
        case KEY_CODE.TAB:
            return handleTabKey(scrollbar);
        case KEY_CODE.SPACE:
            return [0, 200];
        case KEY_CODE.PAGE_UP:
            return [0, -size.container.height + 40];
        case KEY_CODE.PAGE_DOWN:
            return [0, size.container.height - 40];
        case KEY_CODE.END:
            return [0, limit.y - offset.y];
        case KEY_CODE.HOME:
            return [0, -offset.y];
        case KEY_CODE.LEFT:
            return [-40, 0];
        case KEY_CODE.UP:
            return [0, -40];
        case KEY_CODE.RIGHT:
            return [40, 0];
        case KEY_CODE.DOWN:
            return [0, 40];
        default:
            return null;
    }
}
function handleTabKey(scrollbar) {
    // handle in next frame
    requestAnimationFrame(function () {
        scrollbar.scrollIntoView(document.activeElement, {
            offsetTop: scrollbar.size.container.height / 2,
            offsetLeft: scrollbar.size.container.width / 2,
            onlyScrollIfNeeded: true,
        });
    });
}
function isEditable(elem) {
    if (elem.tagName === 'INPUT' ||
        elem.tagName === 'SELECT' ||
        elem.tagName === 'TEXTAREA' ||
        elem.isContentEditable) {
        return !elem.disabled;
    }
    return false;
}
//# sourceMappingURL=keyboard.js.map

/***/ }),

/***/ "./node_modules/smooth-scrollbar/events/mouse.js":
/*!*******************************************************!*\
  !*** ./node_modules/smooth-scrollbar/events/mouse.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "mouseHandler": () => (/* binding */ mouseHandler)
/* harmony export */ });
/* harmony import */ var lodash_clamp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash.clamp */ "./node_modules/lodash.clamp/index.js");
/* harmony import */ var lodash_clamp__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_clamp__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utils___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/ */ "./node_modules/smooth-scrollbar/utils/index.js");


var Direction;
(function (Direction) {
    Direction[Direction["X"] = 0] = "X";
    Direction[Direction["Y"] = 1] = "Y";
})(Direction || (Direction = {}));
function mouseHandler(scrollbar) {
    var addEvent = (0,_utils___WEBPACK_IMPORTED_MODULE_1__.eventScope)(scrollbar);
    var container = scrollbar.containerEl;
    var _a = scrollbar.track, xAxis = _a.xAxis, yAxis = _a.yAxis;
    function calcMomentum(direction, clickPosition) {
        var size = scrollbar.size, limit = scrollbar.limit, offset = scrollbar.offset;
        if (direction === Direction.X) {
            var totalWidth = size.container.width + (xAxis.thumb.realSize - xAxis.thumb.displaySize);
            return lodash_clamp__WEBPACK_IMPORTED_MODULE_0___default()(clickPosition / totalWidth * size.content.width, 0, limit.x) - offset.x;
        }
        if (direction === Direction.Y) {
            var totalHeight = size.container.height + (yAxis.thumb.realSize - yAxis.thumb.displaySize);
            return lodash_clamp__WEBPACK_IMPORTED_MODULE_0___default()(clickPosition / totalHeight * size.content.height, 0, limit.y) - offset.y;
        }
        return 0;
    }
    function getTrackDirection(elem) {
        if ((0,_utils___WEBPACK_IMPORTED_MODULE_1__.isOneOf)(elem, [xAxis.element, xAxis.thumb.element])) {
            return Direction.X;
        }
        if ((0,_utils___WEBPACK_IMPORTED_MODULE_1__.isOneOf)(elem, [yAxis.element, yAxis.thumb.element])) {
            return Direction.Y;
        }
        return void 0;
    }
    var isMouseDown;
    var isMouseMoving;
    var startOffsetToThumb;
    var trackDirection;
    var containerRect;
    addEvent(container, 'click', function (evt) {
        if (isMouseMoving || !(0,_utils___WEBPACK_IMPORTED_MODULE_1__.isOneOf)(evt.target, [xAxis.element, yAxis.element])) {
            return;
        }
        var track = evt.target;
        var direction = getTrackDirection(track);
        var rect = track.getBoundingClientRect();
        var clickPos = (0,_utils___WEBPACK_IMPORTED_MODULE_1__.getPosition)(evt);
        if (direction === Direction.X) {
            var offsetOnTrack = clickPos.x - rect.left - xAxis.thumb.displaySize / 2;
            scrollbar.setMomentum(calcMomentum(direction, offsetOnTrack), 0);
        }
        if (direction === Direction.Y) {
            var offsetOnTrack = clickPos.y - rect.top - yAxis.thumb.displaySize / 2;
            scrollbar.setMomentum(0, calcMomentum(direction, offsetOnTrack));
        }
    });
    addEvent(container, 'mousedown', function (evt) {
        if (!(0,_utils___WEBPACK_IMPORTED_MODULE_1__.isOneOf)(evt.target, [xAxis.thumb.element, yAxis.thumb.element])) {
            return;
        }
        isMouseDown = true;
        var thumb = evt.target;
        var cursorPos = (0,_utils___WEBPACK_IMPORTED_MODULE_1__.getPosition)(evt);
        var thumbRect = thumb.getBoundingClientRect();
        trackDirection = getTrackDirection(thumb);
        // pointer offset to thumb
        startOffsetToThumb = {
            x: cursorPos.x - thumbRect.left,
            y: cursorPos.y - thumbRect.top,
        };
        // container bounding rectangle
        containerRect = container.getBoundingClientRect();
        // prevent selection, see:
        // https://github.com/idiotWu/smooth-scrollbar/issues/48
        (0,_utils___WEBPACK_IMPORTED_MODULE_1__.setStyle)(scrollbar.containerEl, {
            '-user-select': 'none',
        });
    });
    addEvent(window, 'mousemove', function (evt) {
        if (!isMouseDown)
            return;
        isMouseMoving = true;
        var cursorPos = (0,_utils___WEBPACK_IMPORTED_MODULE_1__.getPosition)(evt);
        if (trackDirection === Direction.X) {
            // get percentage of pointer position in track
            // then tranform to px
            // don't need easing
            var offsetOnTrack = cursorPos.x - startOffsetToThumb.x - containerRect.left;
            scrollbar.setMomentum(calcMomentum(trackDirection, offsetOnTrack), 0);
        }
        if (trackDirection === Direction.Y) {
            var offsetOnTrack = cursorPos.y - startOffsetToThumb.y - containerRect.top;
            scrollbar.setMomentum(0, calcMomentum(trackDirection, offsetOnTrack));
        }
    });
    addEvent(window, 'mouseup blur', function () {
        isMouseDown = isMouseMoving = false;
        (0,_utils___WEBPACK_IMPORTED_MODULE_1__.setStyle)(scrollbar.containerEl, {
            '-user-select': '',
        });
    });
}
//# sourceMappingURL=mouse.js.map

/***/ }),

/***/ "./node_modules/smooth-scrollbar/events/resize.js":
/*!********************************************************!*\
  !*** ./node_modules/smooth-scrollbar/events/resize.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "resizeHandler": () => (/* binding */ resizeHandler)
/* harmony export */ });
/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash.debounce */ "./node_modules/lodash.debounce/index.js");
/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_debounce__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utils___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/ */ "./node_modules/smooth-scrollbar/utils/index.js");


function resizeHandler(scrollbar) {
    var addEvent = (0,_utils___WEBPACK_IMPORTED_MODULE_1__.eventScope)(scrollbar);
    addEvent(window, 'resize', lodash_debounce__WEBPACK_IMPORTED_MODULE_0___default()(scrollbar.update.bind(scrollbar), 300));
}
//# sourceMappingURL=resize.js.map

/***/ }),

/***/ "./node_modules/smooth-scrollbar/events/select.js":
/*!********************************************************!*\
  !*** ./node_modules/smooth-scrollbar/events/select.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "selectHandler": () => (/* binding */ selectHandler)
/* harmony export */ });
/* harmony import */ var lodash_clamp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash.clamp */ "./node_modules/lodash.clamp/index.js");
/* harmony import */ var lodash_clamp__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_clamp__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utils___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/ */ "./node_modules/smooth-scrollbar/utils/index.js");


function selectHandler(scrollbar) {
    var addEvent = (0,_utils___WEBPACK_IMPORTED_MODULE_1__.eventScope)(scrollbar);
    var containerEl = scrollbar.containerEl, contentEl = scrollbar.contentEl;
    var isSelected = false;
    var isContextMenuOpened = false; // flag to prevent selection when context menu is opened
    var animationID;
    function scroll(_a) {
        var x = _a.x, y = _a.y;
        if (!x && !y)
            return;
        var offset = scrollbar.offset, limit = scrollbar.limit;
        // DISALLOW delta transformation
        scrollbar.setMomentum(lodash_clamp__WEBPACK_IMPORTED_MODULE_0___default()(offset.x + x, 0, limit.x) - offset.x, lodash_clamp__WEBPACK_IMPORTED_MODULE_0___default()(offset.y + y, 0, limit.y) - offset.y);
        animationID = requestAnimationFrame(function () {
            scroll({ x: x, y: y });
        });
    }
    addEvent(window, 'mousemove', function (evt) {
        if (!isSelected)
            return;
        cancelAnimationFrame(animationID);
        var dir = calcMomentum(scrollbar, evt);
        scroll(dir);
    });
    // prevent scrolling when context menu is opened
    // NOTE: `contextmenu` event may be fired
    //          1. BEFORE `selectstart`: when user right-clicks on the text content -> prevent future scrolling,
    //          2. AFTER `selectstart`: when user right-clicks on the blank area -> cancel current scrolling,
    //        so we need to both set the flag and cancel current scrolling
    addEvent(contentEl, 'contextmenu', function () {
        // set the flag to prevent future scrolling
        isContextMenuOpened = true;
        // stop current scrolling
        cancelAnimationFrame(animationID);
        isSelected = false;
    });
    // reset context menu flag on mouse down
    // to ensure the scrolling is allowed in the next selection
    addEvent(contentEl, 'mousedown', function () {
        isContextMenuOpened = false;
    });
    addEvent(contentEl, 'selectstart', function () {
        if (isContextMenuOpened) {
            return;
        }
        cancelAnimationFrame(animationID);
        isSelected = true;
    });
    addEvent(window, 'mouseup blur', function () {
        cancelAnimationFrame(animationID);
        isSelected = false;
        isContextMenuOpened = false;
    });
    // patch for touch devices
    addEvent(containerEl, 'scroll', function (evt) {
        evt.preventDefault();
        containerEl.scrollTop = containerEl.scrollLeft = 0;
    });
}
function calcMomentum(scrollbar, evt) {
    var _a = scrollbar.bounding, top = _a.top, right = _a.right, bottom = _a.bottom, left = _a.left;
    var _b = (0,_utils___WEBPACK_IMPORTED_MODULE_1__.getPosition)(evt), x = _b.x, y = _b.y;
    var res = {
        x: 0,
        y: 0,
    };
    var padding = 20;
    if (x === 0 && y === 0)
        return res;
    if (x > right - padding) {
        res.x = (x - right + padding);
    }
    else if (x < left + padding) {
        res.x = (x - left - padding);
    }
    if (y > bottom - padding) {
        res.y = (y - bottom + padding);
    }
    else if (y < top + padding) {
        res.y = (y - top - padding);
    }
    res.x *= 2;
    res.y *= 2;
    return res;
}
//# sourceMappingURL=select.js.map

/***/ }),

/***/ "./node_modules/smooth-scrollbar/events/touch.js":
/*!*******************************************************!*\
  !*** ./node_modules/smooth-scrollbar/events/touch.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "touchHandler": () => (/* binding */ touchHandler)
/* harmony export */ });
/* harmony import */ var _utils___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/ */ "./node_modules/smooth-scrollbar/utils/index.js");

var activeScrollbar;
function touchHandler(scrollbar) {
    var target = scrollbar.options.delegateTo || scrollbar.containerEl;
    var touchRecord = new _utils___WEBPACK_IMPORTED_MODULE_0__.TouchRecord();
    var addEvent = (0,_utils___WEBPACK_IMPORTED_MODULE_0__.eventScope)(scrollbar);
    var damping;
    var pointerCount = 0;
    addEvent(target, 'touchstart', function (evt) {
        // start records
        touchRecord.track(evt);
        // stop scrolling
        scrollbar.setMomentum(0, 0);
        // save damping
        if (pointerCount === 0) {
            damping = scrollbar.options.damping;
            scrollbar.options.damping = Math.max(damping, 0.5); // less frames on touchmove
        }
        pointerCount++;
    });
    addEvent(target, 'touchmove', function (evt) {
        if (activeScrollbar && activeScrollbar !== scrollbar)
            return;
        touchRecord.update(evt);
        var _a = touchRecord.getDelta(), x = _a.x, y = _a.y;
        scrollbar.addTransformableMomentum(x, y, evt, function (willScroll) {
            if (willScroll && evt.cancelable) {
                evt.preventDefault();
                activeScrollbar = scrollbar;
            }
        });
    });
    addEvent(target, 'touchcancel touchend', function (evt) {
        var delta = touchRecord.getEasingDistance(damping);
        scrollbar.addTransformableMomentum(delta.x, delta.y, evt);
        pointerCount--;
        // restore damping
        if (pointerCount === 0) {
            scrollbar.options.damping = damping;
        }
        touchRecord.release(evt);
        activeScrollbar = null;
    });
}
//# sourceMappingURL=touch.js.map

/***/ }),

/***/ "./node_modules/smooth-scrollbar/events/wheel.js":
/*!*******************************************************!*\
  !*** ./node_modules/smooth-scrollbar/events/wheel.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "wheelHandler": () => (/* binding */ wheelHandler)
/* harmony export */ });
/* harmony import */ var _utils___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/ */ "./node_modules/smooth-scrollbar/utils/index.js");

function wheelHandler(scrollbar) {
    var addEvent = (0,_utils___WEBPACK_IMPORTED_MODULE_0__.eventScope)(scrollbar);
    var target = scrollbar.options.delegateTo || scrollbar.containerEl;
    var eventName = ('onwheel' in window || document.implementation.hasFeature('Events.wheel', '3.0')) ? 'wheel' : 'mousewheel';
    addEvent(target, eventName, function (evt) {
        var _a = normalizeDelta(evt), x = _a.x, y = _a.y;
        scrollbar.addTransformableMomentum(x, y, evt, function (willScroll) {
            if (willScroll) {
                evt.preventDefault();
            }
        });
    });
}
// Normalizing wheel delta
var DELTA_SCALE = {
    STANDARD: 1,
    OTHERS: -3,
};
var DELTA_MODE = [1.0, 28.0, 500.0];
var getDeltaMode = function (mode) { return DELTA_MODE[mode] || DELTA_MODE[0]; };
function normalizeDelta(evt) {
    if ('deltaX' in evt) {
        var mode = getDeltaMode(evt.deltaMode);
        return {
            x: evt.deltaX / DELTA_SCALE.STANDARD * mode,
            y: evt.deltaY / DELTA_SCALE.STANDARD * mode,
        };
    }
    if ('wheelDeltaX' in evt) {
        return {
            x: evt.wheelDeltaX / DELTA_SCALE.OTHERS,
            y: evt.wheelDeltaY / DELTA_SCALE.OTHERS,
        };
    }
    // ie with touchpad
    return {
        x: 0,
        y: evt.wheelDelta / DELTA_SCALE.OTHERS,
    };
}
//# sourceMappingURL=wheel.js.map

/***/ }),

/***/ "./node_modules/smooth-scrollbar/geometry/get-size.js":
/*!************************************************************!*\
  !*** ./node_modules/smooth-scrollbar/geometry/get-size.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getSize": () => (/* binding */ getSize)
/* harmony export */ });
function getSize(scrollbar) {
    var containerEl = scrollbar.containerEl, contentEl = scrollbar.contentEl;
    var containerStyles = getComputedStyle(containerEl);
    var paddings = [
        'paddingTop',
        'paddingBottom',
        'paddingLeft',
        'paddingRight',
    ].map(function (prop) {
        return containerStyles[prop] ? parseFloat(containerStyles[prop]) : 0;
    });
    var verticalPadding = paddings[0] + paddings[1];
    var horizontalPadding = paddings[2] + paddings[3];
    return {
        container: {
            // requires `overflow: hidden`
            width: containerEl.clientWidth,
            height: containerEl.clientHeight,
        },
        content: {
            // border width and paddings should be included
            width: contentEl.offsetWidth - contentEl.clientWidth + contentEl.scrollWidth + horizontalPadding,
            height: contentEl.offsetHeight - contentEl.clientHeight + contentEl.scrollHeight + verticalPadding,
        },
    };
}
//# sourceMappingURL=get-size.js.map

/***/ }),

/***/ "./node_modules/smooth-scrollbar/geometry/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/smooth-scrollbar/geometry/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getSize": () => (/* reexport safe */ _get_size__WEBPACK_IMPORTED_MODULE_0__.getSize),
/* harmony export */   "isVisible": () => (/* reexport safe */ _is_visible__WEBPACK_IMPORTED_MODULE_1__.isVisible),
/* harmony export */   "update": () => (/* reexport safe */ _update__WEBPACK_IMPORTED_MODULE_2__.update)
/* harmony export */ });
/* harmony import */ var _get_size__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./get-size */ "./node_modules/smooth-scrollbar/geometry/get-size.js");
/* harmony import */ var _is_visible__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./is-visible */ "./node_modules/smooth-scrollbar/geometry/is-visible.js");
/* harmony import */ var _update__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./update */ "./node_modules/smooth-scrollbar/geometry/update.js");



//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/smooth-scrollbar/geometry/is-visible.js":
/*!**************************************************************!*\
  !*** ./node_modules/smooth-scrollbar/geometry/is-visible.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isVisible": () => (/* binding */ isVisible)
/* harmony export */ });
function isVisible(scrollbar, elem) {
    var bounding = scrollbar.bounding;
    var targetBounding = elem.getBoundingClientRect();
    // check overlapping
    var top = Math.max(bounding.top, targetBounding.top);
    var left = Math.max(bounding.left, targetBounding.left);
    var right = Math.min(bounding.right, targetBounding.right);
    var bottom = Math.min(bounding.bottom, targetBounding.bottom);
    return top < bottom && left < right;
}
//# sourceMappingURL=is-visible.js.map

/***/ }),

/***/ "./node_modules/smooth-scrollbar/geometry/update.js":
/*!**********************************************************!*\
  !*** ./node_modules/smooth-scrollbar/geometry/update.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "update": () => (/* binding */ update)
/* harmony export */ });
function update(scrollbar) {
    var newSize = scrollbar.getSize();
    var limit = {
        x: Math.max(newSize.content.width - newSize.container.width, 0),
        y: Math.max(newSize.content.height - newSize.container.height, 0),
    };
    // metrics
    var containerBounding = scrollbar.containerEl.getBoundingClientRect();
    var bounding = {
        top: Math.max(containerBounding.top, 0),
        right: Math.min(containerBounding.right, window.innerWidth),
        bottom: Math.min(containerBounding.bottom, window.innerHeight),
        left: Math.max(containerBounding.left, 0),
    };
    // assign props
    scrollbar.size = newSize;
    scrollbar.limit = limit;
    scrollbar.bounding = bounding;
    // update tracks
    scrollbar.track.update();
    // re-positioning
    scrollbar.setPosition();
}
//# sourceMappingURL=update.js.map

/***/ }),

/***/ "./node_modules/smooth-scrollbar/index.js":
/*!************************************************!*\
  !*** ./node_modules/smooth-scrollbar/index.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ScrollbarPlugin": () => (/* reexport safe */ _plugin__WEBPACK_IMPORTED_MODULE_2__.ScrollbarPlugin),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ "./node_modules/smooth-scrollbar/node_modules/tslib/tslib.es6.js");
/* harmony import */ var _polyfills__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./polyfills */ "./node_modules/smooth-scrollbar/polyfills.js");
/* harmony import */ var _scrollbar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scrollbar */ "./node_modules/smooth-scrollbar/scrollbar.js");
/* harmony import */ var _plugin__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./plugin */ "./node_modules/smooth-scrollbar/plugin.js");
/* harmony import */ var _style__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./style */ "./node_modules/smooth-scrollbar/style.js");






/**
 * cast `I.Scrollbar` to `Scrollbar` to avoid error
 *
 * `I.Scrollbar` is not assignable to `Scrollbar`:
 *     "privateProp" is missing in `I.Scrollbar`
 *
 * @see https://github.com/Microsoft/TypeScript/issues/2672
 */
var SmoothScrollbar = /** @class */ (function (_super) {
    (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__extends)(SmoothScrollbar, _super);
    function SmoothScrollbar() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Initializes a scrollbar on the given element.
     *
     * @param elem The DOM element that you want to initialize scrollbar to
     * @param [options] Initial options
     */
    SmoothScrollbar.init = function (elem, options) {
        if (!elem || elem.nodeType !== 1) {
            throw new TypeError("expect element to be DOM Element, but got " + elem);
        }
        // attach stylesheet
        (0,_style__WEBPACK_IMPORTED_MODULE_3__.attachStyle)();
        if (_scrollbar__WEBPACK_IMPORTED_MODULE_1__.scrollbarMap.has(elem)) {
            return _scrollbar__WEBPACK_IMPORTED_MODULE_1__.scrollbarMap.get(elem);
        }
        return new _scrollbar__WEBPACK_IMPORTED_MODULE_1__.Scrollbar(elem, options);
    };
    /**
     * Automatically init scrollbar on all elements base on the selector `[data-scrollbar]`
     *
     * @param options Initial options
     */
    SmoothScrollbar.initAll = function (options) {
        return Array.from(document.querySelectorAll('[data-scrollbar]'), function (elem) {
            return SmoothScrollbar.init(elem, options);
        });
    };
    /**
     * Check if there is a scrollbar on given element
     *
     * @param elem The DOM element that you want to check
     */
    SmoothScrollbar.has = function (elem) {
        return _scrollbar__WEBPACK_IMPORTED_MODULE_1__.scrollbarMap.has(elem);
    };
    /**
     * Gets scrollbar on the given element.
     * If no scrollbar instance exsits, returns `undefined`
     *
     * @param elem The DOM element that you want to check.
     */
    SmoothScrollbar.get = function (elem) {
        return _scrollbar__WEBPACK_IMPORTED_MODULE_1__.scrollbarMap.get(elem);
    };
    /**
     * Returns an array that contains all scrollbar instances
     */
    SmoothScrollbar.getAll = function () {
        return Array.from(_scrollbar__WEBPACK_IMPORTED_MODULE_1__.scrollbarMap.values());
    };
    /**
     * Removes scrollbar on the given element
     */
    SmoothScrollbar.destroy = function (elem) {
        var scrollbar = _scrollbar__WEBPACK_IMPORTED_MODULE_1__.scrollbarMap.get(elem);
        if (scrollbar) {
            scrollbar.destroy();
        }
    };
    /**
     * Removes all scrollbar instances from current document
     */
    SmoothScrollbar.destroyAll = function () {
        _scrollbar__WEBPACK_IMPORTED_MODULE_1__.scrollbarMap.forEach(function (scrollbar) {
            scrollbar.destroy();
        });
    };
    /**
     * Attaches plugins to scrollbars
     *
     * @param ...Plugins Scrollbar plugin classes
     */
    SmoothScrollbar.use = function () {
        var Plugins = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            Plugins[_i] = arguments[_i];
        }
        return _plugin__WEBPACK_IMPORTED_MODULE_2__.addPlugins.apply(void 0, Plugins);
    };
    /**
     * Attaches default style sheets to current document.
     * You don't need to call this method manually unless
     * you removed the default styles via `Scrollbar.detachStyle()`
     */
    SmoothScrollbar.attachStyle = function () {
        return (0,_style__WEBPACK_IMPORTED_MODULE_3__.attachStyle)();
    };
    /**
     * Removes default styles from current document.
     * Use this method when you want to use your own css for scrollbars.
     */
    SmoothScrollbar.detachStyle = function () {
        return (0,_style__WEBPACK_IMPORTED_MODULE_3__.detachStyle)();
    };
    SmoothScrollbar.version = "8.8.1";
    SmoothScrollbar.ScrollbarPlugin = _plugin__WEBPACK_IMPORTED_MODULE_2__.ScrollbarPlugin;
    return SmoothScrollbar;
}(_scrollbar__WEBPACK_IMPORTED_MODULE_1__.Scrollbar));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SmoothScrollbar);
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/smooth-scrollbar/node_modules/tslib/tslib.es6.js":
/*!***********************************************************************!*\
  !*** ./node_modules/smooth-scrollbar/node_modules/tslib/tslib.es6.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "__assign": () => (/* binding */ __assign),
/* harmony export */   "__asyncDelegator": () => (/* binding */ __asyncDelegator),
/* harmony export */   "__asyncGenerator": () => (/* binding */ __asyncGenerator),
/* harmony export */   "__asyncValues": () => (/* binding */ __asyncValues),
/* harmony export */   "__await": () => (/* binding */ __await),
/* harmony export */   "__awaiter": () => (/* binding */ __awaiter),
/* harmony export */   "__classPrivateFieldGet": () => (/* binding */ __classPrivateFieldGet),
/* harmony export */   "__classPrivateFieldSet": () => (/* binding */ __classPrivateFieldSet),
/* harmony export */   "__createBinding": () => (/* binding */ __createBinding),
/* harmony export */   "__decorate": () => (/* binding */ __decorate),
/* harmony export */   "__exportStar": () => (/* binding */ __exportStar),
/* harmony export */   "__extends": () => (/* binding */ __extends),
/* harmony export */   "__generator": () => (/* binding */ __generator),
/* harmony export */   "__importDefault": () => (/* binding */ __importDefault),
/* harmony export */   "__importStar": () => (/* binding */ __importStar),
/* harmony export */   "__makeTemplateObject": () => (/* binding */ __makeTemplateObject),
/* harmony export */   "__metadata": () => (/* binding */ __metadata),
/* harmony export */   "__param": () => (/* binding */ __param),
/* harmony export */   "__read": () => (/* binding */ __read),
/* harmony export */   "__rest": () => (/* binding */ __rest),
/* harmony export */   "__spread": () => (/* binding */ __spread),
/* harmony export */   "__spreadArrays": () => (/* binding */ __spreadArrays),
/* harmony export */   "__values": () => (/* binding */ __values)
/* harmony export */ });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),

/***/ "./node_modules/smooth-scrollbar/options.js":
/*!**************************************************!*\
  !*** ./node_modules/smooth-scrollbar/options.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Options": () => (/* binding */ Options)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "./node_modules/smooth-scrollbar/node_modules/tslib/tslib.es6.js");
/* harmony import */ var _decorators___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./decorators/ */ "./node_modules/smooth-scrollbar/decorators/index.js");


var Options = /** @class */ (function () {
    function Options(config) {
        var _this = this;
        if (config === void 0) { config = {}; }
        /**
         * Momentum reduction damping factor, a float value between `(0, 1)`.
         * The lower the value is, the more smooth the scrolling will be
         * (also the more paint frames).
         */
        this.damping = 0.1;
        /**
         * Minimal size for scrollbar thumbs.
         */
        this.thumbMinSize = 20;
        /**
         * Render every frame in integer pixel values
         * set to `true` to improve scrolling performance.
         */
        this.renderByPixels = true;
        /**
         * Keep scrollbar tracks visible
         */
        this.alwaysShowTracks = false;
        /**
         * Set to `true` to allow outer scrollbars continue scrolling
         * when current scrollbar reaches edge.
         */
        this.continuousScrolling = true;
        /**
         * Delegate wheel events and touch events to the given element.
         * By default, the container element is used.
         * This option will be useful for dealing with fixed elements.
         */
        this.delegateTo = null;
        /**
         * Options for plugins. Syntax:
         *   plugins[pluginName] = pluginOptions: any
         */
        this.plugins = {};
        Object.keys(config).forEach(function (prop) {
            _this[prop] = config[prop];
        });
    }
    Object.defineProperty(Options.prototype, "wheelEventTarget", {
        get: function () {
            return this.delegateTo;
        },
        set: function (el) {
            console.warn('[smooth-scrollbar]: `options.wheelEventTarget` is deprecated and will be removed in the future, use `options.delegateTo` instead.');
            this.delegateTo = el;
        },
        enumerable: true,
        configurable: true
    });
    (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([
        (0,_decorators___WEBPACK_IMPORTED_MODULE_0__.range)(0, 1)
    ], Options.prototype, "damping", void 0);
    (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([
        (0,_decorators___WEBPACK_IMPORTED_MODULE_0__.range)(0, Infinity)
    ], Options.prototype, "thumbMinSize", void 0);
    (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([
        _decorators___WEBPACK_IMPORTED_MODULE_0__.boolean
    ], Options.prototype, "renderByPixels", void 0);
    (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([
        _decorators___WEBPACK_IMPORTED_MODULE_0__.boolean
    ], Options.prototype, "alwaysShowTracks", void 0);
    (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([
        _decorators___WEBPACK_IMPORTED_MODULE_0__.boolean
    ], Options.prototype, "continuousScrolling", void 0);
    return Options;
}());

//# sourceMappingURL=options.js.map

/***/ }),

/***/ "./node_modules/smooth-scrollbar/plugin.js":
/*!*************************************************!*\
  !*** ./node_modules/smooth-scrollbar/plugin.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ScrollbarPlugin": () => (/* binding */ ScrollbarPlugin),
/* harmony export */   "addPlugins": () => (/* binding */ addPlugins),
/* harmony export */   "globalPlugins": () => (/* binding */ globalPlugins),
/* harmony export */   "initPlugins": () => (/* binding */ initPlugins)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/smooth-scrollbar/node_modules/tslib/tslib.es6.js");

var ScrollbarPlugin = /** @class */ (function () {
    function ScrollbarPlugin(scrollbar, options) {
        var _newTarget = this.constructor;
        this.scrollbar = scrollbar;
        this.name = _newTarget.pluginName;
        this.options = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, _newTarget.defaultOptions), options);
    }
    ScrollbarPlugin.prototype.onInit = function () { };
    ScrollbarPlugin.prototype.onDestroy = function () { };
    ScrollbarPlugin.prototype.onUpdate = function () { };
    ScrollbarPlugin.prototype.onRender = function (_remainMomentum) { };
    ScrollbarPlugin.prototype.transformDelta = function (delta, _evt) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, delta);
    };
    ScrollbarPlugin.pluginName = '';
    ScrollbarPlugin.defaultOptions = {};
    return ScrollbarPlugin;
}());

var globalPlugins = {
    order: new Set(),
    constructors: {},
};
function addPlugins() {
    var Plugins = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        Plugins[_i] = arguments[_i];
    }
    Plugins.forEach(function (P) {
        var pluginName = P.pluginName;
        if (!pluginName) {
            throw new TypeError("plugin name is required");
        }
        globalPlugins.order.add(pluginName);
        globalPlugins.constructors[pluginName] = P;
    });
}
function initPlugins(scrollbar, options) {
    return Array.from(globalPlugins.order)
        .filter(function (pluginName) {
        return options[pluginName] !== false;
    })
        .map(function (pluginName) {
        var Plugin = globalPlugins.constructors[pluginName];
        var instance = new Plugin(scrollbar, options[pluginName]);
        // bind plugin options to `scrollbar.options`
        options[pluginName] = instance.options;
        return instance;
    });
}
//# sourceMappingURL=plugin.js.map

/***/ }),

/***/ "./node_modules/smooth-scrollbar/plugins/overscroll/bounce.js":
/*!********************************************************************!*\
  !*** ./node_modules/smooth-scrollbar/plugins/overscroll/bounce.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Bounce": () => (/* binding */ Bounce)
/* harmony export */ });
/* harmony import */ var _utils_set_style__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/set-style */ "./node_modules/smooth-scrollbar/utils/set-style.js");

var Bounce = /** @class */ (function () {
    function Bounce(_scrollbar) {
        this._scrollbar = _scrollbar;
    }
    Bounce.prototype.render = function (_a) {
        var _b = _a.x, x = _b === void 0 ? 0 : _b, _c = _a.y, y = _c === void 0 ? 0 : _c;
        var _d = this._scrollbar, size = _d.size, track = _d.track, offset = _d.offset, contentEl = _d.contentEl;
        (0,_utils_set_style__WEBPACK_IMPORTED_MODULE_0__.setStyle)(contentEl, {
            '-transform': "translate3d(" + -(offset.x + x) + "px, " + -(offset.y + y) + "px, 0)",
        });
        if (x) {
            track.xAxis.show();
            var scaleRatio = size.container.width / (size.container.width + Math.abs(x));
            (0,_utils_set_style__WEBPACK_IMPORTED_MODULE_0__.setStyle)(track.xAxis.thumb.element, {
                '-transform': "translate3d(" + track.xAxis.thumb.offset + "px, 0, 0) scale3d(" + scaleRatio + ", 1, 1)",
                '-transform-origin': x < 0 ? 'left' : 'right',
            });
        }
        if (y) {
            track.yAxis.show();
            var scaleRatio = size.container.height / (size.container.height + Math.abs(y));
            (0,_utils_set_style__WEBPACK_IMPORTED_MODULE_0__.setStyle)(track.yAxis.thumb.element, {
                '-transform': "translate3d(0, " + track.yAxis.thumb.offset + "px, 0) scale3d(1, " + scaleRatio + ", 1)",
                '-transform-origin': y < 0 ? 'top' : 'bottom',
            });
        }
        track.autoHideOnIdle();
    };
    return Bounce;
}());

//# sourceMappingURL=bounce.js.map

/***/ }),

/***/ "./node_modules/smooth-scrollbar/plugins/overscroll/glow.js":
/*!******************************************************************!*\
  !*** ./node_modules/smooth-scrollbar/plugins/overscroll/glow.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Glow": () => (/* binding */ Glow)
/* harmony export */ });
/* harmony import */ var lodash_clamp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash.clamp */ "./node_modules/lodash.clamp/index.js");
/* harmony import */ var lodash_clamp__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_clamp__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utils_set_style__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/set-style */ "./node_modules/smooth-scrollbar/utils/set-style.js");


var GLOW_MAX_OPACITY = 0.75;
var GLOW_MAX_OFFSET = 0.25;
var Glow = /** @class */ (function () {
    function Glow(_scrollbar) {
        this._scrollbar = _scrollbar;
        this._canvas = document.createElement('canvas');
        this._ctx = this._canvas.getContext('2d');
        (0,_utils_set_style__WEBPACK_IMPORTED_MODULE_1__.setStyle)(this._canvas, {
            position: 'absolute',
            top: 0,
            left: 0,
            width: '100%',
            height: '100%',
            display: 'none',
        });
    }
    Glow.prototype.mount = function () {
        this._scrollbar.containerEl.appendChild(this._canvas);
    };
    Glow.prototype.unmount = function () {
        if (this._canvas.parentNode) {
            this._canvas.parentNode.removeChild(this._canvas);
        }
    };
    Glow.prototype.adjust = function () {
        var size = this._scrollbar.size;
        var DPR = window.devicePixelRatio || 1;
        var nextWidth = size.container.width * DPR;
        var nextHeight = size.container.height * DPR;
        if (nextWidth === this._canvas.width && nextHeight === this._canvas.height) {
            return;
        }
        this._canvas.width = nextWidth;
        this._canvas.height = nextHeight;
        this._ctx.scale(DPR, DPR);
    };
    Glow.prototype.recordTouch = function (event) {
        var touch = event.touches[event.touches.length - 1];
        this._touchX = touch.clientX;
        this._touchY = touch.clientY;
    };
    Glow.prototype.render = function (_a, color) {
        var _b = _a.x, x = _b === void 0 ? 0 : _b, _c = _a.y, y = _c === void 0 ? 0 : _c;
        if (!x && !y) {
            (0,_utils_set_style__WEBPACK_IMPORTED_MODULE_1__.setStyle)(this._canvas, {
                display: 'none',
            });
            return;
        }
        (0,_utils_set_style__WEBPACK_IMPORTED_MODULE_1__.setStyle)(this._canvas, {
            display: 'block',
        });
        var size = this._scrollbar.size;
        this._ctx.clearRect(0, 0, size.container.width, size.container.height);
        this._ctx.fillStyle = color;
        this._renderX(x);
        this._renderY(y);
    };
    Glow.prototype._getMaxOverscroll = function () {
        var options = this._scrollbar.options.plugins.overscroll;
        return options && options.maxOverscroll ? options.maxOverscroll : 150;
    };
    Glow.prototype._renderX = function (strength) {
        var size = this._scrollbar.size;
        var maxOverscroll = this._getMaxOverscroll();
        var _a = size.container, width = _a.width, height = _a.height;
        var ctx = this._ctx;
        ctx.save();
        if (strength > 0) {
            // glow on right side
            // horizontally flip
            ctx.transform(-1, 0, 0, 1, width, 0);
        }
        var opacity = lodash_clamp__WEBPACK_IMPORTED_MODULE_0___default()(Math.abs(strength) / maxOverscroll, 0, GLOW_MAX_OPACITY);
        var startOffset = lodash_clamp__WEBPACK_IMPORTED_MODULE_0___default()(opacity, 0, GLOW_MAX_OFFSET) * width;
        // controll point
        var x = Math.abs(strength);
        var y = this._touchY || (height / 2);
        ctx.globalAlpha = opacity;
        ctx.beginPath();
        ctx.moveTo(0, -startOffset);
        ctx.quadraticCurveTo(x, y, 0, height + startOffset);
        ctx.fill();
        ctx.closePath();
        ctx.restore();
    };
    Glow.prototype._renderY = function (strength) {
        var size = this._scrollbar.size;
        var maxOverscroll = this._getMaxOverscroll();
        var _a = size.container, width = _a.width, height = _a.height;
        var ctx = this._ctx;
        ctx.save();
        if (strength > 0) {
            // glow on bottom side
            // vertically flip
            ctx.transform(1, 0, 0, -1, 0, height);
        }
        var opacity = lodash_clamp__WEBPACK_IMPORTED_MODULE_0___default()(Math.abs(strength) / maxOverscroll, 0, GLOW_MAX_OPACITY);
        var startOffset = lodash_clamp__WEBPACK_IMPORTED_MODULE_0___default()(opacity, 0, GLOW_MAX_OFFSET) * width;
        // controll point
        var x = this._touchX || (width / 2);
        var y = Math.abs(strength);
        ctx.globalAlpha = opacity;
        ctx.beginPath();
        ctx.moveTo(-startOffset, 0);
        ctx.quadraticCurveTo(x, y, width + startOffset, 0);
        ctx.fill();
        ctx.closePath();
        ctx.restore();
    };
    return Glow;
}());

//# sourceMappingURL=glow.js.map

/***/ }),

/***/ "./node_modules/smooth-scrollbar/plugins/overscroll/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/smooth-scrollbar/plugins/overscroll/index.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OverscrollEffect": () => (/* binding */ OverscrollEffect),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ "./node_modules/smooth-scrollbar/node_modules/tslib/tslib.es6.js");
/* harmony import */ var lodash_clamp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash.clamp */ "./node_modules/lodash.clamp/index.js");
/* harmony import */ var lodash_clamp__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_clamp__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash.debounce */ "./node_modules/lodash.debounce/index.js");
/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_debounce__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var smooth_scrollbar__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! smooth-scrollbar */ "./node_modules/smooth-scrollbar/index.js");
/* harmony import */ var _bounce__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bounce */ "./node_modules/smooth-scrollbar/plugins/overscroll/bounce.js");
/* harmony import */ var _glow__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./glow */ "./node_modules/smooth-scrollbar/plugins/overscroll/glow.js");






var OverscrollEffect;
(function (OverscrollEffect) {
    OverscrollEffect["BOUNCE"] = "bounce";
    OverscrollEffect["GLOW"] = "glow";
})(OverscrollEffect || (OverscrollEffect = {}));
var ALLOWED_EVENTS = /wheel|touch/;
var OverscrollPlugin = /** @class */ (function (_super) {
    (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__extends)(OverscrollPlugin, _super);
    function OverscrollPlugin() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._glow = new _glow__WEBPACK_IMPORTED_MODULE_4__.Glow(_this.scrollbar);
        _this._bounce = new _bounce__WEBPACK_IMPORTED_MODULE_3__.Bounce(_this.scrollbar);
        _this._wheelScrollBack = {
            x: false,
            y: false,
        };
        _this._lockWheel = {
            x: false,
            y: false,
        };
        _this._touching = false;
        _this._amplitude = {
            x: 0,
            y: 0,
        };
        _this._position = {
            x: 0,
            y: 0,
        };
        // since we can't detect whether user release touchpad
        // handle it with debounce is the best solution now, as a trade-off
        _this._releaseWheel = lodash_debounce__WEBPACK_IMPORTED_MODULE_1___default()(function () {
            _this._lockWheel.x = false;
            _this._lockWheel.y = false;
        }, 30);
        return _this;
    }
    Object.defineProperty(OverscrollPlugin.prototype, "_isWheelLocked", {
        get: function () {
            return this._lockWheel.x || this._lockWheel.y;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(OverscrollPlugin.prototype, "_enabled", {
        get: function () {
            return !!this.options.effect;
        },
        enumerable: true,
        configurable: true
    });
    OverscrollPlugin.prototype.onInit = function () {
        var _a = this, _glow = _a._glow, options = _a.options, scrollbar = _a.scrollbar;
        // observe
        var effect = options.effect;
        Object.defineProperty(options, 'effect', {
            get: function () {
                return effect;
            },
            set: function (val) {
                if (!val) {
                    effect = undefined;
                    return;
                }
                if (val !== OverscrollEffect.BOUNCE && val !== OverscrollEffect.GLOW) {
                    throw new TypeError("unknow overscroll effect: " + val);
                }
                effect = val;
                scrollbar.options.continuousScrolling = false;
                if (val === OverscrollEffect.GLOW) {
                    _glow.mount();
                    _glow.adjust();
                }
                else {
                    _glow.unmount();
                }
            },
        });
        options.effect = effect; // init
    };
    OverscrollPlugin.prototype.onUpdate = function () {
        if (this.options.effect === OverscrollEffect.GLOW) {
            this._glow.adjust();
        }
    };
    OverscrollPlugin.prototype.onRender = function (remainMomentum) {
        if (!this._enabled) {
            return;
        }
        if (this.scrollbar.options.continuousScrolling) {
            // turn off continuous scrolling
            this.scrollbar.options.continuousScrolling = false;
        }
        var nextX = remainMomentum.x, nextY = remainMomentum.y;
        // transfer remain momentum to overscroll
        if (!this._amplitude.x &&
            this._willOverscroll('x', remainMomentum.x)) {
            nextX = 0;
            this._absorbMomentum('x', remainMomentum.x);
        }
        if (!this._amplitude.y &&
            this._willOverscroll('y', remainMomentum.y)) {
            nextY = 0;
            this._absorbMomentum('y', remainMomentum.y);
        }
        this.scrollbar.setMomentum(nextX, nextY);
        this._render();
    };
    OverscrollPlugin.prototype.transformDelta = function (delta, fromEvent) {
        this._lastEventType = fromEvent.type;
        if (!this._enabled || !ALLOWED_EVENTS.test(fromEvent.type)) {
            return delta;
        }
        if (this._isWheelLocked && /wheel/.test(fromEvent.type)) {
            this._releaseWheel();
            if (this._willOverscroll('x', delta.x)) {
                delta.x = 0;
            }
            if (this._willOverscroll('y', delta.y)) {
                delta.y = 0;
            }
        }
        var nextX = delta.x, nextY = delta.y;
        if (this._willOverscroll('x', delta.x)) {
            nextX = 0;
            this._addAmplitude('x', delta.x);
        }
        if (this._willOverscroll('y', delta.y)) {
            nextY = 0;
            this._addAmplitude('y', delta.y);
        }
        switch (fromEvent.type) {
            case 'touchstart':
            case 'touchmove':
                this._touching = true;
                this._glow.recordTouch(fromEvent);
                break;
            case 'touchcancel':
            case 'touchend':
                this._touching = false;
                break;
        }
        return {
            x: nextX,
            y: nextY,
        };
    };
    OverscrollPlugin.prototype._willOverscroll = function (direction, delta) {
        if (!delta) {
            return false;
        }
        // away from origin
        if (this._position[direction]) {
            return true;
        }
        var offset = this.scrollbar.offset[direction];
        var limit = this.scrollbar.limit[direction];
        if (limit === 0) {
            return false;
        }
        // cond:
        //  1. next scrolling position is supposed to stay unchange
        //  2. current position is on the edge
        return lodash_clamp__WEBPACK_IMPORTED_MODULE_0___default()(offset + delta, 0, limit) === offset &&
            (offset === 0 || offset === limit);
    };
    OverscrollPlugin.prototype._absorbMomentum = function (direction, remainMomentum) {
        var _a = this, options = _a.options, _lastEventType = _a._lastEventType, _amplitude = _a._amplitude;
        if (!ALLOWED_EVENTS.test(_lastEventType)) {
            return;
        }
        _amplitude[direction] = lodash_clamp__WEBPACK_IMPORTED_MODULE_0___default()(remainMomentum, -options.maxOverscroll, options.maxOverscroll);
    };
    OverscrollPlugin.prototype._addAmplitude = function (direction, delta) {
        var _a = this, options = _a.options, scrollbar = _a.scrollbar, _amplitude = _a._amplitude, _position = _a._position;
        var currentAmp = _amplitude[direction];
        var isOpposite = delta * currentAmp < 0;
        var friction;
        if (isOpposite) {
            // opposite direction
            friction = 0;
        }
        else {
            friction = this._wheelScrollBack[direction] ?
                1 : Math.abs(currentAmp / options.maxOverscroll);
        }
        var amp = currentAmp + delta * (1 - friction);
        _amplitude[direction] = scrollbar.offset[direction] === 0 ?
            /*    top | left  */ lodash_clamp__WEBPACK_IMPORTED_MODULE_0___default()(amp, -options.maxOverscroll, 0) :
            /* bottom | right */ lodash_clamp__WEBPACK_IMPORTED_MODULE_0___default()(amp, 0, options.maxOverscroll);
        if (isOpposite) {
            // scroll back
            _position[direction] = _amplitude[direction];
        }
    };
    OverscrollPlugin.prototype._render = function () {
        var _a = this, options = _a.options, _amplitude = _a._amplitude, _position = _a._position;
        if (this._enabled &&
            (_amplitude.x || _amplitude.y || _position.x || _position.y)) {
            var nextX = this._nextAmp('x');
            var nextY = this._nextAmp('y');
            _amplitude.x = nextX.amplitude;
            _position.x = nextX.position;
            _amplitude.y = nextY.amplitude;
            _position.y = nextY.position;
            switch (options.effect) {
                case OverscrollEffect.BOUNCE:
                    this._bounce.render(_position);
                    break;
                case OverscrollEffect.GLOW:
                    this._glow.render(_position, this.options.glowColor);
                    break;
            }
            if (typeof options.onScroll === 'function') {
                options.onScroll.call(this, (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__assign)({}, _position));
            }
        }
    };
    OverscrollPlugin.prototype._nextAmp = function (direction) {
        var _a = this, options = _a.options, _amplitude = _a._amplitude, _position = _a._position;
        var t = 1 - options.damping;
        var amp = _amplitude[direction];
        var pos = _position[direction];
        var nextAmp = this._touching ? amp : (amp * t | 0);
        var distance = nextAmp - pos;
        var nextPos = pos + distance - (distance * t | 0);
        if (!this._touching && Math.abs(nextPos) < Math.abs(pos)) {
            this._wheelScrollBack[direction] = true;
        }
        if (this._wheelScrollBack[direction] && Math.abs(nextPos) <= 1) {
            this._wheelScrollBack[direction] = false;
            this._lockWheel[direction] = true;
        }
        return {
            amplitude: nextAmp,
            position: nextPos,
        };
    };
    OverscrollPlugin.pluginName = 'overscroll';
    OverscrollPlugin.defaultOptions = {
        effect: OverscrollEffect.BOUNCE,
        onScroll: undefined,
        damping: 0.2,
        maxOverscroll: 150,
        glowColor: '#87ceeb',
    };
    return OverscrollPlugin;
}(smooth_scrollbar__WEBPACK_IMPORTED_MODULE_2__.ScrollbarPlugin));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (OverscrollPlugin);
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/smooth-scrollbar/polyfills.js":
/*!****************************************************!*\
  !*** ./node_modules/smooth-scrollbar/polyfills.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var core_js_es_map__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/es/map */ "./node_modules/core-js/es/map/index.js");
/* harmony import */ var core_js_es_map__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_es_map__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_es_set__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/es/set */ "./node_modules/core-js/es/set/index.js");
/* harmony import */ var core_js_es_set__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_es_set__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_es_weak_map__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/es/weak-map */ "./node_modules/core-js/es/weak-map/index.js");
/* harmony import */ var core_js_es_weak_map__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_es_weak_map__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_es_array_from__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/es/array/from */ "./node_modules/core-js/es/array/from.js");
/* harmony import */ var core_js_es_array_from__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_es_array_from__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_es_object_assign__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/es/object/assign */ "./node_modules/core-js/es/object/assign.js");
/* harmony import */ var core_js_es_object_assign__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_es_object_assign__WEBPACK_IMPORTED_MODULE_4__);





//# sourceMappingURL=polyfills.js.map

/***/ }),

/***/ "./node_modules/smooth-scrollbar/scrollbar.js":
/*!****************************************************!*\
  !*** ./node_modules/smooth-scrollbar/scrollbar.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Scrollbar": () => (/* binding */ Scrollbar),
/* harmony export */   "scrollbarMap": () => (/* binding */ scrollbarMap)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! tslib */ "./node_modules/smooth-scrollbar/node_modules/tslib/tslib.es6.js");
/* harmony import */ var lodash_clamp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash.clamp */ "./node_modules/lodash.clamp/index.js");
/* harmony import */ var lodash_clamp__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_clamp__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./options */ "./node_modules/smooth-scrollbar/options.js");
/* harmony import */ var _utils___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/ */ "./node_modules/smooth-scrollbar/utils/index.js");
/* harmony import */ var _decorators___WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./decorators/ */ "./node_modules/smooth-scrollbar/decorators/index.js");
/* harmony import */ var _track___WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./track/ */ "./node_modules/smooth-scrollbar/track/index.js");
/* harmony import */ var _geometry___WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./geometry/ */ "./node_modules/smooth-scrollbar/geometry/index.js");
/* harmony import */ var _scrolling___WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./scrolling/ */ "./node_modules/smooth-scrollbar/scrolling/index.js");
/* harmony import */ var _plugin__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./plugin */ "./node_modules/smooth-scrollbar/plugin.js");
/* harmony import */ var _events___WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./events/ */ "./node_modules/smooth-scrollbar/events/index.js");










// DO NOT use WeakMap here
// .getAll() methods requires `scrollbarMap.values()`
var scrollbarMap = new Map();
var Scrollbar = /** @class */ (function () {
    function Scrollbar(containerEl, options) {
        var _this = this;
        /**
         * Current scrolling offsets
         */
        this.offset = {
            x: 0,
            y: 0,
        };
        /**
         * Max-allowed scrolling offsets
         */
        this.limit = {
            x: Infinity,
            y: Infinity,
        };
        /**
         * Container bounding rect
         */
        this.bounding = {
            top: 0,
            right: 0,
            bottom: 0,
            left: 0,
        };
        // private _observer: ResizeObserver;
        this._plugins = [];
        this._momentum = { x: 0, y: 0 };
        this._listeners = new Set();
        this.containerEl = containerEl;
        var contentEl = this.contentEl = document.createElement('div');
        this.options = new _options__WEBPACK_IMPORTED_MODULE_1__.Options(options);
        // mark as a scroll element
        containerEl.setAttribute('data-scrollbar', 'true');
        // make container focusable
        containerEl.setAttribute('tabindex', '-1');
        (0,_utils___WEBPACK_IMPORTED_MODULE_2__.setStyle)(containerEl, {
            overflow: 'hidden',
            outline: 'none',
        });
        // enable touch event capturing in IE, see:
        // https://github.com/idiotWu/smooth-scrollbar/issues/39
        if (window.navigator.msPointerEnabled) {
            containerEl.style.msTouchAction = 'none';
        }
        // mount content
        contentEl.className = 'scroll-content';
        Array.from(containerEl.childNodes).forEach(function (node) {
            contentEl.appendChild(node);
        });
        containerEl.appendChild(contentEl);
        // attach track
        this.track = new _track___WEBPACK_IMPORTED_MODULE_4__.TrackController(this);
        // initial measuring
        this.size = this.getSize();
        // init plugins
        this._plugins = (0,_plugin__WEBPACK_IMPORTED_MODULE_7__.initPlugins)(this, this.options.plugins);
        // preserve scroll offset
        var scrollLeft = containerEl.scrollLeft, scrollTop = containerEl.scrollTop;
        containerEl.scrollLeft = containerEl.scrollTop = 0;
        this.setPosition(scrollLeft, scrollTop, {
            withoutCallbacks: true,
        });
        // FIXME: update typescript
        var ResizeObserver = window.ResizeObserver;
        // observe
        if (typeof ResizeObserver === 'function') {
            this._observer = new ResizeObserver(function () {
                _this.update();
            });
            this._observer.observe(contentEl);
        }
        scrollbarMap.set(containerEl, this);
        // wait for DOM ready
        requestAnimationFrame(function () {
            _this._init();
        });
    }
    Object.defineProperty(Scrollbar.prototype, "parent", {
        /**
         * Parent scrollbar
         */
        get: function () {
            var elem = this.containerEl.parentElement;
            while (elem) {
                var parentScrollbar = scrollbarMap.get(elem);
                if (parentScrollbar) {
                    return parentScrollbar;
                }
                elem = elem.parentElement;
            }
            return null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Scrollbar.prototype, "scrollTop", {
        /**
         * Gets or sets `scrollbar.offset.y`
         */
        get: function () {
            return this.offset.y;
        },
        set: function (y) {
            this.setPosition(this.scrollLeft, y);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Scrollbar.prototype, "scrollLeft", {
        /**
         * Gets or sets `scrollbar.offset.x`
         */
        get: function () {
            return this.offset.x;
        },
        set: function (x) {
            this.setPosition(x, this.scrollTop);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns the size of the scrollbar container element
     * and the content wrapper element
     */
    Scrollbar.prototype.getSize = function () {
        return (0,_geometry___WEBPACK_IMPORTED_MODULE_5__.getSize)(this);
    };
    /**
     * Forces scrollbar to update geometry infomation.
     *
     * By default, scrollbars are automatically updated with `100ms` debounce (or `MutationObserver` fires).
     * You can call this method to force an update when you modified contents
     */
    Scrollbar.prototype.update = function () {
        (0,_geometry___WEBPACK_IMPORTED_MODULE_5__.update)(this);
        this._plugins.forEach(function (plugin) {
            plugin.onUpdate();
        });
    };
    /**
     * Checks if an element is visible in the current view area
     */
    Scrollbar.prototype.isVisible = function (elem) {
        return (0,_geometry___WEBPACK_IMPORTED_MODULE_5__.isVisible)(this, elem);
    };
    /**
     * Sets the scrollbar to the given offset without easing
     */
    Scrollbar.prototype.setPosition = function (x, y, options) {
        var _this = this;
        if (x === void 0) { x = this.offset.x; }
        if (y === void 0) { y = this.offset.y; }
        if (options === void 0) { options = {}; }
        var status = (0,_scrolling___WEBPACK_IMPORTED_MODULE_6__.setPosition)(this, x, y);
        if (!status || options.withoutCallbacks) {
            return;
        }
        this._listeners.forEach(function (fn) {
            fn.call(_this, status);
        });
    };
    /**
     * Scrolls to given position with easing function
     */
    Scrollbar.prototype.scrollTo = function (x, y, duration, options) {
        if (x === void 0) { x = this.offset.x; }
        if (y === void 0) { y = this.offset.y; }
        if (duration === void 0) { duration = 0; }
        if (options === void 0) { options = {}; }
        (0,_scrolling___WEBPACK_IMPORTED_MODULE_6__.scrollTo)(this, x, y, duration, options);
    };
    /**
     * Scrolls the target element into visible area of scrollbar,
     * likes the DOM method `element.scrollIntoView().
     */
    Scrollbar.prototype.scrollIntoView = function (elem, options) {
        if (options === void 0) { options = {}; }
        (0,_scrolling___WEBPACK_IMPORTED_MODULE_6__.scrollIntoView)(this, elem, options);
    };
    /**
     * Adds scrolling listener
     */
    Scrollbar.prototype.addListener = function (fn) {
        if (typeof fn !== 'function') {
            throw new TypeError('[smooth-scrollbar] scrolling listener should be a function');
        }
        this._listeners.add(fn);
    };
    /**
     * Removes listener previously registered with `scrollbar.addListener()`
     */
    Scrollbar.prototype.removeListener = function (fn) {
        this._listeners.delete(fn);
    };
    /**
     * Adds momentum and applys delta transformers.
     */
    Scrollbar.prototype.addTransformableMomentum = function (x, y, fromEvent, callback) {
        this._updateDebounced();
        var finalDelta = this._plugins.reduce(function (delta, plugin) {
            return plugin.transformDelta(delta, fromEvent) || delta;
        }, { x: x, y: y });
        var willScroll = !this._shouldPropagateMomentum(finalDelta.x, finalDelta.y);
        if (willScroll) {
            this.addMomentum(finalDelta.x, finalDelta.y);
        }
        if (callback) {
            callback.call(this, willScroll);
        }
    };
    /**
     * Increases scrollbar's momentum
     */
    Scrollbar.prototype.addMomentum = function (x, y) {
        this.setMomentum(this._momentum.x + x, this._momentum.y + y);
    };
    /**
     * Sets scrollbar's momentum to given value
     */
    Scrollbar.prototype.setMomentum = function (x, y) {
        if (this.limit.x === 0) {
            x = 0;
        }
        if (this.limit.y === 0) {
            y = 0;
        }
        if (this.options.renderByPixels) {
            x = Math.round(x);
            y = Math.round(y);
        }
        this._momentum.x = x;
        this._momentum.y = y;
    };
    /**
     * Update options for specific plugin
     *
     * @param pluginName Name of the plugin
     * @param [options] An object includes the properties that you want to update
     */
    Scrollbar.prototype.updatePluginOptions = function (pluginName, options) {
        this._plugins.forEach(function (plugin) {
            if (plugin.name === pluginName) {
                Object.assign(plugin.options, options);
            }
        });
    };
    Scrollbar.prototype.destroy = function () {
        var _a = this, containerEl = _a.containerEl, contentEl = _a.contentEl;
        (0,_utils___WEBPACK_IMPORTED_MODULE_2__.clearEventsOn)(this);
        this._listeners.clear();
        this.setMomentum(0, 0);
        cancelAnimationFrame(this._renderID);
        if (this._observer) {
            this._observer.disconnect();
        }
        scrollbarMap.delete(this.containerEl);
        // restore contents
        var childNodes = Array.from(contentEl.childNodes);
        while (containerEl.firstChild) {
            containerEl.removeChild(containerEl.firstChild);
        }
        childNodes.forEach(function (el) {
            containerEl.appendChild(el);
        });
        // reset scroll position
        (0,_utils___WEBPACK_IMPORTED_MODULE_2__.setStyle)(containerEl, {
            overflow: '',
        });
        containerEl.scrollTop = this.scrollTop;
        containerEl.scrollLeft = this.scrollLeft;
        // invoke plugin.onDestroy
        this._plugins.forEach(function (plugin) {
            plugin.onDestroy();
        });
        this._plugins.length = 0;
    };
    Scrollbar.prototype._init = function () {
        var _this = this;
        this.update();
        // init evet handlers
        Object.keys(_events___WEBPACK_IMPORTED_MODULE_8__).forEach(function (prop) {
            _events___WEBPACK_IMPORTED_MODULE_8__[prop](_this);
        });
        // invoke `plugin.onInit`
        this._plugins.forEach(function (plugin) {
            plugin.onInit();
        });
        this._render();
    };
    Scrollbar.prototype._updateDebounced = function () {
        this.update();
    };
    // check whether to propagate monmentum to parent scrollbar
    // the following situations are considered as `true`:
    //         1. continuous scrolling is enabled (automatically disabled when overscroll is enabled)
    //         2. scrollbar reaches one side and is not about to scroll on the other direction
    Scrollbar.prototype._shouldPropagateMomentum = function (deltaX, deltaY) {
        if (deltaX === void 0) { deltaX = 0; }
        if (deltaY === void 0) { deltaY = 0; }
        var _a = this, options = _a.options, offset = _a.offset, limit = _a.limit;
        if (!options.continuousScrolling)
            return false;
        // force an update when scrollbar is "unscrollable", see #106
        if (limit.x === 0 && limit.y === 0) {
            this._updateDebounced();
        }
        var destX = lodash_clamp__WEBPACK_IMPORTED_MODULE_0___default()(deltaX + offset.x, 0, limit.x);
        var destY = lodash_clamp__WEBPACK_IMPORTED_MODULE_0___default()(deltaY + offset.y, 0, limit.y);
        var res = true;
        // offsets are not about to change
        // `&=` operator is not allowed for boolean types
        res = res && (destX === offset.x);
        res = res && (destY === offset.y);
        // current offsets are on the edge
        res = res && (offset.x === limit.x || offset.x === 0 || offset.y === limit.y || offset.y === 0);
        return res;
    };
    Scrollbar.prototype._render = function () {
        var _momentum = this._momentum;
        if (_momentum.x || _momentum.y) {
            var nextX = this._nextTick('x');
            var nextY = this._nextTick('y');
            _momentum.x = nextX.momentum;
            _momentum.y = nextY.momentum;
            this.setPosition(nextX.position, nextY.position);
        }
        var remain = (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__assign)({}, this._momentum);
        this._plugins.forEach(function (plugin) {
            plugin.onRender(remain);
        });
        this._renderID = requestAnimationFrame(this._render.bind(this));
    };
    Scrollbar.prototype._nextTick = function (direction) {
        var _a = this, options = _a.options, offset = _a.offset, _momentum = _a._momentum;
        var current = offset[direction];
        var remain = _momentum[direction];
        if (Math.abs(remain) <= 0.1) {
            return {
                momentum: 0,
                position: current + remain,
            };
        }
        var nextMomentum = remain * (1 - options.damping);
        if (options.renderByPixels) {
            nextMomentum |= 0;
        }
        return {
            momentum: nextMomentum,
            position: current + remain - nextMomentum,
        };
    };
    (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__decorate)([
        (0,_decorators___WEBPACK_IMPORTED_MODULE_3__.debounce)(100, { leading: true })
    ], Scrollbar.prototype, "_updateDebounced", null);
    return Scrollbar;
}());

//# sourceMappingURL=scrollbar.js.map

/***/ }),

/***/ "./node_modules/smooth-scrollbar/scrolling/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/smooth-scrollbar/scrolling/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "scrollIntoView": () => (/* reexport safe */ _scroll_into_view__WEBPACK_IMPORTED_MODULE_2__.scrollIntoView),
/* harmony export */   "scrollTo": () => (/* reexport safe */ _scroll_to__WEBPACK_IMPORTED_MODULE_1__.scrollTo),
/* harmony export */   "setPosition": () => (/* reexport safe */ _set_position__WEBPACK_IMPORTED_MODULE_0__.setPosition)
/* harmony export */ });
/* harmony import */ var _set_position__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./set-position */ "./node_modules/smooth-scrollbar/scrolling/set-position.js");
/* harmony import */ var _scroll_to__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scroll-to */ "./node_modules/smooth-scrollbar/scrolling/scroll-to.js");
/* harmony import */ var _scroll_into_view__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scroll-into-view */ "./node_modules/smooth-scrollbar/scrolling/scroll-into-view.js");



//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/smooth-scrollbar/scrolling/scroll-into-view.js":
/*!*********************************************************************!*\
  !*** ./node_modules/smooth-scrollbar/scrolling/scroll-into-view.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "scrollIntoView": () => (/* binding */ scrollIntoView)
/* harmony export */ });
/* harmony import */ var lodash_clamp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash.clamp */ "./node_modules/lodash.clamp/index.js");
/* harmony import */ var lodash_clamp__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_clamp__WEBPACK_IMPORTED_MODULE_0__);

function scrollIntoView(scrollbar, elem, _a) {
    var _b = _a === void 0 ? {} : _a, _c = _b.alignToTop, alignToTop = _c === void 0 ? true : _c, _d = _b.onlyScrollIfNeeded, onlyScrollIfNeeded = _d === void 0 ? false : _d, _e = _b.offsetTop, offsetTop = _e === void 0 ? 0 : _e, _f = _b.offsetLeft, offsetLeft = _f === void 0 ? 0 : _f, _g = _b.offsetBottom, offsetBottom = _g === void 0 ? 0 : _g;
    var containerEl = scrollbar.containerEl, bounding = scrollbar.bounding, offset = scrollbar.offset, limit = scrollbar.limit;
    if (!elem || !containerEl.contains(elem))
        return;
    var targetBounding = elem.getBoundingClientRect();
    if (onlyScrollIfNeeded && scrollbar.isVisible(elem))
        return;
    var delta = alignToTop ? targetBounding.top - bounding.top - offsetTop : targetBounding.bottom - bounding.bottom + offsetBottom;
    scrollbar.setMomentum(targetBounding.left - bounding.left - offsetLeft, lodash_clamp__WEBPACK_IMPORTED_MODULE_0___default()(delta, -offset.y, limit.y - offset.y));
}
//# sourceMappingURL=scroll-into-view.js.map

/***/ }),

/***/ "./node_modules/smooth-scrollbar/scrolling/scroll-to.js":
/*!**************************************************************!*\
  !*** ./node_modules/smooth-scrollbar/scrolling/scroll-to.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "scrollTo": () => (/* binding */ scrollTo)
/* harmony export */ });
/* harmony import */ var lodash_clamp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash.clamp */ "./node_modules/lodash.clamp/index.js");
/* harmony import */ var lodash_clamp__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_clamp__WEBPACK_IMPORTED_MODULE_0__);

var animationIDStorage = new WeakMap();
function scrollTo(scrollbar, x, y, duration, _a) {
    if (duration === void 0) { duration = 0; }
    var _b = _a === void 0 ? {} : _a, _c = _b.easing, easing = _c === void 0 ? defaultEasing : _c, callback = _b.callback;
    var options = scrollbar.options, offset = scrollbar.offset, limit = scrollbar.limit;
    if (options.renderByPixels) {
        // ensure resolved with integer
        x = Math.round(x);
        y = Math.round(y);
    }
    var startX = offset.x;
    var startY = offset.y;
    var disX = lodash_clamp__WEBPACK_IMPORTED_MODULE_0___default()(x, 0, limit.x) - startX;
    var disY = lodash_clamp__WEBPACK_IMPORTED_MODULE_0___default()(y, 0, limit.y) - startY;
    var start = Date.now();
    function scroll() {
        var elapse = Date.now() - start;
        var progress = duration ? easing(Math.min(elapse / duration, 1)) : 1;
        scrollbar.setPosition(startX + disX * progress, startY + disY * progress);
        if (elapse >= duration) {
            if (typeof callback === 'function') {
                callback.call(scrollbar);
            }
        }
        else {
            var animationID = requestAnimationFrame(scroll);
            animationIDStorage.set(scrollbar, animationID);
        }
    }
    cancelAnimationFrame(animationIDStorage.get(scrollbar));
    scroll();
}
/**
 * easeOutCubic
 */
function defaultEasing(t) {
    return Math.pow((t - 1), 3) + 1;
}
//# sourceMappingURL=scroll-to.js.map

/***/ }),

/***/ "./node_modules/smooth-scrollbar/scrolling/set-position.js":
/*!*****************************************************************!*\
  !*** ./node_modules/smooth-scrollbar/scrolling/set-position.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "setPosition": () => (/* binding */ setPosition)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ "./node_modules/smooth-scrollbar/node_modules/tslib/tslib.es6.js");
/* harmony import */ var lodash_clamp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash.clamp */ "./node_modules/lodash.clamp/index.js");
/* harmony import */ var lodash_clamp__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_clamp__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utils___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/ */ "./node_modules/smooth-scrollbar/utils/index.js");



function setPosition(scrollbar, x, y) {
    var options = scrollbar.options, offset = scrollbar.offset, limit = scrollbar.limit, track = scrollbar.track, contentEl = scrollbar.contentEl;
    if (options.renderByPixels) {
        x = Math.round(x);
        y = Math.round(y);
    }
    x = lodash_clamp__WEBPACK_IMPORTED_MODULE_0___default()(x, 0, limit.x);
    y = lodash_clamp__WEBPACK_IMPORTED_MODULE_0___default()(y, 0, limit.y);
    // position changed -> show track for 300ms
    if (x !== offset.x)
        track.xAxis.show();
    if (y !== offset.y)
        track.yAxis.show();
    if (!options.alwaysShowTracks) {
        track.autoHideOnIdle();
    }
    if (x === offset.x && y === offset.y) {
        return null;
    }
    offset.x = x;
    offset.y = y;
    (0,_utils___WEBPACK_IMPORTED_MODULE_1__.setStyle)(contentEl, {
        '-transform': "translate3d(" + -x + "px, " + -y + "px, 0)",
    });
    track.update();
    return {
        offset: (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, offset),
        limit: (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, limit),
    };
}
//# sourceMappingURL=set-position.js.map

/***/ }),

/***/ "./node_modules/smooth-scrollbar/style.js":
/*!************************************************!*\
  !*** ./node_modules/smooth-scrollbar/style.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "attachStyle": () => (/* binding */ attachStyle),
/* harmony export */   "detachStyle": () => (/* binding */ detachStyle)
/* harmony export */ });
var TRACK_BG = 'rgba(222, 222, 222, .75)';
var THUMB_BG = 'rgba(0, 0, 0, .5)';
// sets content's display type to `flow-root` to suppress margin collapsing
var SCROLLBAR_STYLE = "\n[data-scrollbar] {\n  display: block;\n  position: relative;\n}\n\n.scroll-content {\n  display: flow-root;\n  -webkit-transform: translate3d(0, 0, 0);\n          transform: translate3d(0, 0, 0);\n}\n\n.scrollbar-track {\n  position: absolute;\n  opacity: 0;\n  z-index: 1;\n  background: " + TRACK_BG + ";\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n  -webkit-transition: opacity 0.5s 0.5s ease-out;\n          transition: opacity 0.5s 0.5s ease-out;\n}\n.scrollbar-track.show,\n.scrollbar-track:hover {\n  opacity: 1;\n  -webkit-transition-delay: 0s;\n          transition-delay: 0s;\n}\n\n.scrollbar-track-x {\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 8px;\n}\n.scrollbar-track-y {\n  top: 0;\n  right: 0;\n  width: 8px;\n  height: 100%;\n}\n.scrollbar-thumb {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 8px;\n  height: 8px;\n  background: " + THUMB_BG + ";\n  border-radius: 4px;\n}\n";
var STYLE_ID = 'smooth-scrollbar-style';
var isStyleAttached = false;
function attachStyle() {
    if (isStyleAttached || typeof window === 'undefined') {
        return;
    }
    var styleEl = document.createElement('style');
    styleEl.id = STYLE_ID;
    styleEl.textContent = SCROLLBAR_STYLE;
    if (document.head) {
        document.head.appendChild(styleEl);
    }
    isStyleAttached = true;
}
function detachStyle() {
    if (!isStyleAttached || typeof window === 'undefined') {
        return;
    }
    var styleEl = document.getElementById(STYLE_ID);
    if (!styleEl || !styleEl.parentNode) {
        return;
    }
    styleEl.parentNode.removeChild(styleEl);
    isStyleAttached = false;
}
//# sourceMappingURL=style.js.map

/***/ }),

/***/ "./node_modules/smooth-scrollbar/track/direction.js":
/*!**********************************************************!*\
  !*** ./node_modules/smooth-scrollbar/track/direction.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TrackDirection": () => (/* binding */ TrackDirection)
/* harmony export */ });
var TrackDirection;
(function (TrackDirection) {
    TrackDirection["X"] = "x";
    TrackDirection["Y"] = "y";
})(TrackDirection || (TrackDirection = {}));
//# sourceMappingURL=direction.js.map

/***/ }),

/***/ "./node_modules/smooth-scrollbar/track/index.js":
/*!******************************************************!*\
  !*** ./node_modules/smooth-scrollbar/track/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TrackController": () => (/* binding */ TrackController)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ "./node_modules/smooth-scrollbar/node_modules/tslib/tslib.es6.js");
/* harmony import */ var _track__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./track */ "./node_modules/smooth-scrollbar/track/track.js");
/* harmony import */ var _direction__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./direction */ "./node_modules/smooth-scrollbar/track/direction.js");
/* harmony import */ var _decorators___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../decorators/ */ "./node_modules/smooth-scrollbar/decorators/index.js");




var TrackController = /** @class */ (function () {
    function TrackController(_scrollbar) {
        this._scrollbar = _scrollbar;
        var thumbMinSize = _scrollbar.options.thumbMinSize;
        this.xAxis = new _track__WEBPACK_IMPORTED_MODULE_0__.ScrollbarTrack(_direction__WEBPACK_IMPORTED_MODULE_1__.TrackDirection.X, thumbMinSize);
        this.yAxis = new _track__WEBPACK_IMPORTED_MODULE_0__.ScrollbarTrack(_direction__WEBPACK_IMPORTED_MODULE_1__.TrackDirection.Y, thumbMinSize);
        this.xAxis.attachTo(_scrollbar.containerEl);
        this.yAxis.attachTo(_scrollbar.containerEl);
        if (_scrollbar.options.alwaysShowTracks) {
            this.xAxis.show();
            this.yAxis.show();
        }
    }
    /**
     * Updates track appearance
     */
    TrackController.prototype.update = function () {
        var _a = this._scrollbar, size = _a.size, offset = _a.offset;
        this.xAxis.update(offset.x, size.container.width, size.content.width);
        this.yAxis.update(offset.y, size.container.height, size.content.height);
    };
    /**
     * Automatically hide tracks when scrollbar is in idle state
     */
    TrackController.prototype.autoHideOnIdle = function () {
        if (this._scrollbar.options.alwaysShowTracks) {
            return;
        }
        this.xAxis.hide();
        this.yAxis.hide();
    };
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
        (0,_decorators___WEBPACK_IMPORTED_MODULE_2__.debounce)(300)
    ], TrackController.prototype, "autoHideOnIdle", null);
    return TrackController;
}());

//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/smooth-scrollbar/track/thumb.js":
/*!******************************************************!*\
  !*** ./node_modules/smooth-scrollbar/track/thumb.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ScrollbarThumb": () => (/* binding */ ScrollbarThumb)
/* harmony export */ });
/* harmony import */ var _direction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./direction */ "./node_modules/smooth-scrollbar/track/direction.js");
/* harmony import */ var _utils___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/ */ "./node_modules/smooth-scrollbar/utils/index.js");


var ScrollbarThumb = /** @class */ (function () {
    function ScrollbarThumb(_direction, _minSize) {
        if (_minSize === void 0) { _minSize = 0; }
        this._direction = _direction;
        this._minSize = _minSize;
        /**
         * Thumb element
         */
        this.element = document.createElement('div');
        /**
         * Display size of the thumb
         * will always be greater than `scrollbar.options.thumbMinSize`
         */
        this.displaySize = 0;
        /**
         * Actual size of the thumb
         */
        this.realSize = 0;
        /**
         * Thumb offset to the top
         */
        this.offset = 0;
        this.element.className = "scrollbar-thumb scrollbar-thumb-" + _direction;
    }
    /**
     * Attach to track element
     *
     * @param trackEl Track element
     */
    ScrollbarThumb.prototype.attachTo = function (trackEl) {
        trackEl.appendChild(this.element);
    };
    ScrollbarThumb.prototype.update = function (scrollOffset, containerSize, pageSize) {
        // calculate thumb size
        // pageSize > containerSize -> scrollable
        this.realSize = Math.min(containerSize / pageSize, 1) * containerSize;
        this.displaySize = Math.max(this.realSize, this._minSize);
        // calculate thumb offset
        this.offset = scrollOffset / pageSize * (containerSize + (this.realSize - this.displaySize));
        (0,_utils___WEBPACK_IMPORTED_MODULE_1__.setStyle)(this.element, this._getStyle());
    };
    ScrollbarThumb.prototype._getStyle = function () {
        switch (this._direction) {
            case _direction__WEBPACK_IMPORTED_MODULE_0__.TrackDirection.X:
                return {
                    width: this.displaySize + "px",
                    '-transform': "translate3d(" + this.offset + "px, 0, 0)",
                };
            case _direction__WEBPACK_IMPORTED_MODULE_0__.TrackDirection.Y:
                return {
                    height: this.displaySize + "px",
                    '-transform': "translate3d(0, " + this.offset + "px, 0)",
                };
            default:
                return null;
        }
    };
    return ScrollbarThumb;
}());

//# sourceMappingURL=thumb.js.map

/***/ }),

/***/ "./node_modules/smooth-scrollbar/track/track.js":
/*!******************************************************!*\
  !*** ./node_modules/smooth-scrollbar/track/track.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ScrollbarTrack": () => (/* binding */ ScrollbarTrack)
/* harmony export */ });
/* harmony import */ var _thumb__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./thumb */ "./node_modules/smooth-scrollbar/track/thumb.js");
/* harmony import */ var _utils___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/ */ "./node_modules/smooth-scrollbar/utils/index.js");


var ScrollbarTrack = /** @class */ (function () {
    function ScrollbarTrack(direction, thumbMinSize) {
        if (thumbMinSize === void 0) { thumbMinSize = 0; }
        /**
         * Track element
         */
        this.element = document.createElement('div');
        this._isShown = false;
        this.element.className = "scrollbar-track scrollbar-track-" + direction;
        this.thumb = new _thumb__WEBPACK_IMPORTED_MODULE_0__.ScrollbarThumb(direction, thumbMinSize);
        this.thumb.attachTo(this.element);
    }
    /**
     * Attach to scrollbar container element
     *
     * @param scrollbarContainer Scrollbar container element
     */
    ScrollbarTrack.prototype.attachTo = function (scrollbarContainer) {
        scrollbarContainer.appendChild(this.element);
    };
    /**
     * Show track immediately
     */
    ScrollbarTrack.prototype.show = function () {
        if (this._isShown) {
            return;
        }
        this._isShown = true;
        this.element.classList.add('show');
    };
    /**
     * Hide track immediately
     */
    ScrollbarTrack.prototype.hide = function () {
        if (!this._isShown) {
            return;
        }
        this._isShown = false;
        this.element.classList.remove('show');
    };
    ScrollbarTrack.prototype.update = function (scrollOffset, containerSize, pageSize) {
        (0,_utils___WEBPACK_IMPORTED_MODULE_1__.setStyle)(this.element, {
            display: pageSize <= containerSize ? 'none' : 'block',
        });
        this.thumb.update(scrollOffset, containerSize, pageSize);
    };
    return ScrollbarTrack;
}());

//# sourceMappingURL=track.js.map

/***/ }),

/***/ "./node_modules/smooth-scrollbar/utils/event-hub.js":
/*!**********************************************************!*\
  !*** ./node_modules/smooth-scrollbar/utils/event-hub.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "clearEventsOn": () => (/* binding */ clearEventsOn),
/* harmony export */   "eventScope": () => (/* binding */ eventScope)
/* harmony export */ });
var eventListenerOptions;
var eventMap = new WeakMap();
function getOptions() {
    if (eventListenerOptions !== undefined) {
        return eventListenerOptions;
    }
    var supportPassiveEvent = false;
    try {
        var noop = function () { };
        var options = Object.defineProperty({}, 'passive', {
            get: function () {
                supportPassiveEvent = true;
            },
        });
        window.addEventListener('testPassive', noop, options);
        window.removeEventListener('testPassive', noop, options);
    }
    catch (e) { }
    eventListenerOptions = supportPassiveEvent ? { passive: false } : false;
    return eventListenerOptions;
}
function eventScope(scrollbar) {
    var configs = eventMap.get(scrollbar) || [];
    eventMap.set(scrollbar, configs);
    return function addEvent(elem, events, fn) {
        function handler(event) {
            // ignore default prevented events
            if (event.defaultPrevented) {
                return;
            }
            fn(event);
        }
        events.split(/\s+/g).forEach(function (eventName) {
            configs.push({ elem: elem, eventName: eventName, handler: handler });
            elem.addEventListener(eventName, handler, getOptions());
        });
    };
}
function clearEventsOn(scrollbar) {
    var configs = eventMap.get(scrollbar);
    if (!configs) {
        return;
    }
    configs.forEach(function (_a) {
        var elem = _a.elem, eventName = _a.eventName, handler = _a.handler;
        elem.removeEventListener(eventName, handler, getOptions());
    });
    eventMap.delete(scrollbar);
}
//# sourceMappingURL=event-hub.js.map

/***/ }),

/***/ "./node_modules/smooth-scrollbar/utils/get-pointer-data.js":
/*!*****************************************************************!*\
  !*** ./node_modules/smooth-scrollbar/utils/get-pointer-data.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getPointerData": () => (/* binding */ getPointerData)
/* harmony export */ });
/**
 * Get pointer/touch data
 */
function getPointerData(evt) {
    // if is touch event, return last item in touchList
    // else return original event
    return evt.touches ? evt.touches[evt.touches.length - 1] : evt;
}
//# sourceMappingURL=get-pointer-data.js.map

/***/ }),

/***/ "./node_modules/smooth-scrollbar/utils/get-position.js":
/*!*************************************************************!*\
  !*** ./node_modules/smooth-scrollbar/utils/get-position.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getPosition": () => (/* binding */ getPosition)
/* harmony export */ });
/* harmony import */ var _get_pointer_data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./get-pointer-data */ "./node_modules/smooth-scrollbar/utils/get-pointer-data.js");

/**
 * Get pointer/finger position
 */
function getPosition(evt) {
    var data = (0,_get_pointer_data__WEBPACK_IMPORTED_MODULE_0__.getPointerData)(evt);
    return {
        x: data.clientX,
        y: data.clientY,
    };
}
//# sourceMappingURL=get-position.js.map

/***/ }),

/***/ "./node_modules/smooth-scrollbar/utils/index.js":
/*!******************************************************!*\
  !*** ./node_modules/smooth-scrollbar/utils/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TouchRecord": () => (/* reexport safe */ _touch_record__WEBPACK_IMPORTED_MODULE_5__.TouchRecord),
/* harmony export */   "Tracker": () => (/* reexport safe */ _touch_record__WEBPACK_IMPORTED_MODULE_5__.Tracker),
/* harmony export */   "clearEventsOn": () => (/* reexport safe */ _event_hub__WEBPACK_IMPORTED_MODULE_0__.clearEventsOn),
/* harmony export */   "eventScope": () => (/* reexport safe */ _event_hub__WEBPACK_IMPORTED_MODULE_0__.eventScope),
/* harmony export */   "getPointerData": () => (/* reexport safe */ _get_pointer_data__WEBPACK_IMPORTED_MODULE_1__.getPointerData),
/* harmony export */   "getPosition": () => (/* reexport safe */ _get_position__WEBPACK_IMPORTED_MODULE_2__.getPosition),
/* harmony export */   "isOneOf": () => (/* reexport safe */ _is_one_of__WEBPACK_IMPORTED_MODULE_3__.isOneOf),
/* harmony export */   "setStyle": () => (/* reexport safe */ _set_style__WEBPACK_IMPORTED_MODULE_4__.setStyle)
/* harmony export */ });
/* harmony import */ var _event_hub__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./event-hub */ "./node_modules/smooth-scrollbar/utils/event-hub.js");
/* harmony import */ var _get_pointer_data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./get-pointer-data */ "./node_modules/smooth-scrollbar/utils/get-pointer-data.js");
/* harmony import */ var _get_position__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./get-position */ "./node_modules/smooth-scrollbar/utils/get-position.js");
/* harmony import */ var _is_one_of__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./is-one-of */ "./node_modules/smooth-scrollbar/utils/is-one-of.js");
/* harmony import */ var _set_style__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./set-style */ "./node_modules/smooth-scrollbar/utils/set-style.js");
/* harmony import */ var _touch_record__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./touch-record */ "./node_modules/smooth-scrollbar/utils/touch-record.js");






//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/smooth-scrollbar/utils/is-one-of.js":
/*!**********************************************************!*\
  !*** ./node_modules/smooth-scrollbar/utils/is-one-of.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isOneOf": () => (/* binding */ isOneOf)
/* harmony export */ });
/**
 * Check if `a` is one of `[...b]`
 */
function isOneOf(a, b) {
    if (b === void 0) { b = []; }
    return b.some(function (v) { return a === v; });
}
//# sourceMappingURL=is-one-of.js.map

/***/ }),

/***/ "./node_modules/smooth-scrollbar/utils/set-style.js":
/*!**********************************************************!*\
  !*** ./node_modules/smooth-scrollbar/utils/set-style.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "setStyle": () => (/* binding */ setStyle)
/* harmony export */ });
var VENDOR_PREFIX = [
    'webkit',
    'moz',
    'ms',
    'o',
];
var RE = new RegExp("^-(?!(?:" + VENDOR_PREFIX.join('|') + ")-)");
function autoPrefix(styles) {
    var res = {};
    Object.keys(styles).forEach(function (prop) {
        if (!RE.test(prop)) {
            res[prop] = styles[prop];
            return;
        }
        var val = styles[prop];
        prop = prop.replace(/^-/, '');
        res[prop] = val;
        VENDOR_PREFIX.forEach(function (prefix) {
            res["-" + prefix + "-" + prop] = val;
        });
    });
    return res;
}
function setStyle(elem, styles) {
    styles = autoPrefix(styles);
    Object.keys(styles).forEach(function (prop) {
        var cssProp = prop.replace(/^-/, '').replace(/-([a-z])/g, function (_, $1) { return $1.toUpperCase(); });
        elem.style[cssProp] = styles[prop];
    });
}
//# sourceMappingURL=set-style.js.map

/***/ }),

/***/ "./node_modules/smooth-scrollbar/utils/touch-record.js":
/*!*************************************************************!*\
  !*** ./node_modules/smooth-scrollbar/utils/touch-record.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TouchRecord": () => (/* binding */ TouchRecord),
/* harmony export */   "Tracker": () => (/* binding */ Tracker)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "./node_modules/smooth-scrollbar/node_modules/tslib/tslib.es6.js");
/* harmony import */ var _get_position__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./get-position */ "./node_modules/smooth-scrollbar/utils/get-position.js");


var Tracker = /** @class */ (function () {
    function Tracker(touch) {
        this.velocityMultiplier = window.devicePixelRatio;
        this.updateTime = Date.now();
        this.delta = { x: 0, y: 0 };
        this.velocity = { x: 0, y: 0 };
        this.lastPosition = { x: 0, y: 0 };
        this.lastPosition = (0,_get_position__WEBPACK_IMPORTED_MODULE_0__.getPosition)(touch);
    }
    Tracker.prototype.update = function (touch) {
        var _a = this, velocity = _a.velocity, updateTime = _a.updateTime, lastPosition = _a.lastPosition;
        var now = Date.now();
        var position = (0,_get_position__WEBPACK_IMPORTED_MODULE_0__.getPosition)(touch);
        var delta = {
            x: -(position.x - lastPosition.x),
            y: -(position.y - lastPosition.y),
        };
        var duration = (now - updateTime) || 16.7;
        var vx = delta.x / duration * 16.7;
        var vy = delta.y / duration * 16.7;
        velocity.x = vx * this.velocityMultiplier;
        velocity.y = vy * this.velocityMultiplier;
        this.delta = delta;
        this.updateTime = now;
        this.lastPosition = position;
    };
    return Tracker;
}());

var TouchRecord = /** @class */ (function () {
    function TouchRecord() {
        this._touchList = {};
    }
    Object.defineProperty(TouchRecord.prototype, "_primitiveValue", {
        get: function () {
            return { x: 0, y: 0 };
        },
        enumerable: true,
        configurable: true
    });
    TouchRecord.prototype.isActive = function () {
        return this._activeTouchID !== undefined;
    };
    TouchRecord.prototype.getDelta = function () {
        var tracker = this._getActiveTracker();
        if (!tracker) {
            return this._primitiveValue;
        }
        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, tracker.delta);
    };
    TouchRecord.prototype.getVelocity = function () {
        var tracker = this._getActiveTracker();
        if (!tracker) {
            return this._primitiveValue;
        }
        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, tracker.velocity);
    };
    TouchRecord.prototype.getEasingDistance = function (damping) {
        var deAcceleration = 1 - damping;
        var distance = {
            x: 0,
            y: 0,
        };
        var vel = this.getVelocity();
        Object.keys(vel).forEach(function (dir) {
            // ignore small velocity
            var v = Math.abs(vel[dir]) <= 10 ? 0 : vel[dir];
            while (v !== 0) {
                distance[dir] += v;
                v = (v * deAcceleration) | 0;
            }
        });
        return distance;
    };
    TouchRecord.prototype.track = function (evt) {
        var _this = this;
        var targetTouches = evt.targetTouches;
        Array.from(targetTouches).forEach(function (touch) {
            _this._add(touch);
        });
        return this._touchList;
    };
    TouchRecord.prototype.update = function (evt) {
        var _this = this;
        var touches = evt.touches, changedTouches = evt.changedTouches;
        Array.from(touches).forEach(function (touch) {
            _this._renew(touch);
        });
        this._setActiveID(changedTouches);
        return this._touchList;
    };
    TouchRecord.prototype.release = function (evt) {
        var _this = this;
        delete this._activeTouchID;
        Array.from(evt.changedTouches).forEach(function (touch) {
            _this._delete(touch);
        });
    };
    TouchRecord.prototype._add = function (touch) {
        if (this._has(touch)) {
            // reset tracker
            this._delete(touch);
        }
        var tracker = new Tracker(touch);
        this._touchList[touch.identifier] = tracker;
    };
    TouchRecord.prototype._renew = function (touch) {
        if (!this._has(touch)) {
            return;
        }
        var tracker = this._touchList[touch.identifier];
        tracker.update(touch);
    };
    TouchRecord.prototype._delete = function (touch) {
        delete this._touchList[touch.identifier];
    };
    TouchRecord.prototype._has = function (touch) {
        return this._touchList.hasOwnProperty(touch.identifier);
    };
    TouchRecord.prototype._setActiveID = function (touches) {
        this._activeTouchID = touches[touches.length - 1].identifier;
    };
    TouchRecord.prototype._getActiveTracker = function () {
        var _a = this, _touchList = _a._touchList, _activeTouchID = _a._activeTouchID;
        return _touchList[_activeTouchID];
    };
    return TouchRecord;
}());

//# sourceMappingURL=touch-record.js.map

/***/ }),

/***/ "./src/ext/api.js":
/*!************************!*\
  !*** ./src/ext/api.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "IPA_LANGS": () => (/* binding */ IPA_LANGS),
/* harmony export */   "MAX_IPA_LEN": () => (/* binding */ MAX_IPA_LEN),
/* harmony export */   "MAX_TEXT_LEN": () => (/* binding */ MAX_TEXT_LEN),
/* harmony export */   "getAudioFileLink": () => (/* binding */ getAudioFileLink),
/* harmony export */   "getBingAudioFileLink": () => (/* binding */ getBingAudioFileLink),
/* harmony export */   "getCountry": () => (/* binding */ getCountry),
/* harmony export */   "getGoogleOldTranslation": () => (/* binding */ getGoogleOldTranslation),
/* harmony export */   "getInternalJSONFormat": () => (/* binding */ getInternalJSONFormat),
/* harmony export */   "getPartOfSpeechByIndex": () => (/* binding */ getPartOfSpeechByIndex),
/* harmony export */   "getSourceTranslitFromJson": () => (/* binding */ getSourceTranslitFromJson),
/* harmony export */   "getTargetTranslitFromJson": () => (/* binding */ getTargetTranslitFromJson),
/* harmony export */   "getTextTranslation": () => (/* binding */ getTextTranslation),
/* harmony export */   "getTranslation": () => (/* binding */ getTranslation),
/* harmony export */   "getWordsInfo": () => (/* binding */ getWordsInfo),
/* harmony export */   "parseResponse": () => (/* binding */ parseResponse),
/* harmony export */   "supportsArticles": () => (/* binding */ supportsArticles)
/* harmony export */ });
/* harmony import */ var _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../src/ext/kumquat_polyfill */ "./src/ext/kumquat_polyfill.js");
/* harmony import */ var _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../src/ext/util/storageUtil */ "./src/ext/util/storageUtil.js");
/* harmony import */ var _src_ext_string__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../src/ext/string */ "./src/ext/string.js");




const MAX_STR_LEN = 1000; // per one request to the server

const ARTICLES_LANGS = "de,fr,it,pt-br,es".split(",");

const positions = {
  "": 0,
  noun: 1,
  verb: 2,
  adjective: 3,
  adverb: 4,
  pronoun: 5,
  preposition: 6,
  conjunction: 7,
  interjection: 8,
  abbreviation: 9,
  phrase: 10,
  suffix: 11,
  auxiliaryverb: 12,
};

const parts_of_speech = [];

const tts_link =
  "https://translate.google.com/translate_tts?ie=UTF-8&q={{text}}&tl={{lang}}&total={{textparts}}&idx=0&textlen={{textlen}}&client=dict-chrome-ex&prev=input&ttsspeed={{dictation_speed}}";

const getCountry = function () {
  return "com";
};

for (const key in positions) {
  parts_of_speech.push(key);
}

const yf = function (a, b) {
  for (let c = 0; c < b.length - 2; c += 3) {
    let d = b[c + 2];
    d = "a" <= d ? d.charCodeAt(0) - 87 : Number(d);
    d = "+" == b[c + 1] ? a >>> d : a << d;
    a = "+" == b[c] ? (a + d) & 4294967295 : a ^ d;
  }

  return a;
};

const tk = function (a) {
  const d = [];

  for (var f = 0, e = 0; f < a.length; ++f) {
    const g = a.charCodeAt(f);

    if (128 > g) {
      d[e++] = g;
    } else {
      if (2048 > g) {
        d[e++] = (g >> 6) | 192;
      } else {
        d[e++] = (g >> 12) | 224;
        d[e++] = ((g >> 6) & 63) | 128;
      }
      d[e++] = (g & 63) | 128;
    }
  }

  const b = 0;
  let tk = 0;

  for (e = 0; e < d.length; e++) {
    tk += d[e];
    tk = yf(tk, "+-a^+6");
  }

  tk = yf(tk, "+-3^+b+-f");

  if (0 > tk) {
    tk = (tk & 2147483647) + 2147483648;
  }
  tk %= 1e6;

  return tk.toString() + "." + (tk ^ b).toString();
};

const MAX_TEXT_LEN = 20000;

const MAX_IPA_LEN = 100;

const IPA_LANGS =
  "en,af,bs,ca,cs,da,de,el,eo,es,fi,fr,hr,hu,it,kn,ku,lv," +
  "nl,pl,pt,ro,sk,sr,sv,sw,ta,tr,cy,grc,hi,hy,id,is,ka,la,mk," +
  "no,sq,vi".split(",");

function supportsArticles(lang) {
  return ARTICLES_LANGS.indexOf(lang) > -1;
}

function getSourceTranslitFromJson(json) {
  // console.log("getSourceTranslitFromJson", json);
  return json[2];
}

function getTargetTranslitFromJson(json) {
  // console.log("getTargetTranslitFromJson", json);
  // return json[2] || json[4];
  return json[4];
}

async function getWordsInfo(words, fn) {
  // var timeout = null;
  // const start_time = Date.now();

  //console.time('get_words_info');
  //console.log('server:', storageUtils.getVal('misc_server'));
  //console.log(words);

  const controller = new AbortController();
  const timeoutId = setTimeout(() => controller.abort(), 2500); // 5000 ms timeout

  const d = await fetch(
    (await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_1__["default"].getVal("misc_server")) + "/v3/get_words_info",
    {
      method: "POST",
      body: JSON.stringify({
        words: words,
      }),
      signal: controller.signal,
    }
  ).then((res) => res.json()).catch((error) => {
      if (error.name === 'AbortError') {
        console.log('Fetch aborted due to timeout');
      } else {
        console.error('Fetch error:', error);
      }
  });

  clearTimeout(timeoutId);

  fn(d);
}

async function getGoogleOldTranslation(from, to, text, fn) {
  const query = _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.serialize({
    client: "dict-chrome-ex",
    q: text,
    sl: from,
    tl: to,
    tbb: 1,
    ie: "UTF-8",
    oe: "UTF-8",
    hl: "en",
  });

  const res = await fetch(`http://clients5.google.com/translate_a/t?${query}`, {
    headers: {
      Accept: "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8",
    },
  });

  if (res.ok) {
    const d = await res.json();

    const responseData = {
      sentences: [
        {
          trans: d[0],
          orig: text,
        },
      ],
      src: from,
      ld_result: {
        srclangs: [from],
      },
    };

    fn(responseData);
  } else {
    fn({
      error: true,
    });
  }
}

function getTextTranslation(from, to, text, fn) {
  const chunks = _src_ext_string__WEBPACK_IMPORTED_MODULE_2__["default"].chunkate(text, MAX_STR_LEN);
  const translations = new Array(chunks.length);

  const translateChunk = function (i) {
    if (i >= chunks.length) {
      const response = translations[0];
      // Check if property exist (prevent error when handling old google api translation)
      const has_translit =
        response.sentences && response.sentences.length
          ? typeof response.sentences[response.sentences.length - 1].translit !=
            "undefined"
          : false;
      for (
        let i = 1, len = translations.length, k = has_translit ? 1 : 0;
        i < len;
        ++i
      ) {
        for (let j = 0; j < translations[i].sentences.length - k; ++j) {
          response.sentences[response.sentences.length - 1 - k].orig +=
            " " + translations[i].sentences[j].orig;

          let whitespace = "";
          if (
            j === 0 ||
            (j > 0 &&
              translations[i].sentences[j - 1].trans[
                translations[i].sentences[j - 1].trans.length - 1
              ] !== " ")
          ) {
            whitespace = " ";
          }

          response.sentences[response.sentences.length - 1 - k].trans +=
            whitespace + translations[i].sentences[j].trans;
        }

        if (has_translit) {
          response.sentences[response.sentences.length - 1].translit +=
            " " +
            translations[i].sentences[translations[i].sentences.length - 1]
              .translit;
        }
      }
      fn(response);

      return;
    }

    getTranslation(from, to, chunks[i])
      .then(function (response) {
        if (response.error) {
          fn(response);
        } else {
          translations[i] = response;
          translateChunk(i + 1);
        }
      })
      .catch((error) => {
        fn({ error: error });
      });
  };

  translateChunk(0);
}

async function getTranslation(from, to, text) {
  from = from || "auto";

  const query = _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.serialize({
    client: "gtx",
    hl: "en",
    sl: from,
    tl: to,
    q: text,
    dj: 1,
    tk: tk(text),
  });

  // console.log(query);

  const res = await fetch(
    `https://translate.googleapis.com/translate_a/single?dt=t&dt=bd&dt=qc&dt=rm&dt=ex&${query}`,
    {
      headers: {
        Accept:
          "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8",
      },
    }
  );

  if (!res.ok) {
    return getGoogleOldTranslation(from, to, text);
  } else {
    // fn(await res.json());
    return res.json();
  }
}

// remove doubling commas
// ,, => ,0,
// [, => [0,
// ,] => ,0]
function parseResponse(r) {
  return r
    .replace(/(\,\,)/g, ',"",')
    .replace(/\[\,/g, '["",')
    .replace(/\,\]/g, ',""]');
}

function getAudioFileLink(lang, text) {
  return tts_link
    .replace("{{domain}}", getCountry())
    .replace("{{text}}", encodeURIComponent(text))
    .replace("{{lang}}", lang)
    .replace("{{textparts}}", text.split(" ").length)
    .replace("{{textlen}}", text.length)
    .replace("{{dictation_speed}}", "0.5");
}

function getBingAudioFileLink(lang, text) {
  if (lang === "iw") {
    lang = "he";
  }

  return "https://www.bing.com/tspeak?&format=audio%2Fmp3&language={{lang}}&IG=D5DFBE5EEA97455182D4DEA272551DCD&IID=translator.5036.43&text={{text}}"
    .replace("{{text}}", encodeURIComponent(text))
    .replace("{{lang}}", lang);
}

function getPartOfSpeechByIndex(index) {
  return parts_of_speech[index];
}

function getInternalJSONFormat(output, original) {
  const res =
    typeof output == "object" ? output : JSON.parse(parseResponse(output));

  if (typeof res[0] == "boolean") {
    return res;
  }

  const translations = [
    false, // 0 - is multi
    "", // 1 - original
    "", // 2 - original translit
    "", // 3 - translation
    "", // 4 - translit for translation
    "", // 5 - from lang
    "", // 6 - to lang
    [
      [], // no category
      [], // nouns
      [], // verbs
      [], // adjectives
      [], // adverbs
      [], // pronouns
      [], // prepositions
      [], // conjunctions
      [], // interjections
      [], // abbreviations
      [], // Phrases
      [], // Suffixes
      [], // Auxiliary Verbs
    ],
    "", // 8 - original gender
    "", // 9 - translated gender
    "", // 10 - original ipa
    "", // 11 - translation ipa
  ];

  if (Array.isArray(res) && res[0].Alignment != undefined) {
    translations[0] = false;
    translations[1] = original;
    translations[2] = "";
    translations[3] = res[0].TranslatedText;
    translations[4] = "";
    translations[5] = res[0].From;
  } else if (res.dict || _.isArray(res[1])) {
    if (res.dict) {
      translations[0] = true;
      translations[1] = res.sentences[0].orig;
      translations[2] = (res.sentences[1] || {}).src_translit || "";
      translations[3] = res.sentences[0].trans;
      translations[4] = (res.sentences[1] || {}).translit || "";
      translations[5] = res.ld_result.srclangs[0];
      //translations[5] = res.ld_result.srclangs[0];

      for (const v of res.dict) {
        for (const v2 of v.entry) {
          const item = [v2.word, v2.reverse_translation];

          if (typeof v2.previous_word == "string") {
            item.push(v2.previous_word);
          } else {
            item.push("");
          }

          translations[7][
            positions[v.pos.toLowerCase().replace(" ", "")] || 0
          ].push(item);
        }
      }
    } else {
      translations[0] = true;
      translations[1] = res[0][0][1];
      translations[2] = (res[0][1] ? res[0][1][0] : "") || "";
      translations[3] = res[0][0][1];
      translations[4] = (res[0][1] ? res[0][1][1] : "") || "";
      translations[5] = res[2];

      for (const k in res[1]) {
        const v = res[1][k];
        for (const k2 in v) {
          const v2 = v[k2];
          const item = [v2[0], v2[1]];

          if (typeof v2[3] == "string") {
            item.push(v2[3]);
          } else {
            item.push("");
          }

          translations[7][positions[v[0]] || 0].push(item);
        }
      }
    }
  } else {
    if (typeof res.sentences == "object") {
      for (let i = 0, len = res.sentences.length; i < len; ++i) {
        if (res.sentences[i].orig) {
          translations[1] += res.sentences[i].orig;
        }
        if (res.sentences[i].trans) {
          translations[3] += res.sentences[i].trans;
        }
      }

      // transliteration for the original
      translations[11] =
        (res.sentences[res.sentences.length - 1] || {}).src_translit || "";

      // transliteration for the translation
      translations[4] =
        (res.sentences[res.sentences.length - 1] || {}).translit || "";

      translations[0] = false;
      translations[5] = res.ld_result.srclangs[0];
    } else {
      translations[0] = false;
      translations[1] = res[0][0][1];
      translations[2] = (res[0][1] ? res[0][1][0] : "") || "";
      translations[3] = res[0][0][0];
      translations[4] = (res[0][1] ? res[0][1][1] : "") || "";
      translations[5] = res[1];
    }
  }
  return translations;
}


/***/ }),

/***/ "./src/ext/arr.js":
/*!************************!*\
  !*** ./src/ext/arr.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Created by Alexey on 10/7/13 at 2:16 PM

const arrays = {
  delete: function (arr, needle) {
    const pos = arr.indexOf(needle);
    if (pos > -1) {
      arr.splice(pos, 1);
    }
    return false;
  },

  clone: function (arr) {
    return [...arr];
  },

  pushUnique: function (arr, el) {
    if (arr.indexOf(el) === -1) {
      arr.push(el);
    }
    return arr;
  },
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (arrays);


/***/ }),

/***/ "./src/ext/audio.js":
/*!**************************!*\
  !*** ./src/ext/audio.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _src_ext_string__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../src/ext/string */ "./src/ext/string.js");
/* harmony import */ var _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../src/ext/kumquat_polyfill */ "./src/ext/kumquat_polyfill.js");
/* harmony import */ var _src_ext_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../src/ext/api */ "./src/ext/api.js");
/* harmony import */ var _src_ext_util_langUtil__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../src/ext/util/langUtil */ "./src/ext/util/langUtil.js");





const GOOD_GOOGLE_LANGS = [
  "ar",
  "bn",
  "zh-CN",
  "zh-TW",
  "cs",
  "da",
  "nl",
  "en",
  "en-US",
  "et",
  "tl",
  "fi",
  "fr",
  "de",
  "hi",
  "id",
  "it",
  "ja",
  "ko",
  "la",
  "pl",
  "pt",
  "ru",
  "sr",
  "si",
  "sk",
  "es",
  "su",
  "sv",
  "th",
  "uk",
  "vi",
  "cy",
];

// iw is here only for checks, the API is actually using he instead of iw
// Bing TTS stopped working
const GOOD_BING_LANGS =
  []; /*["en", "bg", "hu", "vi", "el", "da", "he", 'iw', "id", "es", "it", "yue", "ca", "zh-CN", "zh-TW", "ko", "ms", "de",
        "da", "no", "pl", "ro", "ru", "sk", "sl", "th", "ta", "fi", "fr", "hr", "sv", "ja"];*/

const BAD_GOOGLE_LANGS = [
  "af",
  "sq",
  "hy",
  "bs",
  "ca",
  "hr",
  "eo",
  "el",
  "hu",
  "is",
  "jw",
  "km",
  "lv",
  "mk",
  "ml",
  "mr",
  "my",
  "ne",
  "no",
  "ro",
  "sw",
  "ta",
  "te",
  "tr",
];

const BAD_BING_LANGS = []; //["ar", "pt", "hi", "cs"];

const audio = {
  player: null,
  isPlaying: false,
  preventLoading: false,

  get MAX_TTS_LEN() {
    return 160;
  },

  loadAudio: function (link, on_loaded_callback) {
    // Note: If it's Safari and it's not global page, this `loadAudio` should be delegated to global page
    // It is only in Safari that this `loadAudio` could be called by content scripts and popups,
    // because it is not allowd to play audio in background page not triggered by a user interaction (click)
    //
    // For other browsers, this method could only be called in background page
    //

    if (_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.section !== "window") {
      chrome.runtime.sendMessage(
        {
          action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.processCall("app", "audio", "load"),
          link: link,
        },
        on_loaded_callback
      );
      return;
    }

    const xhr = new XMLHttpRequest();
    xhr.open("GET", link, true);
    xhr.responseType = "blob";
    xhr.setRequestHeader("Content-type", "application/json; charset=utf-8");
    xhr.onload = function (event) {
      if (this.status === 200) {
        const blob = new Blob([this.response], { type: "audio/mpeg" });
        const reader = new FileReader();

        reader.addEventListener("loadend", function () {
          // console.log(reader.result);
          on_loaded_callback(reader.result);
        });

        reader.readAsDataURL(blob);
      } else {
        console.error("Unable to download audio chunk");
      }
    };

    xhr.send();
  },

  isUtterable: function (lang) {
    return (
      GOOD_GOOGLE_LANGS.indexOf(lang) > -1 ||
      GOOD_BING_LANGS.indexOf(lang) > -1 ||
      BAD_GOOGLE_LANGS.indexOf(lang) > -1 ||
      BAD_BING_LANGS.indexOf(lang) > -1
    );
  },

  playAudio: function (_audio, on_end_callback) {
    audio.player = new Audio(_audio);

    audio.player.onerror = function () {
      console.log("playback error:", arguments);
    };

    audio.player.onended = function () {
      on_end_callback();
      audio.player = null;
    };

    audio.player.play();
  },

  playText: function (text, lang, on_audio_stop_callback, old_data) {
    if (lang === "auto") {
      return _src_ext_util_langUtil__WEBPACK_IMPORTED_MODULE_3__.getDetectedLang(text, function (dlang) {
        audio.playText(text, dlang, on_audio_stop_callback, old_data);
      });
    }

    if (!audio.isUtterable(lang)) {
      return on_audio_stop_callback({ old_data });
    }

    if (audio.isPlaying) {
      audio.stop();
    }

    // console.log("playing:", lang, text);

    const chunks = _src_ext_string__WEBPACK_IMPORTED_MODULE_0__["default"].chunkate(text, audio.MAX_TTS_LEN);
    const audios = [];

    const startPlayingChunks = function (i) {
      if (i >= chunks.length) {
        on_audio_stop_callback({ old_data });
        return;
      }

      if (!audio.isPlaying) {
        // console.log("abort?");
        return;
      }

      // while (i >= audios.length);

      audio.playAudio(audios[i], function () {
        startPlayingChunks(i + 1);
      });
    };

    const loadAudios = function (i) {
      if (i >= chunks.length) {
        return;
      }

      let link;

      if (GOOD_GOOGLE_LANGS.indexOf(lang) > -1) {
        link = _src_ext_api__WEBPACK_IMPORTED_MODULE_2__.getAudioFileLink(lang, chunks[i]);
      }
      // Bing TTS stopped working
      // } else if (
      //   GOOD_BING_LANGS.indexOf(langUtils.getBing lang) > -1 ||
      //   BAD_BING_LANGS.indexOf(lang) > -1
      // ) {
      //   link = apiManager.getBingAudioFileLink(
      //     apiManager.googleLangsToBingLangs(lang),
      //     chunks[i]
      //   );
      // }
      else if (BAD_GOOGLE_LANGS.indexOf(lang) > -1) {
        link = _src_ext_api__WEBPACK_IMPORTED_MODULE_2__.getAudioFileLink(lang, chunks[i]);
      }

      // shouldn't happen because button shouldn't show up if language isn't supported
      // but though if this occurs, don't try to play it
      // because there's no link
      if (!link) {
        on_audio_stop_callback({ old_data });
        return;
      }

      audio.loadAudio(link, function (_audio) {
        audios.push(_audio);

        if (i === 0) {
          audio.isPlaying = true;
          startPlayingChunks(0);
        }

        loadAudios(i + 1);
      });
    };

    loadAudios(0);
  },

  stop: function () {
    audio.isPlaying = false;

    if (audio.player != null) {
      audio.player.pause();
      audio.player.onended();
      audio.player = null;
    }
  },
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (audio);


/***/ }),

/***/ "./src/ext/cache.js":
/*!**************************!*\
  !*** ./src/ext/cache.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "deleteFewById": () => (/* binding */ deleteFewById),
/* harmony export */   "deleteFewByIdOnClient": () => (/* binding */ deleteFewByIdOnClient),
/* harmony export */   "getIdListOfAll": () => (/* binding */ getIdListOfAll),
/* harmony export */   "lookUpInCache": () => (/* binding */ lookUpInCache),
/* harmony export */   "saveOrUpdate": () => (/* binding */ saveOrUpdate)
/* harmony export */ });
/* harmony import */ var _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../src/ext/kumquat_polyfill */ "./src/ext/kumquat_polyfill.js");
/* harmony import */ var _src_pages_background_syncManager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../src/pages/background/syncManager */ "./src/pages/background/syncManager.js");
/* harmony import */ var _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../src/ext/util/storageUtil */ "./src/ext/util/storageUtil.js");
/* harmony import */ var _src_ui_components_loading__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../src/ui_components/loading */ "./src/ui_components/loading.js");





function saveOrUpdate(
  from,
  to,
  input,
  output,
  source,
  callback,
  server_item
) {
  callback = callback || _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.EF;

  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.idb.exists(
    "it",
    "history",
    ["input", input],
    {
      l_from: from,
      l_to: to,
    },
    function (exists, primaryKey, existing_obj) {
      if (exists) {
        const updated_sources = existing_obj.sources || {};
        updated_sources[source] = Date.now();

        const updated_obj = {
          it_resp: output,
          sources: updated_sources,
        };

        if (server_item) {
          updated_obj.server_id = server_item.server_id;
        }

        _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.idb.update("it", "history", primaryKey, updated_obj, function () {
          callback();
        });
      } else {
        const sources = {};
        sources[source] = Date.now();

        const translation_time = server_item
          ? server_item.timestamp
          : Date.now();

        _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.idb.add(
          "it",
          "history",
          {
            l_from: from,
            l_to: to,
            input: input,
            it_resp: output,
            sources: sources,
            server_id: server_item ? server_item.server_id : null,
            pending_removal: false,
            time: translation_time,
          },
          "translation",
          function (id) {
            callback();

            if (id && !server_item && _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.canSync) {
              // try to upload the item to the server
              _src_pages_background_syncManager__WEBPACK_IMPORTED_MODULE_1__.uploadHistoryItems(
                [
                  {
                    id: id,
                    timestamp: translation_time,
                    json: output,
                  },
                ],
                function () {}
              );
            }
          }
        );
      }
    }
  );
}

function lookUpInCache(from, to, input, callback) {
  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.idb.exists(
    "it",
    "history",
    ["input", input],
    {
      pending_removal: false,
      l_from: from,
      l_to: to,
    },
    function (exists, primaryKey, existing_obj) {
      if (!exists) {
        callback(true);
      } else {
        callback(false, existing_obj);
      }
    }
  );
}

function getIdListOfAll(callback) {
  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.idb.search(
    "it",
    "history",
    {
      pending_removal: false,
    },
    function (items, idb_error) {
      if (!items && idb_error && _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.IS_FIREFOX) {
        _src_ui_components_loading__WEBPACK_IMPORTED_MODULE_3__.showIdbErrorLayout();
        return;
      }

      const ids = [];
      for (let i = 0, len = items.length; i < len; ++i) {
        ids.push(items[i].id);
      }
      callback(ids);
    }
  );
}

function deleteFewByIdOnClient(ids, callback) {
  chrome.runtime.sendMessage(
    {
      action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.processCall("app", "sync", "deleteHistoryItems"),
      ids: ids,
    },
    callback
  );
}

async function deleteFewById(ids, callback) {
  const items = [];

  if (!(await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_2__["default"].getVal("account_token"))) {
    _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.idb.del("it", "history", ids, function () {
      callback(true);
    });
  } else {
    ids.forEach(function (id) {
      _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.idb.update(
        "it",
        "history",
        id,
        {
          pending_removal: true,
        },
        function (item, local_id) {
          items.push({
            id: local_id,
            server_id: item.server_id,
          });
        }
      );
    });

    const i = setInterval(async function () {
      if (items.length === ids.length) {
        clearInterval(i);
        callback(true);

        if (await _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.canSync()) {
          _src_pages_background_syncManager__WEBPACK_IMPORTED_MODULE_1__.deleteHistoryItems(items, function (r) {
            if (r.error) console.log(r.message);
          });
        }
      }
    }, 10);
  }
}


/***/ }),

/***/ "./src/ext/clipboard.js":
/*!******************************!*\
  !*** ./src/ext/clipboard.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);


const clipboard = {
  // addTextfieldToBody: function () {
  //   return $("<textarea>")
  //     .css({
  //       position: "absolute",
  //       top: -1000,
  //       left: -1000,
  //     })
  //     .appendTo("body");
  // },

  copyToClipboard: async function (text) {
    await navigator.clipboard.writeText(text);
    
    // const $cc = clipboard.addTextfieldToBody();
    // $cc.val(text).focus().select();
    // document.execCommand("Copy");
    // $cc.remove();
  },

  // getClipboardContents: function () {
  //   const $cc = clipboard.addTextfieldToBody();
  //   $cc.val("").focus().select();
  //   document.execCommand("Paste");

  //   const val = $cc.val();
  //   $cc.remove();
  //   return val;
  // },
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (clipboard);


/***/ }),

/***/ "./src/ext/const/appConstants.js":
/*!***************************************!*\
  !*** ./src/ext/const/appConstants.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const APP_CONST = {
  DB: "It_DbVault",
  T_HISTORY: "History",

  CHR_PRO_SKU: "instant_translate_pro",
  CHR_PRO_OLD_SKU: "it_pro",

  //
  // Animation constants

  ANIM_TYPE_SLIDE_UP: "easeInOutQuint",
  ANIM_TYPE_SLIDE_DOWN: "easeInOutQuint",
  ANIM_TYPE_FADE_OUT: "easeOutExpo",
  ANIM_TYPE_FADE_IN: "easeOutExpo",
  ANIM_TYPE_REL_MOVE: "easeInExpo",

  ANIM_SPEED_SLIDE_UP: 150,
  ANIM_SPEED_SLIDE_DOWN: 150,
  ANIM_SPEED_FAST_SLIDE_UP: 90,
  ANIM_SPEED_FAST_SLIDE_DOWN: 90,
  ANIM_SPEED_FADE_OUT: 115,
  ANIM_SPEED_FADE_IN: 115,
  ANIM_SPEED_FAST_FADE_OUT: 55,
  ANIM_SPEED_FAST_FADE_IN: 55,

  STYLE_PREFIX: "s:",
  ROOT_PREFIX: "root:",
  KERNEL_DB: "KE_Kernel",

  VERBOSE: true,
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (APP_CONST);


/***/ }),

/***/ "./src/ext/const/lang.js":
/*!*******************************!*\
  !*** ./src/ext/const/lang.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "fp_supported_langs": () => (/* binding */ fp_supported_langs),
/* harmony export */   "getBingCompatibleLang": () => (/* binding */ getBingCompatibleLang),
/* harmony export */   "isFPSupported": () => (/* binding */ isFPSupported),
/* harmony export */   "stt": () => (/* binding */ stt),
/* harmony export */   "supportedLangs": () => (/* binding */ supportedLangs)
/* harmony export */ });
const BING_LANGS = {
  bs: "bs-Latn",
  sr: "sr-Cyrl",
  "zh-TW": "zh-CHT",
  "zh-CN": "zh-CHS",
  iw: "he",
};

const supportedLangs = {
  Auto: "auto",
  Afrikaans: "af",
  Albanian: "sq",
  Arabic: "ar",
  Armenian: "hy",
  Azerbaijani: "az",
  Basque: "eu",
  Belarusian: "be",
  Bengali: "bn",
  Bosnian: "bs",
  Bulgarian: "bg",
  Catalan: "ca",
  Cebuano: "ceb",
  Chichewa: "ny",
  ChineseSimplified: "zh-CN",
  ChineseTraditional: "zh-TW",
  Croatian: "hr",
  Czech: "cs",
  Danish: "da",
  Dutch: "nl",
  English: "en",
  EnglishUS: "en-US",
  Esperanto: "eo",
  Estonian: "et",
  Filipino: "tl",
  Finnish: "fi",
  French: "fr",
  Galician: "gl",
  Georgian: "ka",
  German: "de",
  Greek: "el",
  Gujarati: "gu",
  HaitianCreole: "ht",
  Hausa: "ha",
  Hebrew: "iw",
  Hindi: "hi",
  Hmong: "hmn",
  Hungarian: "hu",
  Icelandic: "is",
  Igbo: "ig",
  Indonesian: "id",
  Irish: "ga",
  Italian: "it",
  Javanese: "jw",
  Japanese: "ja",
  Kannada: "kn",
  Kazakh: "kk",
  Khmer: "km",
  Korean: "ko",
  Lao: "lo",
  Latin: "la",
  Latvian: "lv",
  Lithuanian: "lt",
  Macedonian: "mk",
  Malagasy: "mg",
  Malay: "ms",
  Maltese: "mt",
  Maori: "mi",
  Marathi: "mr",
  Mongolian: "mn",
  Nepali: "ne",
  Norwegian: "no",
  Persian: "fa",
  Polish: "pl",
  Portuguese: "pt",
  Punjabi: "pa",
  Romanian: "ro",
  Russian: "ru",
  Serbian: "sr",
  Sesotho: "st",
  Sinhala: "si",
  Slovak: "sk",
  Slovenian: "sl",
  Somali: "so",
  Spanish: "es",
  Sundanese: "su",
  Swahili: "sw",
  Swedish: "sv",
  Tajik: "tg",
  Tamil: "ta",
  Telugu: "te",
  Thai: "th",
  Turkish: "tr",
  Ukrainian: "uk",
  Urdu: "ur",
  Uzbek: "uz",
  Vietnamese: "vi",
  Welsh: "cy",
  Yiddish: "yi",
  Yoruba: "yo",
  Zulu: "zu",
  Malayalam: "ml",
  MyanmarBurmese: "my",

  // v2.9.46 (+13 langs)

  Amharic: "am",
  Corsican: "co",
  Frisian: "fy",
  Hawaiian: "haw",
  KurdishKurmanji: "ku",
  Kyrgyz: "ky",
  Luxembourgish: "lb",
  Pashto: "ps",
  Samoan: "sm",
  ScotsGaelic: "gd",
  Shona: "sn",
  Sindhi: "sd",
  Xhosa: "xh",
};

const fp_supported_langs = [
  "zh-CHS",
  "zh-CHT",
  "he",
  "af",
  "sq",
  "am",
  "ar",
  "hy",
  "az",
  "bn",
  "bs",
  "bg",
  "ca",
  "hr",
  "cs",
  "da",
  "nl",
  "en",
  "et",
  "fi",
  "fr",
  "de",
  "el",
  "gu",
  "ht",
  "hi",
  "hu",
  "is",
  "id",
  "ga",
  "it",
  "ja",
  "kn",
  "kk",
  "km",
  "ko",
  "ku",
  "lo",
  "lv",
  "lt",
  "mg",
  "ms",
  "ml",
  "mt",
  "mi",
  "mr",
  "my",
  "ne",
  "ps",
  "fa",
  "pl",
  "pt",
  "pa",
  "ro",
  "ru",
  "sm",
  "sk",
  "sl",
  "es",
  "sw",
  "sv",
  "ta",
  "te",
  "th",
  "tr",
  "uk",
  "ur",
  "vi",
  "cy",
];

function isFPSupported(lang) {
  return fp_supported_langs.indexOf(getBingCompatibleLang(lang)) > -1;
}

function getBingCompatibleLang(lang) {
  return BING_LANGS[lang] || lang;
}

const stt = {
  af: ["af-ZA"],
  id: ["id-ID"],
  ms: ["ms-MY"],
  ca: ["ca-ES"],
  cs: ["cs-CZ"],
  da: ["da-DK"],
  de: ["de-DE"],
  en: ["en-GB"],
  "en-US": ["en-US"],
  es: ["es-ES"],
  eu: ["eu-ES"],
  fil: ["fil-PH"],
  fr: ["fr-FR"],
  gl: ["gl-ES"],
  hr: ["hr_HR"],
  zu: ["zu-ZA"],
  is: ["is-IS"],
  it: ["it-IT"],
  lt: ["lt-LT"],
  hu: ["hu-HU"],
  nl: ["nl-NL"],
  nb: ["nb-NO"],
  pl: ["pl-PL"],
  pt: ["pt-BR"],
  ro: ["ro-RO"],
  sl: ["sl-SI"],
  sk: ["sk-SK"],
  fi: ["fi-FI"],
  sv: ["sv-SE"],
  vi: ["vi-VN"],
  tr: ["tr-TR"],
  el: ["el-GR"],
  bg: ["bg-BG"],
  ru: ["ru-RU"],
  sr: ["sr-RS"],
  uk: ["uk-UA"],
  ko: ["ko-KR"],
  "zh-CN": ["cmn-Hans-CN"],
  ja: ["ja-JP"],
  hi: ["hi-IN"],
  th: ["th-TH"],
};


/***/ }),

/***/ "./src/ext/const/netflix_langs.js":
/*!****************************************!*\
  !*** ./src/ext/const/netflix_langs.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const netflix_langs = {
  it: {
    Afrikaans: "af",
    Albanese: "sq",
    Amarico: "am",
    Arabo: "ar",
    Armeno: "hy",
    Azero: "az",
    Basco: "eu",
    Bengalese: "bn",
    Bielorusso: "be",
    Birmano: "my",
    Bosniaco: "bs",
    Bulgaro: "bg",
    Catalano: "ca",
    Cebuano: "ceb",
    Ceco: "cs",
    Chichewa: "ny",
    "Cinese (semplificato)": "zh-CN",
    "Cinese (tradizionale)": "zh-TW",
    Coreano: "ko",
    Corso: "co",
    "Creolo haitiano": "ht",
    Croato: "hr",
    "Curdo (kurmanji)": "ku",
    Danese: "da",
    Ebraico: "iw",
    Esperanto: "eo",
    Estone: "et",
    Filippino: "tl",
    Finlandese: "fi",
    Francese: "fr",
    Frisone: "fy",
    "Gaelico scozzese": "gd",
    Galiziano: "gl",
    Gallese: "cy",
    Georgiano: "ka",
    Giapponese: "ja",
    Giavanese: "jw",
    Greco: "el",
    Gujarati: "gu",
    Hausa: "ha",
    Hawaiano: "haw",
    Hindi: "hi",
    Hmong: "hmn",
    Igbo: "ig",
    Indonesiano: "id",
    Inglese: "en",
    Irlandese: "ga",
    Islandese: "is",
    Italiano: "it",
    Kannada: "kn",
    Kazako: "kk",
    Khmer: "km",
    Kirghiso: "ky",
    Lao: "lo",
    Latino: "la",
    Lettone: "lv",
    Lituano: "lt",
    Lussemburghese: "lb",
    Macedone: "mk",
    Malayalam: "ml",
    Malese: "ms",
    Malgascio: "mg",
    Maltese: "mt",
    Maori: "mi",
    Marathi: "mr",
    Mongolo: "mn",
    Nepalese: "ne",
    Norvegese: "no",
    Olandese: "nl",
    Pashto: "ps",
    Persiano: "fa",
    Polacco: "pl",
    Portoghese: "pt",
    Punjabi: "pa",
    Rumeno: "ro",
    Russo: "ru",
    Samoano: "sm",
    Serbo: "sr",
    Sesotho: "st",
    Shona: "sn",
    Sindhi: "sd",
    Singalese: "si",
    Slovacco: "sk",
    Sloveno: "sl",
    Somalo: "so",
    Spagnolo: "es",
    Sundanese: "su",
    Svedese: "sv",
    Swahili: "sw",
    Tagiko: "tg",
    Tailandese: "th",
    Tamil: "ta",
    Tedesco: "de",
    Telugu: "te",
    Turco: "tr",
    Ucraino: "uk",
    Ungherese: "hu",
    Urdu: "ur",
    Uzbeco: "uz",
    Vietnamita: "vi",
    Xhosa: "xh",
    Yiddish: "yi",
    Yoruba: "yo",
    Zulu: "zu",
  },
  en: {
    Afrikaans: "af",
    Albanian: "sq",
    Amharic: "am",
    Arabic: "ar",
    Armenian: "hy",
    Azerbaijani: "az",
    Basque: "eu",
    Belarusian: "be",
    Bengali: "bn",
    Bosnian: "bs",
    Bulgarian: "bg",
    Catalan: "ca",
    Cebuano: "ceb",
    Chichewa: "ny",
    "Simplified Chinese": "zh-CN",
    "Traditional Chinese": "zh-TW",
    Corsican: "co",
    Croatian: "hr",
    Czech: "cs",
    Danish: "da",
    Dutch: "nl",
    English: "en",
    Esperanto: "eo",
    Estonian: "et",
    Filipino: "tl",
    Finnish: "fi",
    French: "fr",
    Frisian: "fy",
    Galician: "gl",
    Georgian: "ka",
    German: "de",
    Greek: "el",
    Gujarati: "gu",
    "Haitian creole": "ht",
    Hausa: "ha",
    Hawaiian: "haw",
    Hebrew: "iw",
    Hindi: "hi",
    Hmong: "hmn",
    Hungarian: "hu",
    Icelandic: "is",
    Igbo: "ig",
    Indonesian: "id",
    Irish: "ga",
    Italian: "it",
    Japanese: "ja",
    Javanese: "jw",
    Kannada: "kn",
    Kazakh: "kk",
    Khmer: "km",
    Korean: "ko",
    "Kurdish (kurmanji)": "ku",
    Kyrgyz: "ky",
    Lao: "lo",
    Latin: "la",
    Latvian: "lv",
    Lithuanian: "lt",
    Luxembourgish: "lb",
    Macedonian: "mk",
    Malagasy: "mg",
    Malay: "ms",
    Malayalam: "ml",
    Maltese: "mt",
    Maori: "mi",
    Marathi: "mr",
    Mongolian: "mn",
    "Myanmar (burmese)": "my",
    Nepali: "ne",
    Norwegian: "no",
    Pashto: "ps",
    Persian: "fa",
    Polish: "pl",
    Portuguese: "pt",
    Punjabi: "pa",
    Romanian: "ro",
    Russian: "ru",
    Samoan: "sm",
    "Scots gaelic": "gd",
    Serbian: "sr",
    Sesotho: "st",
    Shona: "sn",
    Sindhi: "sd",
    Sinhala: "si",
    Slovak: "sk",
    Slovenian: "sl",
    Somali: "so",
    Spanish: "es",
    Sundanese: "su",
    Swahili: "sw",
    Swedish: "sv",
    Tajik: "tg",
    Tamil: "ta",
    Telugu: "te",
    Thai: "th",
    Turkish: "tr",
    Ukrainian: "uk",
    Urdu: "ur",
    Uzbek: "uz",
    Vietnamese: "vi",
    Welsh: "cy",
    Xhosa: "xh",
    Yiddish: "yi",
    Yoruba: "yo",
    Zulu: "zu",
  },
  id: {
    Afrikans: "af",
    Albania: "sq",
    Amhara: "am",
    Arab: "ar",
    Armenia: "hy",
    Azerbaijan: "az",
    Basque: "eu",
    Belanda: "nl",
    Belarussia: "be",
    Bengali: "bn",
    Bosnia: "bs",
    Bulgaria: "bg",
    Burma: "my",
    Cebuano: "ceb",
    Cek: "cs",
    Chichewa: "ny",
    "China (aks. sederhana)": "zh-CN",
    "China (aks. tradisional)": "zh-TW",
    Denmark: "da",
    Esperanto: "eo",
    Estonia: "et",
    Farsi: "fa",
    Finlandia: "fi",
    Frisia: "fy",
    Gaelig: "ga",
    "Gaelik skotlandia": "gd",
    Galisia: "gl",
    Georgia: "ka",
    Gujarati: "gu",
    Hausa: "ha",
    Hawaii: "haw",
    Hindi: "hi",
    Hmong: "hmn",
    Ibrani: "iw",
    Igbo: "ig",
    Indonesia: "id",
    Inggris: "en",
    Islan: "is",
    Italia: "it",
    Jawa: "jw",
    Jepang: "ja",
    Jerman: "de",
    Kannada: "kn",
    Katala: "ca",
    Kazak: "kk",
    Khmer: "km",
    Kirghiz: "ky",
    Korea: "ko",
    Korsika: "co",
    "Kreol haiti": "ht",
    Kroat: "hr",
    Kurdi: "ku",
    Laos: "lo",
    Latin: "la",
    Latvia: "lv",
    Lituania: "lt",
    Luksemburg: "lb",
    Magyar: "hu",
    Makedonia: "mk",
    Malagasi: "mg",
    Malayalam: "ml",
    Malta: "mt",
    Maori: "mi",
    Marathi: "mr",
    Melayu: "ms",
    Mongol: "mn",
    Nepal: "ne",
    Norsk: "no",
    Pashto: "ps",
    Polandia: "pl",
    Portugis: "pt",
    Prancis: "fr",
    Punjabi: "pa",
    Rumania: "ro",
    Rusia: "ru",
    Samoa: "sm",
    Serb: "sr",
    Sesotho: "st",
    Shona: "sn",
    Sindhi: "sd",
    Sinhala: "si",
    Slovakia: "sk",
    Slovenia: "sl",
    Somali: "so",
    Spanyol: "es",
    Sunda: "su",
    Swahili: "sw",
    Swensk: "sv",
    Tagalog: "tl",
    Tajik: "tg",
    Tamil: "ta",
    Telugu: "te",
    Thai: "th",
    Turki: "tr",
    Ukraina: "uk",
    Urdu: "ur",
    Uzbek: "uz",
    Vietnam: "vi",
    Wales: "cy",
    Xhosa: "xh",
    Yiddi: "yi",
    Yoruba: "yo",
    Yunani: "el",
    Zulu: "zu",
  },
  da: {
    Afrikaans: "af",
    Albansk: "sq",
    Amharisk: "am",
    Arabisk: "ar",
    Armensk: "hy",
    Aserbajdsjansk: "az",
    Baskisk: "eu",
    Bengali: "bn",
    Bosnisk: "bs",
    Bulgarsk: "bg",
    Burmesisk: "my",
    Cebuano: "ceb",
    Chichewa: "ny",
    Dansk: "da",
    Engelsk: "en",
    Esperanto: "eo",
    Estisk: "et",
    Finsk: "fi",
    Fransk: "fr",
    Frisisk: "fy",
    Galicisk: "gl",
    Georgisk: "ka",
    Græsk: "el",
    Gujarati: "gu",
    "Haitisk kreolsk": "ht",
    Hausa: "ha",
    Hawaiiansk: "haw",
    Hebraisk: "iw",
    Hindi: "hi",
    Hmong: "hmn",
    Hollandsk: "nl",
    Hviderussisk: "be",
    Igbo: "ig",
    Indonesisk: "id",
    Irsk: "ga",
    Islandsk: "is",
    Italiensk: "it",
    Japansk: "ja",
    Javanesisk: "jw",
    Jiddisch: "yi",
    Kannada: "kn",
    Kasakhisk: "kk",
    Katalansk: "ca",
    Khmer: "km",
    "Kinesisk (forenklet)": "zh-CN",
    "Kinesisk (traditionelt)": "zh-TW",
    Kirgisk: "ky",
    Koreansk: "ko",
    Korsikansk: "co",
    Kroatisk: "hr",
    Kurdisk: "ku",
    Laotisk: "lo",
    Latin: "la",
    Lettisk: "lv",
    Litauisk: "lt",
    Luxembourgsk: "lb",
    Makedonsk: "mk",
    Malagassisk: "mg",
    Malajisk: "ms",
    Malayalam: "ml",
    Maltesisk: "mt",
    Maori: "mi",
    Marathi: "mr",
    Mongolsk: "mn",
    Nepalesisk: "ne",
    Norsk: "no",
    Pashto: "ps",
    Persisk: "fa",
    Polsk: "pl",
    Portugisisk: "pt",
    Punjabi: "pa",
    Rumænsk: "ro",
    Russisk: "ru",
    Samoansk: "sm",
    Serbisk: "sr",
    Sesotho: "st",
    Shona: "sn",
    Sindhi: "sd",
    Sinhala: "si",
    "Skotsk gælisk": "gd",
    Slovakisk: "sk",
    Slovensk: "sl",
    Somalisk: "so",
    Spansk: "es",
    Sundanesisk: "su",
    Svensk: "sv",
    Swahili: "sw",
    Tadsjikisk: "tg",
    Tagalog: "tl",
    Tamil: "ta",
    Telugu: "te",
    Thailandsk: "th",
    Tjekkisk: "cs",
    Tyrkisk: "tr",
    Tysk: "de",
    Ukrainsk: "uk",
    Ungarsk: "hu",
    Urdu: "ur",
    Usbekisk: "uz",
    Vietnamesisk: "vi",
    Walisisk: "cy",
    Xhosa: "xh",
    Yoruba: "yo",
    Zulu: "zu",
  },
  de: {
    Afrikaans: "af",
    Albanisch: "sq",
    Amharisch: "am",
    Arabisch: "ar",
    Armenisch: "hy",
    Aserbaidschanisch: "az",
    Baskisch: "eu",
    Bengalisch: "bn",
    Birmanisch: "my",
    Bosnisch: "bs",
    Bulgarisch: "bg",
    Cebuano: "ceb",
    Chichewa: "ny",
    "Chinesisch (traditionell)": "zh-TW",
    "Chinesisch (vereinfacht)": "zh-CN",
    Dänisch: "da",
    Deutsch: "de",
    Englisch: "en",
    Esperanto: "eo",
    Estnisch: "et",
    Filipino: "tl",
    Finnisch: "fi",
    Französisch: "fr",
    Friesisch: "fy",
    Galizisch: "gl",
    Georgisch: "ka",
    Griechisch: "el",
    Gujarati: "gu",
    Haitianisch: "ht",
    Hausa: "ha",
    Hawaiisch: "haw",
    Hebräisch: "iw",
    Hindi: "hi",
    Hmong: "hmn",
    Igbo: "ig",
    Indonesisch: "id",
    Irisch: "ga",
    Isländisch: "is",
    Italienisch: "it",
    Japanisch: "ja",
    Javanisch: "jw",
    Jiddisch: "yi",
    Kannada: "kn",
    Kasachisch: "kk",
    Katalanisch: "ca",
    Khmer: "km",
    Kirgisisch: "ky",
    Koreanisch: "ko",
    Korsisch: "co",
    Kroatisch: "hr",
    "Kurdisch (kurmandschi)": "ku",
    Lao: "lo",
    Lateinisch: "la",
    Lettisch: "lv",
    Litauisch: "lt",
    Luxemburgisch: "lb",
    Malagasy: "mg",
    Malayalam: "ml",
    Malaysisch: "ms",
    Maltesisch: "mt",
    Maori: "mi",
    Marathi: "mr",
    Mazedonisch: "mk",
    Mongolisch: "mn",
    Nepalesisch: "ne",
    Niederländisch: "nl",
    Norwegisch: "no",
    Paschtu: "ps",
    Persisch: "fa",
    Polnisch: "pl",
    Portugiesisch: "pt",
    Punjabi: "pa",
    Rumänisch: "ro",
    Russisch: "ru",
    Samoanisch: "sm",
    "Schottisch-gälisch": "gd",
    Schwedisch: "sv",
    Serbisch: "sr",
    Sesotho: "st",
    Shona: "sn",
    Sindhi: "sd",
    Singhalesisch: "si",
    Slowakisch: "sk",
    Slowenisch: "sl",
    Somali: "so",
    Spanisch: "es",
    Suaheli: "sw",
    Sundanesisch: "su",
    Tadschikisch: "tg",
    Tamil: "ta",
    Telugu: "te",
    Thailändisch: "th",
    Tschechisch: "cs",
    Türkisch: "tr",
    Ukrainisch: "uk",
    Ungarisch: "hu",
    Urdu: "ur",
    Usbekisch: "uz",
    Vietnamesisch: "vi",
    Walisisch: "cy",
    Weißrussisch: "be",
    Xhosa: "xh",
    Yoruba: "yo",
    Zulu: "zu",
  },
  nl: {
    Afrikaans: "af",
    Albanees: "sq",
    Amharisch: "am",
    Arabisch: "ar",
    Armeens: "hy",
    Azerbeidzjaans: "az",
    Baskisch: "eu",
    Bengaals: "bn",
    Birmaans: "my",
    Bosnisch: "bs",
    Bulgaars: "bg",
    Catalaans: "ca",
    Cebuano: "ceb",
    Chichewa: "ny",
    "Chinees (traditioneel)": "zh-TW",
    "Chinees (vereenvoudigd)": "zh-CN",
    Corsicaans: "co",
    Deens: "da",
    Duits: "de",
    Engels: "en",
    Esperanto: "eo",
    Ests: "et",
    Fins: "fi",
    Frans: "fr",
    Fries: "fy",
    Galicisch: "gl",
    Georgisch: "ka",
    Grieks: "el",
    Gujarati: "gu",
    "Haïtiaans creools": "ht",
    Hausa: "ha",
    Hawaïaans: "haw",
    Hebreeuws: "iw",
    Hindi: "hi",
    Hmong: "hmn",
    Hongaars: "hu",
    Iers: "ga",
    Igbo: "ig",
    Ijslands: "is",
    Indonesisch: "id",
    Italiaans: "it",
    Japans: "ja",
    Javaans: "jw",
    Jiddisch: "yi",
    Kannada: "kn",
    Kazachs: "kk",
    Khmer: "km",
    Kirgizisch: "ky",
    Koerdisch: "ku",
    Koreaans: "ko",
    Kroatisch: "hr",
    Lao: "lo",
    Latijn: "la",
    Lets: "lv",
    Litouws: "lt",
    Luxemburgs: "lb",
    Macedonisch: "mk",
    Malagasi: "mg",
    Malayalam: "ml",
    Maleis: "ms",
    Maltees: "mt",
    Maori: "mi",
    Marathi: "mr",
    Mongools: "mn",
    Nederlands: "nl",
    Nepalees: "ne",
    Noors: "no",
    Oekraïens: "uk",
    Oezbeeks: "uz",
    Pashto: "ps",
    Perzisch: "fa",
    Pools: "pl",
    Portugees: "pt",
    Punjabi: "pa",
    Roemeens: "ro",
    Russisch: "ru",
    Samoaans: "sm",
    "Schots keltisch": "gd",
    Servisch: "sr",
    Sesotho: "st",
    Shona: "sn",
    Sindhi: "sd",
    Sinhala: "si",
    Slovaaks: "sk",
    Sloveens: "sl",
    Soendanees: "su",
    Somalisch: "so",
    Spaans: "es",
    Swahili: "sw",
    Tadzjieks: "tg",
    Tagalog: "tl",
    Tamil: "ta",
    Telugu: "te",
    Thai: "th",
    Tsjechisch: "cs",
    Turks: "tr",
    Urdu: "ur",
    Vietnamees: "vi",
    Wels: "cy",
    "Wit-russisch": "be",
    Xhosa: "xh",
    Yoruba: "yo",
    Zoeloe: "zu",
    Zweeds: "sv",
  },
  nb: {
    Afrikaans: "af",
    Albansk: "sq",
    Amharisk: "am",
    Arabisk: "ar",
    Armensk: "hy",
    Aserbajdsjansk: "az",
    Baskisk: "eu",
    Bengali: "bn",
    Bosnisk: "bs",
    Bulgarsk: "bg",
    Burmesisk: "my",
    Cebuano: "ceb",
    Chichewa: "ny",
    Dansk: "da",
    Engelsk: "en",
    Esperanto: "eo",
    Estisk: "et",
    Farsi: "fa",
    Finsk: "fi",
    Fransk: "fr",
    Frisisk: "fy",
    Galisisk: "gl",
    Georgisk: "ka",
    Gresk: "el",
    Gujarati: "gu",
    Hausa: "ha",
    Hawaiisk: "haw",
    Hebraisk: "iw",
    Hindi: "hi",
    Hmong: "hmn",
    Hviterussisk: "be",
    Igbo: "ig",
    Indonesisk: "id",
    Irsk: "ga",
    Islandsk: "is",
    Italiensk: "it",
    Japansk: "ja",
    Javanesisk: "jw",
    Jiddisk: "yi",
    Joruba: "yo",
    Kannada: "kn",
    Kasakhisk: "kk",
    Katalansk: "ca",
    Khmer: "km",
    "Kinesisk (forenklet)": "zh-CN",
    "Kinesisk (tradisjonell)": "zh-TW",
    Kirgisisk: "ky",
    Koreansk: "ko",
    Korsikansk: "co",
    "Kreol (haiti)": "ht",
    Kroatisk: "hr",
    Kurdisk: "ku",
    Laotisk: "lo",
    Latin: "la",
    Latvisk: "lv",
    Litauisk: "lt",
    Luxembourgsk: "lb",
    Madagassisk: "mg",
    Makedonsk: "mk",
    Malayalam: "ml",
    Malayisk: "ms",
    Maltesisk: "mt",
    Maori: "mi",
    Marathi: "mr",
    Mongolsk: "mn",
    Nederlandsk: "nl",
    Nepalsk: "ne",
    Norsk: "no",
    Pashto: "ps",
    Polsk: "pl",
    Portugisisk: "pt",
    Punjabi: "pa",
    Rumensk: "ro",
    Russisk: "ru",
    Samoansk: "sm",
    Serbisk: "sr",
    Shona: "sn",
    Sindhi: "sd",
    Singalesisk: "si",
    "Skotsk gælisk": "gd",
    Slovakisk: "sk",
    Slovensk: "sl",
    Somali: "so",
    Sotho: "st",
    Spansk: "es",
    Sundanesisk: "su",
    Svensk: "sv",
    Swahili: "sw",
    Tadsjikisk: "tg",
    Tagalog: "tl",
    Tamil: "ta",
    Telugu: "te",
    Thai: "th",
    Tsjekkisk: "cs",
    Tyrkisk: "tr",
    Tysk: "de",
    Ukrainsk: "uk",
    Ungarsk: "hu",
    Urdu: "ur",
    Usbekisk: "uz",
    Vietnamesisk: "vi",
    Walisisk: "cy",
    Xhosa: "xh",
    Zulu: "zu",
  },
  pl: {
    Afrikaans: "af",
    Albański: "sq",
    Amharski: "am",
    Angielski: "en",
    Arabski: "ar",
    Azerski: "az",
    Baskijski: "eu",
    Bengalski: "bn",
    Białoruski: "be",
    Birmański: "my",
    Bośniacki: "bs",
    Bułgarski: "bg",
    Cebuański: "ceb",
    "Chiński (tradycyjny)": "zh-TW",
    "Chiński (uproszczony)": "zh-CN",
    Chorwacki: "hr",
    Czeski: "cs",
    Cziczewa: "ny",
    Duński: "da",
    Esperanto: "eo",
    Estoński: "et",
    Filipiński: "tl",
    Fiński: "fi",
    Francuski: "fr",
    Fryzyjski: "fy",
    Galicyjski: "gl",
    Grecki: "el",
    Gruziński: "ka",
    Gudżarati: "gu",
    Hausa: "ha",
    Hawajski: "haw",
    Hebrajski: "iw",
    Hindi: "hi",
    Hiszpański: "es",
    Hmong: "hmn",
    Igbo: "ig",
    Indonezyjski: "id",
    Irlandzki: "ga",
    Islandzki: "is",
    Japoński: "ja",
    Jawajski: "jw",
    Jidysz: "yi",
    Joruba: "yo",
    Kannada: "kn",
    Kataloński: "ca",
    Kazachski: "kk",
    Khmerski: "km",
    Kirgiski: "ky",
    Koreański: "ko",
    Korsykański: "co",
    "Kreolski (haiti)": "ht",
    Kurdyjski: "ku",
    Laotański: "lo",
    Litewski: "lt",
    Luksemburski: "lb",
    Łaciński: "la",
    Łotewski: "lv",
    Macedoński: "mk",
    Malajalam: "ml",
    Malajski: "ms",
    Malgaski: "mg",
    Maltański: "mt",
    Maori: "mi",
    Marathi: "mr",
    Mongolski: "mn",
    Nepalski: "ne",
    Niderlandzki: "nl",
    Niemiecki: "de",
    Norweski: "no",
    Ormiański: "hy",
    Paszto: "ps",
    Pendżabski: "pa",
    Perski: "fa",
    Polski: "pl",
    Portugalski: "pt",
    Rosyjski: "ru",
    Rumuński: "ro",
    Samoański: "sm",
    Serbski: "sr",
    Shona: "sn",
    Sindhi: "sd",
    Słowacki: "sk",
    Słoweński: "sl",
    Somalijski: "so",
    Sotho: "st",
    Suahili: "sw",
    Sundajski: "su",
    Syngaleski: "si",
    "Szkocki gaelicki": "gd",
    Szwedzki: "sv",
    Tadżycki: "tg",
    Tajski: "th",
    Tamilski: "ta",
    Telugu: "te",
    Turecki: "tr",
    Ukraiński: "uk",
    Urdu: "ur",
    Uzbecki: "uz",
    Walijski: "cy",
    Węgierski: "hu",
    Wietnamski: "vi",
    Włoski: "it",
    Xhosa: "xh",
    Zulu: "zu",
  },
  pt: {
    Africâner: "af",
    Albanês: "sq",
    Alemão: "de",
    Amárico: "am",
    Árabe: "ar",
    Armênio: "hy",
    Azerbaijano: "az",
    Basco: "eu",
    Bengali: "bn",
    "Bielo-russo": "be",
    Birmanês: "my",
    Bósnio: "bs",
    Búlgaro: "bg",
    Canarês: "kn",
    Catalão: "ca",
    Cazaque: "kk",
    Cebuano: "ceb",
    Chicheua: "ny",
    "Chinês (simplificado)": "zh-CN",
    "Chinês (tradicional)": "zh-TW",
    Chona: "sn",
    Cingalês: "si",
    Coreano: "ko",
    Corso: "co",
    "Crioulo haitiano": "ht",
    Croata: "hr",
    Curdo: "ku",
    Dinamarquês: "da",
    Eslovaco: "sk",
    Esloveno: "sl",
    Espanhol: "es",
    Esperanto: "eo",
    Estoniano: "et",
    Filipino: "tl",
    Finlandês: "fi",
    Francês: "fr",
    Frísio: "fy",
    "Gaélico escocês": "gd",
    Galego: "gl",
    Galês: "cy",
    Georgiano: "ka",
    Grego: "el",
    Guzerate: "gu",
    Hauçá: "ha",
    Havaiano: "haw",
    Hebraico: "iw",
    Hindi: "hi",
    Hmong: "hmn",
    Holandês: "nl",
    Húngaro: "hu",
    Igbo: "ig",
    Iídiche: "yi",
    Indonésio: "id",
    Inglês: "en",
    Ioruba: "yo",
    Irlandês: "ga",
    Islandês: "is",
    Italiano: "it",
    Japonês: "ja",
    Javanês: "jw",
    Khmer: "km",
    Laosiano: "lo",
    Latim: "la",
    Letão: "lv",
    Lituano: "lt",
    Luxemburguês: "lb",
    Macedônio: "mk",
    Malaiala: "ml",
    Malaio: "ms",
    Malgaxe: "mg",
    Maltês: "mt",
    Maori: "mi",
    Marata: "mr",
    Mongol: "mn",
    Nepalês: "ne",
    Norueguês: "no",
    Pachto: "ps",
    Persa: "fa",
    Polonês: "pl",
    Português: "pt",
    Punjabi: "pa",
    Quirguiz: "ky",
    Romeno: "ro",
    Russo: "ru",
    Samoano: "sm",
    Sérvio: "sr",
    Sessoto: "st",
    Sindi: "sd",
    Somali: "so",
    Suaíle: "sw",
    Sueco: "sv",
    Sundanês: "su",
    Tadjique: "tg",
    Tailandês: "th",
    Tâmil: "ta",
    Tcheco: "cs",
    Telugo: "te",
    Turco: "tr",
    Ucraniano: "uk",
    Urdu: "ur",
    Uzbeque: "uz",
    Vietnamita: "vi",
    Xhosa: "xh",
    Zulu: "zu",
  },
  ro: {
    Afrikaans: "af",
    Albaneză: "sq",
    Amharică: "am",
    Arabă: "ar",
    Armeană: "hy",
    Azerbaidjană: "az",
    Bască: "eu",
    Bengali: "bn",
    Bielorusă: "be",
    Birmană: "my",
    Bosniacă: "bs",
    Bulgară: "bg",
    Catalană: "ca",
    Cebuană: "ceb",
    Cehă: "cs",
    Chichewa: "ny",
    "Chineză (simplificată)": "zh-CN",
    "Chineză (tradițională)": "zh-TW",
    Coreeană: "ko",
    Corsicană: "co",
    "Creolă haitiană": "ht",
    Croată: "hr",
    Daneză: "da",
    Ebraică: "iw",
    Engleză: "en",
    Esperanto: "eo",
    Estonă: "et",
    Filipineză: "tl",
    Finlandeză: "fi",
    Franceză: "fr",
    Frizonă: "fy",
    Galeză: "cy",
    "Galica scoțiană": "gd",
    Galiciană: "gl",
    Germană: "de",
    Greacă: "el",
    Gruzină: "ka",
    Gujarati: "gu",
    Hausa: "ha",
    Hawaiiană: "haw",
    Hindi: "hi",
    Hmong: "hmn",
    Idiș: "yi",
    Igbo: "ig",
    Indoneziană: "id",
    Irlandeză: "ga",
    Islandeză: "is",
    Italiană: "it",
    Japoneză: "ja",
    Javaneză: "jw",
    Kannada: "kn",
    Kazahă: "kk",
    Khmeră: "km",
    Kirghiză: "ky",
    Kurdă: "ku",
    Laoțiană: "lo",
    Latină: "la",
    Letonă: "lv",
    Lituaniană: "lt",
    Luxemburgheză: "lb",
    Macedoneană: "mk",
    Maghiară: "hu",
    Malaeză: "ms",
    Malayalam: "ml",
    Malgașă: "mg",
    Malteză: "mt",
    Maori: "mi",
    Marathi: "mr",
    Mongolă: "mn",
    Neerlandeză: "nl",
    Nepaleză: "ne",
    Norvegiană: "no",
    Pashto: "ps",
    Persană: "fa",
    Poloneză: "pl",
    Portugheză: "pt",
    Punjabi: "pa",
    Română: "ro",
    Rusă: "ru",
    Samoană: "sm",
    Sârbă: "sr",
    Sesotho: "st",
    Shonă: "sn",
    Sindhi: "sd",
    Singhaleză: "si",
    Slovacă: "sk",
    Slovenă: "sl",
    Somali: "so",
    Spaniolă: "es",
    Suedeză: "sv",
    Sundaneză: "su",
    Swahili: "sw",
    Tadjică: "tg",
    Tamilă: "ta",
    Telugu: "te",
    Thailandeză: "th",
    Turcă: "tr",
    Ucraineană: "uk",
    Urdu: "ur",
    Uzbecă: "uz",
    Vietnameză: "vi",
    Xhosa: "xh",
    Yoruba: "yo",
    Zulu: "zu",
  },
  sv: {
    Afrikaans: "af",
    Albanska: "sq",
    Amhariska: "am",
    Arabiska: "ar",
    Armeniska: "hy",
    Azerbajdzjanska: "az",
    Baskiska: "eu",
    Bengali: "bn",
    Bosniska: "bs",
    Bulgariska: "bg",
    Burmesiska: "my",
    Cebuano: "ceb",
    Chichewa: "ny",
    Danska: "da",
    Engelska: "en",
    Esperanto: "eo",
    Estniska: "et",
    Filippinska: "tl",
    Finska: "fi",
    Franska: "fr",
    Frisiska: "fy",
    Gaeliska: "gd",
    Galiciska: "gl",
    Georgiska: "ka",
    Grekiska: "el",
    Gujarati: "gu",
    Haitiska: "ht",
    Hausa: "ha",
    Hawaiianska: "haw",
    Hebreiska: "iw",
    Hindi: "hi",
    Hmong: "hmn",
    Igbo: "ig",
    Indonesiska: "id",
    Irländska: "ga",
    Isländska: "is",
    Italienska: "it",
    Japanska: "ja",
    Javanesiska: "jw",
    Jiddisch: "yi",
    Kanaresiska: "kn",
    Katalanska: "ca",
    Kazakiska: "kk",
    Khmer: "km",
    "Kinesiska (förenklad)": "zh-CN",
    "Kinesiska (traditionell)": "zh-TW",
    Kirgiziska: "ky",
    Koreanska: "ko",
    Korsiska: "co",
    Kroatiska: "hr",
    Kurdiska: "ku",
    Laotiska: "lo",
    Latin: "la",
    Lettiska: "lv",
    Litauiska: "lt",
    Luxemburgska: "lb",
    Makedonska: "mk",
    Malagassiska: "mg",
    Malayalam: "ml",
    Malaysiska: "ms",
    Maltesiska: "mt",
    Maori: "mi",
    Marathi: "mr",
    Mongoliska: "mn",
    Nederländska: "nl",
    Nepali: "ne",
    Norska: "no",
    Pashto: "ps",
    Persiska: "fa",
    Polska: "pl",
    Portugisiska: "pt",
    Punjabi: "pa",
    Rumänska: "ro",
    Ryska: "ru",
    Samoanska: "sm",
    Serbiska: "sr",
    Sesotho: "st",
    Shona: "sn",
    Sindhi: "sd",
    Singalesiska: "si",
    Slovakiska: "sk",
    Slovenska: "sl",
    Somaliska: "so",
    Spanska: "es",
    Sundanesiska: "su",
    Svenska: "sv",
    Swahili: "sw",
    Tadzjikiska: "tg",
    Tamil: "ta",
    Telugu: "te",
    Thailändska: "th",
    Tjeckiska: "cs",
    Turkiska: "tr",
    Tyska: "de",
    Ukrainska: "uk",
    Ungerska: "hu",
    Urdu: "ur",
    Uzbekiska: "uz",
    Vietnamesiska: "vi",
    Vitryska: "be",
    Walesiska: "cy",
    Xhosa: "xh",
    Yoruba: "yo",
    Zulu: "zu",
  },
  tr: {
    "Afrika dili": "af",
    Almanca: "de",
    Arapça: "ar",
    Arnavutça: "sq",
    Azerice: "az",
    Baskça: "eu",
    Belarusça: "be",
    Bengalce: "bn",
    Boşnakça: "bs",
    Bulgarca: "bg",
    Burmaca: "my",
    "Cava dili": "jw",
    Cebuano: "ceb",
    Chicheva: "ny",
    Çekçe: "cs",
    "Çince (basitleştirilmiş)": "zh-CN",
    "Çince (geleneksel)": "zh-TW",
    Danca: "da",
    "Endonezya dili": "id",
    Ermenice: "hy",
    Esperantoca: "eo",
    Estonyaca: "et",
    Farsça: "fa",
    Felemenkçe: "nl",
    Filipince: "tl",
    Fince: "fi",
    Fransızca: "fr",
    "Frizon dili": "fy",
    Galce: "cy",
    Galiçyaca: "gl",
    "Gücerat dili": "gu",
    Gürcüce: "ka",
    Habeşçe: "am",
    "Haiti creole dili": "ht",
    "Hausa dili": "ha",
    "Havai dili": "haw",
    Hırvatça: "hr",
    Hintçe: "hi",
    "Hmong dili": "hmn",
    Hosa: "xh",
    İbranice: "iw",
    "İgbo dili": "ig",
    İngilizce: "en",
    İrlandaca: "ga",
    İspanyolca: "es",
    İsveççe: "sv",
    İtalyanca: "it",
    İzlandaca: "is",
    Japonca: "ja",
    Kamboçyaca: "km",
    Kannada: "kn",
    Katalanca: "ca",
    Kazakça: "kk",
    Kırgızca: "ky",
    Korece: "ko",
    "Korsika dili": "co",
    "Kuzey i̇skoç dili": "gd",
    Kürtçe: "ku",
    Laoca: "lo",
    Latince: "la",
    Lehçe: "pl",
    Letonca: "lv",
    Litvanca: "lt",
    Lüksemburgca: "lb",
    Macarca: "hu",
    "Madagaskar dili": "mg",
    Makedonca: "mk",
    Malayalam: "ml",
    "Malezya dili": "ms",
    "Malta dili": "mt",
    "Maori dili": "mi",
    Marathi: "mr",
    Moğolca: "mn",
    Nepalce: "ne",
    Norveççe: "no",
    Özbekçe: "uz",
    "Pencap dili": "pa",
    Peştuca: "ps",
    Portekizce: "pt",
    Romence: "ro",
    Rusça: "ru",
    Samoaca: "sm",
    "Sesotho dili": "st",
    Seylanca: "si",
    Shona: "sn",
    Sırpça: "sr",
    Sint: "sd",
    Slovakça: "sk",
    Slovence: "sl",
    Somalice: "so",
    Sundanizce: "su",
    "Svahili dili": "sw",
    Tacikce: "tg",
    Tamil: "ta",
    "Tay dili": "th",
    "Telugu dili": "te",
    Türkçe: "tr",
    Ukraynaca: "uk",
    Urduca: "ur",
    Vietnamca: "vi",
    Yidce: "yi",
    Yoruba: "yo",
    Yunanca: "el",
    Zulu: "zu",
  },
  el: {
    Αγγλικά: "en",
    Αζερμπαϊτζανικά: "az",
    Αλβανικά: "sq",
    Αμχαρικά: "am",
    Αραβικά: "ar",
    Αρμενικά: "hy",
    Αφρικάανς: "af",
    Βασκικά: "eu",
    Βεγγαλική: "bn",
    Βιετναμεζικά: "vi",
    Βιρμανικά: "my",
    Βοσνιακά: "bs",
    Βουλγαρικά: "bg",
    "Γαελικά σκοτίας": "gd",
    Γαλικιακά: "gl",
    Γαλλικά: "fr",
    Γερμανικά: "de",
    Γεωργιανά: "ka",
    Γίντις: "yi",
    Γιορούμπα: "yo",
    Γκουτζαρατικά: "gu",
    Δανικά: "da",
    Εβραϊκά: "iw",
    Ελληνικά: "el",
    Εσθονικά: "et",
    Εσπεράντο: "eo",
    Ζόσα: "xh",
    Ζουλού: "zu",
    Ιαπωνικά: "ja",
    Ίγκμπο: "ig",
    Ινδονησιακά: "id",
    Ιρλανδικά: "ga",
    Ισλανδικά: "is",
    Ισπανικά: "es",
    Ιταλικά: "it",
    Καζακστανικά: "kk",
    Κανάντα: "kn",
    Καταλανικά: "ca",
    "Κινέζικα (απλοποιημένα)": "zh-CN",
    "Κινέζικα (παραδοσιακά)": "zh-TW",
    Κιργιζιανά: "ky",
    Κορεατικά: "ko",
    Κορσικανικά: "co",
    Κουρδικά: "ku",
    "Κρεόλ αϊτής": "ht",
    Κροατικά: "hr",
    Λάο: "lo",
    Λατινικά: "la",
    Λετονικά: "lv",
    Λευκορωσικά: "be",
    Λιθουανικά: "lt",
    Λουξεμβουργιανά: "lb",
    Μαλαγάσι: "mg",
    Μαλαγιάλαμ: "ml",
    Μαλέι: "ms",
    Μαλτεζικά: "mt",
    Μαορί: "mi",
    Μαραθικά: "mr",
    Μογγολικά: "mn",
    Νεπαλικά: "ne",
    Νορβηγικά: "no",
    Ολλανδικά: "nl",
    Ουαλικά: "cy",
    Ουγγρικά: "hu",
    Ουζμπεκικά: "uz",
    Ουκρανικά: "uk",
    Ουρντού: "ur",
    Παντζάμπι: "pa",
    Πάστο: "ps",
    Περσικά: "fa",
    Πολωνικά: "pl",
    Πορτογαλικά: "pt",
    Ρουμανικά: "ro",
    Ρωσικά: "ru",
    Σαμοανικά: "sm",
    Σεμπουάνο: "ceb",
    Σερβικά: "sr",
    Σεσότο: "st",
    Σίντι: "sd",
    Σινχάλα: "si",
    Σλαβομακεδονικά: "mk",
    Σλοβακικά: "sk",
    Σλοβενικά: "sl",
    Σομαλικά: "so",
    Σόνα: "sn",
    Σουαχίλι: "sw",
    Σουηδικά: "sv",
    Σούντα: "su",
    Ταζικιστανικά: "tg",
    Ταϊλανδεζικά: "th",
    Ταμίλ: "ta",
    Τελούγκου: "te",
    Τζαβανεζικά: "jw",
    Τούρκικα: "tr",
    Τσεχικά: "cs",
    Τσιτσέουα: "ny",
    Φιλιπινεζικά: "tl",
    Φινλανδικά: "fi",
    Φριζιανά: "fy",
    Χαβαϊκά: "haw",
    Χάουσα: "ha",
    Χίντι: "hi",
    Χμερ: "km",
    Χμονγκ: "hmn",
  },
  he: {
    אוזבקית: "uz",
    אוקראינית: "uk",
    אורדו: "ur",
    אזרית: "az",
    איגדו: "ig",
    איטלקית: "it",
    אינדונזית: "id",
    איסלנדית: "is",
    אירית: "ga",
    אלבנית: "sq",
    אמהרית: "am",
    אנגלית: "en",
    אסטונית: "et",
    אספרנטו: "eo",
    אפריקאנס: "af",
    ארמנית: "hy",
    באסקית: "eu",
    בולגרית: "bg",
    בוסנית: "bs",
    בורמזית: "my",
    בלארוסית: "be",
    בנגאלית: "bn",
    "ג'אווה": "jw",
    גאורגית: "ka",
    "גוג'אראטי": "gu",
    גליציאנית: "gl",
    גרמנית: "de",
    דנית: "da",
    האוסה: "ha",
    הוואית: "haw",
    הולנדית: "nl",
    הונגרית: "hu",
    הינדי: "hi",
    המונג: "hmn",
    וולשית: "cy",
    וייטנאמית: "vi",
    זולו: "zu",
    חמר: "km",
    טאמילית: "ta",
    "טג'יקית": "tg",
    טורקית: "tr",
    טלוגו: "te",
    יוונית: "el",
    יורובה: "yo",
    יידיש: "yi",
    יפנית: "ja",
    כורדית: "ku",
    לאו: "lo",
    לוקסמבורגית: "lb",
    לטווית: "lv",
    לטינית: "la",
    ליטאית: "lt",
    מאורית: "mi",
    מאלאיאלם: "ml",
    מאלזית: "ms",
    מאראתי: "mr",
    מונגולית: "mn",
    מלגשית: "mg",
    מלטית: "mt",
    מקדונית: "mk",
    נורווגית: "no",
    נפאלית: "ne",
    סבואנו: "ceb",
    סוואהילית: "sw",
    סומלית: "so",
    סונדית: "su",
    סינדהי: "sd",
    סינהלית: "si",
    "סינית (מסורתית)": "zh-TW",
    "סינית (פשוטה)": "zh-CN",
    סלובנית: "sl",
    סלובקית: "sk",
    סמואית: "sm",
    "ססות'ו": "st",
    ספרדית: "es",
    "סקוטית גאלית": "gd",
    סרבית: "sr",
    עברית: "iw",
    ערבית: "ar",
    פולנית: "pl",
    "פונג'אבית": "pa",
    פורטוגזית: "pt",
    פיליפינית: "tl",
    פינית: "fi",
    פריזית: "fy",
    פרסית: "fa",
    פשטו: "ps",
    "צ'יצ'ווה": "ny",
    "צ'כית": "cs",
    צרפתית: "fr",
    קאנאדה: "kn",
    קוהסה: "xh",
    קוריאנית: "ko",
    קורסיקאית: "co",
    קזאחית: "kk",
    קטלאנית: "ca",
    קירגיזית: "ky",
    קרואטית: "hr",
    "קריאולית האיטית": "ht",
    רומנית: "ro",
    רוסית: "ru",
    שוודית: "sv",
    שונה: "sn",
    תאילנדית: "th",
  },
  ar: {
    الآيسلندية: "is",
    الأذرية: "az",
    الأردية: "ur",
    الارمنية: "hy",
    الإسبانية: "es",
    الاسبرانتو: "eo",
    الإستونية: "et",
    "الاسكتلندية الغالية": "gd",
    الافريقانية: "af",
    الألبانية: "sq",
    الألمانية: "de",
    الأمهرية: "am",
    الإنجليزية: "en",
    الإندونيسية: "id",
    الأوزبكية: "uz",
    الأوكرانية: "uk",
    الأيرلندية: "ga",
    الإيطالية: "it",
    الإيغبو: "ig",
    الباسكية: "eu",
    الباشتوية: "ps",
    البرتغالية: "pt",
    البلغارية: "bg",
    البنجابية: "pa",
    البنغالية: "bn",
    البورمية: "my",
    البوسنية: "bs",
    البولندية: "pl",
    البيلاروسية: "be",
    التاميلية: "ta",
    التايلاندية: "th",
    التركية: "tr",
    التشيكية: "cs",
    التيلوجو: "te",
    الجاليكية: "gl",
    الجاوية: "jw",
    الجورجية: "ka",
    الخؤوصا: "xh",
    الخميرية: "km",
    الدانماركية: "da",
    الروسية: "ru",
    الرومانية: "ro",
    الزولوية: "zu",
    الساموانية: "sm",
    الساندينيزية: "su",
    السلوفاكية: "sk",
    السلوفينية: "sl",
    السندية: "sd",
    السنهالية: "si",
    السواحيلية: "sw",
    السويدية: "sv",
    السيبيوانية: "ceb",
    السيسوتو: "st",
    الشونا: "sn",
    الصربية: "sr",
    الصومالية: "so",
    "الصينية (التقليدية)": "zh-TW",
    "الصينية (المبسطة)": "zh-CN",
    الطاجيكي: "tg",
    العبرية: "iw",
    العربية: "ar",
    الغوجراتية: "gu",
    الفارسية: "fa",
    الفرنسية: "fr",
    الفريزية: "fy",
    الفلبينية: "tl",
    الفنلندية: "fi",
    الفيتنامية: "vi",
    القطلونية: "ca",
    القيرغيزية: "ky",
    الكازاكي: "kk",
    الكانادا: "kn",
    الكردية: "ku",
    الكرواتية: "hr",
    الكورسيكي: "co",
    الكورية: "ko",
    اللاتفية: "lv",
    اللاتينية: "la",
    اللاوو: "lo",
    "اللغة الكريولية الهايتية": "ht",
    اللوكسمبورغية: "lb",
    الليتوانية: "lt",
    المالايالامية: "ml",
    المالطيّة: "mt",
    الماورية: "mi",
    المدغشقرية: "mg",
    المقدونية: "mk",
    الملايو: "ms",
    المنغولية: "mn",
    المهراتية: "mr",
    النرويجية: "no",
    النيبالية: "ne",
    الهمونجية: "hmn",
    الهندية: "hi",
    الهنغارية: "hu",
    الهوسا: "ha",
    الهولندية: "nl",
    الويلزية: "cy",
    اليابانية: "ja",
    اليورباية: "yo",
    اليونانية: "el",
    الييدية: "yi",
    تشيتشوا: "ny",
    "لغة هاواي": "haw",
  },
  th: {
    ภาษากรีก: "el",
    ภาษากันนาดา: "kn",
    ภาษากาลิเชียน: "gl",
    ภาษากูจาราติ: "gu",
    ภาษาเกลิกในสก็อต: "gd",
    ภาษาเกาหลี: "ko",
    ภาษาเขมร: "km",
    ภาษาคอร์สิกา: "co",
    ภาษาคาซัค: "kk",
    ภาษาคาตาลัน: "ca",
    ภาษาคีร์กิซ: "ky",
    ภาษาเคิร์ด: "ku",
    ภาษาโครเอเชีย: "hr",
    ภาษาจอร์เจีย: "ka",
    "ภาษาจีน (ดั้งเดิม)": "zh-TW",
    "ภาษาจีน (แบบย่อ)": "zh-CN",
    ภาษาชวา: "jw",
    ภาษาชิเชวา: "ny",
    ภาษาเช็ก: "cs",
    ภาษาโชนา: "sn",
    ภาษาซามัว: "sm",
    ภาษาซีบัวโน: "ceb",
    ภาษาซุนดา: "su",
    ภาษาซูลู: "zu",
    ภาษาเซโซโท: "st",
    ภาษาเซอร์เบียน: "sr",
    ภาษาโซซา: "xh",
    ภาษาโซมาลี: "so",
    ภาษาญี่ปุ่น: "ja",
    ภาษาดัตช์: "nl",
    ภาษาเดนมาร์ก: "da",
    ภาษาตุรกี: "tr",
    ภาษาเตลูกู: "te",
    ภาษาทมิฬ: "ta",
    ภาษาทาจิก: "tg",
    ภาษาไทย: "th",
    ภาษานอร์เวย์: "no",
    ภาษาเนปาล: "ne",
    ภาษาบอสเนีย: "bs",
    ภาษาบัลกาเรีย: "bg",
    ภาษาบาสก์: "eu",
    ภาษาเบงกาลี: "bn",
    ภาษาเบลารูเชียน: "be",
    ภาษาปัญจาป: "pa",
    ภาษาเปอร์เซีย: "fa",
    ภาษาโปรตุเกส: "pt",
    ภาษาโปแลนด์: "pl",
    ภาษาฝรั่งเศส: "fr",
    ภาษาพาชตู: "ps",
    ภาษาฟริเชียน: "fy",
    ภาษาฟินแลนด์: "fi",
    ภาษาฟิลิปปินส์: "tl",
    ภาษาม้ง: "hmn",
    ภาษามองโกเลีย: "mn",
    ภาษามัลทีส: "mt",
    ภาษามาซีโดเนีย: "mk",
    ภาษามาราฐี: "mr",
    ภาษามาลากาซี: "mg",
    ภาษามาลายาลัม: "ml",
    ภาษามาเลย์: "ms",
    ภาษาเมารี: "mi",
    "ภาษาเมียนมา (พม่า)": "my",
    ภาษายิดดิช: "yi",
    ภาษายูเครน: "uk",
    ภาษาเยอรมัน: "de",
    ภาษาโยรูบา: "yo",
    ภาษารัสเซีย: "ru",
    ภาษาโรมาเนีย: "ro",
    ภาษาละติน: "la",
    ภาษาลักเซมเบิร์ก: "lb",
    ภาษาลัทเวีย: "lv",
    ภาษาลาว: "lo",
    ภาษาลิทัวเนีย: "lt",
    ภาษาเวลส์: "cy",
    ภาษาเวียดนาม: "vi",
    ภาษาสเปน: "es",
    ภาษาสโลวัก: "sk",
    ภาษาสโลเวเนีย: "sl",
    ภาษาสวาฮิลี: "sw",
    ภาษาสวีเดน: "sv",
    ภาษาสิงหล: "si",
    ภาษาสินธุ: "sd",
    ภาษาอังกฤษ: "en",
    ภาษาอัมฮาริก: "am",
    ภาษาอัลบาเนีย: "sq",
    ภาษาอาร์เซอร์ไบจัน: "az",
    ภาษาอาร์เมเนีย: "hy",
    ภาษาอาหรับ: "ar",
    ภาษาอิกโบ: "ig",
    ภาษาอิตาลี: "it",
    ภาษาอินโดนีเซีย: "id",
    ภาษาอุสเบกิสถาน: "uz",
    ภาษาอูรดูร์: "ur",
    ภาษาเอสโทเนีย: "et",
    ภาษาเอสเปอแรนโต: "eo",
    ภาษาแอฟริกา: "af",
    ภาษาไอซ์แลนดิก: "is",
    ภาษาไอริช: "ga",
    ภาษาฮังการี: "hu",
    ภาษาฮัวซา: "ha",
    ภาษาฮาวาย: "haw",
    ภาษาฮินดี: "hi",
    ภาษาฮิบรู: "iw",
    ภาษาเฮติครีโอล: "ht",
  },
  zh: {
    阿尔巴尼亚语: "sq",
    阿拉伯语: "ar",
    阿姆哈拉语: "am",
    阿塞拜疆语: "az",
    爱尔兰语: "ga",
    爱沙尼亚语: "et",
    巴斯克语: "eu",
    白俄罗斯语: "be",
    保加利亚语: "bg",
    冰岛语: "is",
    波兰语: "pl",
    波斯尼亚语: "bs",
    波斯语: "fa",
    "布尔语(南非荷兰语)": "af",
    丹麦语: "da",
    德语: "de",
    俄语: "ru",
    法语: "fr",
    菲律宾语: "tl",
    芬兰语: "fi",
    弗里西语: "fy",
    高棉语: "km",
    格鲁吉亚语: "ka",
    古吉拉特语: "gu",
    哈萨克语: "kk",
    海地克里奥尔语: "ht",
    韩语: "ko",
    豪萨语: "ha",
    荷兰语: "nl",
    吉尔吉斯语: "ky",
    加利西亚语: "gl",
    加泰罗尼亚语: "ca",
    捷克语: "cs",
    卡纳达语: "kn",
    科西嘉语: "co",
    克罗地亚语: "hr",
    库尔德语: "ku",
    拉丁语: "la",
    拉脱维亚语: "lv",
    老挝语: "lo",
    立陶宛语: "lt",
    卢森堡语: "lb",
    罗马尼亚语: "ro",
    马尔加什语: "mg",
    马耳他语: "mt",
    马拉地语: "mr",
    马拉雅拉姆语: "ml",
    马来语: "ms",
    马其顿语: "mk",
    毛利语: "mi",
    蒙古语: "mn",
    孟加拉语: "bn",
    缅甸语: "my",
    苗语: "hmn",
    南非科萨语: "xh",
    南非祖鲁语: "zu",
    尼泊尔语: "ne",
    挪威语: "no",
    旁遮普语: "pa",
    葡萄牙语: "pt",
    普什图语: "ps",
    齐切瓦语: "ny",
    日语: "ja",
    瑞典语: "sv",
    萨摩亚语: "sm",
    塞尔维亚语: "sr",
    塞索托语: "st",
    僧伽罗语: "si",
    世界语: "eo",
    斯洛伐克语: "sk",
    斯洛文尼亚语: "sl",
    斯瓦希里语: "sw",
    苏格兰盖尔语: "gd",
    宿务语: "ceb",
    索马里语: "so",
    塔吉克语: "tg",
    泰卢固语: "te",
    泰米尔语: "ta",
    泰语: "th",
    土耳其语: "tr",
    威尔士语: "cy",
    乌尔都语: "ur",
    乌克兰语: "uk",
    乌兹别克语: "uz",
    西班牙语: "es",
    希伯来语: "iw",
    希腊语: "el",
    夏威夷语: "haw",
    信德语: "sd",
    匈牙利语: "hu",
    修纳语: "sn",
    亚美尼亚语: "hy",
    伊博语: "ig",
    意大利语: "it",
    意第绪语: "yi",
    印地语: "hi",
    印尼巽他语: "su",
    印尼语: "id",
    印尼爪哇语: "jw",
    英语: "en",
    约鲁巴语: "yo",
    越南语: "vi",
    "中文(繁体)": "zh-TW",
    "中文(简体)": "zh-CN",
  },
  ja: {
    アイスランド語: "is",
    アイルランド語: "ga",
    アゼルバイジャン語: "az",
    アフリカーンス語: "af",
    アムハラ語: "am",
    アラビア語: "ar",
    アルバニア語: "sq",
    アルメニア語: "hy",
    イタリア語: "it",
    イディッシュ語: "yi",
    イボ語: "ig",
    インドネシア語: "id",
    ウェールズ語: "cy",
    ウクライナ語: "uk",
    ウズベク語: "uz",
    ウルドゥ語: "ur",
    エストニア語: "et",
    エスペラント語: "eo",
    オランダ語: "nl",
    カザフ語: "kk",
    カタルーニャ語: "ca",
    ガリシア語: "gl",
    カンナダ語: "kn",
    ギリシャ語: "el",
    キルギス語: "ky",
    グジャラト語: "gu",
    クメール語: "km",
    クルド語: "ku",
    クロアチア語: "hr",
    コーサ語: "xh",
    コルシカ語: "co",
    サモア語: "sm",
    ジャワ語: "jw",
    "ジョージア(グルジア)語": "ka",
    ショナ語: "sn",
    シンド語: "sd",
    シンハラ語: "si",
    スウェーデン語: "sv",
    ズールー語: "zu",
    "スコットランド ゲール語": "gd",
    スペイン語: "es",
    スロバキア語: "sk",
    スロベニア語: "sl",
    スワヒリ語: "sw",
    スンダ語: "su",
    セブアノ語: "ceb",
    セルビア語: "sr",
    ソト語: "st",
    ソマリ語: "so",
    タイ語: "th",
    タガログ語: "tl",
    タジク語: "tg",
    タミル語: "ta",
    チェコ語: "cs",
    チェワ語: "ny",
    テルグ語: "te",
    デンマーク語: "da",
    ドイツ語: "de",
    トルコ語: "tr",
    ネパール語: "ne",
    ノルウェー語: "no",
    ハイチ語: "ht",
    ハウサ語: "ha",
    パシュト語: "ps",
    バスク語: "eu",
    ハワイ語: "haw",
    ハンガリー語: "hu",
    パンジャブ語: "pa",
    ヒンディー語: "hi",
    フィンランド語: "fi",
    フランス語: "fr",
    フリジア語: "fy",
    ブルガリア語: "bg",
    ベトナム語: "vi",
    ヘブライ語: "iw",
    ベラルーシ語: "be",
    ペルシャ語: "fa",
    ベンガル語: "bn",
    ポーランド語: "pl",
    ボスニア語: "bs",
    ポルトガル語: "pt",
    マオリ語: "mi",
    マケドニア語: "mk",
    マラーティー語: "mr",
    マラガシ語: "mg",
    マラヤーラム語: "ml",
    マルタ語: "mt",
    マレー語: "ms",
    ミャンマー語: "my",
    モンゴル語: "mn",
    モン語: "hmn",
    ヨルバ語: "yo",
    ラオ語: "lo",
    ラテン語: "la",
    ラトビア語: "lv",
    リトアニア語: "lt",
    ルーマニア語: "ro",
    ルクセンブルク語: "lb",
    ロシア語: "ru",
    英語: "en",
    韓国語: "ko",
    "中国語(簡体)": "zh-CN",
    "中国語(繁体)": "zh-TW",
    日本語: "ja",
  },
  ko: {
    갈리시아어: "gl",
    구자라트어: "gu",
    그리스어: "el",
    네덜란드어: "nl",
    네팔어: "ne",
    노르웨이어: "no",
    덴마크어: "da",
    독일어: "de",
    라오어: "lo",
    라트비아어: "lv",
    라틴어: "la",
    러시아어: "ru",
    루마니아어: "ro",
    룩셈부르크어: "lb",
    리투아니아어: "lt",
    마라티어: "mr",
    마오리어: "mi",
    마케도니아어: "mk",
    말라가시어: "mg",
    말라얄람어: "ml",
    말레이어: "ms",
    몰타어: "mt",
    몽골어: "mn",
    몽어: "hmn",
    "미얀마어 (버마어)": "my",
    바스크어: "eu",
    베트남어: "vi",
    벨라루스어: "be",
    벵골어: "bn",
    보스니아어: "bs",
    불가리아어: "bg",
    사모아어: "sm",
    세르비아어: "sr",
    세부아노: "ceb",
    세소토어: "st",
    소말리아어: "so",
    쇼나어: "sn",
    순다어: "su",
    스와힐리어: "sw",
    스웨덴어: "sv",
    "스코틀랜드 게일어": "gd",
    스페인어: "es",
    슬로바키아어: "sk",
    슬로베니아어: "sl",
    신디어: "sd",
    신할라어: "si",
    아랍어: "ar",
    아르메니아어: "hy",
    아이슬란드어: "is",
    "아이티 크리올어": "ht",
    아일랜드어: "ga",
    아제르바이잔어: "az",
    아프리칸스어: "af",
    알바니아어: "sq",
    암하라어: "am",
    에스토니아어: "et",
    에스페란토어: "eo",
    영어: "en",
    요루바어: "yo",
    우르두어: "ur",
    우즈베크어: "uz",
    우크라이나어: "uk",
    웨일즈어: "cy",
    이그보어: "ig",
    이디시어: "yi",
    이탈리아어: "it",
    인도네시아어: "id",
    일본어: "ja",
    자바어: "jw",
    조지아어: "ka",
    줄루어: "zu",
    "중국어(간체)": "zh-CN",
    "중국어(번체)": "zh-TW",
    체와어: "ny",
    체코어: "cs",
    카자흐어: "kk",
    카탈로니아어: "ca",
    칸나다어: "kn",
    코르시카어: "co",
    코사어: "xh",
    쿠르드어: "ku",
    크로아티아어: "hr",
    크메르어: "km",
    키르기스어: "ky",
    타갈로그어: "tl",
    타밀어: "ta",
    타지크어: "tg",
    태국어: "th",
    터키어: "tr",
    텔루구어: "te",
    파슈토어: "ps",
    펀자브어: "pa",
    페르시아어: "fa",
    포르투갈어: "pt",
    폴란드어: "pl",
    프랑스어: "fr",
    프리지아어: "fy",
    핀란드어: "fi",
    하와이어: "haw",
    하우사어: "ha",
    한국어: "ko",
    헝가리어: "hu",
    히브리어: "iw",
    힌디어: "hi",
  },
  es: {
    Afrikáans: "af",
    Albanés: "sq",
    Alemán: "de",
    Amhárico: "am",
    Árabe: "ar",
    Armenio: "hy",
    Azerí: "az",
    Bengalí: "bn",
    Bielorruso: "be",
    Birmano: "my",
    Bosnio: "bs",
    Búlgaro: "bg",
    Camboyano: "km",
    Canarés: "kn",
    Catalán: "ca",
    Cebuano: "ceb",
    Checo: "cs",
    Chichewa: "ny",
    "Chino (simplificado)": "zh-CN",
    "Chino (tradicional)": "zh-TW",
    Cingalés: "si",
    Coreano: "ko",
    Corso: "co",
    "Criollo haitiano": "ht",
    Croata: "hr",
    Danés: "da",
    Eslovaco: "sk",
    Esloveno: "sl",
    Español: "es",
    Esperanto: "eo",
    Estonio: "et",
    Euskera: "eu",
    Finlandés: "fi",
    Francés: "fr",
    Frisio: "fy",
    "Gaélico escocés": "gd",
    Galés: "cy",
    Gallego: "gl",
    Georgiano: "ka",
    Griego: "el",
    Gujarati: "gu",
    Hausa: "ha",
    Hawaiano: "haw",
    Hebreo: "iw",
    Hindi: "hi",
    Hmong: "hmn",
    Húngaro: "hu",
    Igbo: "ig",
    Indonesio: "id",
    Inglés: "en",
    Irlandés: "ga",
    Islandés: "is",
    Italiano: "it",
    Japonés: "ja",
    Javanés: "jw",
    Kazajo: "kk",
    Kirguís: "ky",
    Kurdo: "ku",
    Lao: "lo",
    Latín: "la",
    Letón: "lv",
    Lituano: "lt",
    Luxemburgués: "lb",
    Macedonio: "mk",
    Malayalam: "ml",
    Malayo: "ms",
    Malgache: "mg",
    Maltés: "mt",
    Maorí: "mi",
    Maratí: "mr",
    Mongol: "mn",
    Neerlandés: "nl",
    Nepalí: "ne",
    Noruego: "no",
    Panyabí: "pa",
    Pastún: "ps",
    Persa: "fa",
    Polaco: "pl",
    Portugués: "pt",
    Rumano: "ro",
    Ruso: "ru",
    Samoano: "sm",
    Serbio: "sr",
    Sesoto: "st",
    Shona: "sn",
    Sindhi: "sd",
    Somalí: "so",
    Suajili: "sw",
    Sueco: "sv",
    Sundanés: "su",
    Tagalo: "tl",
    Tailandés: "th",
    Tamil: "ta",
    Tayiko: "tg",
    Telugu: "te",
    Turco: "tr",
    Ucraniano: "uk",
    Urdu: "ur",
    Uzbeco: "uz",
    Vietnamita: "vi",
    Xhosa: "xh",
    Yidis: "yi",
    Yoruba: "yo",
    Zulú: "zu",
  },
  fr: {
    Afrikaans: "af",
    Albanais: "sq",
    Allemand: "de",
    Amharique: "am",
    Anglais: "en",
    Arabe: "ar",
    Arménien: "hy",
    Azéri: "az",
    Basque: "eu",
    Bengali: "bn",
    Biélorusse: "be",
    Birman: "my",
    Bosniaque: "bs",
    Bulgare: "bg",
    Catalan: "ca",
    Cebuano: "ceb",
    Chichewa: "ny",
    "Chinois (simplifié)": "zh-CN",
    "Chinois (traditionnel)": "zh-TW",
    Cingalais: "si",
    Coréen: "ko",
    Corse: "co",
    "Créole haïtien": "ht",
    Croate: "hr",
    Danois: "da",
    Espagnol: "es",
    Espéranto: "eo",
    Estonien: "et",
    Finnois: "fi",
    Français: "fr",
    Frison: "fy",
    "Gaélique (écosse)": "gd",
    Galicien: "gl",
    Gallois: "cy",
    Géorgien: "ka",
    Grec: "el",
    Gujarati: "gu",
    Haoussa: "ha",
    Hawaïen: "haw",
    Hébreu: "iw",
    Hindi: "hi",
    Hmong: "hmn",
    Hongrois: "hu",
    Igbo: "ig",
    Indonésien: "id",
    Irlandais: "ga",
    Islandais: "is",
    Italien: "it",
    Japonais: "ja",
    Javanais: "jw",
    Kannada: "kn",
    Kazakh: "kk",
    Khmer: "km",
    Kirghiz: "ky",
    Kurde: "ku",
    Laotien: "lo",
    Latin: "la",
    Letton: "lv",
    Lituanien: "lt",
    Luxembourgeois: "lb",
    Macédonien: "mk",
    Malaisien: "ms",
    Malayalam: "ml",
    Malgache: "mg",
    Maltais: "mt",
    Maori: "mi",
    Marathi: "mr",
    Mongol: "mn",
    Néerlandais: "nl",
    Népalais: "ne",
    Norvégien: "no",
    Ouzbek: "uz",
    Pachtô: "ps",
    Panjabi: "pa",
    Persan: "fa",
    Polonais: "pl",
    Portugais: "pt",
    Roumain: "ro",
    Russe: "ru",
    Samoan: "sm",
    Serbe: "sr",
    Sesotho: "st",
    Shona: "sn",
    Sindhî: "sd",
    Slovaque: "sk",
    Slovène: "sl",
    Somali: "so",
    Soundanais: "su",
    Suédois: "sv",
    Swahili: "sw",
    Tadjik: "tg",
    Tagalog: "tl",
    Tamoul: "ta",
    Tchèque: "cs",
    Telugu: "te",
    Thaï: "th",
    Turc: "tr",
    Ukrainien: "uk",
    Urdu: "ur",
    Vietnamien: "vi",
    Xhosa: "xh",
    Yiddish: "yi",
    Yorouba: "yo",
    Zoulou: "zu",
  },
  fi: {
    Afrikaans: "af",
    Albania: "sq",
    Amhara: "am",
    Arabia: "ar",
    Armenia: "hy",
    Azeri: "az",
    Baski: "eu",
    Bengali: "bn",
    Bosnia: "bs",
    Bulgaria: "bg",
    Burma: "my",
    Cebu: "ceb",
    Englanti: "en",
    Espanja: "es",
    Esperanto: "eo",
    Friisi: "fy",
    Galicia: "gl",
    Gruusia: "ka",
    Gujarati: "gu",
    Haitinkreoli: "ht",
    Hausa: "ha",
    Havaiji: "haw",
    Heprea: "iw",
    Hindi: "hi",
    Hmong: "hmn",
    Hollanti: "nl",
    Igbo: "ig",
    Iiri: "ga",
    Indonesia: "id",
    Islanti: "is",
    Italia: "it",
    Jaava: "jw",
    Japani: "ja",
    Jiddiš: "yi",
    Joruba: "yo",
    Kannada: "kn",
    Katalaani: "ca",
    Kazakki: "kk",
    Khmer: "km",
    "Kiina (perinteinen)": "zh-TW",
    "Kiina (yksinkert.)": "zh-CN",
    Korea: "ko",
    Korsika: "co",
    Kreikka: "el",
    Kroatia: "hr",
    Kurdi: "ku",
    Kymri: "cy",
    Kyrgyz: "ky",
    Lao: "lo",
    Latina: "la",
    Latvia: "lv",
    Liettua: "lt",
    Luxemburg: "lb",
    Makedonia: "mk",
    Malagasy: "mg",
    Malaiji: "ms",
    Malayalam: "ml",
    Malta: "mt",
    Maori: "mi",
    Marathi: "mr",
    Mongolia: "mn",
    Nepali: "ne",
    Njandža: "ny",
    Norja: "no",
    Pashto: "ps",
    Persia: "fa",
    Portugali: "pt",
    Punjabi: "pa",
    Puola: "pl",
    Ranska: "fr",
    Romania: "ro",
    Ruotsi: "sv",
    Saksa: "de",
    Samoa: "sm",
    Serbia: "sr",
    Sesotho: "st",
    Shona: "sn",
    Sindhi: "sd",
    Sinhali: "si",
    Skottigaeli: "gd",
    Slovakia: "sk",
    Slovenia: "sl",
    Somali: "so",
    Sundaneesi: "su",
    Suomi: "fi",
    Swahili: "sw",
    Tadžikki: "tg",
    Tagalog: "tl",
    Tamili: "ta",
    Tanska: "da",
    Telugu: "te",
    Thai: "th",
    Tsekki: "cs",
    Turkki: "tr",
    Ukraina: "uk",
    Unkari: "hu",
    Urdu: "ur",
    Uzbekki: "uz",
    Valkovenäjä: "be",
    Venäjä: "ru",
    Vietnam: "vi",
    Viro: "et",
    Xhosa: "xh",
    Zulu: "zu",
  },
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (netflix_langs);


/***/ }),

/***/ "./src/ext/const/storage.js":
/*!**********************************!*\
  !*** ./src/ext/const/storage.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DEFAULT_VALUES": () => (/* binding */ DEFAULT_VALUES),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../src/ext/kumquat_polyfill */ "./src/ext/kumquat_polyfill.js");


const KEYS = {
  FROM_LANG: "It_Lang_From",
  TO_LANG: "It_Lang_To",
  RECENTLY_USED_LANG: "It_Lang_RecentlyUsed",

  DROPDOWN_HTML: "It_Opt_DropdownPregeneratedHtml",

  ZENDESK_USER: "It_IsZendeskUser",
  SUBMITTED_ZENDESK_USER: "It_IsZendeskUserSubmitted",

  SETTINGS_TAB: "It_OptUi_SettingsTab",
  TRANS_COMBINATION: "It_OptTrans_CombinationToTranslate",
  ADD_TRANS_COMBINATIONS: "It_OptTrans_AdditionalCombinationsToTranslate",

  NO_PDF_SHOWS: "It_WindowNoPDFShows",

  SPONSORSHIPS: "It_Sponsorships",
  SPONSORSHIPS_LAST_UPDATE: "It_Sponsorships_LastUpdate",
  SPONSORSHIPS_DISMISSED: "It_Sponsorships_Dismissed",
  SPONSORSHIPS_CURRENT_ID: "It_Sponsorships_CurrentAdId",
  SPONSORSHIPS_LAST_AD_ROTATION: "It_Sponsorships_LastAdRotation",

  CHAR_STATS: "It_CharacterStats",
  CHAR_STATS_LAST_UPDATE: "It_CharacterStats_LastUpdate",

  PRO_UPGRADE_LAST_SHOWN: "It_ProUpgradeForFreeUsersLastShown",

  SUB_TIER: "Mate_SubscriptionTier",
  SUB_TRIAL_DAYS: "Mate_SubscriptionTrialDays",
  SUB_DATA: "Mate_SubscriptionData",
  TEMP_SUB_DATA: "Mate_TemporarySubscriptionData",
  SUB_48H_NOTIF: "Mate_IsSubscriptionTrial48HourNotifOn",
  SUB_BEEN_SUBSCRIBED_ONCE: "Mate_HasBeenSubscribedOnce",
  ALREADY_SUBMITTED_SCREW_SUB_SURVEY: "Mate_HasAlreadySubmittedScrewSubData",
  SUB_PRO_SURVEY: "Mate_SubscriptionProSurveyStatus",
  SUB_TRIAL_STARTING_DATE: "Mate_SubscriptionTrialStartingDate",
  SUB_48H_NOTIF_STATUS: "Mate_48HourNotificationStatus",
  TEMP_SIGNUP_CODE: "Mate_TemporarySignUpCode",
  SUB_SOURCE: "Mate_SubscriptionSource",
  ONE_OFF_TIER: "Mate_OneOffPurchasePricingTier",
  SUB_PRICE_ANNUAL: "Mate_SubscriptionPriceAnnual",
  SUB_PRICE_MONTHLY: "Mate_SubscriptionPriceMonthly",

  FP_TO_LANG: "Mate_FullPageTargetLanguage",
  FP_ALWAYS_TRANSLATE: "Mate_FullPageAlwaysTranslate",
  FP_NEVER_TRANSLATE_LANGS: "Mate_FullPageNeverTranslateLanguages",
  FP_NEVER_TRANSLATE_SITES: "Mate_FullPageNeverTranslateSites",

  LANGSITES: "It_LangSites",
  LANGSITES_LAST_UPDATE: "It_LangSites_LastUpdate",
  MATE_ACCOUNT_TIP_DISMISSED: "It_Tips_AccountDismissed",

  WIN_TRANS_TYPE_SHOWN: "It_Ui_WindowTranslationTypeShown",
  WIN_TRANS_TYPE: "It_Ui_WindowTranslationType",
  INSTANT: "It_Ui_InstantTranslation",
  MULTI_VARIANT: "It_Ui_MultiVariant",
  SAVE: "It_Ui_Save",
  HUMAN: "It_Ui_Human",
  SAVED_VAL: "It_Ui_SavedVal",
  SHOW_ORIGINAL: "It_Ui_ShowOriginal",
  SHOW_TRANSLIT: "It_Ui_ShowTranslit",
  SHOW_ARTICLES: "It_Ui_ShowArticles",
  SHOW_IPA: "It_Ui_ShowIPA",
  AUTOSWAP: "It_Ui_Autoswap",
  CTX_MENU: "It_Ui_CtxMenu",
  SYNC: "It_SyncFlag",
  AUTOCORRECTION: "It_Ui_Autocorrection",
  CARET_POSITIONS: "It_Ui_CaretPositions",
  DOUBLE_CLICK_INLINE_SHOWS: "It_DoubleClickInlineOptionShows",
  SELECTION_INLINE_SHOWS: "It_SelectionInlineOptionShows",
  NETFLIX: "It_TranslateNetflixSubtitles",

  TOOLTIP_SCALE: "It_TooltipScale",
  NEW_SETTINGS_COUNTER: "It_TooltipNewSettingsFlag",

  INSTALL_DATE: "It_InstallDate",
  ALL_TRANS_COUNT: "It_AllTranslationsCount",
  LAST_TRANS_COUNT_UPD: "It_LastTranslationsCountUpdate",
  TRANSLATIONS_COUNT: "It_TranslationsCount",

  MONTHLY_TRANS_COUNT: "It_MonthlyTranslationsCount",
  LAST_MONTHLY_RESET: "It_LastMonthlyCounterReset",

  INVITE_FRIENDS_SHOWN: "It_InviteFriendsShown",
  NETFLIX_UPDATE_SHOWN: "It_NetflixUpdateShown",

  DOUBLE_CLICK: "It_Trans_DoubleClick",
  KEY_COMBO: "It_Trans_KeyCombinations",
  CONTEXT: "It_Trans_ContextMenu",
  HISTORY: "It_Trans_HistoryOfTranslations",
  WINDOW_SHORTCUT_SHOWN: "It_WindowShortcutShown",

  MONETIZATION: "It_Monetization",
  SHOW_DEVDATA: "It_Dev_Data",
  MON_IS_CIS: "It_Mon_IsCIS",
  MON_WARN: "It_Mon_Warned",
  MATE_WELCOME_SHOWN: "It_MateWelcomeShown",
  PRO_INAPP_PRICE: "It_ProInAppPrice",
  CHRISTMAS_MON_WARN: "It_ChristmasMonWarn",
  LAUCH_LOGIN_SHOWN: "It_LoginOnLaunchShown",
  GDPR_CONSENT: "It_GDPRConsent",
  _IS_METAMASK_USER: "Mate_MetaMaskedUserFlag2",
  ANTIWAR_DISMISSED: "Mate_AntiWarBannerDismissed",

  LEARN_ONBOARDING: "It_LearnOnboarding",

  TRIAL_STARTED: "It_HasSafariTrialBeenStarted",
  TRIAL_START: "It_SafariTrialStart",

  DARK_MODE: "It_DarkMode",

  SEEN_TOUR: "It_SeenTour",
  EXT_VER: "It_Version",
  CHR_PRO_FLAG: "It_IsChromePro",
  SUPRESS_SIGNIN: "It_SupressSignInOnLaunch",
  FULLPAGE: "It_FullpageTranslation",
  SELECTION: "It_TranslateOnSelect",

  MISC_SERVER: "It_MiscServerNum",
  FAREWELL_SURVEY: "It_FarewellSurvey",

  REJI_ADS: "It_RejiAdsEnabled",
  REJI_POPUP: "It_RejiPopupTime",
  REJI_HISTORY: "It_RejiHistoryFlag",
  REJI_PHRASEBOOK: "It_RejiPhrasebookFlag",

  LAST_RATE_SHOW: "It_LastRateShow",

  MB_USER: "It_Monetization_MB",

  INSTALL_EVENT: "It_InstallEventSent",
  ANALYZED_HISTORY: "It_AnalyzedHistory",
  USER_ID: "It_UserId",
  ANALYTICS_CLIENT_ID: "Mate_AnalyticsClientId",
  LIKE_MATE: "It_DoesLikeMate",

  LAST_COUNTRY_FETCH: "It_LastCountryFetch",
  LAST_COUNTRY_FETCH_2: "It_LastCountryFetch2",
  LAST_PRICE_FETCH: "It_LastPriceFetch",
  LAST_PRICE_FETCH_2: "It_LastPriceFetch2",
  LAST_PROMOT_FETCH: "It_LastPromoTableFetch",

  PROMO_TABLE: "It_PromotionalTable",

  USER_COUNTRY: "It_UserCountry",
  CONVERSION_RATES: "It_CurrencyConversionRates",

  HT_FROM_LANG: "It_HtLangFrom",
  HT_TO_LANG: "It_HtLangTo",
  HT_SAVEDTEXT: "It_HtSavedText",

  ACCOUNT_NAME: "It_AccountName",
  ACCOUNT_EMAIL: "It_AccountEmail",
  ACCOUNT_TOKEN: "It_AccountToken",
};

const DEFAULT_VALUES = {
  FROM_LANG: "auto",
  get TO_LANG() {
    return _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.getCurrentLocale(true);
  },
  RECENTLY_USED_LANG: [],

  ZENDESK_USER: false,
  SUBMITTED_ZENDESK_USER: false,

  SETTINGS_LAST_UPDATE: 0,
  SHOULD_REGISTER_FULLPAGE_TRANSLATIONS: true,

  SPONSORSHIPS: {},
  SPONSORSHIPS_LAST_UPDATE: 0,
  SPONSORSHIPS_DISMISSED: false,
  SPONSORSHIPS_CURRENT_ID: "",
  SPONSORSHIPS_LAST_AD_ROTATION: 0,

  CHAR_STATS: {
    total: 0,
    translations: 0,
    chars_per_pair: {},
  },
  CHAR_STATS_LAST_UPDATE: Date.now(),

  PRO_UPGRADE_LAST_SHOWN: Number.MAX_SAFE_INTEGER,

  LANGSITES: [],
  LANGSITES_LAST_UPDATE: 0,
  MATE_ACCOUNT_TIP_DISMISSED: false,

  DROPDOWN_HTML: {
    from: {
      code: "",
      select: "",
    },
    to: {
      code: "",
      select: "",
    },
  },

  TRANS_COMBINATION: "16+84", // main shortcut: shift+T
  ADD_TRANS_COMBINATIONS: "{}", // additional
  SETTINGS_TAB: 1,

  WIN_TRANS_TYPE_SHOWN: false,
  WIN_TRANS_TYPE: 2,
  INSTANT: true,
  MULTI_VARIANT: true,
  SAVE: true,
  HUMAN: false,
  SAVED_VAL: "",
  SHOW_ORIGINAL: true,
  SHOW_TRANSLIT: false,
  SHOW_ARTICLES: false,
  SHOW_IPA: false,
  AUTOSWAP: true,
  CTX_MENU: true,
  AUTOCORRECTION: true,
  CARET_POSITIONS: { start: 0, end: 0 },
  DOUBLE_CLICK_INLINE_SHOWS: 0,
  SELECTION_INLINE_SHOWS: 0,

  DARK_MODE: false,
  NETFLIX: true,

  SUB_TIER: 1,
  SUB_TRIAL_DAYS: 0,
  SUB_DATA: {},
  TEMP_SUB_DATA: {},
  SUB_48H_NOTIF: false,
  SUB_BEEN_SUBSCRIBED_ONCE: false,
  ALREADY_SUBMITTED_SCREW_SUB_SURVEY: false,
  SUB_PRO_SURVEY: -1,
  SUB_TRIAL_STARTING_DATE: 0,
  SUB_48H_NOTIF_STATUS: -1,
  SUB_SOURCE: "",
  ONE_OFF_TIER: 1,
  SUB_PRICE_ANNUAL: "29.99 USD",
  SUB_PRICE_MONTHLY: "3.99 USD",

  get FP_TO_LANG() {
    return _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.browserLang;
  },
  FP_ALWAYS_TRANSLATE: {}, // {en: {ru: true}, de: {fr: true, it: true}}
  FP_NEVER_TRANSLATE_LANGS: {}, // {tr: true}
  FP_NEVER_TRANSLATE_SITES: {}, // {hostname: true}

  LIKE_MATE: -1,

  INSTALL_DATE: Date.now(),
  LAST_TRANS_COUNT_UPD: Date.now(),
  ALL_TRANS_COUNT: {
    window: 0,
    fullpage: 0,
    phrasebook: 0,
    "double-click": 0,
    shortcut: 0,
    "context-menu": 0,
    selection: 0,
    pdf: 0,
  },
  TRANSLATIONS_COUNT: {
    window: 0,
    fullpage: 0,
    phrasebook: 0,
    "double-click": 0,
    shortcut: 0,
    "context-menu": 0,
    selection: 0,
    pdf: 0,
  },

  MONTHLY_TRANS_COUNT: 0,
  LAST_MONTHLY_RESET: Date.now(),

  NO_PDF_SHOWS: 0,

  INVITE_FRIENDS_SHOWN: false,
  NETFLIX_UPDATE_SHOWN: false,

  LEARN_ONBOARDING: false,

  DOUBLE_CLICK: false,
  KEY_COMBO: true,
  CONTEXT: {
    active: true,
    value: 1,
  },
  HISTORY: true,
  SYNC: true,
  WINDOW_SHORTCUT_SHOWN: false,

  get MONETIZATION() {
    return _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.IS_CHROME ? true : false;
  },
  SHOW_DEVDATA: true,
  MON_IS_CIS: false,
  MON_WARN: false,
  MAC_PROMO: false,
  MATE_WELCOME_SHOWN: true,
  PRO_INAPP_PRICE: "29.99$",
  CHRISTMAS_MON_WARN: false,
  LAUCH_LOGIN_SHOWN: false,
  GDPR_CONSENT: false,
  _IS_METAMASK_USER: -1, // -1 not defined yet, 0 no, 1 yes
  ANTIWAR_DISMISSED: false,
  TOOLTIP_SCALE: 0.85,

  TRIAL_STARTED: false,
  TRIAL_START: Date.now(),

  SEEN_TOUR: false,
  EXT_VER: "",
  CHR_PRO_FLAG: false,
  SUPRESS_SIGNIN: "",
  FULLPAGE: true,
  SELECTION: true,

  MISC_SERVER: "https://api2.matetranslate.com",
  FAREWELL_SURVEY: "https://gikken.co/mate-translate/goodbye/",

  REJI_ADS: false,
  REJI_POPUP: Date.now(),
  REJI_HISTORY: false,
  REJI_PHRASEBOOK: false,

  LAST_RATE_SHOW: Date.now(),
  LAST_PRO_SHOW: Date.now(),
  LAST_MACPROMO_SHOW: Date.now(),

  MB_USER: "",
  NEW_SETTINGS_COUNTER: 0,

  INSTALL_EVENT: false,
  ANALYZED_HISTORY: false,
  USER_ID: "",
  ANALYTICS_CLIENT_ID: "",
  TEMP_SIGNUP_CODE: "",

  LAST_COUNTRY_FETCH: 0,
  LAST_COUNTRY_FETCH_2: 0,
  LAST_PRICE_FETCH: 0,
  LAST_PRICE_FETCH_2: 0,
  LAST_PROMOT_FETCH: 0,

  PROMO_TABLE:
    '{"ios":[true,"https://itunes.apple.com/app/id1073473333",""],"mac":[true,"https://twopeoplesoftware.com/mate"],"edge":[true,"https://www.microsoft.com/store/p/instant-translate-select-and-translate/9pj8vl1pqs7v"],"firefox":[true,"https://addons.mozilla.org/en-US/firefox/addon/instant-translate/",""],"chrome":[true,"https://chrome.google.com/webstore/detail/instant-translate-select/ihmgiclibbndffejedjimfjmfoabpcke",""],"safari":[true,"https://safari-extensions.apple.com/details/?id=com.matetranslate.app-S8B638MM79",""],"samsunginternet":[true,"http://apps.samsung.com/appquery/appDetail.as?appId=com.gikken.matesamsung"]}',

  USER_COUNTRY: "",
  CONVERSION_RATES: "{}",

  HT_FROM_LANG: "",
  HT_TO_LANG: "",
  HT_SAVEDTEXT: "",

  ACCOUNT_NAME: "",
  ACCOUNT_EMAIL: "",
  ACCOUNT_TOKEN: "",
};

const getStorageConst = (k) => {
  return KEYS[k.toUpperCase()] || DEFAULT_VALUES[k.toUpperCase()];
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (getStorageConst);

// pl.extend(ke.ext.const.storage, {
//     DEFAULT_VALUES: DEFAULT_VALUES,

//     FAREWELL_NEW: 'https://docs.google.com/forms/d/e/1FAIpQLSd938lNG6QYZv3ZCSqzWqVezY_NrTQUF1T5DOrrOpWSLJFn-g/viewform',
//     FAREWELL_OLD: 'https://docs.google.com/forms/d/e/1FAIpQLSeO53ksILQ0Pg6crEdJ5nUiqfaJ_TekJyd1iRfzXYVMXRbgrg/viewform'
// });


/***/ }),

/***/ "./src/ext/const/subscriptions.js":
/*!****************************************!*\
  !*** ./src/ext/const/subscriptions.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const subscriptionConstants = {
  MONTHLY_PLAN_ID: 650060,
  ANNUAL_PLAN_ID: 650844,

  ONE_OFF_ID: 519679,

  CUSTOM_CHECKOUT_LINKS: {
    co: {
      price: "8,99$",
      link: "https://checkout.paddle.com/checkout/custom/eyJ0IjoiTWF0ZSBUcmFuc2xhdGUgUHJvIiwiaSI6Imh0dHBzOlwvXC9wYWRkbGUuczMuYW1hem9uYXdzLmNvbVwvdXNlclwvMTE3NTlcLzZXQW9EWHVUVDRXWGNRb1pMbUlCX181MTIucG5nIiwiciI6bnVsbCwiY20iOiJMZWFybiBsYW5ndWFnZXMsIGNvbW11bmljYXRlLCB0cmF2ZWwgYW5kIHdvcmsgb24gYSB3aG9sZSBuZXcgbGV2ZWwgd2l0aCBNYXRlJ3Mgc3luY2hyb25pemF0aW9uIGFuZCBQaHJhc2Vib29rISAiLCJyZSI6MCwicCI6NTE5Njc5LCJjYyI6eyJVU0QiOiI4Ljk5IiwiR0JQIjoiNi40NiIsIkVVUiI6IjcuNTkiLCJSVUIiOiI2NTcuNDgiLCJBVUQiOiIxMi4xNiIsIkJSTCI6IjQ2LjQ4IiwiQ0FEIjoiMTEuMjYiLCJDSEYiOiI4LjE1IiwiQ05ZIjoiNTguMTEiLCJQTE4iOiIzNC41IiwiU0VLIjoiNzcuMzciLCJaQVIiOiIxMjkuMzEiLCJDWksiOiIxOTMuMTIiLCJIVUYiOiIyNjkwLjk1IiwiREtLIjoiNTYuNDYiLCJOWkQiOiIxMi43NSIsIlNHRCI6IjEyLjE0IiwiSEtEIjoiNjkuOTEiLCJJTlIiOiI2NjcuMzUiLCJKUFkiOiI5ODYiLCJLUlciOiIxMDI3NSIsIk1YTiI6IjE3OS4zNyIsIkFSUyI6Ijg3MC41NSIsIlRXRCI6IjI0OS41OCIsIk5PSyI6Ijc5LjQiLCJUSEIiOiIyOTguMjEiLCJUUlkiOiI3Ni44MiIsIklMUyI6IjI4Ljg3IiwiVUFIIjoiMjQyLjE0In0sInkiOiIiLCJxIjoxLCJkIjoxLCJhIjpbXSwidiI6IjExNzU5IiwiZHciOmZhbHNlLCJzIjoiMjNhNWQxNTkxMTdjNDJhOGY1NmY3NmRhOTE5YmEwOTBkOGM1ZDczMmI1MGQxODVlMzdlZTMyMTU4MWY1ODczZjk1YTQ4NTdjZjQyZDFlMGYzYWJhYTM3N2M1NzY4Y2NmYTBiNzM0ZWE3MDNhMzhmYmYwNGMxNDJmOGY2Njg0ZDEifQ==",
    },
    vi: {
      price: "6,99$",
      link: "https://checkout.paddle.com/checkout/custom/eyJ0IjoiTWF0ZSBUcmFuc2xhdGUgUHJvIiwiaSI6Imh0dHBzOlwvXC9wYWRkbGUuczMuYW1hem9uYXdzLmNvbVwvdXNlclwvMTE3NTlcLzZXQW9EWHVUVDRXWGNRb1pMbUlCX181MTIucG5nIiwiciI6bnVsbCwiY20iOiJMZWFybiBsYW5ndWFnZXMsIGNvbW11bmljYXRlLCB0cmF2ZWwgYW5kIHdvcmsgb24gYSB3aG9sZSBuZXcgbGV2ZWwgd2l0aCBNYXRlJ3Mgc3luY2hyb25pemF0aW9uIGFuZCBQaHJhc2Vib29rISAiLCJyZSI6MCwicCI6NTE5Njc5LCJjYyI6eyJVU0QiOiI2Ljk5IiwiR0JQIjoiNS4wMiIsIkVVUiI6IjUuOSIsIlJVQiI6IjUxMS4yMSIsIkFVRCI6IjkuNDUiLCJCUkwiOiIzNi4xNCIsIkNBRCI6IjguNzUiLCJDSEYiOiI2LjM0IiwiQ05ZIjoiNDUuMTgiLCJQTE4iOiIyNi44MiIsIlNFSyI6IjYwLjE2IiwiWkFSIjoiMTAwLjU0IiwiQ1pLIjoiMTUwLjE1IiwiSFVGIjoiMjA5Mi4zIiwiREtLIjoiNDMuOSIsIk5aRCI6IjkuOTEiLCJTR0QiOiI5LjQ0IiwiSEtEIjoiNTQuMzYiLCJJTlIiOiI1MTguODgiLCJKUFkiOiI3NjciLCJLUlciOiI3OTg5IiwiTVhOIjoiMTM5LjQ2IiwiQVJTIjoiNjc2Ljg4IiwiVFdEIjoiMTk0LjA2IiwiTk9LIjoiNjEuNzQiLCJUSEIiOiIyMzEuODciLCJUUlkiOiI1OS43MyIsIklMUyI6IjIyLjQ1IiwiVUFIIjoiMTg4LjI3In0sInkiOiIiLCJxIjoxLCJkIjoxLCJhIjpbXSwidiI6IjExNzU5IiwiZHciOmZhbHNlLCJzIjoiYTJiMDRjMmVjYWI0NjVmNzdkMmQ2ZTlhMzZiMjA4MDQzODI1NDhhMjY1NTI4M2Q2ZGViZTg5NDE4NmFmYjQxZjI2MTI1M2Q5MTI4Yjc0ZDU0ZTkwY2NiYmU1NGU3NjhiYzE1NzRlZjQ3MWViZDFlYjJjYmM2YjE4YmRhNDY1YzcifQ==",
    },
  },

  one_off_prices: {
    tier_3: {
      default: ["29.99 USD"],
      eu: ["29.99 EUR"],
      tr: ["149 TRY"],
      ru: ["1299 RUB"],
      ua: ["499 UAH"],
      cn: ["149 CNY"],
      ar: ["1499 ARS"],
      au: ["39.99 AUD"],
      br: ["89.99 BRL"],
      ca: ["39.99 CAD"],
      cz: ["449 CZK"],
      dk: ["169 DKK"],
      hk: ["149 HKD"],
      hu: ["4999 HUF"],
      in: ["999 INR"],
      il: ["89.99 ILS"],
      jp: ["2999 JPY"],
      mx: ["249 MXN"],
      tw: ["399 TWD"],
      nz: ["34.99 NZD"],
      no: ["299 NOK"],
      pl: ["59.99 PLN"],
      gb: ["19.99 GBP"],
      sg: ["34.99 SGD"],
      za: ["169 ZAR"],
      kr: ["23999 KRW"],
      se: ["299 SEK"],
      ch: ["34.99 CHF"],
      th: ["699 THB"],
    },
    tier_2: {
      default: ["19.99 USD"],
      eu: ["19.99 EUR"],
      tr: ["99.99 TRY"],
      ru: ["999 RUB"],
      ua: ["349 UAH"],
      cn: ["109 CNY"],
      ar: ["1499 ARS"],
      au: ["34.99 AUD"],
      br: ["79.99 BRL"],
      ca: ["34.99 CAD"],
      cz: ["399 CZK"],
      dk: ["129 DKK"],
      hk: ["129 HKD"],
      hu: ["3999 HUF"],
      in: ["749 INR"],
      il: ["69.99 ILS"],
      jp: ["2249 JPY"],
      mx: ["249 MXN"],
      tw: ["399 TWD"],
      nz: ["34.99 NZD"],
      no: ["249 NOK"],
      pl: ["59.99 PLN"],
      gb: ["19.99 GBP"],
      sg: ["34.99 SGD"],
      za: ["169 ZAR"],
      kr: ["23999 KRW"],
      se: ["249 SEK"],
      ch: ["19.99 CHF"],
      th: ["499 THB"],
    },
  },

  prices: {
    tier_4: {
      default: ["$9.99", "$79.99"],
      eu: ["9,99 EUR", "79,99 EUR"],
      tr: ["19.99 TRY", "159.99 TRY"],
      ru: ["249 RUB", "1899 RUB"],
      ua: ["89,99 UAH", "699 UAH"],
      cn: ["39.99 CNY", "299 CNY"],
      ar: ["549 ARS", "3999 ARS"],
      au: ["10.99 AUD", "89.99 AUD"],
      br: ["29.99 BRL", "249 BRL"],
      ca: ["11.99 CAD", "99.99 CAD"],
      cz: ["149 CZK", "1199 CZK"],
      dk: ["55.99 DKK", "449 DKK"],
      hk: ["39.99 HKD", "299 HKD"],
      hu: ["1499 HUF", "12999 HUF"],
      in: ["299 INR", "2699 INR"],
      il: ["29.99 ILS", "249 ILS"],
      jp: ["699 JPY", "5999 JPY"],
      mx: ["89.99 MXN", "699 MXN"],
      tw: ["129 TWD", "999 TWD"],
      nz: ["11.99 NZD", "94.99 NZD"],
      no: ["89.99 NOK", "749 NOK"],
      pl: ["19.99 PLN", "149 PLN"],
      gb: ["6.99 GBP", "49.99 GBP"],
      sg: ["10.99 SGD", "89.99 SGD"],
      za: ["54.99 ZAR", "449 ZAR"],
      kr: ["7999 KRW", "59999 KRW"],
      se: ["89.99 SEK", "749 SEK"],
      ch: ["11.99 CHF", "99.99 CHF"],
      th: ["199 THB", "1699 THB"],
    },
    tier_3: {
      default: ["$7.99", "$64.99"],
      eu: ["7.99 EUR", "64.99 EUR"],
      tr: ["15,99 TRY", "129,99 TRY"],
      ru: ["189 RUB", "1599 RUB"],
      ua: ["69,99 UAH", "549 UAH"],
      cn: ["29.99 CNY", "249 CNY"],
      ar: ["399 ARS", "3499 ARS"],
      au: ["8.99 AUD", "69.99 AUD"],
      br: ["25.99 BRL", "199 BRL"],
      ca: ["9.99 CAD", "79.99 CAD"],
      cz: ["119 CZK", "949 CZK"],
      dk: ["49.99 DKK", "349 DKK"],
      hk: ["29.99 HKD", "249 HKD"],
      hu: ["1299 HUF", "9999 HUF"],
      in: ["269 INR", "2199 INR"],
      il: ["24.99 ILS", "199 ILS"],
      jp: ["599 JPY", "4499 JPY"],
      mx: ["69.99 MXN", "599 MXN"],
      tw: ["99.99 TWD", "849 TWD"],
      nz: ["9.99 NZD", "74.99 NZD"],
      no: ["74.99 NOK", "599 NOK"],
      pl: ["14.99 PLN", "119 PLN"],
      gb: ["4.99 GBP", "39.99 GBP"],
      sg: ["8.99 SGD", "69.99 SGD"],
      za: ["49.99 ZAR", "369 ZAR"],
      kr: ["5999 KRW", "49999 KRW"],
      se: ["74.99 SEK", "599 SEK"],
      ch: ["9.99 CHF", "79.99 CHF"],
      th: ["169 THB", "1499 THB"],
    },
    tier_2: {
      default: ["$5.99", "$44.99"],
      eu: ["5,99 EUR", "44,99 EUR"],
      tr: ["11.99 TRY", "89.99 TRY"],
      ru: ["149 RUB", "1099 RUB"],
      ua: ["49,99 UAH", "399 UAH"],
      cn: ["24.99 CNY", "169 CNY"],
      ar: ["349 ARS", "2399 ARS"],
      au: ["6.99 AUD", "49.99 AUD"],
      br: ["19.99 BRL", "139 BRL"],
      ca: ["6.99 CAD", "54.99 CAD"],
      cz: ["89.99 CZK", "649 CZK"],
      dk: ["35.99 DKK", "249 DKK"],
      hk: ["24.99 HKD", "169 HKD"],
      hu: ["999 HUF", "6999 HUF"],
      in: ["199 INR", "1499 INR"],
      il: ["18.99 ILS", "139 ILS"],
      jp: ["449 JPY", "3299 JPY"],
      mx: ["54.99 MXN", "399 MXN"],
      tw: ["79.99 TWD", "599 TWD"],
      nz: ["6.99 NZD", "49.99 NZD"],
      no: ["54.99 NOK", "419 NOK"],
      pl: ["10.99 PLN", "84.99 PLN"],
      gb: ["3.99 GBP", "29.99 GBP"],
      sg: ["6.99 SGD", "49.99 SGD"],
      za: ["34.99 ZAR", "249 ZAR"],
      kr: ["4999 KRW", "34999 KRW"],
      se: ["54.99 SEK", "399 SEK"],
      ch: ["6.99 CHF", "54.99 CHF"],
      th: ["129 THB", "999 THB"],
    },
    tier_1: {
      default: ["$3.99", "$29.99"],
      eu: ["3,99 EUR", "29,99 EUR"],
      tr: ["7.99 TRY", "59.99 TRY"],
      ru: ["99,99 RUB", "749,99 RUB"],
      ua: ["34,99 UAH", "249 UAH"],
      cn: ["14.99 CNY", "109 CNY"],
      ar: ["199 ARS", "1499 ARS"],
      au: ["4.99 AUD", "29.99 AUD"],
      br: ["11.99 BRL", "89.99 BRL"],
      ca: ["4.99 CAD", "39.99 CAD"],
      cz: ["59.99 CZK", "449 CZK"],
      dk: ["19.99 DKK", "169 DKK"],
      hk: ["14.99 HKD", "109 HKD"],
      hu: ["649 HUF", "4999 HUF"],
      in: ["129 INR", "999 INR"],
      il: ["12.49 ILS", "89.99 ILS"],
      jp: ["289 JPY", "2149 JPY"],
      mx: ["34.99 MXN", "249 MXN"],
      tw: ["49.99 TWD", "399 TWD"],
      nz: ["4.99 NZD", "34.99 NZD"],
      no: ["39.99 NOK", "299 NOK"],
      pl: ["7.99 PLN", "59.99 PLN"],
      gb: ["2.49 GBP", "19.99 GBP"],
      sg: ["4.49 SGD", "34.99 SGD"],
      za: ["21.99 ZAR", "169 ZAR"],
      kr: ["2999 KRW", "23999 KRW"],
      se: ["39.99 SEK", "299 SEK"],
      ch: ["4.99 CHF", "34.99 CHF"],
      th: ["89.99 THB", "699 THB"],
    },
  },

  one_off_checkout_links: {
    tier_3:
      "https://checkout.paddle.com/checkout/custom/eyJ0IjoiTWF0ZSBUcmFuc2xhdGUgUHJvIiwiaSI6Imh0dHBzOlwvXC9wYWRkbGUuczMuYW1hem9uYXdzLmNvbVwvdXNlclwvMTE3NTlcLzZXQW9EWHVUVDRXWGNRb1pMbUlCX181MTIucG5nIiwiciI6bnVsbCwiY20iOiJMZWFybiBsYW5ndWFnZXMsIGNvbW11bmljYXRlLCB0cmF2ZWwgYW5kIHdvcmsgb24gYSB3aG9sZSBuZXcgbGV2ZWwgd2l0aCBNYXRlJ3Mgc3luY2hyb25pemF0aW9uIGFuZCBQaHJhc2Vib29rISAiLCJyZSI6MCwicCI6NTE5Njc5LCJjYyI6eyJVU0QiOiIyOS45OSIsIkVVUiI6IjI5Ljk5IiwiVFJZIjoiMTQ5IiwiUlVCIjoiMTI5OSIsIlVBSCI6IjQ5OSIsIkNOWSI6IjE0OSIsIkFSUyI6IjE0OTkiLCJBVUQiOiIzOS45OSIsIkJSTCI6Ijg5Ljk5IiwiQ0FEIjoiMzkuOTkiLCJDWksiOiI0NDkiLCJES0siOiIxNjkiLCJIS0QiOiIxNDkiLCJIVUYiOiI0OTk5IiwiSU5SIjoiOTk5IiwiSUxTIjoiODkuOTkiLCJKUFkiOiIyOTk5IiwiTVhOIjoiMjQ5IiwiVFdEIjoiMzk5IiwiTlpEIjoiMzQuOTkiLCJOT0siOiIyOTkiLCJQTE4iOiI1OS45OSIsIkdCUCI6IjE5Ljk5IiwiU0dEIjoiMzQuOTkiLCJaQVIiOiIxNjkiLCJLUlciOiIyMzk5OSIsIlNFSyI6IjI5OSIsIkNIRiI6IjM0Ljk5IiwiVEhCIjoiNjk5In0sInkiOiIiLCJxIjoxLCJkIjoxLCJhIjpbXSwidiI6IjExNzU5IiwiZHciOmZhbHNlLCJzIjoiZjUxMWQyZTMzZmVkZDAwZDYzYjU1YTY4YjU3Y2E0OWU5MzQ4NTUxYmJkNzQyODc3MzkyNWU5MjRmNTdlNmQzZjFkN2IwZGI5OTU0NDhhMzlkODEzYTc1ZWZkODlkM2E5NzM0Mzc5N2Y2M2FkMDBiMGZkNzgwNjkzZjYzNjdiMzAifQ==",
    tier_2:
      "https://checkout.paddle.com/checkout/custom/eyJ0IjoiTWF0ZSBUcmFuc2xhdGUgUHJvIiwiaSI6Imh0dHBzOlwvXC9wYWRkbGUuczMuYW1hem9uYXdzLmNvbVwvdXNlclwvMTE3NTlcLzZXQW9EWHVUVDRXWGNRb1pMbUlCX181MTIucG5nIiwiciI6bnVsbCwiY20iOiJMZWFybiBsYW5ndWFnZXMsIGNvbW11bmljYXRlLCB0cmF2ZWwgYW5kIHdvcmsgb24gYSB3aG9sZSBuZXcgbGV2ZWwgd2l0aCBNYXRlJ3Mgc3luY2hyb25pemF0aW9uIGFuZCBQaHJhc2Vib29rISAiLCJyZSI6MCwicCI6NTE5Njc5LCJjYyI6eyJVU0QiOiIxOS45OSIsIkVVUiI6IjE5Ljk5IiwiVFJZIjoiOTkuOTkiLCJSVUIiOiI5OTkiLCJVQUgiOiIzNDkiLCJDTlkiOiIxMDkiLCJBUlMiOiIxNDk5IiwiQVVEIjoiMzQuOTkiLCJCUkwiOiI3OS45OSIsIkNBRCI6IjM0Ljk5IiwiQ1pLIjoiMzk5IiwiREtLIjoiMTI5IiwiSEtEIjoiMTI5IiwiSFVGIjoiMzk5OSIsIklOUiI6Ijc0OSIsIklMUyI6IjY5Ljk5IiwiSlBZIjoiMjI0OSIsIk1YTiI6IjI0OSIsIlRXRCI6IjM5OSIsIk5aRCI6IjM0Ljk5IiwiTk9LIjoiMjQ5IiwiUExOIjoiNTkuOTkiLCJHQlAiOiIxOS45OSIsIlNHRCI6IjM0Ljk5IiwiWkFSIjoiMTY5IiwiS1JXIjoiMjM5OTkiLCJTRUsiOiIyNDkiLCJDSEYiOiIxOS45OSIsIlRIQiI6IjQ5OSJ9LCJ5IjoiIiwicSI6MSwiZCI6MSwiYSI6W10sInYiOiIxMTc1OSIsImR3IjpmYWxzZSwicyI6IjcwYWVlYTYxNDVjMzdjYWZkYTUyN2Q0MTNmMWUwZmEyYjFkOGViZGM3MjFmMDVmMDM4NzBkMGE4MmM4YWQ5NTA3M2U0ZWRlMjVkNmJmZjFjOTcxYjVkZDc4MWYwZjZhM2UwZWYyOGUxOGE1NjA3MDIzOGEzM2ZhZWVjM2Y2NDljIn0=",
  },

  checkout_links: {
    monthly: {
      tier_4: {
        trial_3:
          "https://checkout.paddle.com/checkout/custom/eyJ0IjoiTWF0ZSBQcm8gTW9udGhseSIsImkiOiJodHRwczpcL1wvcGFkZGxlLnMzLmFtYXpvbmF3cy5jb21cL3VzZXJcLzExNzU5XC9ja0lONlI0N1Q4TFA3WXNOcElCdF9fNTEyLnBuZyIsInIiOm51bGwsImNtIjoiIiwicmUiOjAsInAiOjY1MDA2MCwiYWwiOjAsImNjIjp7IlVTRCI6IjAiLCJFVVIiOiIwIiwiVFJZIjoiMCIsIlJVQiI6IjAiLCJVQUgiOiIwIiwiQ05ZIjoiMCIsIkFSUyI6IjAiLCJBVUQiOiIwIiwiQlJMIjoiMCIsIkNBRCI6IjAiLCJDWksiOiIwIiwiREtLIjoiMCIsIkhLRCI6IjAiLCJIVUYiOiIwIiwiSU5SIjoiMCIsIklMUyI6IjAiLCJKUFkiOiIwIiwiTVhOIjoiMCIsIlRXRCI6IjAiLCJOWkQiOiIwIiwiTk9LIjoiMCIsIlBMTiI6IjAiLCJHQlAiOiIwIiwiU0dEIjoiMCIsIlpBUiI6IjAiLCJLUlciOiIwIiwiU0VLIjoiMCIsIkNIRiI6IjAiLCJUSEIiOiIwIn0sInJwIjp7IlVTRCI6IjkuOTkiLCJFVVIiOiI5Ljk5IiwiVFJZIjoiMTkuOTkiLCJSVUIiOiIyNDkiLCJVQUgiOiI4OS45OSIsIkNOWSI6IjM5Ljk5IiwiQVJTIjoiNTQ5IiwiQVVEIjoiMTAuOTkiLCJCUkwiOiIyOS45OSIsIkNBRCI6IjExLjk5IiwiQ1pLIjoiMTQ5IiwiREtLIjoiNTUuOTkiLCJIS0QiOiIzOS45OSIsIkhVRiI6IjE0OTkiLCJJTlIiOiIyOTkiLCJJTFMiOiIyOS45OSIsIkpQWSI6IjY5OSIsIk1YTiI6Ijg5Ljk5IiwiVFdEIjoiMTI5IiwiTlpEIjoiMTEuOTkiLCJOT0siOiI4OS45OSIsIlBMTiI6IjE5Ljk5IiwiR0JQIjoiNi45OSIsIlNHRCI6IjEwLjk5IiwiWkFSIjoiNTQuOTkiLCJLUlciOiI3OTk5IiwiU0VLIjoiODkuOTkiLCJDSEYiOiIxMS45OSIsIlRIQiI6IjE5OSJ9LCJ0ZCI6IjMiLCJ5IjoiIiwicSI6MCwiZCI6MSwiYSI6W10sInYiOiIxMTc1OSIsImR3IjpmYWxzZSwicyI6IjNhYzNjMGFhZWM5OTI2MjQxMjlmNjdjYWM2ZjljODkwN2U0MTIxZTZjMjlmN2E2MTU0MjE5MTNlNzIxYTdiOTAzNThiZjQzMmJlMDIzMzI3NWY4OTRlMmM2MzhmZjc1MzMxMjUyYWI4OTU0NTA5ZTI1Nzc3MTFlNTZkNTVmMzAwIn0=",
        trial_7:
          "https://checkout.paddle.com/checkout/custom/eyJ0IjoiTWF0ZSBQcm8gTW9udGhseSIsImkiOiJodHRwczpcL1wvcGFkZGxlLnMzLmFtYXpvbmF3cy5jb21cL3VzZXJcLzExNzU5XC9ja0lONlI0N1Q4TFA3WXNOcElCdF9fNTEyLnBuZyIsInIiOm51bGwsImNtIjoiIiwicmUiOjAsInAiOjY1MDA2MCwiYWwiOjAsImNjIjp7IlVTRCI6IjAiLCJFVVIiOiIwIiwiVFJZIjoiMCIsIlJVQiI6IjAiLCJVQUgiOiIwIiwiQ05ZIjoiMCIsIkFSUyI6IjAiLCJBVUQiOiIwIiwiQlJMIjoiMCIsIkNBRCI6IjAiLCJDWksiOiIwIiwiREtLIjoiMCIsIkhLRCI6IjAiLCJIVUYiOiIwIiwiSU5SIjoiMCIsIklMUyI6IjAiLCJKUFkiOiIwIiwiTVhOIjoiMCIsIlRXRCI6IjAiLCJOWkQiOiIwIiwiTk9LIjoiMCIsIlBMTiI6IjAiLCJHQlAiOiIwIiwiU0dEIjoiMCIsIlpBUiI6IjAiLCJLUlciOiIwIiwiU0VLIjoiMCIsIkNIRiI6IjAiLCJUSEIiOiIwIn0sInJwIjp7IlVTRCI6IjkuOTkiLCJFVVIiOiI5Ljk5IiwiVFJZIjoiMTkuOTkiLCJSVUIiOiIyNDkiLCJVQUgiOiI4OS45OSIsIkNOWSI6IjM5Ljk5IiwiQVJTIjoiNTQ5IiwiQVVEIjoiMTAuOTkiLCJCUkwiOiIyOS45OSIsIkNBRCI6IjExLjk5IiwiQ1pLIjoiMTQ5IiwiREtLIjoiNTUuOTkiLCJIS0QiOiIzOS45OSIsIkhVRiI6IjE0OTkiLCJJTlIiOiIyOTkiLCJJTFMiOiIyOS45OSIsIkpQWSI6IjY5OSIsIk1YTiI6Ijg5Ljk5IiwiVFdEIjoiMTI5IiwiTlpEIjoiMTEuOTkiLCJOT0siOiI4OS45OSIsIlBMTiI6IjE5Ljk5IiwiR0JQIjoiNi45OSIsIlNHRCI6IjEwLjk5IiwiWkFSIjoiNTQuOTkiLCJLUlciOiI3OTk5IiwiU0VLIjoiODkuOTkiLCJDSEYiOiIxMS45OSIsIlRIQiI6IjE5OSJ9LCJ0ZCI6IjciLCJ5IjoiIiwicSI6MCwiZCI6MSwiYSI6W10sInYiOiIxMTc1OSIsImR3IjpmYWxzZSwicyI6ImI2ZmFiM2U2NDk2N2M3NjJlMzExNDdkM2VlZGJiOTU4NWRmOTM3NjVhNTQwYjQwNjBiYjEyMDI1Y2Q1MDFmODBmZWJkODkxMGY5YWQxOGMwMWEyNzNlYjRlYWZhZTlhY2Y5NDU5M2M3OWMyNGM1ZWY1Mzg0OTNjZWMzYjhhZDNkIn0=",
        trial_14:
          "https://checkout.paddle.com/checkout/custom/eyJ0IjoiTWF0ZSBQcm8gTW9udGhseSIsImkiOiJodHRwczpcL1wvcGFkZGxlLnMzLmFtYXpvbmF3cy5jb21cL3VzZXJcLzExNzU5XC9ja0lONlI0N1Q4TFA3WXNOcElCdF9fNTEyLnBuZyIsInIiOm51bGwsImNtIjoiIiwicmUiOjAsInAiOjY1MDA2MCwiYWwiOjAsImNjIjp7IlVTRCI6IjAiLCJFVVIiOiIwIiwiVFJZIjoiMCIsIlJVQiI6IjAiLCJVQUgiOiIwIiwiQ05ZIjoiMCIsIkFSUyI6IjAiLCJBVUQiOiIwIiwiQlJMIjoiMCIsIkNBRCI6IjAiLCJDWksiOiIwIiwiREtLIjoiMCIsIkhLRCI6IjAiLCJIVUYiOiIwIiwiSU5SIjoiMCIsIklMUyI6IjAiLCJKUFkiOiIwIiwiTVhOIjoiMCIsIlRXRCI6IjAiLCJOWkQiOiIwIiwiTk9LIjoiMCIsIlBMTiI6IjAiLCJHQlAiOiIwIiwiU0dEIjoiMCIsIlpBUiI6IjAiLCJLUlciOiIwIiwiU0VLIjoiMCIsIkNIRiI6IjAiLCJUSEIiOiIwIn0sInJwIjp7IlVTRCI6IjkuOTkiLCJFVVIiOiI5Ljk5IiwiVFJZIjoiMTkuOTkiLCJSVUIiOiIyNDkiLCJVQUgiOiI4OS45OSIsIkNOWSI6IjM5Ljk5IiwiQVJTIjoiNTQ5IiwiQVVEIjoiMTAuOTkiLCJCUkwiOiIyOS45OSIsIkNBRCI6IjExLjk5IiwiQ1pLIjoiMTQ5IiwiREtLIjoiNTUuOTkiLCJIS0QiOiIzOS45OSIsIkhVRiI6IjE0OTkiLCJJTlIiOiIyOTkiLCJJTFMiOiIyOS45OSIsIkpQWSI6IjY5OSIsIk1YTiI6Ijg5Ljk5IiwiVFdEIjoiMTI5IiwiTlpEIjoiMTEuOTkiLCJOT0siOiI4OS45OSIsIlBMTiI6IjE5Ljk5IiwiR0JQIjoiNi45OSIsIlNHRCI6IjEwLjk5IiwiWkFSIjoiNTQuOTkiLCJLUlciOiI3OTk5IiwiU0VLIjoiODkuOTkiLCJDSEYiOiIxMS45OSIsIlRIQiI6IjE5OSJ9LCJ0ZCI6IjE0IiwieSI6IiIsInEiOjAsImQiOjEsImEiOltdLCJ2IjoiMTE3NTkiLCJkdyI6ZmFsc2UsInMiOiI1ODFiOTBiMGE1MTcxZTAyZGE1OGI3YzhhZTM4OTQyMTA2OWExMDhlNjhkMTVkMTA4ZWZhZTBlZjVlNzY3ZDU2OTYxMGViZTY4ZDVjNTBlMDU1ZTViMWU5N2I4YzAzMGFiMGU4MDNhNjEzODBmZWQyNGEwNmM1OGNiMDAxZGY3ZCJ9",
      },
      tier_3: {
        trial_3:
          "https://checkout.paddle.com/checkout/custom/eyJ0IjoiTWF0ZSBQcm8gTW9udGhseSIsImkiOiJodHRwczpcL1wvcGFkZGxlLnMzLmFtYXpvbmF3cy5jb21cL3VzZXJcLzExNzU5XC9ja0lONlI0N1Q4TFA3WXNOcElCdF9fNTEyLnBuZyIsInIiOm51bGwsImNtIjoiIiwicmUiOjAsInAiOjY1MDA2MCwiYWwiOjAsImNjIjp7IlVTRCI6IjAiLCJFVVIiOiIwIiwiVFJZIjoiMCIsIlJVQiI6IjAiLCJVQUgiOiIwIiwiQ05ZIjoiMCIsIkFSUyI6IjAiLCJBVUQiOiIwIiwiQlJMIjoiMCIsIkNBRCI6IjAiLCJDWksiOiIwIiwiREtLIjoiMCIsIkhLRCI6IjAiLCJIVUYiOiIwIiwiSU5SIjoiMCIsIklMUyI6IjAiLCJKUFkiOiIwIiwiTVhOIjoiMCIsIlRXRCI6IjAiLCJOWkQiOiIwIiwiTk9LIjoiMCIsIlBMTiI6IjAiLCJHQlAiOiIwIiwiU0dEIjoiMCIsIlpBUiI6IjAiLCJLUlciOiIwIiwiU0VLIjoiMCIsIkNIRiI6IjAiLCJUSEIiOiIwIn0sInJwIjp7IlVTRCI6IjcuOTkiLCJFVVIiOiI3Ljk5IiwiVFJZIjoiMTUuOTkiLCJSVUIiOiIxODkiLCJVQUgiOiI2OS45OSIsIkNOWSI6IjI5Ljk5IiwiQVJTIjoiMzk5IiwiQVVEIjoiOC45OSIsIkJSTCI6IjI1Ljk5IiwiQ0FEIjoiOS45OSIsIkNaSyI6IjExOSIsIkRLSyI6IjQ5Ljk5IiwiSEtEIjoiMjkuOTkiLCJIVUYiOiIxMjk5IiwiSU5SIjoiMjY5IiwiSUxTIjoiMjQuOTkiLCJKUFkiOiI1OTkiLCJNWE4iOiI2OS45OSIsIlRXRCI6Ijk5Ljk5IiwiTlpEIjoiOS45OSIsIk5PSyI6Ijc0Ljk5IiwiUExOIjoiMTQuOTkiLCJHQlAiOiI0Ljk5IiwiU0dEIjoiOC45OSIsIlpBUiI6IjQ5Ljk5IiwiS1JXIjoiNTk5OSIsIlNFSyI6Ijc0Ljk5IiwiQ0hGIjoiOS45OSIsIlRIQiI6IjE2OSJ9LCJ0ZCI6IjMiLCJ5IjoiIiwicSI6MCwiZCI6MSwiYSI6W10sInYiOiIxMTc1OSIsImR3IjpmYWxzZSwicyI6IjBmZWVjYjc5MTZmMGFhNmI3NTliZTRjZDMzM2NmODlmMGFkYmYxYjRkYzg3MDk0YjFlZTI1MTQ3ZmQyNTg2MWRkNTdlYzFkMDFlMzE4OWNlZTI2YmRiY2NiOGIyOTQ2ZWI3ZDY3MDI3MTc3NDM1MjExOThmMjAwOTA1OGEyM2NjIn0=",
        trial_7:
          "https://checkout.paddle.com/checkout/custom/eyJ0IjoiTWF0ZSBQcm8gTW9udGhseSIsImkiOiJodHRwczpcL1wvcGFkZGxlLnMzLmFtYXpvbmF3cy5jb21cL3VzZXJcLzExNzU5XC9ja0lONlI0N1Q4TFA3WXNOcElCdF9fNTEyLnBuZyIsInIiOm51bGwsImNtIjoiIiwicmUiOjAsInAiOjY1MDA2MCwiYWwiOjAsImNjIjp7IlVTRCI6IjAiLCJFVVIiOiIwIiwiVFJZIjoiMCIsIlJVQiI6IjAiLCJVQUgiOiIwIiwiQ05ZIjoiMCIsIkFSUyI6IjAiLCJBVUQiOiIwIiwiQlJMIjoiMCIsIkNBRCI6IjAiLCJDWksiOiIwIiwiREtLIjoiMCIsIkhLRCI6IjAiLCJIVUYiOiIwIiwiSU5SIjoiMCIsIklMUyI6IjAiLCJKUFkiOiIwIiwiTVhOIjoiMCIsIlRXRCI6IjAiLCJOWkQiOiIwIiwiTk9LIjoiMCIsIlBMTiI6IjAiLCJHQlAiOiIwIiwiU0dEIjoiMCIsIlpBUiI6IjAiLCJLUlciOiIwIiwiU0VLIjoiMCIsIkNIRiI6IjAiLCJUSEIiOiIwIn0sInJwIjp7IlVTRCI6IjcuOTkiLCJFVVIiOiI3Ljk5IiwiVFJZIjoiMTUuOTkiLCJSVUIiOiIxODkiLCJVQUgiOiI2OS45OSIsIkNOWSI6IjI5Ljk5IiwiQVJTIjoiMzk5IiwiQVVEIjoiOC45OSIsIkJSTCI6IjI1Ljk5IiwiQ0FEIjoiOS45OSIsIkNaSyI6IjExOSIsIkRLSyI6IjQ5Ljk5IiwiSEtEIjoiMjkuOTkiLCJIVUYiOiIxMjk5IiwiSU5SIjoiMjY5IiwiSUxTIjoiMjQuOTkiLCJKUFkiOiI1OTkiLCJNWE4iOiI2OS45OSIsIlRXRCI6Ijk5Ljk5IiwiTlpEIjoiOS45OSIsIk5PSyI6Ijc0Ljk5IiwiUExOIjoiMTQuOTkiLCJHQlAiOiI0Ljk5IiwiU0dEIjoiOC45OSIsIlpBUiI6IjQ5Ljk5IiwiS1JXIjoiNTk5OSIsIlNFSyI6Ijc0Ljk5IiwiQ0hGIjoiOS45OSIsIlRIQiI6IjE2OSJ9LCJ0ZCI6IjciLCJ5IjoiIiwicSI6MCwiZCI6MSwiYSI6W10sInYiOiIxMTc1OSIsImR3IjpmYWxzZSwicyI6ImY3YjQ1N2Q3NDgwZTAwZTdkZDA2ZmNmMTkxM2JjNDQ3YWJkMzMwMTRkYzM3N2Y4ZmU2OGMzOGY4OWM3NjJmMGMwMmRiMjZiNTM5ZjIxZWE4NWU0ZjA4NTg0YzQxMTA0NzI0MjgxZGE0NzU5Y2NiNTc1Njk3MjExYWMxMWQ5ZGQ1In0=",
        trial_14:
          "https://checkout.paddle.com/checkout/custom/eyJ0IjoiTWF0ZSBQcm8gTW9udGhseSIsImkiOiJodHRwczpcL1wvcGFkZGxlLnMzLmFtYXpvbmF3cy5jb21cL3VzZXJcLzExNzU5XC9ja0lONlI0N1Q4TFA3WXNOcElCdF9fNTEyLnBuZyIsInIiOm51bGwsImNtIjoiIiwicmUiOjAsInAiOjY1MDA2MCwiYWwiOjAsImNjIjp7IlVTRCI6IjAiLCJFVVIiOiIwIiwiVFJZIjoiMCIsIlJVQiI6IjAiLCJVQUgiOiIwIiwiQ05ZIjoiMCIsIkFSUyI6IjAiLCJBVUQiOiIwIiwiQlJMIjoiMCIsIkNBRCI6IjAiLCJDWksiOiIwIiwiREtLIjoiMCIsIkhLRCI6IjAiLCJIVUYiOiIwIiwiSU5SIjoiMCIsIklMUyI6IjAiLCJKUFkiOiIwIiwiTVhOIjoiMCIsIlRXRCI6IjAiLCJOWkQiOiIwIiwiTk9LIjoiMCIsIlBMTiI6IjAiLCJHQlAiOiIwIiwiU0dEIjoiMCIsIlpBUiI6IjAiLCJLUlciOiIwIiwiU0VLIjoiMCIsIkNIRiI6IjAiLCJUSEIiOiIwIn0sInJwIjp7IlVTRCI6IjcuOTkiLCJFVVIiOiI3Ljk5IiwiVFJZIjoiMTUuOTkiLCJSVUIiOiIxODkiLCJVQUgiOiI2OS45OSIsIkNOWSI6IjI5Ljk5IiwiQVJTIjoiMzk5IiwiQVVEIjoiOC45OSIsIkJSTCI6IjI1Ljk5IiwiQ0FEIjoiOS45OSIsIkNaSyI6IjExOSIsIkRLSyI6IjQ5Ljk5IiwiSEtEIjoiMjkuOTkiLCJIVUYiOiIxMjk5IiwiSU5SIjoiMjY5IiwiSUxTIjoiMjQuOTkiLCJKUFkiOiI1OTkiLCJNWE4iOiI2OS45OSIsIlRXRCI6Ijk5Ljk5IiwiTlpEIjoiOS45OSIsIk5PSyI6Ijc0Ljk5IiwiUExOIjoiMTQuOTkiLCJHQlAiOiI0Ljk5IiwiU0dEIjoiOC45OSIsIlpBUiI6IjQ5Ljk5IiwiS1JXIjoiNTk5OSIsIlNFSyI6Ijc0Ljk5IiwiQ0hGIjoiOS45OSIsIlRIQiI6IjE2OSJ9LCJ0ZCI6IjE0IiwieSI6IiIsInEiOjAsImQiOjEsImEiOltdLCJ2IjoiMTE3NTkiLCJkdyI6ZmFsc2UsInMiOiJkYzFiYjA3NTZiY2JjNTNiNWJhYzk1MDIyZmFlODU0YTgyMzM1MzUzMjU5N2Q3MzE2NzJlZTFjNWVmZWVhNTg1NDk0MDVjYjRjMGI3MTYwMzY1YTYyZjEyNThiZGE2ZWM5NzE0NDA3ZGY4YjIwYmJmODAyYTBlNTBlNzZmNzRkNSJ9",
      },
      tier_2: {
        trial_3:
          "https://checkout.paddle.com/checkout/custom/eyJ0IjoiTWF0ZSBQcm8gTW9udGhseSIsImkiOiJodHRwczpcL1wvcGFkZGxlLnMzLmFtYXpvbmF3cy5jb21cL3VzZXJcLzExNzU5XC9ja0lONlI0N1Q4TFA3WXNOcElCdF9fNTEyLnBuZyIsInIiOm51bGwsImNtIjoiIiwicmUiOjAsInAiOjY1MDA2MCwiYWwiOjAsImNjIjp7IlVTRCI6IjAiLCJFVVIiOiIwIiwiVFJZIjoiMCIsIlJVQiI6IjAiLCJVQUgiOiIwIiwiQ05ZIjoiMCIsIkFSUyI6IjAiLCJBVUQiOiIwIiwiQlJMIjoiMCIsIkNBRCI6IjAiLCJDWksiOiIwIiwiREtLIjoiMCIsIkhLRCI6IjAiLCJIVUYiOiIwIiwiSU5SIjoiMCIsIklMUyI6IjAiLCJKUFkiOiIwIiwiTVhOIjoiMCIsIlRXRCI6IjAiLCJOWkQiOiIwIiwiTk9LIjoiMCIsIlBMTiI6IjAiLCJHQlAiOiIwIiwiU0dEIjoiMCIsIlpBUiI6IjAiLCJLUlciOiIwIiwiU0VLIjoiMCIsIkNIRiI6IjAiLCJUSEIiOiIwIn0sInJwIjp7IlVTRCI6IjUuOTkiLCJFVVIiOiI1Ljk5IiwiVFJZIjoiMjQuOTkiLCJSVUIiOiIxOTkiLCJVQUgiOiI2NC45OSIsIkNOWSI6IjI0Ljk5IiwiQVJTIjoiMzQ5IiwiQVVEIjoiNi45OSIsIkJSTCI6IjE5Ljk5IiwiQ0FEIjoiNi45OSIsIkNaSyI6Ijg5Ljk5IiwiREtLIjoiMzUuOTkiLCJIS0QiOiIyOS45OSIsIkhVRiI6Ijk5OSIsIklOUiI6IjE5OSIsIklMUyI6IjE4Ljk5IiwiSlBZIjoiNDQ5IiwiTVhOIjoiNTQuOTkiLCJUV0QiOiI3OS45OSIsIk5aRCI6IjYuOTkiLCJOT0siOiI1NC45OSIsIlBMTiI6IjEwLjk5IiwiR0JQIjoiMy45OSIsIlNHRCI6IjYuOTkiLCJaQVIiOiIzNC45OSIsIktSVyI6IjQ5OTkiLCJTRUsiOiI1NC45OSIsIkNIRiI6IjYuOTkiLCJUSEIiOiIxMjkifSwidGQiOiIzIiwieSI6IiIsInEiOjAsImQiOjEsImEiOltdLCJ2IjoiMTE3NTkiLCJkdyI6ZmFsc2UsInMiOiI1MjA5M2I5ZmFlZDQwOGQzODI0OWY5YzYxNmRmMWY4MmUwMTg3M2M4YzE4MzAyMGVhMDNmMjg3YzAyMmMwNTVjYTE5YWFjOTM1YTBhN2IyNWY0YmY1ZTllMTMyMDY1OTdkOWNlNGRjOTJmOWRmN2Y5ODlmZjEwMGU1YmQ2MzJhOCJ9",
        trial_7:
          "https://checkout.paddle.com/checkout/custom/eyJ0IjoiTWF0ZSBQcm8gTW9udGhseSIsImkiOiJodHRwczpcL1wvcGFkZGxlLnMzLmFtYXpvbmF3cy5jb21cL3VzZXJcLzExNzU5XC9ja0lONlI0N1Q4TFA3WXNOcElCdF9fNTEyLnBuZyIsInIiOm51bGwsImNtIjoiIiwicmUiOjAsInAiOjY1MDA2MCwiYWwiOjAsImNjIjp7IlVTRCI6IjAiLCJFVVIiOiIwIiwiVFJZIjoiMCIsIlJVQiI6IjAiLCJVQUgiOiIwIiwiQ05ZIjoiMCIsIkFSUyI6IjAiLCJBVUQiOiIwIiwiQlJMIjoiMCIsIkNBRCI6IjAiLCJDWksiOiIwIiwiREtLIjoiMCIsIkhLRCI6IjAiLCJIVUYiOiIwIiwiSU5SIjoiMCIsIklMUyI6IjAiLCJKUFkiOiIwIiwiTVhOIjoiMCIsIlRXRCI6IjAiLCJOWkQiOiIwIiwiTk9LIjoiMCIsIlBMTiI6IjAiLCJHQlAiOiIwIiwiU0dEIjoiMCIsIlpBUiI6IjAiLCJLUlciOiIwIiwiU0VLIjoiMCIsIkNIRiI6IjAiLCJUSEIiOiIwIn0sInJwIjp7IlVTRCI6IjUuOTkiLCJFVVIiOiI1Ljk5IiwiVFJZIjoiMjQuOTkiLCJSVUIiOiIxOTkiLCJVQUgiOiI2NC45OSIsIkNOWSI6IjI0Ljk5IiwiQVJTIjoiMzQ5IiwiQVVEIjoiNi45OSIsIkJSTCI6IjE5Ljk5IiwiQ0FEIjoiNi45OSIsIkNaSyI6Ijg5Ljk5IiwiREtLIjoiMzUuOTkiLCJIS0QiOiIyOS45OSIsIkhVRiI6Ijk5OSIsIklOUiI6IjE5OSIsIklMUyI6IjE4Ljk5IiwiSlBZIjoiNDQ5IiwiTVhOIjoiNTQuOTkiLCJUV0QiOiI3OS45OSIsIk5aRCI6IjYuOTkiLCJOT0siOiI1NC45OSIsIlBMTiI6IjEwLjk5IiwiR0JQIjoiMy45OSIsIlNHRCI6IjYuOTkiLCJaQVIiOiIzNC45OSIsIktSVyI6IjQ5OTkiLCJTRUsiOiI1NC45OSIsIkNIRiI6IjYuOTkiLCJUSEIiOiIxMjkifSwidGQiOiI3IiwieSI6IiIsInEiOjAsImQiOjEsImEiOltdLCJ2IjoiMTE3NTkiLCJkdyI6ZmFsc2UsInMiOiIzNzU4Yzk5MjgwYjE4NDAxYzIzZmEyMDVlODg0NTk1NTVlMGM4OGY3MjY0NTM1ZWY5ZjNhYjc2ZmJlMGY4ODVhZWRjNGY1OTAzODlkMTY5ODA3Y2JkZWUyOTk1NjY4Nzc2ODcwZWZmZGI2NjU2NGQzZjQzOGM1YjE5ODFiNzIyNCJ9",
        trial_14:
          "https://checkout.paddle.com/checkout/custom/eyJ0IjoiTWF0ZSBQcm8gTW9udGhseSIsImkiOiJodHRwczpcL1wvcGFkZGxlLnMzLmFtYXpvbmF3cy5jb21cL3VzZXJcLzExNzU5XC9ja0lONlI0N1Q4TFA3WXNOcElCdF9fNTEyLnBuZyIsInIiOm51bGwsImNtIjoiIiwicmUiOjAsInAiOjY1MDA2MCwiYWwiOjAsImNjIjp7IlVTRCI6IjAiLCJFVVIiOiIwIiwiVFJZIjoiMCIsIlJVQiI6IjAiLCJVQUgiOiIwIiwiQ05ZIjoiMCIsIkFSUyI6IjAiLCJBVUQiOiIwIiwiQlJMIjoiMCIsIkNBRCI6IjAiLCJDWksiOiIwIiwiREtLIjoiMCIsIkhLRCI6IjAiLCJIVUYiOiIwIiwiSU5SIjoiMCIsIklMUyI6IjAiLCJKUFkiOiIwIiwiTVhOIjoiMCIsIlRXRCI6IjAiLCJOWkQiOiIwIiwiTk9LIjoiMCIsIlBMTiI6IjAiLCJHQlAiOiIwIiwiU0dEIjoiMCIsIlpBUiI6IjAiLCJLUlciOiIwIiwiU0VLIjoiMCIsIkNIRiI6IjAiLCJUSEIiOiIwIn0sInJwIjp7IlVTRCI6IjUuOTkiLCJFVVIiOiI1Ljk5IiwiVFJZIjoiMjQuOTkiLCJSVUIiOiIxOTkiLCJVQUgiOiI2NC45OSIsIkNOWSI6IjI0Ljk5IiwiQVJTIjoiMzQ5IiwiQVVEIjoiNi45OSIsIkJSTCI6IjE5Ljk5IiwiQ0FEIjoiNi45OSIsIkNaSyI6Ijg5Ljk5IiwiREtLIjoiMzUuOTkiLCJIS0QiOiIyOS45OSIsIkhVRiI6Ijk5OSIsIklOUiI6IjE5OSIsIklMUyI6IjE4Ljk5IiwiSlBZIjoiNDQ5IiwiTVhOIjoiNTQuOTkiLCJUV0QiOiI3OS45OSIsIk5aRCI6IjYuOTkiLCJOT0siOiI1NC45OSIsIlBMTiI6IjEwLjk5IiwiR0JQIjoiMy45OSIsIlNHRCI6IjYuOTkiLCJaQVIiOiIzNC45OSIsIktSVyI6IjQ5OTkiLCJTRUsiOiI1NC45OSIsIkNIRiI6IjYuOTkiLCJUSEIiOiIxMjkifSwidGQiOiIxNCIsInkiOiIiLCJxIjowLCJkIjoxLCJhIjpbXSwidiI6IjExNzU5IiwiZHciOmZhbHNlLCJzIjoiODZmZGU4YWUwOTNkMTk0NTZjNDUzMjg3YjgxN2UxMWI1ZTJkZDhkYzllZWZmNGFmN2U5Y2M4NTdiMDg3N2E5NGIwYzAyYWI1MTNjMDAwNzIxODIxNWFiY2QxOGU2YWQwODZlNTBkM2U1YWRkNGJiZjEyZmFlYTRkMGYxNTdmMjAifQ==",
      },
      tier_1: {
        trial_3:
          "https://checkout.paddle.com/checkout/custom/eyJ0IjoiTWF0ZSBQcm8gTW9udGhseSIsImkiOiJodHRwczpcL1wvcGFkZGxlLnMzLmFtYXpvbmF3cy5jb21cL3VzZXJcLzExNzU5XC9ja0lONlI0N1Q4TFA3WXNOcElCdF9fNTEyLnBuZyIsInIiOm51bGwsImNtIjoiIiwicmUiOjAsInAiOjY1MDA2MCwiYWwiOjAsImNjIjp7IlVTRCI6IjAiLCJFVVIiOiIwIiwiVFJZIjoiMCIsIlJVQiI6IjAiLCJVQUgiOiIwIiwiQ05ZIjoiMCIsIkFSUyI6IjAiLCJBVUQiOiIwIiwiQlJMIjoiMCIsIkNBRCI6IjAiLCJDWksiOiIwIiwiREtLIjoiMCIsIkhLRCI6IjAiLCJIVUYiOiIwIiwiSU5SIjoiMCIsIklMUyI6IjAiLCJKUFkiOiIwIiwiTVhOIjoiMCIsIlRXRCI6IjAiLCJOWkQiOiIwIiwiTk9LIjoiMCIsIlBMTiI6IjAiLCJHQlAiOiIwIiwiU0dEIjoiMCIsIlpBUiI6IjAiLCJLUlciOiIwIiwiU0VLIjoiMCIsIkNIRiI6IjAiLCJUSEIiOiIwIn0sInJwIjp7IlVTRCI6IjMuOTkiLCJFVVIiOiIzLjk5IiwiVFJZIjoiMTYuOTkiLCJSVUIiOiIxNDkiLCJVQUgiOiI1NC45OSIsIkNOWSI6IjE5Ljk5IiwiQVJTIjoiMTk5IiwiQVVEIjoiNC45OSIsIkJSTCI6IjExLjk5IiwiQ0FEIjoiNC45OSIsIkNaSyI6IjU5Ljk5IiwiREtLIjoiMTkuOTkiLCJIS0QiOiIxOS45OSIsIkhVRiI6IjY0OSIsIklOUiI6IjEyOSIsIklMUyI6IjEyLjQ5IiwiSlBZIjoiMzQ5IiwiTVhOIjoiMzQuOTkiLCJUV0QiOiI0OS45OSIsIk5aRCI6IjQuOTkiLCJOT0siOiIzOS45OSIsIlBMTiI6IjcuOTkiLCJHQlAiOiIyLjQ5IiwiU0dEIjoiNC40OSIsIlpBUiI6IjIxLjk5IiwiS1JXIjoiMjk5OSIsIlNFSyI6IjM5Ljk5IiwiQ0hGIjoiNC45OSIsIlRIQiI6Ijg5Ljk5In0sInRkIjoiMyIsInkiOiIiLCJxIjowLCJkIjoxLCJhIjpbXSwidiI6IjExNzU5IiwiZHciOmZhbHNlLCJzIjoiZTdjZDFhYzBiZjEwNWM3ZmQzNjEwZWRmYmY2YjQ0MGQ2NWVhMTEzMTQyMTA2Yjc3NzYyOGI5YmYyN2EyNjBkZTRkZDM1MTlmNjU3NWJlODkzN2MxYjNiMjlkOTI2MTRlNGNmZTE3NzhkNGU3MTE5NmJjNjUzZDUxMGMxZTFhM2YifQ==",
        trial_7:
          "https://checkout.paddle.com/checkout/custom/eyJ0IjoiTWF0ZSBQcm8gTW9udGhseSIsImkiOiJodHRwczpcL1wvcGFkZGxlLnMzLmFtYXpvbmF3cy5jb21cL3VzZXJcLzExNzU5XC9ja0lONlI0N1Q4TFA3WXNOcElCdF9fNTEyLnBuZyIsInIiOm51bGwsImNtIjoiIiwicmUiOjAsInAiOjY1MDA2MCwiYWwiOjAsImNjIjp7IlVTRCI6IjAiLCJFVVIiOiIwIiwiVFJZIjoiMCIsIlJVQiI6IjAiLCJVQUgiOiIwIiwiQ05ZIjoiMCIsIkFSUyI6IjAiLCJBVUQiOiIwIiwiQlJMIjoiMCIsIkNBRCI6IjAiLCJDWksiOiIwIiwiREtLIjoiMCIsIkhLRCI6IjAiLCJIVUYiOiIwIiwiSU5SIjoiMCIsIklMUyI6IjAiLCJKUFkiOiIwIiwiTVhOIjoiMCIsIlRXRCI6IjAiLCJOWkQiOiIwIiwiTk9LIjoiMCIsIlBMTiI6IjAiLCJHQlAiOiIwIiwiU0dEIjoiMCIsIlpBUiI6IjAiLCJLUlciOiIwIiwiU0VLIjoiMCIsIkNIRiI6IjAiLCJUSEIiOiIwIn0sInJwIjp7IlVTRCI6IjMuOTkiLCJFVVIiOiIzLjk5IiwiVFJZIjoiMTYuOTkiLCJSVUIiOiIxNDkiLCJVQUgiOiI1NC45OSIsIkNOWSI6IjE5Ljk5IiwiQVJTIjoiMTk5IiwiQVVEIjoiNC45OSIsIkJSTCI6IjExLjk5IiwiQ0FEIjoiNC45OSIsIkNaSyI6IjU5Ljk5IiwiREtLIjoiMTkuOTkiLCJIS0QiOiIxOS45OSIsIkhVRiI6IjY0OSIsIklOUiI6IjEyOSIsIklMUyI6IjEyLjQ5IiwiSlBZIjoiMzQ5IiwiTVhOIjoiMzQuOTkiLCJUV0QiOiI0OS45OSIsIk5aRCI6IjQuOTkiLCJOT0siOiIzOS45OSIsIlBMTiI6IjcuOTkiLCJHQlAiOiIyLjQ5IiwiU0dEIjoiNC40OSIsIlpBUiI6IjIxLjk5IiwiS1JXIjoiMjk5OSIsIlNFSyI6IjM5Ljk5IiwiQ0hGIjoiNC45OSIsIlRIQiI6Ijg5Ljk5In0sInRkIjoiNyIsInkiOiIiLCJxIjowLCJkIjoxLCJhIjpbXSwidiI6IjExNzU5IiwiZHciOmZhbHNlLCJzIjoiNDYxODhjYjliMTAyNzA3MTBhNzE4MjNmNDI3ZmQ3ZGQzMjhmNDQxMzY0ZGU1MzA1NDEwZGMwMWY4NTVlZWMwZTRmYTEwYTA0MmQ3MjlmMzI0YWE1ZmQ0OTgzOWNiOGUxZDY3MjJhNzIzY2Q3OGQ5MmFlY2EzNDdiYTdiMWRhOTMifQ==",
        trial_14:
          "https://checkout.paddle.com/checkout/custom/eyJ0IjoiTWF0ZSBQcm8gTW9udGhseSIsImkiOiJodHRwczpcL1wvcGFkZGxlLnMzLmFtYXpvbmF3cy5jb21cL3VzZXJcLzExNzU5XC9ja0lONlI0N1Q4TFA3WXNOcElCdF9fNTEyLnBuZyIsInIiOm51bGwsImNtIjoiIiwicmUiOjAsInAiOjY1MDA2MCwiYWwiOjAsImNjIjp7IlVTRCI6IjAiLCJFVVIiOiIwIiwiVFJZIjoiMCIsIlJVQiI6IjAiLCJVQUgiOiIwIiwiQ05ZIjoiMCIsIkFSUyI6IjAiLCJBVUQiOiIwIiwiQlJMIjoiMCIsIkNBRCI6IjAiLCJDWksiOiIwIiwiREtLIjoiMCIsIkhLRCI6IjAiLCJIVUYiOiIwIiwiSU5SIjoiMCIsIklMUyI6IjAiLCJKUFkiOiIwIiwiTVhOIjoiMCIsIlRXRCI6IjAiLCJOWkQiOiIwIiwiTk9LIjoiMCIsIlBMTiI6IjAiLCJHQlAiOiIwIiwiU0dEIjoiMCIsIlpBUiI6IjAiLCJLUlciOiIwIiwiU0VLIjoiMCIsIkNIRiI6IjAiLCJUSEIiOiIwIn0sInJwIjp7IlVTRCI6IjMuOTkiLCJFVVIiOiIzLjk5IiwiVFJZIjoiMTYuOTkiLCJSVUIiOiIxNDkiLCJVQUgiOiI1NC45OSIsIkNOWSI6IjE5Ljk5IiwiQVJTIjoiMTk5IiwiQVVEIjoiNC45OSIsIkJSTCI6IjExLjk5IiwiQ0FEIjoiNC45OSIsIkNaSyI6IjU5Ljk5IiwiREtLIjoiMTkuOTkiLCJIS0QiOiIxOS45OSIsIkhVRiI6IjY0OSIsIklOUiI6IjEyOSIsIklMUyI6IjEyLjQ5IiwiSlBZIjoiMzQ5IiwiTVhOIjoiMzQuOTkiLCJUV0QiOiI0OS45OSIsIk5aRCI6IjQuOTkiLCJOT0siOiIzOS45OSIsIlBMTiI6IjcuOTkiLCJHQlAiOiIyLjQ5IiwiU0dEIjoiNC40OSIsIlpBUiI6IjIxLjk5IiwiS1JXIjoiMjk5OSIsIlNFSyI6IjM5Ljk5IiwiQ0hGIjoiNC45OSIsIlRIQiI6Ijg5Ljk5In0sInRkIjoiMTQiLCJ5IjoiIiwicSI6MCwiZCI6MSwiYSI6W10sInYiOiIxMTc1OSIsImR3IjpmYWxzZSwicyI6ImI0OTI3ZDQ3NjY1ODYxNDdhYmE2ZGFiYTc4NzA1OGZlNjM3MjIyYmNjMDJiYzE2MmI3NTY1MjUzODE4YTk1YmFkNTgxYzNlZWNiMGQ5OTlkNDliMmNkMDAyNDAyODFkYjVkZTI0ZmIzNTdkMjRmYjBhOGNhM2M3YjM2MmRhZjYyIn0=",
      },
      tier_5: {
        trial_3:
          "https://checkout.paddle.com/checkout/custom/eyJ0IjoiTWF0ZSBQcm8gTW9udGhseSIsImkiOiJodHRwczpcL1wvcGFkZGxlLnMzLmFtYXpvbmF3cy5jb21cL3VzZXJcLzExNzU5XC9ja0lONlI0N1Q4TFA3WXNOcElCdF9fNTEyLnBuZyIsInIiOm51bGwsImNtIjoiIiwicmUiOjAsInAiOjY1MDA2MCwiYWwiOjAsImNjIjp7IlVTRCI6IjAiLCJFVVIiOiIwIiwiVFJZIjoiMCIsIlJVQiI6IjAiLCJVQUgiOiIwIiwiQ05ZIjoiMCIsIkFSUyI6IjAiLCJBVUQiOiIwIiwiQlJMIjoiMCIsIkNBRCI6IjAiLCJDWksiOiIwIiwiREtLIjoiMCIsIkhLRCI6IjAiLCJIVUYiOiIwIiwiSU5SIjoiMCIsIklMUyI6IjAiLCJKUFkiOiIwIiwiTVhOIjoiMCIsIlRXRCI6IjAiLCJOWkQiOiIwIiwiTk9LIjoiMCIsIlBMTiI6IjAiLCJHQlAiOiIwIiwiU0dEIjoiMCIsIlpBUiI6IjAiLCJLUlciOiIwIiwiU0VLIjoiMCIsIkNIRiI6IjAiLCJUSEIiOiIwIn0sInJwIjp7IlVTRCI6IjIuOTkiLCJFVVIiOiIyLjk5IiwiVFJZIjoiMTMuOTkiLCJSVUIiOiIxMDkiLCJVQUgiOiIzOS45OSIsIkNOWSI6IjE0Ljk5IiwiQVJTIjoiMTk5IiwiQVVEIjoiMy45OSIsIkJSTCI6IjkuOTkiLCJDQUQiOiIzLjk5IiwiQ1pLIjoiNDkuOTkiLCJES0siOiIxNC45OSIsIkhLRCI6IjE0Ljk5IiwiSFVGIjoiNDQ5IiwiSU5SIjoiOTkuOTkiLCJJTFMiOiI4Ljk5IiwiSlBZIjoiMjg5IiwiTVhOIjoiMzQuOTkiLCJUV0QiOiI0OS45OSIsIk5aRCI6IjMuOTkiLCJOT0siOiIyOS45OSIsIlBMTiI6IjcuOTkiLCJHQlAiOiIyLjk5IiwiU0dEIjoiMy45OSIsIlpBUiI6IjIxLjk5IiwiS1JXIjoiMjk5OSIsIlNFSyI6IjI5Ljk5IiwiQ0hGIjoiMi45OSIsIlRIQiI6IjU5Ljk5In0sInRkIjoiMyIsInkiOiIiLCJxIjowLCJkIjoxLCJhIjpbXSwidiI6IjExNzU5IiwiZHciOmZhbHNlLCJzIjoiNmU1NTA2YzdmOTIyMTY3YjM2Y2Q0ZjQyYzJhYWZkYWU3YzhlOGYzYmYyODA0YThhOTA4YTk1MTYxZTAxMjA1ZDFjODI2YzQ0ODY2ODkyODQwZmM1NDVlYmExM2IyZDg4Mjk0NDIzZjlkMjUyM2RhMzUxMTJjYThhNGUyNzA3ZmQifQ==",
        trial_7:
          "https://checkout.paddle.com/checkout/custom/eyJ0IjoiTWF0ZSBQcm8gTW9udGhseSIsImkiOiJodHRwczpcL1wvcGFkZGxlLnMzLmFtYXpvbmF3cy5jb21cL3VzZXJcLzExNzU5XC9ja0lONlI0N1Q4TFA3WXNOcElCdF9fNTEyLnBuZyIsInIiOm51bGwsImNtIjoiIiwicmUiOjAsInAiOjY1MDA2MCwiYWwiOjAsImNjIjp7IlVTRCI6IjAiLCJFVVIiOiIwIiwiVFJZIjoiMCIsIlJVQiI6IjAiLCJVQUgiOiIwIiwiQ05ZIjoiMCIsIkFSUyI6IjAiLCJBVUQiOiIwIiwiQlJMIjoiMCIsIkNBRCI6IjAiLCJDWksiOiIwIiwiREtLIjoiMCIsIkhLRCI6IjAiLCJIVUYiOiIwIiwiSU5SIjoiMCIsIklMUyI6IjAiLCJKUFkiOiIwIiwiTVhOIjoiMCIsIlRXRCI6IjAiLCJOWkQiOiIwIiwiTk9LIjoiMCIsIlBMTiI6IjAiLCJHQlAiOiIwIiwiU0dEIjoiMCIsIlpBUiI6IjAiLCJLUlciOiIwIiwiU0VLIjoiMCIsIkNIRiI6IjAiLCJUSEIiOiIwIn0sInJwIjp7IlVTRCI6IjIuOTkiLCJFVVIiOiIyLjk5IiwiVFJZIjoiMTMuOTkiLCJSVUIiOiIxMDkiLCJVQUgiOiIzOS45OSIsIkNOWSI6IjE0Ljk5IiwiQVJTIjoiMTk5IiwiQVVEIjoiMy45OSIsIkJSTCI6IjkuOTkiLCJDQUQiOiIzLjk5IiwiQ1pLIjoiNDkuOTkiLCJES0siOiIxNC45OSIsIkhLRCI6IjE0Ljk5IiwiSFVGIjoiNDQ5IiwiSU5SIjoiOTkuOTkiLCJJTFMiOiI4Ljk5IiwiSlBZIjoiMjg5IiwiTVhOIjoiMzQuOTkiLCJUV0QiOiI0OS45OSIsIk5aRCI6IjMuOTkiLCJOT0siOiIyOS45OSIsIlBMTiI6IjcuOTkiLCJHQlAiOiIyLjk5IiwiU0dEIjoiMy45OSIsIlpBUiI6IjIxLjk5IiwiS1JXIjoiMjk5OSIsIlNFSyI6IjI5Ljk5IiwiQ0hGIjoiMi45OSIsIlRIQiI6IjU5Ljk5In0sInRkIjoiNyIsInkiOiIiLCJxIjowLCJkIjoxLCJhIjpbXSwidiI6IjExNzU5IiwiZHciOmZhbHNlLCJzIjoiYTY3ZWMyYmU2MTYzMDAzNWY3NmM0NDc1MzE1Mzc1ZjlhMDYxZGZiNzZhMTA1OWY2MTQxNWFjNTZjM2Y2NjYwNmEzYWQxODYxY2QxZGNmOTE5MzIwNWNmODVlM2RjODZmYzdhMzJkYmVjN2EyMTk4ZmE5OTJmNzI3MzA5OTc5OGUifQ==",
        trial_14:
          "https://checkout.paddle.com/checkout/custom/eyJ0IjoiTWF0ZSBQcm8gTW9udGhseSIsImkiOiJodHRwczpcL1wvcGFkZGxlLnMzLmFtYXpvbmF3cy5jb21cL3VzZXJcLzExNzU5XC9ja0lONlI0N1Q4TFA3WXNOcElCdF9fNTEyLnBuZyIsInIiOm51bGwsImNtIjoiIiwicmUiOjAsInAiOjY1MDA2MCwiYWwiOjAsImNjIjp7IlVTRCI6IjAiLCJFVVIiOiIwIiwiVFJZIjoiMCIsIlJVQiI6IjAiLCJVQUgiOiIwIiwiQ05ZIjoiMCIsIkFSUyI6IjAiLCJBVUQiOiIwIiwiQlJMIjoiMCIsIkNBRCI6IjAiLCJDWksiOiIwIiwiREtLIjoiMCIsIkhLRCI6IjAiLCJIVUYiOiIwIiwiSU5SIjoiMCIsIklMUyI6IjAiLCJKUFkiOiIwIiwiTVhOIjoiMCIsIlRXRCI6IjAiLCJOWkQiOiIwIiwiTk9LIjoiMCIsIlBMTiI6IjAiLCJHQlAiOiIwIiwiU0dEIjoiMCIsIlpBUiI6IjAiLCJLUlciOiIwIiwiU0VLIjoiMCIsIkNIRiI6IjAiLCJUSEIiOiIwIn0sInJwIjp7IlVTRCI6IjIuOTkiLCJFVVIiOiIyLjk5IiwiVFJZIjoiMTMuOTkiLCJSVUIiOiIxMDkiLCJVQUgiOiIzOS45OSIsIkNOWSI6IjE0Ljk5IiwiQVJTIjoiMTk5IiwiQVVEIjoiMy45OSIsIkJSTCI6IjkuOTkiLCJDQUQiOiIzLjk5IiwiQ1pLIjoiNDkuOTkiLCJES0siOiIxNC45OSIsIkhLRCI6IjE0Ljk5IiwiSFVGIjoiNDQ5IiwiSU5SIjoiOTkuOTkiLCJJTFMiOiI4Ljk5IiwiSlBZIjoiMjg5IiwiTVhOIjoiMzQuOTkiLCJUV0QiOiI0OS45OSIsIk5aRCI6IjMuOTkiLCJOT0siOiIyOS45OSIsIlBMTiI6IjcuOTkiLCJHQlAiOiIyLjk5IiwiU0dEIjoiMy45OSIsIlpBUiI6IjIxLjk5IiwiS1JXIjoiMjk5OSIsIlNFSyI6IjI5Ljk5IiwiQ0hGIjoiMi45OSIsIlRIQiI6IjU5Ljk5In0sInRkIjoiMTQiLCJ5IjoiIiwicSI6MCwiZCI6MSwiYSI6W10sInYiOiIxMTc1OSIsImR3IjpmYWxzZSwicyI6ImYxMjJkODM0YzdhYjFjN2FjNjI5OGU1YjQzMmY3YzVkNTQxMDVkNzk0NmVkMzM4NzQ5MGM4YWI5YTM5NDc2OWQ4NzFmZWNiYjlhMmI5ZTU2YjgxOWJhNzRiNTVmNzQ2NTJiOWIxYjM5NWFkOTk4YTVjMDZlNWQ3NDUyY2Q0NTc0In0=",
      },
      tier_6: {
        trial_3:
          "https://checkout.paddle.com/checkout/custom/eyJ0IjoiTWF0ZSBQcm8gTW9udGhseSIsImkiOiJodHRwczpcL1wvcGFkZGxlLnMzLmFtYXpvbmF3cy5jb21cL3VzZXJcLzExNzU5XC9ja0lONlI0N1Q4TFA3WXNOcElCdF9fNTEyLnBuZyIsInIiOm51bGwsImNtIjoiIiwicmUiOjAsInAiOjY1MDA2MCwiYWwiOjAsImNjIjp7IlVTRCI6IjAiLCJFVVIiOiIwIiwiVFJZIjoiMCIsIlJVQiI6IjAiLCJVQUgiOiIwIiwiQ05ZIjoiMCIsIkFSUyI6IjAiLCJBVUQiOiIwIiwiQlJMIjoiMCIsIkNBRCI6IjAiLCJDWksiOiIwIiwiREtLIjoiMCIsIkhLRCI6IjAiLCJIVUYiOiIwIiwiSU5SIjoiMCIsIklMUyI6IjAiLCJKUFkiOiIwIiwiTVhOIjoiMCIsIlRXRCI6IjAiLCJOWkQiOiIwIiwiTk9LIjoiMCIsIlBMTiI6IjAiLCJHQlAiOiIwIiwiU0dEIjoiMCIsIlpBUiI6IjAiLCJLUlciOiIwIiwiU0VLIjoiMCIsIkNIRiI6IjAiLCJUSEIiOiIwIn0sInJwIjp7IlVTRCI6IjEuOTkiLCJFVVIiOiIxLjk5IiwiVFJZIjoiOS45OSIsIlJVQiI6IjY5Ljk5IiwiVUFIIjoiMjkuOTkiLCJDTlkiOiI5Ljk5IiwiQVJTIjoiOTkuOTkiLCJBVUQiOiIyLjQ5IiwiQlJMIjoiNS45OSIsIkNBRCI6IjIuNDkiLCJDWksiOiIzOS45OSIsIkRLSyI6IjkuOTkiLCJIS0QiOiI5Ljk5IiwiSFVGIjoiMzQ5IiwiSU5SIjoiNjkuOTkiLCJJTFMiOiI1Ljk5IiwiSlBZIjoiMTk5IiwiTVhOIjoiMjQuOTkiLCJUV0QiOiIzNC45OSIsIk5aRCI6IjIuNDkiLCJOT0siOiIxOS45OSIsIlBMTiI6IjQuOTkiLCJHQlAiOiIxLjk5IiwiU0dEIjoiMi45OSIsIlpBUiI6IjE0Ljk5IiwiS1JXIjoiMTk5OSIsIlNFSyI6IjE5Ljk5IiwiQ0hGIjoiMS45OSIsIlRIQiI6IjM5Ljk5In0sInRkIjoiMyIsInkiOiIiLCJxIjowLCJkIjoxLCJhIjpbXSwidiI6IjExNzU5IiwiZHciOmZhbHNlLCJzIjoiODViMDFlNzA5OGZjY2JmMmVlYzA1Njg0NjRmMzlkMjdmNDMxODhhMDI4Y2Q4NmJjOWJhMzcyOWRhMGJhOWYyZWRhY2ZiNTY5MTQxMWIzZDljZDk2NjhiYTIxMDQxMDAzOGNlM2ZmYTQyNmM3ZmM5MDY4YzExNDQ2ZGYzOGMwNGUifQ==",
        trial_7:
          "https://checkout.paddle.com/checkout/custom/eyJ0IjoiTWF0ZSBQcm8gTW9udGhseSIsImkiOiJodHRwczpcL1wvcGFkZGxlLnMzLmFtYXpvbmF3cy5jb21cL3VzZXJcLzExNzU5XC9ja0lONlI0N1Q4TFA3WXNOcElCdF9fNTEyLnBuZyIsInIiOm51bGwsImNtIjoiIiwicmUiOjAsInAiOjY1MDA2MCwiYWwiOjAsImNjIjp7IlVTRCI6IjAiLCJFVVIiOiIwIiwiVFJZIjoiMCIsIlJVQiI6IjAiLCJVQUgiOiIwIiwiQ05ZIjoiMCIsIkFSUyI6IjAiLCJBVUQiOiIwIiwiQlJMIjoiMCIsIkNBRCI6IjAiLCJDWksiOiIwIiwiREtLIjoiMCIsIkhLRCI6IjAiLCJIVUYiOiIwIiwiSU5SIjoiMCIsIklMUyI6IjAiLCJKUFkiOiIwIiwiTVhOIjoiMCIsIlRXRCI6IjAiLCJOWkQiOiIwIiwiTk9LIjoiMCIsIlBMTiI6IjAiLCJHQlAiOiIwIiwiU0dEIjoiMCIsIlpBUiI6IjAiLCJLUlciOiIwIiwiU0VLIjoiMCIsIkNIRiI6IjAiLCJUSEIiOiIwIn0sInJwIjp7IlVTRCI6IjEuOTkiLCJFVVIiOiIxLjk5IiwiVFJZIjoiOS45OSIsIlJVQiI6IjY5Ljk5IiwiVUFIIjoiMjkuOTkiLCJDTlkiOiI5Ljk5IiwiQVJTIjoiOTkuOTkiLCJBVUQiOiIyLjQ5IiwiQlJMIjoiNS45OSIsIkNBRCI6IjIuNDkiLCJDWksiOiIzOS45OSIsIkRLSyI6IjkuOTkiLCJIS0QiOiI5Ljk5IiwiSFVGIjoiMzQ5IiwiSU5SIjoiNjkuOTkiLCJJTFMiOiI1Ljk5IiwiSlBZIjoiMTk5IiwiTVhOIjoiMjQuOTkiLCJUV0QiOiIzNC45OSIsIk5aRCI6IjIuNDkiLCJOT0siOiIxOS45OSIsIlBMTiI6IjQuOTkiLCJHQlAiOiIxLjk5IiwiU0dEIjoiMi45OSIsIlpBUiI6IjE0Ljk5IiwiS1JXIjoiMTk5OSIsIlNFSyI6IjE5Ljk5IiwiQ0hGIjoiMS45OSIsIlRIQiI6IjM5Ljk5In0sInRkIjoiNyIsInkiOiIiLCJxIjowLCJkIjoxLCJhIjpbXSwidiI6IjExNzU5IiwiZHciOmZhbHNlLCJzIjoiMDYyNWM2OTIwNmNkNDY3NDA0MDZhYmEyZDExMzAxNGRjZGUyYWNmMDU0Zjk3ZDMyODc1NDFhZDdkNmMxNWE2YmZhZTcyYTZmYzI3YzViNTk5NmViZWRmNzA5NTY0YWEyYzdmOWI3ZTk1NmUyMGEyNzViNWE1ZTdhOTI3YTAxMDYifQ==",
        trial_14:
          "https://checkout.paddle.com/checkout/custom/eyJ0IjoiTWF0ZSBQcm8gTW9udGhseSIsImkiOiJodHRwczpcL1wvcGFkZGxlLnMzLmFtYXpvbmF3cy5jb21cL3VzZXJcLzExNzU5XC9ja0lONlI0N1Q4TFA3WXNOcElCdF9fNTEyLnBuZyIsInIiOm51bGwsImNtIjoiIiwicmUiOjAsInAiOjY1MDA2MCwiYWwiOjAsImNjIjp7IlVTRCI6IjAiLCJFVVIiOiIwIiwiVFJZIjoiMCIsIlJVQiI6IjAiLCJVQUgiOiIwIiwiQ05ZIjoiMCIsIkFSUyI6IjAiLCJBVUQiOiIwIiwiQlJMIjoiMCIsIkNBRCI6IjAiLCJDWksiOiIwIiwiREtLIjoiMCIsIkhLRCI6IjAiLCJIVUYiOiIwIiwiSU5SIjoiMCIsIklMUyI6IjAiLCJKUFkiOiIwIiwiTVhOIjoiMCIsIlRXRCI6IjAiLCJOWkQiOiIwIiwiTk9LIjoiMCIsIlBMTiI6IjAiLCJHQlAiOiIwIiwiU0dEIjoiMCIsIlpBUiI6IjAiLCJLUlciOiIwIiwiU0VLIjoiMCIsIkNIRiI6IjAiLCJUSEIiOiIwIn0sInJwIjp7IlVTRCI6IjEuOTkiLCJFVVIiOiIxLjk5IiwiVFJZIjoiOS45OSIsIlJVQiI6IjY5Ljk5IiwiVUFIIjoiMjkuOTkiLCJDTlkiOiI5Ljk5IiwiQVJTIjoiOTkuOTkiLCJBVUQiOiIyLjQ5IiwiQlJMIjoiNS45OSIsIkNBRCI6IjIuNDkiLCJDWksiOiIzOS45OSIsIkRLSyI6IjkuOTkiLCJIS0QiOiI5Ljk5IiwiSFVGIjoiMzQ5IiwiSU5SIjoiNjkuOTkiLCJJTFMiOiI1Ljk5IiwiSlBZIjoiMTk5IiwiTVhOIjoiMjQuOTkiLCJUV0QiOiIzNC45OSIsIk5aRCI6IjIuNDkiLCJOT0siOiIxOS45OSIsIlBMTiI6IjQuOTkiLCJHQlAiOiIxLjk5IiwiU0dEIjoiMi45OSIsIlpBUiI6IjE0Ljk5IiwiS1JXIjoiMTk5OSIsIlNFSyI6IjE5Ljk5IiwiQ0hGIjoiMS45OSIsIlRIQiI6IjM5Ljk5In0sInRkIjoiMTQiLCJ5IjoiIiwicSI6MCwiZCI6MSwiYSI6W10sInYiOiIxMTc1OSIsImR3IjpmYWxzZSwicyI6ImFiYzgwYjg3Zjg3MWVlNmE5ZTBmOWMwNGYyNTMyYTMzNWZlNDcwMjM3NjZlYzU3Yjg3YmE4MWVkZGU1OTBhZjM2YTkzNDAwM2RmODc0OTdkZTkzODU0Nzk3YTAxMjk5OWU0ZjIwNjMyNGIxMWM4OGZjOGVlZjBmNzZkOGExNTkzIn0=",
      },
    },
    annual: {
      tier_4: {
        trial_3:
          "https://checkout.paddle.com/checkout/custom/eyJ0IjoiTWF0ZSBQcm8gWWVhcmx5IiwiaSI6Imh0dHBzOlwvXC9wYWRkbGUuczMuYW1hem9uYXdzLmNvbVwvdXNlclwvMTE3NTlcL3N1YnNfNjUwODQ0X2ljb24ucG5nIiwiciI6bnVsbCwiY20iOiIiLCJyZSI6MCwicCI6NjUwODQ0LCJhbCI6MCwiY2MiOnsiVVNEIjoiMCIsIkVVUiI6IjAiLCJUUlkiOiIwIiwiUlVCIjoiMCIsIlVBSCI6IjAiLCJDTlkiOiIwIiwiQVJTIjoiMCIsIkFVRCI6IjAiLCJCUkwiOiIwIiwiQ0FEIjoiMCIsIkNaSyI6IjAiLCJES0siOiIwIiwiSEtEIjoiMCIsIkhVRiI6IjAiLCJJTlIiOiIwIiwiSUxTIjoiMCIsIkpQWSI6IjAiLCJNWE4iOiIwIiwiVFdEIjoiMCIsIk5aRCI6IjAiLCJOT0siOiIwIiwiUExOIjoiMCIsIkdCUCI6IjAiLCJTR0QiOiIwIiwiWkFSIjoiMCIsIktSVyI6IjAiLCJTRUsiOiIwIiwiQ0hGIjoiMCIsIlRIQiI6IjAifSwicnAiOnsiVVNEIjoiNzkuOTkiLCJFVVIiOiI3OS45OSIsIlRSWSI6IjE1OSIsIlJVQiI6IjE4OTkiLCJVQUgiOiI2OTkiLCJDTlkiOiIyOTkiLCJBUlMiOiIzOTk5IiwiQVVEIjoiODkuOTkiLCJCUkwiOiIyNDkiLCJDQUQiOiI5OS45OSIsIkNaSyI6IjExOTkiLCJES0siOiI0NDkiLCJIS0QiOiIyOTkiLCJIVUYiOiIxMjk5OSIsIklOUiI6IjI2OTkiLCJJTFMiOiIyNDkiLCJKUFkiOiI1OTk5IiwiTVhOIjoiNjk5IiwiVFdEIjoiOTk5IiwiTlpEIjoiOTQuOTkiLCJOT0siOiI3NDkiLCJQTE4iOiIxNDkiLCJHQlAiOiI0OS45OSIsIlNHRCI6Ijg5Ljk5IiwiWkFSIjoiNDQ5IiwiS1JXIjoiNTk5OTkiLCJTRUsiOiI3NDkiLCJDSEYiOiI5OS45OSIsIlRIQiI6IjE2OTkifSwidGQiOiIzIiwieSI6IiIsInEiOjAsImQiOjEsImEiOltdLCJ2IjoiMTE3NTkiLCJkdyI6ZmFsc2UsInMiOiI4OWFlZDcwYWZiNmMyMTZjYzljYTRiN2QxZWExNDUyZGUwNzYzYjQ1OGM1ZTE5Y2Y1MTkyOGQwMzU4NmIwYWU5MWU2MTU0YWU1MWZmNWI2MmI0MWQwMjAwY2E1MjExMmE1NDczMWIxN2NmMTJhMTk0Y2QzOTNmMDA2N2Y0ZDY1YSJ9",
        trial_7:
          "https://checkout.paddle.com/checkout/custom/eyJ0IjoiTWF0ZSBQcm8gWWVhcmx5IiwiaSI6Imh0dHBzOlwvXC9wYWRkbGUuczMuYW1hem9uYXdzLmNvbVwvdXNlclwvMTE3NTlcL3N1YnNfNjUwODQ0X2ljb24ucG5nIiwiciI6bnVsbCwiY20iOiIiLCJyZSI6MCwicCI6NjUwODQ0LCJhbCI6MCwiY2MiOnsiVVNEIjoiMCIsIkVVUiI6IjAiLCJUUlkiOiIwIiwiUlVCIjoiMCIsIlVBSCI6IjAiLCJDTlkiOiIwIiwiQVJTIjoiMCIsIkFVRCI6IjAiLCJCUkwiOiIwIiwiQ0FEIjoiMCIsIkNaSyI6IjAiLCJES0siOiIwIiwiSEtEIjoiMCIsIkhVRiI6IjAiLCJJTlIiOiIwIiwiSUxTIjoiMCIsIkpQWSI6IjAiLCJNWE4iOiIwIiwiVFdEIjoiMCIsIk5aRCI6IjAiLCJOT0siOiIwIiwiUExOIjoiMCIsIkdCUCI6IjAiLCJTR0QiOiIwIiwiWkFSIjoiMCIsIktSVyI6IjAiLCJTRUsiOiIwIiwiQ0hGIjoiMCIsIlRIQiI6IjAifSwicnAiOnsiVVNEIjoiNzkuOTkiLCJFVVIiOiI3OS45OSIsIlRSWSI6IjE1OSIsIlJVQiI6IjE4OTkiLCJVQUgiOiI2OTkiLCJDTlkiOiIyOTkiLCJBUlMiOiIzOTk5IiwiQVVEIjoiODkuOTkiLCJCUkwiOiIyNDkiLCJDQUQiOiI5OS45OSIsIkNaSyI6IjExOTkiLCJES0siOiI0NDkiLCJIS0QiOiIyOTkiLCJIVUYiOiIxMjk5OSIsIklOUiI6IjI2OTkiLCJJTFMiOiIyNDkiLCJKUFkiOiI1OTk5IiwiTVhOIjoiNjk5IiwiVFdEIjoiOTk5IiwiTlpEIjoiOTQuOTkiLCJOT0siOiI3NDkiLCJQTE4iOiIxNDkiLCJHQlAiOiI0OS45OSIsIlNHRCI6Ijg5Ljk5IiwiWkFSIjoiNDQ5IiwiS1JXIjoiNTk5OTkiLCJTRUsiOiI3NDkiLCJDSEYiOiI5OS45OSIsIlRIQiI6IjE2OTkifSwidGQiOiI3IiwieSI6IiIsInEiOjAsImQiOjEsImEiOltdLCJ2IjoiMTE3NTkiLCJkdyI6ZmFsc2UsInMiOiJkNTJmNzU3OTdjMWNmNGNmNDE0MmE4NzhjYTFjMjk5Y2UxOGRkOTRlZjU1YzY2YTQ4ODliYjJhZDYxNjQyOWI3ZDEwZWQyODMwMmVhM2NjYTQ1ZTYwMGQ4NzE5ZTBmNWM2Mjg3ZjYzYmMzZTk5OGQ0OTQzYjQ4MDg4NDc1MTQ5YSJ9",
        trial_14:
          "https://checkout.paddle.com/checkout/custom/eyJ0IjoiTWF0ZSBQcm8gWWVhcmx5IiwiaSI6Imh0dHBzOlwvXC9wYWRkbGUuczMuYW1hem9uYXdzLmNvbVwvdXNlclwvMTE3NTlcL3N1YnNfNjUwODQ0X2ljb24ucG5nIiwiciI6bnVsbCwiY20iOiIiLCJyZSI6MCwicCI6NjUwODQ0LCJhbCI6MCwiY2MiOnsiVVNEIjoiMCIsIkVVUiI6IjAiLCJUUlkiOiIwIiwiUlVCIjoiMCIsIlVBSCI6IjAiLCJDTlkiOiIwIiwiQVJTIjoiMCIsIkFVRCI6IjAiLCJCUkwiOiIwIiwiQ0FEIjoiMCIsIkNaSyI6IjAiLCJES0siOiIwIiwiSEtEIjoiMCIsIkhVRiI6IjAiLCJJTlIiOiIwIiwiSUxTIjoiMCIsIkpQWSI6IjAiLCJNWE4iOiIwIiwiVFdEIjoiMCIsIk5aRCI6IjAiLCJOT0siOiIwIiwiUExOIjoiMCIsIkdCUCI6IjAiLCJTR0QiOiIwIiwiWkFSIjoiMCIsIktSVyI6IjAiLCJTRUsiOiIwIiwiQ0hGIjoiMCIsIlRIQiI6IjAifSwicnAiOnsiVVNEIjoiNzkuOTkiLCJFVVIiOiI3OS45OSIsIlRSWSI6IjE1OSIsIlJVQiI6IjE4OTkiLCJVQUgiOiI2OTkiLCJDTlkiOiIyOTkiLCJBUlMiOiIzOTk5IiwiQVVEIjoiODkuOTkiLCJCUkwiOiIyNDkiLCJDQUQiOiI5OS45OSIsIkNaSyI6IjExOTkiLCJES0siOiI0NDkiLCJIS0QiOiIyOTkiLCJIVUYiOiIxMjk5OSIsIklOUiI6IjI2OTkiLCJJTFMiOiIyNDkiLCJKUFkiOiI1OTk5IiwiTVhOIjoiNjk5IiwiVFdEIjoiOTk5IiwiTlpEIjoiOTQuOTkiLCJOT0siOiI3NDkiLCJQTE4iOiIxNDkiLCJHQlAiOiI0OS45OSIsIlNHRCI6Ijg5Ljk5IiwiWkFSIjoiNDQ5IiwiS1JXIjoiNTk5OTkiLCJTRUsiOiI3NDkiLCJDSEYiOiI5OS45OSIsIlRIQiI6IjE2OTkifSwidGQiOiIxNCIsInkiOiIiLCJxIjowLCJkIjoxLCJhIjpbXSwidiI6IjExNzU5IiwiZHciOmZhbHNlLCJzIjoiNTBjMGFjMmM5ZmMzYzNiZDI3ZGYxN2VmN2YzOTA2MDM2MzViMWEyNDBhMWI4YTUzOWY2OTdlNmQxZmY2YTEzZTYzNjNiODA0Zjk1MzYzYzJhYTczMzQwYmFiOTM4ODA2YWQ0Njc5OWE1NDBlNTJhZDEzNzg5YmRlNmE0ZmJiNzEifQ==",
      },
      tier_3: {
        trial_3:
          "https://checkout.paddle.com/checkout/custom/eyJ0IjoiTWF0ZSBQcm8gWWVhcmx5IiwiaSI6Imh0dHBzOlwvXC9wYWRkbGUuczMuYW1hem9uYXdzLmNvbVwvdXNlclwvMTE3NTlcL3N1YnNfNjUwODQ0X2ljb24ucG5nIiwiciI6bnVsbCwiY20iOiIiLCJyZSI6MCwicCI6NjUwODQ0LCJhbCI6MCwiY2MiOnsiVVNEIjoiMCIsIkVVUiI6IjAiLCJUUlkiOiIwIiwiUlVCIjoiMCIsIlVBSCI6IjAiLCJDTlkiOiIwIiwiQVJTIjoiMCIsIkFVRCI6IjAiLCJCUkwiOiIwIiwiQ0FEIjoiMCIsIkNaSyI6IjAiLCJES0siOiIwIiwiSEtEIjoiMCIsIkhVRiI6IjAiLCJJTlIiOiIwIiwiSUxTIjoiMCIsIkpQWSI6IjAiLCJNWE4iOiIwIiwiVFdEIjoiMCIsIk5aRCI6IjAiLCJOT0siOiIwIiwiUExOIjoiMCIsIkdCUCI6IjAiLCJTR0QiOiIwIiwiWkFSIjoiMCIsIktSVyI6IjAiLCJTRUsiOiIwIiwiQ0hGIjoiMCIsIlRIQiI6IjAifSwicnAiOnsiVVNEIjoiNjQuOTkiLCJFVVIiOiI2NC45OSIsIlRSWSI6IjEyOSIsIlJVQiI6IjE1OTkiLCJVQUgiOiI1NDkiLCJDTlkiOiIyNDkiLCJBUlMiOiIzNDk5IiwiQVVEIjoiNjkuOTkiLCJCUkwiOiIxOTkiLCJDQUQiOiI3OS45OSIsIkNaSyI6Ijk0OSIsIkRLSyI6IjM0OSIsIkhLRCI6IjI0OSIsIkhVRiI6Ijk5OTkiLCJJTlIiOiIyMTk5IiwiSUxTIjoiMTk5IiwiSlBZIjoiNDQ5OSIsIk1YTiI6IjU5OSIsIlRXRCI6Ijg0OSIsIk5aRCI6Ijc0Ljk5IiwiTk9LIjoiNTk5IiwiUExOIjoiMTE5IiwiR0JQIjoiMzkuOTkiLCJTR0QiOiI2OS45OSIsIlpBUiI6IjM2OSIsIktSVyI6IjQ5OTk5IiwiU0VLIjoiNTk5IiwiQ0hGIjoiNzkuOTkiLCJUSEIiOiIxNDk5In0sInRkIjoiMyIsInkiOiIiLCJxIjowLCJkIjoxLCJhIjpbXSwidiI6IjExNzU5IiwiZHciOmZhbHNlLCJzIjoiM2QzYzVkODJiYTFiM2QzMmU1NjFiOWIxZTZmY2JmNzExYWE4NmE1NDI5ODcwYzQ2Y2RkMjZmOWZkZDRlMWYwMDk0ODBkNDdlMTQxYjA0ZDg1MjU1MTdmNTJmZmY5NDZkNmYxNjMyZjAwMmIwODBlMjEyZWM0ZGI0MDQ5OGYxZDUifQ==",
        trial_7:
          "https://checkout.paddle.com/checkout/custom/eyJ0IjoiTWF0ZSBQcm8gWWVhcmx5IiwiaSI6Imh0dHBzOlwvXC9wYWRkbGUuczMuYW1hem9uYXdzLmNvbVwvdXNlclwvMTE3NTlcL3N1YnNfNjUwODQ0X2ljb24ucG5nIiwiciI6bnVsbCwiY20iOiIiLCJyZSI6MCwicCI6NjUwODQ0LCJhbCI6MCwiY2MiOnsiVVNEIjoiMCIsIkVVUiI6IjAiLCJUUlkiOiIwIiwiUlVCIjoiMCIsIlVBSCI6IjAiLCJDTlkiOiIwIiwiQVJTIjoiMCIsIkFVRCI6IjAiLCJCUkwiOiIwIiwiQ0FEIjoiMCIsIkNaSyI6IjAiLCJES0siOiIwIiwiSEtEIjoiMCIsIkhVRiI6IjAiLCJJTlIiOiIwIiwiSUxTIjoiMCIsIkpQWSI6IjAiLCJNWE4iOiIwIiwiVFdEIjoiMCIsIk5aRCI6IjAiLCJOT0siOiIwIiwiUExOIjoiMCIsIkdCUCI6IjAiLCJTR0QiOiIwIiwiWkFSIjoiMCIsIktSVyI6IjAiLCJTRUsiOiIwIiwiQ0hGIjoiMCIsIlRIQiI6IjAifSwicnAiOnsiVVNEIjoiNjQuOTkiLCJFVVIiOiI2NC45OSIsIlRSWSI6IjEyOSIsIlJVQiI6IjE1OTkiLCJVQUgiOiI1NDkiLCJDTlkiOiIyNDkiLCJBUlMiOiIzNDk5IiwiQVVEIjoiNjkuOTkiLCJCUkwiOiIxOTkiLCJDQUQiOiI3OS45OSIsIkNaSyI6Ijk0OSIsIkRLSyI6IjM0OSIsIkhLRCI6IjI0OSIsIkhVRiI6Ijk5OTkiLCJJTlIiOiIyMTk5IiwiSUxTIjoiMTk5IiwiSlBZIjoiNDQ5OSIsIk1YTiI6IjU5OSIsIlRXRCI6Ijg0OSIsIk5aRCI6Ijc0Ljk5IiwiTk9LIjoiNTk5IiwiUExOIjoiMTE5IiwiR0JQIjoiMzkuOTkiLCJTR0QiOiI2OS45OSIsIlpBUiI6IjM2OSIsIktSVyI6IjQ5OTk5IiwiU0VLIjoiNTk5IiwiQ0hGIjoiNzkuOTkiLCJUSEIiOiIxNDk5In0sInRkIjoiNyIsInkiOiIiLCJxIjowLCJkIjoxLCJhIjpbXSwidiI6IjExNzU5IiwiZHciOmZhbHNlLCJzIjoiY2Q4MmU2NjIyM2Q4MjAzYTdlYjJlOTI4NTg3MGZjMmI1ZGIzY2YxNDQ1MzBiNDE2MjNiOTk3NWU2ZjY1ZjU5Y2RjZDRmMjU4YTg2NzQ3ODU1OTc4ODQ4ZTBmNGVlZmRjNDZkODQ4MDkwM2RhYzQ3ZWFmOTllMjIwN2Q1ZTI5M2UifQ==",
        trial_14:
          "https://checkout.paddle.com/checkout/custom/eyJ0IjoiTWF0ZSBQcm8gWWVhcmx5IiwiaSI6Imh0dHBzOlwvXC9wYWRkbGUuczMuYW1hem9uYXdzLmNvbVwvdXNlclwvMTE3NTlcL3N1YnNfNjUwODQ0X2ljb24ucG5nIiwiciI6bnVsbCwiY20iOiIiLCJyZSI6MCwicCI6NjUwODQ0LCJhbCI6MCwiY2MiOnsiVVNEIjoiMCIsIkVVUiI6IjAiLCJUUlkiOiIwIiwiUlVCIjoiMCIsIlVBSCI6IjAiLCJDTlkiOiIwIiwiQVJTIjoiMCIsIkFVRCI6IjAiLCJCUkwiOiIwIiwiQ0FEIjoiMCIsIkNaSyI6IjAiLCJES0siOiIwIiwiSEtEIjoiMCIsIkhVRiI6IjAiLCJJTlIiOiIwIiwiSUxTIjoiMCIsIkpQWSI6IjAiLCJNWE4iOiIwIiwiVFdEIjoiMCIsIk5aRCI6IjAiLCJOT0siOiIwIiwiUExOIjoiMCIsIkdCUCI6IjAiLCJTR0QiOiIwIiwiWkFSIjoiMCIsIktSVyI6IjAiLCJTRUsiOiIwIiwiQ0hGIjoiMCIsIlRIQiI6IjAifSwicnAiOnsiVVNEIjoiNjQuOTkiLCJFVVIiOiI2NC45OSIsIlRSWSI6IjEyOSIsIlJVQiI6IjE1OTkiLCJVQUgiOiI1NDkiLCJDTlkiOiIyNDkiLCJBUlMiOiIzNDk5IiwiQVVEIjoiNjkuOTkiLCJCUkwiOiIxOTkiLCJDQUQiOiI3OS45OSIsIkNaSyI6Ijk0OSIsIkRLSyI6IjM0OSIsIkhLRCI6IjI0OSIsIkhVRiI6Ijk5OTkiLCJJTlIiOiIyMTk5IiwiSUxTIjoiMTk5IiwiSlBZIjoiNDQ5OSIsIk1YTiI6IjU5OSIsIlRXRCI6Ijg0OSIsIk5aRCI6Ijc0Ljk5IiwiTk9LIjoiNTk5IiwiUExOIjoiMTE5IiwiR0JQIjoiMzkuOTkiLCJTR0QiOiI2OS45OSIsIlpBUiI6IjM2OSIsIktSVyI6IjQ5OTk5IiwiU0VLIjoiNTk5IiwiQ0hGIjoiNzkuOTkiLCJUSEIiOiIxNDk5In0sInRkIjoiMTQiLCJ5IjoiIiwicSI6MCwiZCI6MSwiYSI6W10sInYiOiIxMTc1OSIsImR3IjpmYWxzZSwicyI6ImMxNzIzMmI4YmZkNjk5YzY0N2RjMGI5MjBlNmQyMjkzYzI0Y2RiZTkyYjAxYzY3YTBkZWMzMmRjZGFjMDBiZmE2YTkwMzg0YjY1OTU2ZTZlNWI1ZWU0MDkyYjI3MGRmODEyZDU1MTc1NGMzZmVhMWQyZGZkNmQxYzA2MTU5Zjk3In0=",
      },
      tier_2: {
        trial_3:
          "https://checkout.paddle.com/checkout/custom/eyJ0IjoiTWF0ZSBQcm8gWWVhcmx5IiwiaSI6Imh0dHBzOlwvXC9wYWRkbGUuczMuYW1hem9uYXdzLmNvbVwvdXNlclwvMTE3NTlcL3N1YnNfNjUwODQ0X2ljb24ucG5nIiwiciI6bnVsbCwiY20iOiIiLCJyZSI6MCwicCI6NjUwODQ0LCJhbCI6MCwiY2MiOnsiVVNEIjoiMCIsIkVVUiI6IjAiLCJUUlkiOiIwIiwiUlVCIjoiMCIsIlVBSCI6IjAiLCJDTlkiOiIwIiwiQVJTIjoiMCIsIkFVRCI6IjAiLCJCUkwiOiIwIiwiQ0FEIjoiMCIsIkNaSyI6IjAiLCJES0siOiIwIiwiSEtEIjoiMCIsIkhVRiI6IjAiLCJJTlIiOiIwIiwiSUxTIjoiMCIsIkpQWSI6IjAiLCJNWE4iOiIwIiwiVFdEIjoiMCIsIk5aRCI6IjAiLCJOT0siOiIwIiwiUExOIjoiMCIsIkdCUCI6IjAiLCJTR0QiOiIwIiwiWkFSIjoiMCIsIktSVyI6IjAiLCJTRUsiOiIwIiwiQ0hGIjoiMCIsIlRIQiI6IjAifSwicnAiOnsiVVNEIjoiNDQuOTkiLCJFVVIiOiI0NC45OSIsIlRSWSI6IjE5OSIsIlJVQiI6IjE3OTkiLCJVQUgiOiI1OTkiLCJDTlkiOiIxOTkiLCJBUlMiOiIyMzk5IiwiQVVEIjoiNDkuOTkiLCJCUkwiOiIxMzkiLCJDQUQiOiI1NC45OSIsIkNaSyI6IjY0OSIsIkRLSyI6IjI0OSIsIkhLRCI6IjE5OSIsIkhVRiI6IjY5OTkiLCJJTlIiOiIxNDk5IiwiSUxTIjoiMTM5IiwiSlBZIjoiMzI5OSIsIk1YTiI6IjM5OSIsIlRXRCI6IjU5OSIsIk5aRCI6IjQ5Ljk5IiwiTk9LIjoiNDE5IiwiUExOIjoiODQuOTkiLCJHQlAiOiIyOS45OSIsIlNHRCI6IjQ5Ljk5IiwiWkFSIjoiMjQ5IiwiS1JXIjoiMzQ5OTkiLCJTRUsiOiIzOTkiLCJDSEYiOiI1NC45OSIsIlRIQiI6Ijk5OSJ9LCJ0ZCI6IjMiLCJ5IjoiIiwicSI6MCwiZCI6MSwiYSI6W10sInYiOiIxMTc1OSIsImR3IjpmYWxzZSwicyI6ImVkZmQ3YjhhMGVkMjU3YzQwNDVlODZkNGJkNjkzMzEwZDc3MDViNjkwZWIzOWIyMDRkYmY0ZDQwYmNiNzNjZjkyODk4OGJiMTA4YjYyMGE3OGVkZjM1ZGU4ZjBkODYxN2FjM2QyNjc2ODllODcwYzg0ZGQ0ZDI1ZGQzMThjYTA2In0=",
        trial_7:
          "https://checkout.paddle.com/checkout/custom/eyJ0IjoiTWF0ZSBQcm8gWWVhcmx5IiwiaSI6Imh0dHBzOlwvXC9wYWRkbGUuczMuYW1hem9uYXdzLmNvbVwvdXNlclwvMTE3NTlcL3N1YnNfNjUwODQ0X2ljb24ucG5nIiwiciI6bnVsbCwiY20iOiIiLCJyZSI6MCwicCI6NjUwODQ0LCJhbCI6MCwiY2MiOnsiVVNEIjoiMCIsIkVVUiI6IjAiLCJUUlkiOiIwIiwiUlVCIjoiMCIsIlVBSCI6IjAiLCJDTlkiOiIwIiwiQVJTIjoiMCIsIkFVRCI6IjAiLCJCUkwiOiIwIiwiQ0FEIjoiMCIsIkNaSyI6IjAiLCJES0siOiIwIiwiSEtEIjoiMCIsIkhVRiI6IjAiLCJJTlIiOiIwIiwiSUxTIjoiMCIsIkpQWSI6IjAiLCJNWE4iOiIwIiwiVFdEIjoiMCIsIk5aRCI6IjAiLCJOT0siOiIwIiwiUExOIjoiMCIsIkdCUCI6IjAiLCJTR0QiOiIwIiwiWkFSIjoiMCIsIktSVyI6IjAiLCJTRUsiOiIwIiwiQ0hGIjoiMCIsIlRIQiI6IjAifSwicnAiOnsiVVNEIjoiNDQuOTkiLCJFVVIiOiI0NC45OSIsIlRSWSI6IjE5OSIsIlJVQiI6IjE3OTkiLCJVQUgiOiI1OTkiLCJDTlkiOiIxOTkiLCJBUlMiOiIyMzk5IiwiQVVEIjoiNDkuOTkiLCJCUkwiOiIxMzkiLCJDQUQiOiI1NC45OSIsIkNaSyI6IjY0OSIsIkRLSyI6IjI0OSIsIkhLRCI6IjE5OSIsIkhVRiI6IjY5OTkiLCJJTlIiOiIxNDk5IiwiSUxTIjoiMTM5IiwiSlBZIjoiMzI5OSIsIk1YTiI6IjM5OSIsIlRXRCI6IjU5OSIsIk5aRCI6IjQ5Ljk5IiwiTk9LIjoiNDE5IiwiUExOIjoiODQuOTkiLCJHQlAiOiIyOS45OSIsIlNHRCI6IjQ5Ljk5IiwiWkFSIjoiMjQ5IiwiS1JXIjoiMzQ5OTkiLCJTRUsiOiIzOTkiLCJDSEYiOiI1NC45OSIsIlRIQiI6Ijk5OSJ9LCJ0ZCI6IjciLCJ5IjoiIiwicSI6MCwiZCI6MSwiYSI6W10sInYiOiIxMTc1OSIsImR3IjpmYWxzZSwicyI6IjM4Mjg1MjA4NTY4Yjg2NTg5OWVmY2JjNjVmNjY5MjQ0ZjQ0NTVmNTA1YmQyNDZmOTY4ZGZlZTU3NzlkM2Q1ZDUxNGE2ZTk2YTlhZmVhMTc2YjQzMzU2MDg1MmI2NGRhZmRhZmQzYjNmNDg0MTZmY2FiOGQ0NzlhNzYxNjVhNTQ3In0=",
        trial_14:
          "https://checkout.paddle.com/checkout/custom/eyJ0IjoiTWF0ZSBQcm8gWWVhcmx5IiwiaSI6Imh0dHBzOlwvXC9wYWRkbGUuczMuYW1hem9uYXdzLmNvbVwvdXNlclwvMTE3NTlcL3N1YnNfNjUwODQ0X2ljb24ucG5nIiwiciI6bnVsbCwiY20iOiIiLCJyZSI6MCwicCI6NjUwODQ0LCJhbCI6MCwiY2MiOnsiVVNEIjoiMCIsIkVVUiI6IjAiLCJUUlkiOiIwIiwiUlVCIjoiMCIsIlVBSCI6IjAiLCJDTlkiOiIwIiwiQVJTIjoiMCIsIkFVRCI6IjAiLCJCUkwiOiIwIiwiQ0FEIjoiMCIsIkNaSyI6IjAiLCJES0siOiIwIiwiSEtEIjoiMCIsIkhVRiI6IjAiLCJJTlIiOiIwIiwiSUxTIjoiMCIsIkpQWSI6IjAiLCJNWE4iOiIwIiwiVFdEIjoiMCIsIk5aRCI6IjAiLCJOT0siOiIwIiwiUExOIjoiMCIsIkdCUCI6IjAiLCJTR0QiOiIwIiwiWkFSIjoiMCIsIktSVyI6IjAiLCJTRUsiOiIwIiwiQ0hGIjoiMCIsIlRIQiI6IjAifSwicnAiOnsiVVNEIjoiNDQuOTkiLCJFVVIiOiI0NC45OSIsIlRSWSI6IjE5OSIsIlJVQiI6IjE3OTkiLCJVQUgiOiI1OTkiLCJDTlkiOiIxOTkiLCJBUlMiOiIyMzk5IiwiQVVEIjoiNDkuOTkiLCJCUkwiOiIxMzkiLCJDQUQiOiI1NC45OSIsIkNaSyI6IjY0OSIsIkRLSyI6IjI0OSIsIkhLRCI6IjE5OSIsIkhVRiI6IjY5OTkiLCJJTlIiOiIxNDk5IiwiSUxTIjoiMTM5IiwiSlBZIjoiMzI5OSIsIk1YTiI6IjM5OSIsIlRXRCI6IjU5OSIsIk5aRCI6IjQ5Ljk5IiwiTk9LIjoiNDE5IiwiUExOIjoiODQuOTkiLCJHQlAiOiIyOS45OSIsIlNHRCI6IjQ5Ljk5IiwiWkFSIjoiMjQ5IiwiS1JXIjoiMzQ5OTkiLCJTRUsiOiIzOTkiLCJDSEYiOiI1NC45OSIsIlRIQiI6Ijk5OSJ9LCJ0ZCI6IjE0IiwieSI6IiIsInEiOjAsImQiOjEsImEiOltdLCJ2IjoiMTE3NTkiLCJkdyI6ZmFsc2UsInMiOiI2NDU4MTQ0MTlhNjA2YWE5OWFiYmVhY2NiY2FmYWM4NGZkMjg4NGM4MTY0ZDZhMzhhYmE3ZTVmMWVjOTllYWJmOTZiOTNkMTViOGRmYWU4MjUwMzdkZDk1NDQyMWM1Njk1OTJjYjczMjRjOGQwNDFhMGQ5M2RjMGQyMjEzMTZlNyJ9",
      },
      tier_1: {
        trial_3:
          "https://checkout.paddle.com/checkout/custom/eyJ0IjoiTWF0ZSBQcm8gWWVhcmx5IiwiaSI6Imh0dHBzOlwvXC9wYWRkbGUuczMuYW1hem9uYXdzLmNvbVwvdXNlclwvMTE3NTlcL3N1YnNfNjUwODQ0X2ljb24ucG5nIiwiciI6bnVsbCwiY20iOiIiLCJyZSI6MCwicCI6NjUwODQ0LCJhbCI6MCwiY2MiOnsiVVNEIjoiMCIsIkVVUiI6IjAiLCJUUlkiOiIwIiwiUlVCIjoiMCIsIlVBSCI6IjAiLCJDTlkiOiIwIiwiQVJTIjoiMCIsIkFVRCI6IjAiLCJCUkwiOiIwIiwiQ0FEIjoiMCIsIkNaSyI6IjAiLCJES0siOiIwIiwiSEtEIjoiMCIsIkhVRiI6IjAiLCJJTlIiOiIwIiwiSUxTIjoiMCIsIkpQWSI6IjAiLCJNWE4iOiIwIiwiVFdEIjoiMCIsIk5aRCI6IjAiLCJOT0siOiIwIiwiUExOIjoiMCIsIkdCUCI6IjAiLCJTR0QiOiIwIiwiWkFSIjoiMCIsIktSVyI6IjAiLCJTRUsiOiIwIiwiQ0hGIjoiMCIsIlRIQiI6IjAifSwicnAiOnsiVVNEIjoiMjkuOTkiLCJFVVIiOiIyOS45OSIsIlRSWSI6IjE0OSIsIlJVQiI6IjEyOTkiLCJVQUgiOiI0OTkiLCJDTlkiOiIxNDkiLCJBUlMiOiIxNDk5IiwiQVVEIjoiMzkuOTkiLCJCUkwiOiI4OS45OSIsIkNBRCI6IjM5Ljk5IiwiQ1pLIjoiNDQ5IiwiREtLIjoiMTY5IiwiSEtEIjoiMTQ5IiwiSFVGIjoiNDk5OSIsIklOUiI6Ijk5OSIsIklMUyI6Ijg5Ljk5IiwiSlBZIjoiMjk5OSIsIk1YTiI6IjI0OSIsIlRXRCI6IjM5OSIsIk5aRCI6IjM0Ljk5IiwiTk9LIjoiMjk5IiwiUExOIjoiNTkuOTkiLCJHQlAiOiIxOS45OSIsIlNHRCI6IjM0Ljk5IiwiWkFSIjoiMTY5IiwiS1JXIjoiMjM5OTkiLCJTRUsiOiIyOTkiLCJDSEYiOiIzNC45OSIsIlRIQiI6IjY5OSJ9LCJ0ZCI6IjMiLCJ5IjoiIiwicSI6MCwiZCI6MSwiYSI6W10sInYiOiIxMTc1OSIsImR3IjpmYWxzZSwicyI6IjQ1NjAwOGRhNDBmNjFiNjhlZGJmM2M5YTdlZjRiZmFjMmYwZDIwOWRmOTYxZWIyZjQwNmU0YzgxNGEwMDFlYjBmOGQwOThhZTE1Yzk2ZWU2YTg2NzE5Mjk2NzdkNzM3YTJjODM4MjA3YmI4MmZmM2M3YjE5MGRjMjYxYWI1YmMyIn0=",
        trial_7:
          "https://checkout.paddle.com/checkout/custom/eyJ0IjoiTWF0ZSBQcm8gWWVhcmx5IiwiaSI6Imh0dHBzOlwvXC9wYWRkbGUuczMuYW1hem9uYXdzLmNvbVwvdXNlclwvMTE3NTlcL3N1YnNfNjUwODQ0X2ljb24ucG5nIiwiciI6bnVsbCwiY20iOiIiLCJyZSI6MCwicCI6NjUwODQ0LCJhbCI6MCwiY2MiOnsiVVNEIjoiMCIsIkVVUiI6IjAiLCJUUlkiOiIwIiwiUlVCIjoiMCIsIlVBSCI6IjAiLCJDTlkiOiIwIiwiQVJTIjoiMCIsIkFVRCI6IjAiLCJCUkwiOiIwIiwiQ0FEIjoiMCIsIkNaSyI6IjAiLCJES0siOiIwIiwiSEtEIjoiMCIsIkhVRiI6IjAiLCJJTlIiOiIwIiwiSUxTIjoiMCIsIkpQWSI6IjAiLCJNWE4iOiIwIiwiVFdEIjoiMCIsIk5aRCI6IjAiLCJOT0siOiIwIiwiUExOIjoiMCIsIkdCUCI6IjAiLCJTR0QiOiIwIiwiWkFSIjoiMCIsIktSVyI6IjAiLCJTRUsiOiIwIiwiQ0hGIjoiMCIsIlRIQiI6IjAifSwicnAiOnsiVVNEIjoiMjkuOTkiLCJFVVIiOiIyOS45OSIsIlRSWSI6IjE0OSIsIlJVQiI6IjEyOTkiLCJVQUgiOiI0OTkiLCJDTlkiOiIxNDkiLCJBUlMiOiIxNDk5IiwiQVVEIjoiMzkuOTkiLCJCUkwiOiI4OS45OSIsIkNBRCI6IjM5Ljk5IiwiQ1pLIjoiNDQ5IiwiREtLIjoiMTY5IiwiSEtEIjoiMTQ5IiwiSFVGIjoiNDk5OSIsIklOUiI6Ijk5OSIsIklMUyI6Ijg5Ljk5IiwiSlBZIjoiMjk5OSIsIk1YTiI6IjI0OSIsIlRXRCI6IjM5OSIsIk5aRCI6IjM0Ljk5IiwiTk9LIjoiMjk5IiwiUExOIjoiNTkuOTkiLCJHQlAiOiIxOS45OSIsIlNHRCI6IjM0Ljk5IiwiWkFSIjoiMTY5IiwiS1JXIjoiMjM5OTkiLCJTRUsiOiIyOTkiLCJDSEYiOiIzNC45OSIsIlRIQiI6IjY5OSJ9LCJ0ZCI6IjciLCJ5IjoiIiwicSI6MCwiZCI6MSwiYSI6W10sInYiOiIxMTc1OSIsImR3IjpmYWxzZSwicyI6IjZkYjMzM2RiMGFiMTRhNjUxNGFmOGFiZjZjYThhMjhhZDY0NGJiOTFlNTgzNzIzZGI0NTIzOGQ5ODg4OTQ4NTJlM2EwY2YwNDQwYzFkZjBmODg2YmI0NTg5YTk5MzkxM2VlYTRjNzcxODQ1NmQ4NTJhN2UxNzdhMzFmYjU1Yzg2In0=",
        trial_14:
          "https://checkout.paddle.com/checkout/custom/eyJ0IjoiTWF0ZSBQcm8gWWVhcmx5IiwiaSI6Imh0dHBzOlwvXC9wYWRkbGUuczMuYW1hem9uYXdzLmNvbVwvdXNlclwvMTE3NTlcL3N1YnNfNjUwODQ0X2ljb24ucG5nIiwiciI6bnVsbCwiY20iOiIiLCJyZSI6MCwicCI6NjUwODQ0LCJhbCI6MCwiY2MiOnsiVVNEIjoiMCIsIkVVUiI6IjAiLCJUUlkiOiIwIiwiUlVCIjoiMCIsIlVBSCI6IjAiLCJDTlkiOiIwIiwiQVJTIjoiMCIsIkFVRCI6IjAiLCJCUkwiOiIwIiwiQ0FEIjoiMCIsIkNaSyI6IjAiLCJES0siOiIwIiwiSEtEIjoiMCIsIkhVRiI6IjAiLCJJTlIiOiIwIiwiSUxTIjoiMCIsIkpQWSI6IjAiLCJNWE4iOiIwIiwiVFdEIjoiMCIsIk5aRCI6IjAiLCJOT0siOiIwIiwiUExOIjoiMCIsIkdCUCI6IjAiLCJTR0QiOiIwIiwiWkFSIjoiMCIsIktSVyI6IjAiLCJTRUsiOiIwIiwiQ0hGIjoiMCIsIlRIQiI6IjAifSwicnAiOnsiVVNEIjoiMjkuOTkiLCJFVVIiOiIyOS45OSIsIlRSWSI6IjE0OSIsIlJVQiI6IjEyOTkiLCJVQUgiOiI0OTkiLCJDTlkiOiIxNDkiLCJBUlMiOiIxNDk5IiwiQVVEIjoiMzkuOTkiLCJCUkwiOiI4OS45OSIsIkNBRCI6IjM5Ljk5IiwiQ1pLIjoiNDQ5IiwiREtLIjoiMTY5IiwiSEtEIjoiMTQ5IiwiSFVGIjoiNDk5OSIsIklOUiI6Ijk5OSIsIklMUyI6Ijg5Ljk5IiwiSlBZIjoiMjk5OSIsIk1YTiI6IjI0OSIsIlRXRCI6IjM5OSIsIk5aRCI6IjM0Ljk5IiwiTk9LIjoiMjk5IiwiUExOIjoiNTkuOTkiLCJHQlAiOiIxOS45OSIsIlNHRCI6IjM0Ljk5IiwiWkFSIjoiMTY5IiwiS1JXIjoiMjM5OTkiLCJTRUsiOiIyOTkiLCJDSEYiOiIzNC45OSIsIlRIQiI6IjY5OSJ9LCJ0ZCI6IjE0IiwieSI6IiIsInEiOjAsImQiOjEsImEiOltdLCJ2IjoiMTE3NTkiLCJkdyI6ZmFsc2UsInMiOiJlOGM5ZTM5MjgxNGRiOTVjMjIyNTE3MDgzZTA5NDY3Y2E0YWZmNTJjM2UyZDQ2YWJiMWY1OWNhNDc1MWZmMjljZmNhMDRmMzJiMGZjM2M1Y2U2OTEwODg3M2IzM2IzYTVjYzdlYWM4NjkzMWY4MGIyMDZhZDJhYWVhMDRiYmI5YSJ9",
      },
      tier_5: {
        trial_3:
          "https://checkout.paddle.com/checkout/custom/eyJ0IjoiTWF0ZSBQcm8gWWVhcmx5IiwiaSI6Imh0dHBzOlwvXC9wYWRkbGUuczMuYW1hem9uYXdzLmNvbVwvdXNlclwvMTE3NTlcL3N1YnNfNjUwODQ0X2ljb24ucG5nIiwiciI6bnVsbCwiY20iOiIiLCJyZSI6MCwicCI6NjUwODQ0LCJhbCI6MCwiY2MiOnsiVVNEIjoiMCIsIkVVUiI6IjAiLCJUUlkiOiIwIiwiUlVCIjoiMCIsIlVBSCI6IjAiLCJDTlkiOiIwIiwiQVJTIjoiMCIsIkFVRCI6IjAiLCJCUkwiOiIwIiwiQ0FEIjoiMCIsIkNaSyI6IjAiLCJES0siOiIwIiwiSEtEIjoiMCIsIkhVRiI6IjAiLCJJTlIiOiIwIiwiSUxTIjoiMCIsIkpQWSI6IjAiLCJNWE4iOiIwIiwiVFdEIjoiMCIsIk5aRCI6IjAiLCJOT0siOiIwIiwiUExOIjoiMCIsIkdCUCI6IjAiLCJTR0QiOiIwIiwiWkFSIjoiMCIsIktSVyI6IjAiLCJTRUsiOiIwIiwiQ0hGIjoiMCIsIlRIQiI6IjAifSwicnAiOnsiVVNEIjoiMTkuOTkiLCJFVVIiOiIxOS45OSIsIlRSWSI6Ijk5Ljk5IiwiUlVCIjoiOTk5IiwiVUFIIjoiMzQ5IiwiQ05ZIjoiMTA5IiwiQVJTIjoiMTQ5OSIsIkFVRCI6IjM0Ljk5IiwiQlJMIjoiNzkuOTkiLCJDQUQiOiIzNC45OSIsIkNaSyI6IjM5OSIsIkRLSyI6IjEyOSIsIkhLRCI6IjEyOSIsIkhVRiI6IjM5OTkiLCJJTlIiOiI3NDkiLCJJTFMiOiI2OS45OSIsIkpQWSI6IjIyNDkiLCJNWE4iOiIyNDkiLCJUV0QiOiIzOTkiLCJOWkQiOiIzNC45OSIsIk5PSyI6IjI0OSIsIlBMTiI6IjU5Ljk5IiwiR0JQIjoiMTkuOTkiLCJTR0QiOiIzNC45OSIsIlpBUiI6IjE2OSIsIktSVyI6IjIzOTk5IiwiU0VLIjoiMjQ5IiwiQ0hGIjoiMTkuOTkiLCJUSEIiOiI0OTkifSwidGQiOiIzIiwieSI6IiIsInEiOjAsImQiOjEsImEiOltdLCJ2IjoiMTE3NTkiLCJkdyI6ZmFsc2UsInMiOiI2ZDdlODJiMmJmMWIzZWFlY2Q2MWE0MmFhNTI3YWFmZmNhYzlkNWEwZTliYWViZmI3ZDBiMGU1MzcxNzU5NmU0NDM3YTdmZmIwNzdkNDZiMTIyZWM3NGRjYjQ2ODk3YzJhZjdlMjEzNzBlYWE3MTkwZTRjYjIwMzhlZWUzOTIxMSJ9",
        trial_7:
          "https://checkout.paddle.com/checkout/custom/eyJ0IjoiTWF0ZSBQcm8gWWVhcmx5IiwiaSI6Imh0dHBzOlwvXC9wYWRkbGUuczMuYW1hem9uYXdzLmNvbVwvdXNlclwvMTE3NTlcL3N1YnNfNjUwODQ0X2ljb24ucG5nIiwiciI6bnVsbCwiY20iOiIiLCJyZSI6MCwicCI6NjUwODQ0LCJhbCI6MCwiY2MiOnsiVVNEIjoiMCIsIkVVUiI6IjAiLCJUUlkiOiIwIiwiUlVCIjoiMCIsIlVBSCI6IjAiLCJDTlkiOiIwIiwiQVJTIjoiMCIsIkFVRCI6IjAiLCJCUkwiOiIwIiwiQ0FEIjoiMCIsIkNaSyI6IjAiLCJES0siOiIwIiwiSEtEIjoiMCIsIkhVRiI6IjAiLCJJTlIiOiIwIiwiSUxTIjoiMCIsIkpQWSI6IjAiLCJNWE4iOiIwIiwiVFdEIjoiMCIsIk5aRCI6IjAiLCJOT0siOiIwIiwiUExOIjoiMCIsIkdCUCI6IjAiLCJTR0QiOiIwIiwiWkFSIjoiMCIsIktSVyI6IjAiLCJTRUsiOiIwIiwiQ0hGIjoiMCIsIlRIQiI6IjAifSwicnAiOnsiVVNEIjoiMTkuOTkiLCJFVVIiOiIxOS45OSIsIlRSWSI6Ijk5Ljk5IiwiUlVCIjoiOTk5IiwiVUFIIjoiMzQ5IiwiQ05ZIjoiMTA5IiwiQVJTIjoiMTQ5OSIsIkFVRCI6IjM0Ljk5IiwiQlJMIjoiNzkuOTkiLCJDQUQiOiIzNC45OSIsIkNaSyI6IjM5OSIsIkRLSyI6IjEyOSIsIkhLRCI6IjEyOSIsIkhVRiI6IjM5OTkiLCJJTlIiOiI3NDkiLCJJTFMiOiI2OS45OSIsIkpQWSI6IjIyNDkiLCJNWE4iOiIyNDkiLCJUV0QiOiIzOTkiLCJOWkQiOiIzNC45OSIsIk5PSyI6IjI0OSIsIlBMTiI6IjU5Ljk5IiwiR0JQIjoiMTkuOTkiLCJTR0QiOiIzNC45OSIsIlpBUiI6IjE2OSIsIktSVyI6IjIzOTk5IiwiU0VLIjoiMjQ5IiwiQ0hGIjoiMTkuOTkiLCJUSEIiOiI0OTkifSwidGQiOiI3IiwieSI6IiIsInEiOjAsImQiOjEsImEiOltdLCJ2IjoiMTE3NTkiLCJkdyI6ZmFsc2UsInMiOiI0YWNkYmM5OGU4OTE5ODdmN2Y4YWEwYTAyYmZkMjE3YTBkODU5YjRkNTZmYWI5OGY4OTU5NDI0ZjNhODc1MzBhZTlmNjAzYzNjNjIyZDU1OWM2NDUyY2M4NzRkYjg3ZDAxNDc0NzdkM2ViZWU4NjNiYmFkYTNkYjBkNDRiNDY3MiJ9",
        trial_14:
          "https://checkout.paddle.com/checkout/custom/eyJ0IjoiTWF0ZSBQcm8gWWVhcmx5IiwiaSI6Imh0dHBzOlwvXC9wYWRkbGUuczMuYW1hem9uYXdzLmNvbVwvdXNlclwvMTE3NTlcL3N1YnNfNjUwODQ0X2ljb24ucG5nIiwiciI6bnVsbCwiY20iOiIiLCJyZSI6MCwicCI6NjUwODQ0LCJhbCI6MCwiY2MiOnsiVVNEIjoiMCIsIkVVUiI6IjAiLCJUUlkiOiIwIiwiUlVCIjoiMCIsIlVBSCI6IjAiLCJDTlkiOiIwIiwiQVJTIjoiMCIsIkFVRCI6IjAiLCJCUkwiOiIwIiwiQ0FEIjoiMCIsIkNaSyI6IjAiLCJES0siOiIwIiwiSEtEIjoiMCIsIkhVRiI6IjAiLCJJTlIiOiIwIiwiSUxTIjoiMCIsIkpQWSI6IjAiLCJNWE4iOiIwIiwiVFdEIjoiMCIsIk5aRCI6IjAiLCJOT0siOiIwIiwiUExOIjoiMCIsIkdCUCI6IjAiLCJTR0QiOiIwIiwiWkFSIjoiMCIsIktSVyI6IjAiLCJTRUsiOiIwIiwiQ0hGIjoiMCIsIlRIQiI6IjAifSwicnAiOnsiVVNEIjoiMTkuOTkiLCJFVVIiOiIxOS45OSIsIlRSWSI6Ijk5Ljk5IiwiUlVCIjoiOTk5IiwiVUFIIjoiMzQ5IiwiQ05ZIjoiMTA5IiwiQVJTIjoiMTQ5OSIsIkFVRCI6IjM0Ljk5IiwiQlJMIjoiNzkuOTkiLCJDQUQiOiIzNC45OSIsIkNaSyI6IjM5OSIsIkRLSyI6IjEyOSIsIkhLRCI6IjEyOSIsIkhVRiI6IjM5OTkiLCJJTlIiOiI3NDkiLCJJTFMiOiI2OS45OSIsIkpQWSI6IjIyNDkiLCJNWE4iOiIyNDkiLCJUV0QiOiIzOTkiLCJOWkQiOiIzNC45OSIsIk5PSyI6IjI0OSIsIlBMTiI6IjU5Ljk5IiwiR0JQIjoiMTkuOTkiLCJTR0QiOiIzNC45OSIsIlpBUiI6IjE2OSIsIktSVyI6IjIzOTk5IiwiU0VLIjoiMjQ5IiwiQ0hGIjoiMTkuOTkiLCJUSEIiOiI0OTkifSwidGQiOiIxNCIsInkiOiIiLCJxIjowLCJkIjoxLCJhIjpbXSwidiI6IjExNzU5IiwiZHciOmZhbHNlLCJzIjoiYjNmNDI4YTFkMGVmZTkzZTM4YjdkY2RmMDI5N2IyYzlkZmEyNWU2YjZjZWQ2ZGJmYjY2ODUxMzM0ZGRjOTdiMzBiZTU0Y2JkOGJjYTk4Njg4MTU1NGM2MTZhZDEyMzNmNzY0NGUzNWJlYmYxNGFmMTM3NTA4M2QxNzdkMmJmMDUifQ==",
      },
      tier_6: {
        trial_3:
          "https://checkout.paddle.com/checkout/custom/eyJ0IjoiTWF0ZSBQcm8gWWVhcmx5IiwiaSI6Imh0dHBzOlwvXC9wYWRkbGUuczMuYW1hem9uYXdzLmNvbVwvdXNlclwvMTE3NTlcL3N1YnNfNjUwODQ0X2ljb24ucG5nIiwiciI6bnVsbCwiY20iOiIiLCJyZSI6MCwicCI6NjUwODQ0LCJhbCI6MCwiY2MiOnsiVVNEIjoiMCIsIkVVUiI6IjAiLCJUUlkiOiIwIiwiUlVCIjoiMCIsIlVBSCI6IjAiLCJDTlkiOiIwIiwiQVJTIjoiMCIsIkFVRCI6IjAiLCJCUkwiOiIwIiwiQ0FEIjoiMCIsIkNaSyI6IjAiLCJES0siOiIwIiwiSEtEIjoiMCIsIkhVRiI6IjAiLCJJTlIiOiIwIiwiSUxTIjoiMCIsIkpQWSI6IjAiLCJNWE4iOiIwIiwiVFdEIjoiMCIsIk5aRCI6IjAiLCJOT0siOiIwIiwiUExOIjoiMCIsIkdCUCI6IjAiLCJTR0QiOiIwIiwiWkFSIjoiMCIsIktSVyI6IjAiLCJTRUsiOiIwIiwiQ0hGIjoiMCIsIlRIQiI6IjAifSwicnAiOnsiVVNEIjoiMTQuOTkiLCJFVVIiOiIxNC45OSIsIlRSWSI6Ijc5Ljk5IiwiUlVCIjoiNTk5IiwiVUFIIjoiMjQ5IiwiQ05ZIjoiNzkuOTkiLCJBUlMiOiI3OTkiLCJBVUQiOiIxOS45OSIsIkJSTCI6IjQ5Ljk5IiwiQ0FEIjoiMzQuOTkiLCJDWksiOiIzNDkiLCJES0siOiI3OS45OSIsIkhLRCI6Ijc5Ljk5IiwiSFVGIjoiMjk5OSIsIklOUiI6IjU5OSIsIklMUyI6IjQ5Ljk5IiwiSlBZIjoiMTQ5OSIsIk1YTiI6IjE5OSIsIlRXRCI6IjI5OSIsIk5aRCI6IjE5Ljk5IiwiTk9LIjoiMTQ5IiwiUExOIjoiMzkuOTkiLCJHQlAiOiIxNC45OSIsIlNHRCI6IjI0Ljk5IiwiWkFSIjoiOTkuOTkiLCJLUlciOiIxNDk5OSIsIlNFSyI6IjE0Ljk5IiwiQ0hGIjoiMTQuOTkiLCJUSEIiOiIzNDkifSwidGQiOiIzIiwieSI6IiIsInEiOjAsImQiOjEsImEiOltdLCJ2IjoiMTE3NTkiLCJkdyI6ZmFsc2UsInMiOiIzOWM1YTlhYzhiOGZkOWE1MzhlYmIzNjc4YjhlYzdlYzAwMjQ2MjVmZGVlMTc0OTE2ZmNmY2FmZDZjOTk1MDNlZTM0MzVjNDU2ZmVlZWZiYmVjN2U0NDI5MjNlMTViZDg3Y2IzNjQyZWMzYWY1YzY2NWY3OGFkYmEzMDEyNTcyZiJ9",
        trial_7:
          "https://checkout.paddle.com/checkout/custom/eyJ0IjoiTWF0ZSBQcm8gWWVhcmx5IiwiaSI6Imh0dHBzOlwvXC9wYWRkbGUuczMuYW1hem9uYXdzLmNvbVwvdXNlclwvMTE3NTlcL3N1YnNfNjUwODQ0X2ljb24ucG5nIiwiciI6bnVsbCwiY20iOiIiLCJyZSI6MCwicCI6NjUwODQ0LCJhbCI6MCwiY2MiOnsiVVNEIjoiMCIsIkVVUiI6IjAiLCJUUlkiOiIwIiwiUlVCIjoiMCIsIlVBSCI6IjAiLCJDTlkiOiIwIiwiQVJTIjoiMCIsIkFVRCI6IjAiLCJCUkwiOiIwIiwiQ0FEIjoiMCIsIkNaSyI6IjAiLCJES0siOiIwIiwiSEtEIjoiMCIsIkhVRiI6IjAiLCJJTlIiOiIwIiwiSUxTIjoiMCIsIkpQWSI6IjAiLCJNWE4iOiIwIiwiVFdEIjoiMCIsIk5aRCI6IjAiLCJOT0siOiIwIiwiUExOIjoiMCIsIkdCUCI6IjAiLCJTR0QiOiIwIiwiWkFSIjoiMCIsIktSVyI6IjAiLCJTRUsiOiIwIiwiQ0hGIjoiMCIsIlRIQiI6IjAifSwicnAiOnsiVVNEIjoiMTQuOTkiLCJFVVIiOiIxNC45OSIsIlRSWSI6Ijc5Ljk5IiwiUlVCIjoiNTk5IiwiVUFIIjoiMjQ5IiwiQ05ZIjoiNzkuOTkiLCJBUlMiOiI3OTkiLCJBVUQiOiIxOS45OSIsIkJSTCI6IjQ5Ljk5IiwiQ0FEIjoiMzQuOTkiLCJDWksiOiIzNDkiLCJES0siOiI3OS45OSIsIkhLRCI6Ijc5Ljk5IiwiSFVGIjoiMjk5OSIsIklOUiI6IjU5OSIsIklMUyI6IjQ5Ljk5IiwiSlBZIjoiMTQ5OSIsIk1YTiI6IjE5OSIsIlRXRCI6IjI5OSIsIk5aRCI6IjE5Ljk5IiwiTk9LIjoiMTQ5IiwiUExOIjoiMzkuOTkiLCJHQlAiOiIxNC45OSIsIlNHRCI6IjI0Ljk5IiwiWkFSIjoiOTkuOTkiLCJLUlciOiIxNDk5OSIsIlNFSyI6IjE0Ljk5IiwiQ0hGIjoiMTQuOTkiLCJUSEIiOiIzNDkifSwidGQiOiI3IiwieSI6IiIsInEiOjAsImQiOjEsImEiOltdLCJ2IjoiMTE3NTkiLCJkdyI6ZmFsc2UsInMiOiIxMWIzNGFhYzhiMWNmN2M2ZTk0MGIzMjVmOTMxMDk5ODczMjZmY2RmOTZkMWYyZWY4OWFhMDYyNTRhOWU0NGRiZmY1NTA1NDZkM2FiZTA2OTE4MDM4YTU5YWE2NzU4ZjI2M2VhODY5ZjhjZTBiMzA0OGI1OTYxNmI2OThlZTlkNiJ9",
        trial_14:
          "https://checkout.paddle.com/checkout/custom/eyJ0IjoiTWF0ZSBQcm8gWWVhcmx5IiwiaSI6Imh0dHBzOlwvXC9wYWRkbGUuczMuYW1hem9uYXdzLmNvbVwvdXNlclwvMTE3NTlcL3N1YnNfNjUwODQ0X2ljb24ucG5nIiwiciI6bnVsbCwiY20iOiIiLCJyZSI6MCwicCI6NjUwODQ0LCJhbCI6MCwiY2MiOnsiVVNEIjoiMCIsIkVVUiI6IjAiLCJUUlkiOiIwIiwiUlVCIjoiMCIsIlVBSCI6IjAiLCJDTlkiOiIwIiwiQVJTIjoiMCIsIkFVRCI6IjAiLCJCUkwiOiIwIiwiQ0FEIjoiMCIsIkNaSyI6IjAiLCJES0siOiIwIiwiSEtEIjoiMCIsIkhVRiI6IjAiLCJJTlIiOiIwIiwiSUxTIjoiMCIsIkpQWSI6IjAiLCJNWE4iOiIwIiwiVFdEIjoiMCIsIk5aRCI6IjAiLCJOT0siOiIwIiwiUExOIjoiMCIsIkdCUCI6IjAiLCJTR0QiOiIwIiwiWkFSIjoiMCIsIktSVyI6IjAiLCJTRUsiOiIwIiwiQ0hGIjoiMCIsIlRIQiI6IjAifSwicnAiOnsiVVNEIjoiMTQuOTkiLCJFVVIiOiIxNC45OSIsIlRSWSI6Ijc5Ljk5IiwiUlVCIjoiNTk5IiwiVUFIIjoiMjQ5IiwiQ05ZIjoiNzkuOTkiLCJBUlMiOiI3OTkiLCJBVUQiOiIxOS45OSIsIkJSTCI6IjQ5Ljk5IiwiQ0FEIjoiMzQuOTkiLCJDWksiOiIzNDkiLCJES0siOiI3OS45OSIsIkhLRCI6Ijc5Ljk5IiwiSFVGIjoiMjk5OSIsIklOUiI6IjU5OSIsIklMUyI6IjQ5Ljk5IiwiSlBZIjoiMTQ5OSIsIk1YTiI6IjE5OSIsIlRXRCI6IjI5OSIsIk5aRCI6IjE5Ljk5IiwiTk9LIjoiMTQ5IiwiUExOIjoiMzkuOTkiLCJHQlAiOiIxNC45OSIsIlNHRCI6IjI0Ljk5IiwiWkFSIjoiOTkuOTkiLCJLUlciOiIxNDk5OSIsIlNFSyI6IjE0Ljk5IiwiQ0hGIjoiMTQuOTkiLCJUSEIiOiIzNDkifSwidGQiOiIxNCIsInkiOiIiLCJxIjowLCJkIjoxLCJhIjpbXSwidiI6IjExNzU5IiwiZHciOmZhbHNlLCJzIjoiODdlNTM1MjQ3ZDk2NDUzODA3ZDg2NGZmYjE3YmViZTllMWRjMmNkOTBjYzExZjE3MDFlNTVmMTkxMzMwOWQ2ZTQ0NWZjNjJkNmRhOTAyYzQ4ZWQyOTVlNWNhNjZjOGY3YmQxMWJmZmNjYzlmMWE1YjEzZDUxNGMyNzUzNGEyYzIifQ==",
      },
    },
  },
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (subscriptionConstants);

/***/ }),

/***/ "./src/ext/dom.js":
/*!************************!*\
  !*** ./src/ext/dom.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);


const dom = {
  getPosition: function (e) {
    let left = 0;
    let top = 0;

    if (e.offsetParent) {
      do {
        left += e.offsetLeft;
        top += e.offsetTop;
      } while ((e = e.offsetParent));
    }

    return [left, top];
  },

  getX: function (e) {
    return dom.getPosition(e)[0];
  },

  getY: function (e) {
    return dom.getPosition(e)[1];
  },

  getHeight: function (e) {
    return (
      parseInt(jquery__WEBPACK_IMPORTED_MODULE_0___default()(e).css("height")) +
      parseInt(jquery__WEBPACK_IMPORTED_MODULE_0___default()(e).css("padding-top")) +
      parseInt(jquery__WEBPACK_IMPORTED_MODULE_0___default()(e).css("padding-bottom"))
    );
  },

  isVisible: function (e) {
    const y = this.getY(e);
    return (
      y + this.getHeight(e) >= window.scrollY &&
      y <= window.scrollY + window.innerHeight
    );
  },
};

// TODO: idk what pl.implement does, please rewrite this
// Alex: pl.implement == $.fn.FN = () => {}
// i.e. functions to work with DOM
// I doubt it's used somewhere
// It reverses the order of given DOM elements

// pl.implement({
//   rev: function () {
//     this.elements.reverse();
//     return this;
//   },
// });

(jquery__WEBPACK_IMPORTED_MODULE_0___default().fn.textWidth) = function (text, font) {
  if (!(jquery__WEBPACK_IMPORTED_MODULE_0___default().fn.textWidth.fakeEl))
    (jquery__WEBPACK_IMPORTED_MODULE_0___default().fn.textWidth.fakeEl) = jquery__WEBPACK_IMPORTED_MODULE_0___default()("<span>").hide().appendTo(document.body);
  jquery__WEBPACK_IMPORTED_MODULE_0___default().fn.textWidth.fakeEl.text(text || this.val() || this.text())
    .css("font", font || this.css("font"));
  return jquery__WEBPACK_IMPORTED_MODULE_0___default().fn.textWidth.fakeEl.width();
};

// only supports the default line height
(jquery__WEBPACK_IMPORTED_MODULE_0___default().fn.lines) = function (text, font) {
  if (!(jquery__WEBPACK_IMPORTED_MODULE_0___default().fn.lines.fakeEl))
    (jquery__WEBPACK_IMPORTED_MODULE_0___default().fn.lines.fakeEl) = jquery__WEBPACK_IMPORTED_MODULE_0___default()("<div>").hide().appendTo(document.body);
  jquery__WEBPACK_IMPORTED_MODULE_0___default().fn.lines.fakeEl.text(text || this.val() || this.text())
    .css("font", font || this.css("font"))
    .css("width", this.css("width"))
    .css("padding", this.css("padding"))
    .css("white-space", "pre-line");

  let fs = parseInt(this.css("font-size"), 10);

  // line-height = 1.2
  return Math.ceil(jquery__WEBPACK_IMPORTED_MODULE_0___default().fn.lines.fakeEl.height() / (fs * 1.2));
};

(jquery__WEBPACK_IMPORTED_MODULE_0___default().fn.placeholderWidth) = function () {
  return jquery__WEBPACK_IMPORTED_MODULE_0___default().fn.textWidth(this.attr("placeholder"));
};

(jquery__WEBPACK_IMPORTED_MODULE_0___default().fn.measure) = function (fn) {
  const el = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).clone(false);
  el.css({
    visibility: "hidden",
    position: "absolute",
  });
  el.appendTo("body");
  const result = fn.apply(el);
  el.remove();
  return result;
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (dom);


/***/ }),

/***/ "./src/ext/event.js":
/*!**************************!*\
  !*** ./src/ext/event.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "IN_CODES": () => (/* binding */ IN_CODES),
/* harmony export */   "IN_STR": () => (/* binding */ IN_STR),
/* harmony export */   "checkMultipleKeyCodes": () => (/* binding */ checkMultipleKeyCodes),
/* harmony export */   "clearKeysDown": () => (/* binding */ clearKeysDown),
/* harmony export */   "filter": () => (/* binding */ filter),
/* harmony export */   "forget": () => (/* binding */ forget),
/* harmony export */   "getKeyCodeCombinationFromName": () => (/* binding */ getKeyCodeCombinationFromName),
/* harmony export */   "getNameFromKeyCodeCombination": () => (/* binding */ getNameFromKeyCodeCombination),
/* harmony export */   "getNecessaryInfo": () => (/* binding */ getNecessaryInfo),
/* harmony export */   "getNicePresentationForKeyCode": () => (/* binding */ getNicePresentationForKeyCode),
/* harmony export */   "is": () => (/* binding */ is),
/* harmony export */   "isControlKey": () => (/* binding */ isControlKey),
/* harmony export */   "isDown": () => (/* binding */ isDown),
/* harmony export */   "isKeyCodeLetter": () => (/* binding */ isKeyCodeLetter),
/* harmony export */   "isModKey": () => (/* binding */ isModKey),
/* harmony export */   "isRegKey": () => (/* binding */ isRegKey),
/* harmony export */   "isValidKeyCode": () => (/* binding */ isValidKeyCode),
/* harmony export */   "keysDown": () => (/* binding */ keysDown),
/* harmony export */   "listen": () => (/* binding */ listen)
/* harmony export */ });
/* harmony import */ var _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../src/ext/kumquat_polyfill */ "./src/ext/kumquat_polyfill.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_1__);



const SPECIAL_KEYS = {
  8: "backspace",
  9: "tab",
  13: "enter",
  16: "shift",
  17: "ctrl",
  18: "alt",
  19: "pause",
  27: "escape",
  37: "left arrow",
  39: "right arrow",
  38: "up arrow",
  40: "down arrow",
  46: "delete",
  91: "cmd left",
  93: "cmd right",
  "91-93": "cmd",
  106: "multiply",
  107: "add",
  109: "subtract",
  110: "^",
  111: "\\",
  186: ";",
  187: "=",
  188: ",",
  189: "-",
  190: ".",
  191: "/",
  192: "`",
  219: "[",
  221: "]",
  222: "'",
  220: "\\",
  48: "0",
  49: "1",
  50: "2",
  51: "3",
  52: "4",
  53: "5",
  54: "6",
  55: "7",
  56: "8",
  57: "9",
  33: "pgup",
  34: "pgdown",
  112: "f1",
  113: "f2",
  114: "f3",
  115: "f4",
  116: "f5",
  117: "f6",
  118: "f7",
  119: "f8",
  120: "f9",
  121: "f10",
  122: "f11",
  123: "f12",
};

const MAP = {
  enter: 13,
  shift: 16,
  ctrl: 17,
  alt: 18,
  esc: 27,
  space: 32,
  cmd: [91, 93],
  arrowup: 38,
  arrowdown: 40,
  tilde: 192,
  f1: 112,
  f2: 113,
  f3: 114,
  f4: 115,
  f5: 116,
  f6: 117,
  f7: 118,
  f8: 119,
  f9: 120,
  f10: 121,
  f11: 122,
  f12: 123,
};

const REG_KEYS = {
  "=": 187,
  "-": 189,
  0: 48,
  1: 49,
  2: 50,
  3: 51,
  4: 52,
  5: 53,
  6: 54,
  7: 55,
  8: 56,
  9: 57,
};

const start = 65;
for (let i = start; i <= start + 25; ++i) {
  MAP[String.fromCharCode(i + 32)] = i;
  REG_KEYS[String.fromCharCode(i + 32)] = i;
}

const MOD_KEYS = {
  alt: true,
  ctrl: true,
  shift: true,
  cmd: true,
  f1: true,
  f2: true,
  f3: true,
  f4: true,
  f5: true,
  f6: true,
  f7: true,
  f8: true,
  f9: true,
  f10: true,
  f11: true,
  f12: true,
  win: true,
};

const isModificationKey = function (key) {
  return key in MOD_KEYS;
};

const isRegularKey = function (key) {
  return key in REG_KEYS;
};

function isKeyCodeLetter(key_code) {
  key_code = +key_code;
  return key_code >= start && key_code <= start + 25;
}

function isControlKey(key_code) {
  key_code = +key_code;

  for (const key in MAP) {
    const is_arr = Array.isArray(MAP[key]);
    if (
      !isKeyCodeLetter(key_code) &&
      (is_arr ? MAP[key].includes(key_code) : MAP[key] === key_code)
    ) {
      return true;
    }
  }
  return false;
}

function isValidKeyCode(key_code) {
  key_code = +key_code;
  return isKeyCodeLetter(key_code) || key_code in SPECIAL_KEYS;
}

// for mac cmd
function checkMultipleKeyCodes(key_code) {
  return key_code in { 91: 0, 93: 0 } ? "91-93" : key_code;
}

function getNicePresentationForKeyCode(key_code) {
  if (isKeyCodeLetter(+key_code)) {
    return String.fromCharCode(+key_code);
  }

  let found = null;
  for (const key in SPECIAL_KEYS) {
    if (
      typeof key === "string" &&
      key.indexOf(key_code) > -1 &&
      key.indexOf("-") > -1
    ) {
      found = SPECIAL_KEYS[key];
    }
  }

  return found || SPECIAL_KEYS[key_code];
}

function filter(combo) {
  combo = combo.toLowerCase();

  const c_arr = combo.split("+");
  const n_arr = [];
  let reg_key = null;
  let has_mod_key = false;

  for (let i = 0, len = c_arr.length; i < len; ++i) {
    if (isModificationKey(c_arr[i])) {
      has_mod_key = true;
      n_arr.push(c_arr[i]);
    } else if (isRegularKey(c_arr[i]) && !reg_key) {
      reg_key = c_arr[i];
    }
  }

  if (reg_key) {
    n_arr.push(reg_key);
  }

  return has_mod_key && reg_key ? n_arr.join("+") : "";
}

function is(combo, e) {
  const multi = combo.split("+");
  let is = true;
  let keyCodeMatch;

  multi.forEach(function (v) {
    const variants = v.split("-");
    keyCodeMatch = false;

    variants.forEach(function (k2, v2) {
      if (e.keyCode === +v2) {
        keyCodeMatch = true;
      }
    });

    if (!keyCodeMatch) {
      is = false;
    }
  });

  return is;
}

const IN_STR = 1;
const IN_CODES = 2;

function isDown(combo, input_type, keys_down) {
  if (!input_type) input_type = IN_STR;

  let keys;

  if (input_type === IN_STR) {
    keys = getKeyCodeCombinationFromName(combo, false);
  } else if (input_type === IN_CODES) {
    keys = combo.split("+");
  }

  for (let i = 0, len = keys.length; i < len; ++i) {
    if (!(keys_down || keysDown)[keys[i]]) {
      return false;
    }
  }

  return true;
}

function getKeyCodeCombinationFromName(combination, do_join) {
  const names = combination.split("+");
  const key_code_combo = [];

  for (let i = 0, len = names.length; i < len; ++i) {
    const code =
      MAP[names[i].toLowerCase()] || REG_KEYS[names[i].toLowerCase()];
    key_code_combo.push(Array.isArray(code) ? code.join("-") : code);
  }

  return do_join ? key_code_combo.join("+") : key_code_combo;
}

function getNameFromKeyCodeCombination(code_combo) {
  const codes = code_combo.split("+");
  const names = [];

  for (let i = 0, len = codes.length; i < len; ++i) {
    names.push(
      _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.capitalize(
        SPECIAL_KEYS[codes[i]] || _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.getKeyByVal(MAP, codes[i]) || ""
      )
    );
  }

  return names.join("+");
}

function getNecessaryInfo(event) {
  return {
    keyCode: event.keyCode,
    shiftKey: event.shiftKey,
    ctrlKey: event.ctrlKey,
    altKey: event.altKey,
  };
}

let keysDown = {};

function clearKeysDown() {
  for (let i in keysDown) {
    delete keysDown[i];
  }
}

function forget() {
  jquery__WEBPACK_IMPORTED_MODULE_1___default()(document).off("keydown");
  jquery__WEBPACK_IMPORTED_MODULE_1___default()(document).off("keyup");
  keysDown = {};
}

const isModKey = isModificationKey;
const isRegKey = isRegularKey;

function listen(checkDeny, removeValidKey, callback, win) {
  const that = this;

  const clearLetters = function (key_code, down_keys) {
    if (isKeyCodeLetter(key_code)) {
      for (const key in down_keys) {
        if (isKeyCodeLetter(key)) {
          delete down_keys[key];
        }
      }
    }
    return down_keys;
  };

  const clearNonControlKeys = function (key_code, down_keys) {
    if (!isControlKey(key_code)) {
      for (const key in down_keys) {
        if (!isControlKey(key)) {
          delete down_keys[key];
        }
      }
    }
    return down_keys;
  };

  jquery__WEBPACK_IMPORTED_MODULE_1___default()(win || document).on("keydown", function (event) {
    // console.log("event.listen", event.keyCode, event.key);

    if (isValidKeyCode(event.keyCode)) {
      clearLetters(event.keyCode, keysDown);
      clearNonControlKeys(event.keyCode, keysDown);

      keysDown[checkMultipleKeyCodes(event.keyCode)] = true;

      if (event.metaKey) {
        keysDown["91-93"] = true;
      }

      checkDeny(keysDown);
      callback();
    }
  });

  jquery__WEBPACK_IMPORTED_MODULE_1___default()(win || document).on("keyup", function (event) {
    const kc = event.keyCode;
    const mkc = checkMultipleKeyCodes(event.keyCode);

    delete keysDown[kc];
    delete keysDown[mkc];

    removeValidKey(kc, mkc);
  });
}


/***/ }),

/***/ "./src/ext/file.js":
/*!*************************!*\
  !*** ./src/ext/file.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../src/ext/kumquat_polyfill */ "./src/ext/kumquat_polyfill.js");
/**
 * Created by chernikovalexey on 16/05/16.
 */



const fileExt = {
  downloadAsCSV: function (rows_as_array, callback) {
    fetch("https://api.matetranslate.com/v2/download_csv", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        f: rows_as_array,
      }),
    })
      .then(async (res) => {
        let data = await res.json();
        if (data.file) {
          chrome.runtime
            .sendMessage({
              action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.processCall("app", "opt", "downloadFile"),
              url: data.file,
            })
            .then();
        }

        callback();
      })
      .catch(() => {
        alert("Could not generate the file. Please try again later.");
        callback();
      });
    // $.ajax({
    //   url: "https://api.matetranslate.com/v2/download_csv",
    //   type: "POST",
    //   dataType: "json",
    //   contentType: "application/json",
    //   data: JSON.stringify({
    //     f: rows_as_array,
    //   }),
    //   success: function (data) {
    //     if (data.file) {
    //       chrome.runtime.sendMessage({
    //         action: ke.processCall("app", "opt", "downloadFile"),
    //         url: data.file,
    //       });
    //     }
    //
    //     callback();
    //   },
    //   error: function () {
    //     alert("Could not generate the file. Please try again later.");
    //     callback();
    //   },
    // });
  },
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (fileExt);


/***/ }),

/***/ "./src/ext/input.js":
/*!**************************!*\
  !*** ./src/ext/input.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);


const clearField = function (input, callback) {
  const v = jquery__WEBPACK_IMPORTED_MODULE_0___default()(input).val();
  if (v.length > 0) {
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(input).val(v.substr(0, v.length - 1));
    setTimeout(function () {
      clearField(input, callback);
    }, 3);
  } else {
    callback();
  }
};

(jquery__WEBPACK_IMPORTED_MODULE_0___default().fn.caretToEnd) = function () {
  this.each(() => {
    this.placeCaret(this.val().length);
  });
  return this;
};

(jquery__WEBPACK_IMPORTED_MODULE_0___default().fn.placeCaret) = function (pos) {
  this.each(() => {
    this[0].setSelectionRange(pos, pos);
    this.trigger("focus");
  });
  return this;
};

(jquery__WEBPACK_IMPORTED_MODULE_0___default().fn.getCursorPosition) = function () {
  const input = this.elements[0];
  if ("selectionStart" in input) {
    return input.selectionStart;
  }
  return 0;
};

(jquery__WEBPACK_IMPORTED_MODULE_0___default().fn.createSelection) = function (start, end) {
  // console.log(start);
  this.each(() => {
    this[0].setSelectionRange(start, end);
    this.trigger('focus');
  });
};

(jquery__WEBPACK_IMPORTED_MODULE_0___default().fn.clear) = function (callback) {
  this.each(() => {
    clearField(this, callback);
  });
};

(jquery__WEBPACK_IMPORTED_MODULE_0___default().fn.highlightErrorFor) = function (ms) {
  const els = this;

  this.each(() => {
    this.addClass("mw-error");
  });

  setTimeout(function () {
    els.each(() => {
      this.removeClass("mw-error");
    });
  }, ms);
};

// export default input;


/***/ }),

/***/ "./src/ext/kumquat_polyfill.js":
/*!*************************************!*\
  !*** ./src/ext/kumquat_polyfill.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ke": () => (/* binding */ ke)
/* harmony export */ });
/* harmony import */ var _src_lib_ga__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../src/lib/ga */ "./src/lib/ga.js");
/* harmony import */ var _src_lib_analytics__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../src/lib/analytics */ "./src/lib/analytics.js");
/* harmony import */ var _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../src/ext/util/storageUtil */ "./src/ext/util/storageUtil.js");
/* harmony import */ var _const_appConstants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./const/appConstants */ "./src/ext/const/appConstants.js");
/* harmony import */ var _sentry_browser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/browser */ "./node_modules/@sentry/browser/esm/sdk.js");






const ALPHABET = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";

const IDB_RW = "readwrite";
const IDB_RO = "readonly";

function getRandomString(length) {
  let result = "";
  for (let i = length; i > 0; --i) {
    result += ALPHABET[Math.floor(Math.random() * ALPHABET.length)];
  }
  return result;
}

const ANALYTICS_CREDS = {
  "Chrome": {
    "secret": "yVKNuiOETGep_PAW6W2YIQ",
    "measurement_id": "G-8K0PZ200J3",
  },
  "Opera": {
    "secret": "9qkngn5GSU-E1V0rC4nwcw",
    "measurement_id": "G-Q3SEC860DX",
  },
  "Edge": {
    "secret": "En9iaIGDRXmsBKtr7zrvuQ",
    "measurement_id": "G-BRLZPRP2S4",
  },
  "Firefox": {
    "secret": "--DMRlKQRnuSJCXivpBJLQ",
    "measurement_id": "G-41Q2FTWZEC",
  },
};

const PROTOCOLS = {
  Chrome: "chrome-extension://",
  Opera: "chrome-extension://",
  Edge: "ms-browser-extension://",
  Firefox: "moz-extension://",
};

function getProtocol() {
  // New Chromium-based Edge is pretending to be Chrome
  if (navigator.userAgent.toLowerCase().indexOf("edg/") > -1) {
    return "extension://";
  } else {
    return PROTOCOLS[ke.browserName];
  }
}

const selectors = {
  window: {
    FROM_SEL: "#from-language-selector",
    TO_SEL: "#to-language-selector",
  },

  settings: {
    A_CHECK: "#all-variants",
    I_CHECK: "#instant-translation",
    K_CHECK: "#key-combo",
    C_CHECK: "#context",
    S_CHECK: "#save",
    H_CHECK: "#history",
    P_CHECK: "#pamazon",

    COL_COMBO: ".cw-combo",
    COL_CONTEXT: ".cw-context",
  },
};

const EEA_LIST = {
  at: true,
  be: true,
  bg: true,
  hr: true,
  cy: true,
  cz: true,
  dk: true,
  ee: true,
  fi: true,
  fr: true,
  de: true,
  gr: true,
  hu: true,
  ie: true,
  it: true,
  lv: true,
  lt: true,
  lu: true,
  mt: true,
  nl: true,
  pl: true,
  pt: true,
  ro: true,
  sk: true,
  si: true,
  es: true,
  se: true,
  gb: true,
};

const ke = {
  BROWSER_CODE: "chrome", // auto-replaced by Webpack

  get IS_CHROME() {
    return this.BROWSER_CODE === "chrome";
  },

  get IS_FIREFOX() {
    return this.BROWSER_CODE === "firefox";
  },

  get IS_EDGE() {
    return this.BROWSER_CODE === "edge";
  },

  get IS_OPERA() {
    return this.BROWSER_CODE === "opera";
  },

  EF: function () {},

  isMac: navigator.userAgent.indexOf("Mac") > -1,
  isWindows: navigator.userAgent.indexOf("Win") > -1,

  TIME: {
    ONE_DAY: 86400000,
    ONE_MONTH: 2629746000,
  },

  serialize: function (obj) {
    const str = [];
    for (const p in obj)
      if (obj.hasOwnProperty(p)) {
        str.push(encodeURIComponent(p) + "=" + encodeURIComponent(obj[p]));
      }
    return str.join("&");
  },

  generateUserId: function (part_len, parts_amount) {
    const parts = [];
    for (let i = 0; i < parts_amount; ++i) {
      parts.push(getRandomString(part_len));
    }
    return parts.join("-");
  },

  processCall: function (...args) {
    const p = [];
    args.forEach(function (v) {
      p.push(v);
    });
    return p.join(",");
  },

  parseProcessCall: function (command) {
    if (!command) {
      return {
        lib: "",
        cmd: "",
        exact: "",
      };
    }

    const tmp = command.split(",");
    const f = {
      lib: tmp[0],
      cmd: tmp[1],
      exact: tmp[2],
    };
    return f;
  },

  get browserName() {
    if (ke.IS_CHROME) {
      return "Chrome";
    } else if (ke.IS_OPERA) {
      return "Opera";
    } else if (ke.IS_FIREFOX) {
      return "Firefox";
    } else if (ke.IS_EDGE) {
      return "Edge";
    }

    return "Unknown";
  },

  getAnalyticsApiSecret: function () {
    return ANALYTICS_CREDS[ke.browserName].secret;
  },

  getAnalyticsMeasurementId: function () {
    return ANALYTICS_CREDS[ke.browserName].measurement_id;
  },

  get section() {
    if (location.href.indexOf("background") > -1) {
      return "background";
    } else if (location.href.match(getProtocol())) {
      return location.href.match(/([A-z0-9]+)\.html/)[1];
    } else {
      return "content";
    }
  },

  getLocale: function () {
    return chrome.i18n.getMessage.apply(chrome, arguments);
  },

  get browserLang() {
    const ul = navigator.language;
    return ul.split("-")[0].split("_")[0];
  },

  get pathToExt() {
    // Edge is fucking nuts:
    // URLs that they return use extension://
    // For including our stuff in injected scripts, we need to use chrome-extension://
    // Confusing AF

    let protocol = getProtocol();

    if (navigator.userAgent.toLowerCase().indexOf("edg/") > -1) {
      protocol = "chrome-" + protocol;
    }

    return protocol + chrome.runtime.id + "/";
  },

  get staticExtId() {
    return ke.IS_FIREFOX
      ? chrome.runtime.getManifest().applications.gecko.id
      : chrome.runtime.id;
  },

  share_links: {
    fb: "http://www.facebook.com/sharer/sharer.php?u=<%=link%>",
    tw: "https://twitter.com/intent/tweet?url=<%=link%>&text=<%=text%>&via=MateTranslate",
    vk: "https://vk.com/share.php?url=<%=link%>",
  },

  get analyticsModule() {
    if (ke.IS_CHROME) {
      return "mt-ch";
    } else if (ke.IS_OPERA) {
      return "mt-op";
    } else if (ke.IS_EDGE) {
      return "mt-ee";
    } else if (ke.IS_FIREFOX) {
      return "mt-ff";
    }
    return "";
  },

  get storeLink() {
    if (ke.IS_CHROME) {
      return "https://chrome.google.com/webstore/detail/instant-translate-select/ihmgiclibbndffejedjimfjmfoabpcke";
    } else if (ke.IS_OPERA) {
      return "https://addons.opera.com/extensions/details/instant-translate-2";
    } else if (ke.IS_EDGE) {
      return "https://microsoftedge.microsoft.com/addons/detail/mate-translate-%E2%80%93-translat/kacbklkbjmnjkhnellgciecdogkkldoj";
    } else if (ke.IS_FIREFOX) {
      return "https://addons.mozilla.org/firefox/addon/instant-translate/";
    }

    return "";
  },

  getExtVer: function () {
    return chrome.runtime.getManifest().version;
  },

  getDeviceData: function (callback) {
    _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_2__["default"].chainRequestBackgroundOption(
      [
        { fn: "getVal", args: ["ext_ver"] },
        { fn: "getVal", args: ["user_id"] },
      ],
      function (r) {
        const ext_ver = ke.getExtVer();
        const user_id = r[1].response;

        callback({
          d_id: user_id,
          d_sv: "",
          d_av: ext_ver,
          d_platform: ke.browserName.toLowerCase(),
          d_uuid: chrome.runtime.id,
        });
      },
      ke.section === "background"
    );
  },

  isEEA: function (country) {
    return country in EEA_LIST;
  },

  isLegacyProUser: async function () {
    return await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_2__["default"].isTrueOption("chr_pro_flag");
  },

  isProUser: async function () {
    const sub_data = await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_2__["default"].getDecodedVal("sub_data");
    return (
      (await ke.isLegacyProUser()) || // legacy pro users
      sub_data.isSubscriptionVerified
    );
  },

  canSync: async function () {
    return (
      (await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_2__["default"].isTrueOption("sync")) &&
      (await ke.isProUser()) &&
      (await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_2__["default"].getVal("account_token"))
    );
  },

  syncServer: async function () {
    return (await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_2__["default"].getVal("user_country")) === "cn"
      ? "asia.gikken.co/matesync"
      : "sync.matetranslate.com";
  },

  getCurrentLocale: function (simplify) {
    const ul = navigator.userLanguage || navigator.language;
    return simplify ? ul.split("-").shift() : ul;
  },

  getKeyByVal: function (o, v) {
    for (const key in o) {
      if (o[key] == v) return key;
    }
    return null;
  },

  capitalize: function (s) {
    if (typeof s !== "string" || !s) return "";
    else return s[0].toUpperCase() + s.substring(1).toLowerCase();
  },

  // PDF tooltip needs prefix too
  getPrefix: function () {
    return ke.section === "content" || ke.section === "pdf_tooltip"
      ? "TnITTtw-"
      : "";
  },

  getSelectorConst: function (p, n) {
    return selectors[p][n.toUpperCase()];
  },

  initSentry: function () {
    _sentry_browser__WEBPACK_IMPORTED_MODULE_4__.init({
      dsn: "https://76a853386a5f04573a09c8084098423f@gikken.dedicatedsentry.com/2",
      tracesSampleRate: 1.0, //  Capture 100% of the transactions
      replaysSessionSampleRate: 0.1, // This sets the sample rate at 10%. You may want to change it to 100% while in development and then sample at a lower rate in production.
      replaysOnErrorSampleRate: 1.0, // If you're not already sampling the entire session, change the sample rate to 100% when sampling sessions where errors occur.
    });
  },

  initAnalytics: function (callback) {
    // if (typeof ga === 'undefined') {
    //     return (callback || function() {})();
    // }

    // ga("create", ke.getTrackingCode(), "auto");
    // ga("set", "checkProtocolTask", function () {});
    // ga("set", "appId", chrome.runtime.id);
    // ga("set", "appName", chrome.runtime.getManifest().name);
    // ga("set", "appVersion", chrome.runtime.getManifest().version);
    // ga("require", "displayfeatures");
    // ga("send", "event", "pageview", ke.section);
    
    _src_lib_analytics__WEBPACK_IMPORTED_MODULE_1__["default"].firePageViewEvent(ke.section, ke.section);

    // if (ke.section === 'background') {
    //     handlers.sendTranslationsCount();
    // }

    (callback || function () {})();

    // include it only after analytics has been set up
  },

  data: {
    idb: {
      list: {},
    },
  },

  idb: {
    isOpened: false,
    structs: {},

    def_obj_struct: function (name, struct) {
      this.structs[name] = struct;
    },

    open: function (db_name, tables_and_indices, ver, callback) {
      try {
        const request = indexedDB.open(db_name, ver);

        ke.idb.cache[db_name] = {};

        request.onupgradeneeded = function (e) {
          const this_db = e.target.result;

          for (const table in tables_and_indices) {
            if (!this_db.objectStoreNames.contains(table)) {
              this_db.createObjectStore(table, { autoIncrement: true });
            }

            const store = e.target.transaction.objectStore(table);
            for (const index in tables_and_indices[table]) {
              if (!store.indexNames.contains(index)) {
                store.createIndex(index, index, {
                  unique: tables_and_indices[table][index],
                });
              }
            }
          }
        };

        request.onsuccess = function (e) {
          ke.data.idb.list[db_name] = e.target.result;
          ke.idb.isOpened = true;
          callback();
        };

        request.onerror = function (e) {
          console.log("Could not open IDB...");
          console.dir(request.error);
        };
      } catch (e) {
        console.log("Indexed DB Open Error:", e);
      }
    },

    check_struct: function (obj, struct_name) {
      for (var key in this.structs[struct_name]) {
        if (!(key in obj)) return false;
      }

      for (var key in obj) {
        if (!(key in this.structs[struct_name])) return false;
      }

      return true;
    },

    add: function (db_name, table, obj, obj_struct_name, callback) {
      const db = ke.data.idb.list[db_name];

      if (
        db &&
        this.structs[obj_struct_name] &&
        this.check_struct(obj, obj_struct_name)
      ) {
        const request = db
          .transaction([table], IDB_RW)
          .objectStore(table)
          .add(obj);

        request.onsuccess = function (e) {
          callback(e.target.result, obj);
        };

        request.onerror = function (e) {
          console.log("error add:", obj, e);
        };
      } else {
        callback(null, null);
        console.error("Db not found or obj_struct_name not defined");
      }
    },

    get: function (name, table, id, callback) {
      const db = ke.data.idb.list[name];

      if (db) {
        const request = db
          .transaction([table], IDB_RO)
          .objectStore(table)
          .get(id);

        request.onsuccess = function (event) {
          callback(event.target.result);
        };
      }
    },

    ARITH_ADD_UPDATE_TYPE: 1,
    DEFAULT_UPDATE_TYPE: -1,
    ADD_FIELD_UPDATE_TYPE: 2,

    update: function (db_name, table, primarykey, values, callback) {
      const db = ke.data.idb.list[db_name];

      if (db) {
        const store = db.transaction([table], IDB_RW).objectStore(table);

        store.get(primarykey).onsuccess = function (e) {
          const v = e.target.result;

          for (const key in values) {
            if (v[key] !== undefined) {
              if (
                typeof values[key] === "object" &&
                values[key].update_type &&
                values[key].update_type !== ke.idb.DEFAULT_UPDATE_TYPE
              ) {
                if (values[key].update_type === ke.idb.ARITH_ADD_UPDATE_TYPE) {
                  v[key] += values[key].value;
                }
              } else {
                v[key] = values[key];
              }
            } else if (
              values[key].update_type === ke.idb.ADD_FIELD_UPDATE_TYPE &&
              ke.idb.structs[values[key].struct] &&
              ke.idb.structs[values[key].struct].hasOwnProperty(key)
            ) {
              v[key] = values[key].value;
            }
          }

          const put_request = store.put(v, primarykey);

          put_request.onsuccess = function (event) {
            callback(v, event.target.result);
          };
        };
      }
    },

    findAndDel: function (db_name, table, search_values, callback, comp_type) {
      ke.idb.search(
        db_name,
        table,
        search_values,
        function (items) {
          const ids = [];
          items.forEach(function (v) {
            ids.push(v.id);
          });
          ke.idb.del(db_name, table, ids, callback);
        },
        comp_type
      );
    },

    findAndUpdate: function (
      db_name,
      table,
      search_values,
      update_values,
      callback,
      comp_type
    ) {
      ke.idb.search(
        db_name,
        table,
        search_values,
        function (items) {
          const updated_items = [];
          items.forEach(function (v) {
            ke.idb.update(
              db_name,
              table,
              v.id,
              update_values,
              function (obj, id) {
                obj.id = id;
                updated_items.push(obj);
              }
            );
          });

          var i = setInterval(function () {
            if (updated_items.length === items.length) {
              clearInterval(i);
              callback(updated_items);
            }
          }, 10);
        },
        comp_type
      );
    },

    del: function (db_name, table, keys, callback) {
      if (keys.length === 0) {
        callback(false);
        return;
      }

      const db = ke.data.idb.list[db_name];

      if (db) {
        const transaction = db.transaction([table], IDB_RW);
        const store = transaction.objectStore(table);

        keys.forEach(function (key) {
          store.delete(key);
        });

        transaction.oncomplete = function (e) {
          callback(true);
        };
      }
    },

    clear: function (db_name, table, callback) {
      const db = ke.data.idb.list[db_name];

      if (db) {
        const request = db
          .transaction([table], IDB_RW)
          .objectStore(table)
          .clear();

        request.onsuccess = function (e) {
          callback();
        };
      }
    },

    enum: function (
      db_name,
      table,
      max_len,
      bounds,
      descending_order,
      callback
    ) {
      const db = ke.data.idb.list[db_name];

      if (db) {
        const transaction = db.transaction([table], IDB_RO);
        const object_store = transaction.objectStore(table);
        const cursor_request = object_store.openCursor(bounds, "prev");

        const items = [];

        cursor_request.onerror = function (e) {
          console.log("cursor error", e);
        };

        cursor_request.onsuccess = function (e) {
          const cursor = e.target.result;

          if (cursor && items.length <= max_len) {
            const v = cursor.value;
            v.id = cursor.primaryKey;

            items.push(v);
            cursor.continue();
          }
        };

        transaction.oncomplete = function () {
          if (descending_order) {
            items.reverse();
          }

          callback(items);
        };
      }
    },

    COMP_OR: 1,
    COMP_AND: 2,

    UPPER_BOUND: 1,
    LOWER_BOUND: 2,

    cache: {},

    search: function (
      db_name,
      table,
      search_values,
      callback,
      comp_type,
      bounds,
      max_len,
      descending_order,
      order_by
    ) {
      if (!ke.idb.isOpened) {
        console.log("IDB not opened yet");
        setTimeout(() => {
          ke.idb.search(
            db_name,
            table,
            search_values,
            callback,
            comp_type,
            bounds,
            max_len,
            descending_order,
            order_by
          );
        }, 300);
        return;
      }
      const db = ke.data.idb.list[db_name];

      comp_type = comp_type || ke.idb.COMP_OR;
      max_len = max_len || Number.MAX_VALUE;

      if (db) {
        ke.idb.cache[db_name][table] = ke.idb.cache[db_name][table] || {};

        const key = JSON.stringify(search_values);
        let items = [];

        const oncomplete = function (from_cache) {
          // TODO
          // Enable manual cache control
          if (!from_cache && items.length > 150) {
            ke.idb.cache[db_name][table][key] = items;
          }

          if (bounds && order_by) {
            const res = [];

            items.forEach(function (item) {
              if (
                bounds[0] === ke.idb.UPPER_BOUND &&
                item[bounds[1]] < bounds[2]
              ) {
                res.push(item);
              } else if (
                bounds[0] === ke.idb.LOWER_BOUND &&
                item[bounds[1]] > bounds[2]
              ) {
                res.push(item);
              }
            });

            items = res;
          }

          if (order_by) {
            items.sort(function (a, b) {
              if (!a[order_by] || !b[order_by]) return 0;
              return b[order_by] - a[order_by];
            });
          }

          if (descending_order) {
            items.reverse();
          }

          if (max_len) {
            items = items.slice(0, max_len);
          }

          callback(items);
        };

        if (ke.idb.cache[db_name][table][key]) {
          items = ke.idb.cache[db_name][table][key];
          oncomplete(true);
        } else {
          const transaction = db.transaction([table], IDB_RO);
          const store = transaction.objectStore(table);
          const cursor_request = store.openCursor(null, "prev");

          cursor_request.onsuccess = function (e) {
            let v;
            const cursor = e.target.result;

            if (cursor) {
              if (typeof search_values === "function") {
                if (search_values(cursor.value)) {
                  v = cursor.value;
                  v.id = cursor.primaryKey;
                  items.push(v);
                }
              } else {
                let or_ok = false;
                let and_ok = true;

                for (const key in search_values) {
                  if (
                    (typeof search_values[key] === "string" &&
                      cursor.value[key]
                        .toLowerCase()
                        .indexOf(search_values[key].toLowerCase()) > -1) ||
                    (typeof search_values[key] === "number" &&
                      cursor.value[key] === search_values[key]) ||
                    (typeof search_values[key] === "function" &&
                      search_values[key](cursor.value[key])) ||
                    (typeof search_values[key] === "boolean" &&
                      cursor.value[key] === search_values[key])
                  ) {
                    or_ok = true;
                  } else {
                    and_ok = false;
                  }
                }

                if (
                  (comp_type === ke.idb.COMP_AND && and_ok) ||
                  (comp_type === ke.idb.COMP_OR && or_ok)
                ) {
                  v = cursor.value;
                  v.id = cursor.primaryKey;
                  items.push(v);
                }
              }

              cursor.continue();
            }
          };

          transaction.oncomplete = function () {
            oncomplete(false);
          };
        }
      } else {
        callback(null, true);
      }
    },

    exists: function (db_name, table, key_val, values, callback, pass_obj) {
      const db = ke.data.idb.list[db_name];

      if (db) {
        const transaction = db.transaction([table], IDB_RO);
        const store = transaction.objectStore(table);

        let request;
        if (key_val.length === 2) {
          const index = store.index(key_val[0]);
          request = index.openCursor(IDBKeyRange.only(key_val[1]));
        } else {
          request = store.openCursor(null, "prev");
        }

        request.onsuccess = function (e) {
          const cursor = e.target.result;

          if (cursor) {
            let has = true;
            for (const key in values) {
              if (
                !(
                  (key === "id" && cursor.primaryKey === values[key]) ||
                  values[key] === cursor.value[key]
                )
              ) {
                has = false;
                break;
              }
            }

            if (has) {
              callback(true, cursor.primaryKey, cursor.value, pass_obj);
              transaction.abort();
            } else {
              cursor.continue();
            }
          }
        };

        transaction.oncomplete = function () {
          callback(false, null, null, pass_obj);
        };

        request.onerror = function (e) {
          callback(false, null, null, pass_obj);
          console.log("exists check error:", e);
        };
      } else {
        callback(false, null, null, pass_obj);
      }
    },
  },

  getAnimType: function (anim) {
    return ke.getAppConst("anim_type_" + anim);
  },

  getAnimSpeed: function (anim) {
    return ke.getAppConst("anim_speed_" + anim);
  },

  getAppConst: function (n) {
    return _const_appConstants__WEBPACK_IMPORTED_MODULE_3__["default"][n.toUpperCase()];
  },
  get supportsOnlineAnalytics() {
    return ke.IS_CHROME || ke.IS_OPERA || ke.IS_EDGE;
  },
};

ke.idb.def_obj_struct("translation", {
  l_from: "",
  l_to: "",
  input: "",
  it_resp: [],
  time: 0,
  server_id: 0,
  pending_removal: false,
  sources: {},
});

ke.idb.def_obj_struct("wordlist", {
  from: "",
  to: "",
  name: "",
  last_update: Date.now(),
  created: Date.now(),
  phrases_count: 0,
  server_id: 0,
  pending_removal: false,
});

ke.idb.def_obj_struct("phrase", {
  parent_wordlist_key: 0, // id of the parent wordlist
  text: "", // original text
  translation: "", // translation
  json: {}, // our native translation json here
  added: Date.now(), // timestamp, used to sort words
  server_id: "",
  usageExample: "",
  pending_removal: false,
});

ke.idb.def_obj_struct("langsite", {
  timestamp: 0,
  country: "",
  locale: "",
  site: "",
  is_pro: false,
  count: 0,
  platform: "",
  uploaded: false,
});

console.log('will try to open idb now:', ke.section)

if (ke.section !== "content") {
  try {
    ke.idb.open(
      "it",
      {
        history: {
          l_from: false,
          l_to: false,
          time: false,
          input: false, // index for input w/ unique == false
          server_id: false, // index for server_id w/ unique == false
        },

        wordlists: {
          from: false,
          to: false,
          last_update: false,
          server_id: false,
        },

        phrases: {
          parent_wordlist_key: false,
          server_id: false,
        },

        langsites: {
          site: false,
        },
      },
      35,
      function () {
        console.log('opened idb callback')
      }
    );
  } catch (e) {
    console.log(e);
  }
}


/***/ }),

/***/ "./src/ext/string.js":
/*!***************************!*\
  !*** ./src/ext/string.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../src/ext/kumquat_polyfill */ "./src/ext/kumquat_polyfill.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_2__);





const tagsToReplace = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
};

function replaceTag(tag) {
  return tagsToReplace[tag] || tag;
}

const string = {
  leadToDbOutputLike: function (i) {
    return i
      .replace(/\{/g, "")
      .replace(/\}/g, "")
      .replace(/\[/g, "")
      .replace(/\]/g, "")
      .replace(/\"/g, "")
      .replace(/\,/g, "")
      .replace(/\:/g, "");
  },

  getFormattedPrice: function (amount, currencyTicker) {
    // Use the browser's locale or default to 'en-US' if it cannot be detected
    const userLocale = navigator.language || 'en-US';
    
    return new Intl.NumberFormat(userLocale, {
        style: 'currency',
        currency: currencyTicker,
    }).format(amount);
  },

  safe_tags_replace: function (str) {
    return str.replace(/[&<>]/g, replaceTag);
  },

  removeHtml: function (str) {
    return (str || "").replace(/<([^>]+?)([^>]*?)>(.*?)<\/\1>/gi, "");
  },

  highlight: function (obj, subj) {
    const node = jquery__WEBPACK_IMPORTED_MODULE_1___default()("<div>").html(obj); // to avoid replacing in html tags

    return node.text().replace(new RegExp(subj, "gi"), function (match) {
      return '<span class="highlighting">' + match + "</span>";
    });
  },

  escapeHtml: function (str) {
    return lodash__WEBPACK_IMPORTED_MODULE_2___default().escape(str);
  },

  isValidEmail: function (email) {
    const re =
      /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    return re.test(email);
  },

  getParamFromQueryString: function (name, url) {
    if (!url) url = window.location.href;
    name = name.replace(/[\[\]]/g, "\\$&");
    const regex = new RegExp("[&]?" + name + "(=([^&#]*)|&|#|$)"),
      results = regex.exec(url);
    if (!results) return null;
    if (!results[2]) return "";
    return decodeURIComponent(results[2].replace(/\+/g, " "));
  },

  getTitleCase: function (str) {
    const splitStr = str.toLowerCase().split(" ");
    for (let i = 0; i < splitStr.length; i++) {
      // You do not need to check if i is larger than splitStr length, as your for does that for you
      // Assign it back to the array
      splitStr[i] =
        splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);
    }
    // Directly return the joined string
    return splitStr.join(" ");
  },

  updateQueryString: function (key, value, uri) {
    const re = new RegExp("([&]?)" + key + "=.*?(&|$)", "i");
    const separator = uri.length <= 1 ? "" : "&";
    if (uri.match(re)) {
      return uri.replace(re, "$1" + key + "=" + value + "$2");
    } else {
      return uri + separator + key + "=" + value;
    }
  },

  chunkate: function (text, max_len) {
    const words = text.split(" ");
    const chunks = [""];

    for (let i = 0, len = words.length, j = 0; i < len; ++i) {
      const nw = chunks[j] + " " + words[i];

      if (nw.length < max_len) {
        chunks[j] = nw.trim();
      } else {
        ++j;
        chunks[j] = words[i];
      }
    }

    return chunks;
  },

  hackRegex: (function () {
    /* Regexps to match characters in the BMP according to their Unicode category.
                 Extracted from Unicode specification, version 5.0.0, source:
                 http://unicode.org/versions/Unicode5.0.0/
              */
    const unicodeCategories = {
      Pi: "[\u00ab\u2018\u201b\u201c\u201f\u2039\u2e02\u2e04\u2e09\u2e0c\u2e1c]",
      Sk: "[\u005e\u0060\u00a8\u00af\u00b4\u00b8\u02c2-\u02c5\u02d2-\u02df\u02e5-\u02ed\u02ef-\u02ff\u0374\u0375\u0384\u0385\u1fbd\u1fbf-\u1fc1\u1fcd-\u1fcf\u1fdd-\u1fdf\u1fed-\u1fef\u1ffd\u1ffe\u309b\u309c\ua700-\ua716\ua720\ua721\uff3e\uff40\uffe3]",
      Sm: "[\u002b\u003c-\u003e\u007c\u007e\u00ac\u00b1\u00d7\u00f7\u03f6\u2044\u2052\u207a-\u207c\u208a-\u208c\u2140-\u2144\u214b\u2190-\u2194\u219a\u219b\u21a0\u21a3\u21a6\u21ae\u21ce\u21cf\u21d2\u21d4\u21f4-\u22ff\u2308-\u230b\u2320\u2321\u237c\u239b-\u23b3\u23dc-\u23e1\u25b7\u25c1\u25f8-\u25ff\u266f\u27c0-\u27c4\u27c7-\u27ca\u27d0-\u27e5\u27f0-\u27ff\u2900-\u2982\u2999-\u29d7\u29dc-\u29fb\u29fe-\u2aff\ufb29\ufe62\ufe64-\ufe66\uff0b\uff1c-\uff1e\uff5c\uff5e\uffe2\uffe9-\uffec]",
      So: "[\u00a6\u00a7\u00a9\u00ae\u00b0\u00b6\u0482\u060e\u060f\u06e9\u06fd\u06fe\u07f6\u09fa\u0b70\u0bf3-\u0bf8\u0bfa\u0cf1\u0cf2\u0f01-\u0f03\u0f13-\u0f17\u0f1a-\u0f1f\u0f34\u0f36\u0f38\u0fbe-\u0fc5\u0fc7-\u0fcc\u0fcf\u1360\u1390-\u1399\u1940\u19e0-\u19ff\u1b61-\u1b6a\u1b74-\u1b7c\u2100\u2101\u2103-\u2106\u2108\u2109\u2114\u2116-\u2118\u211e-\u2123\u2125\u2127\u2129\u212e\u213a\u213b\u214a\u214c\u214d\u2195-\u2199\u219c-\u219f\u21a1\u21a2\u21a4\u21a5\u21a7-\u21ad\u21af-\u21cd\u21d0\u21d1\u21d3\u21d5-\u21f3\u2300-\u2307\u230c-\u231f\u2322-\u2328\u232b-\u237b\u237d-\u239a\u23b4-\u23db\u23e2-\u23e7\u2400-\u2426\u2440-\u244a\u249c-\u24e9\u2500-\u25b6\u25b8-\u25c0\u25c2-\u25f7\u2600-\u266e\u2670-\u269c\u26a0-\u26b2\u2701-\u2704\u2706-\u2709\u270c-\u2727\u2729-\u274b\u274d\u274f-\u2752\u2756\u2758-\u275e\u2761-\u2767\u2794\u2798-\u27af\u27b1-\u27be\u2800-\u28ff\u2b00-\u2b1a\u2b20-\u2b23\u2ce5-\u2cea\u2e80-\u2e99\u2e9b-\u2ef3\u2f00-\u2fd5\u2ff0-\u2ffb\u3004\u3012\u3013\u3020\u3036\u3037\u303e\u303f\u3190\u3191\u3196-\u319f\u31c0-\u31cf\u3200-\u321e\u322a-\u3243\u3250\u3260-\u327f\u328a-\u32b0\u32c0-\u32fe\u3300-\u33ff\u4dc0-\u4dff\ua490-\ua4c6\ua828-\ua82b\ufdfd\uffe4\uffe8\uffed\uffee\ufffc\ufffd]",
      Po: "[\u0021-\u0023\u0025-\u0027\u002a\u002c\u002e\u002f\u003a\u003b\u003f\u0040\u005c\u00a1\u00b7\u00bf\u037e\u0387\u055a-\u055f\u0589\u05be\u05c0\u05c3\u05c6\u05f3\u05f4\u060c\u060d\u061b\u061e\u061f\u066a-\u066d\u06d4\u0700-\u070d\u07f7-\u07f9\u0964\u0965\u0970\u0df4\u0e4f\u0e5a\u0e5b\u0f04-\u0f12\u0f85\u0fd0\u0fd1\u104a-\u104f\u10fb\u1361-\u1368\u166d\u166e\u16eb-\u16ed\u1735\u1736\u17d4-\u17d6\u17d8-\u17da\u1800-\u1805\u1807-\u180a\u1944\u1945\u19de\u19df\u1a1e\u1a1f\u1b5a-\u1b60\u2016\u2017\u2020-\u2027\u2030-\u2038\u203b-\u203e\u2041-\u2043\u2047-\u2051\u2053\u2055-\u205e\u2cf9-\u2cfc\u2cfe\u2cff\u2e00\u2e01\u2e06-\u2e08\u2e0b\u2e0e-\u2e16\u3001-\u3003\u303d\u30fb\ua874-\ua877\ufe10-\ufe16\ufe19\ufe30\ufe45\ufe46\ufe49-\ufe4c\ufe50-\ufe52\ufe54-\ufe57\ufe5f-\ufe61\ufe68\ufe6a\ufe6b\uff01-\uff03\uff05-\uff07\uff0a\uff0c\uff0e\uff0f\uff1a\uff1b\uff1f\uff20\uff3c\uff61\uff64\uff65]",
      Mn: "[\u0300-\u036f\u0483-\u0486\u0591-\u05bd\u05bf\u05c1\u05c2\u05c4\u05c5\u05c7\u0610-\u0615\u064b-\u065e\u0670\u06d6-\u06dc\u06df-\u06e4\u06e7\u06e8\u06ea-\u06ed\u0711\u0730-\u074a\u07a6-\u07b0\u07eb-\u07f3\u0901\u0902\u093c\u0941-\u0948\u094d\u0951-\u0954\u0962\u0963\u0981\u09bc\u09c1-\u09c4\u09cd\u09e2\u09e3\u0a01\u0a02\u0a3c\u0a41\u0a42\u0a47\u0a48\u0a4b-\u0a4d\u0a70\u0a71\u0a81\u0a82\u0abc\u0ac1-\u0ac5\u0ac7\u0ac8\u0acd\u0ae2\u0ae3\u0b01\u0b3c\u0b3f\u0b41-\u0b43\u0b4d\u0b56\u0b82\u0bc0\u0bcd\u0c3e-\u0c40\u0c46-\u0c48\u0c4a-\u0c4d\u0c55\u0c56\u0cbc\u0cbf\u0cc6\u0ccc\u0ccd\u0ce2\u0ce3\u0d41-\u0d43\u0d4d\u0dca\u0dd2-\u0dd4\u0dd6\u0e31\u0e34-\u0e3a\u0e47-\u0e4e\u0eb1\u0eb4-\u0eb9\u0ebb\u0ebc\u0ec8-\u0ecd\u0f18\u0f19\u0f35\u0f37\u0f39\u0f71-\u0f7e\u0f80-\u0f84\u0f86\u0f87\u0f90-\u0f97\u0f99-\u0fbc\u0fc6\u102d-\u1030\u1032\u1036\u1037\u1039\u1058\u1059\u135f\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17b7-\u17bd\u17c6\u17c9-\u17d3\u17dd\u180b-\u180d\u18a9\u1920-\u1922\u1927\u1928\u1932\u1939-\u193b\u1a17\u1a18\u1b00-\u1b03\u1b34\u1b36-\u1b3a\u1b3c\u1b42\u1b6b-\u1b73\u1dc0-\u1dca\u1dfe\u1dff\u20d0-\u20dc\u20e1\u20e5-\u20ef\u302a-\u302f\u3099\u309a\ua806\ua80b\ua825\ua826\ufb1e\ufe00-\ufe0f\ufe20-\ufe23]",
      Ps: "[\u0028\u005b\u007b\u0f3a\u0f3c\u169b\u201a\u201e\u2045\u207d\u208d\u2329\u2768\u276a\u276c\u276e\u2770\u2772\u2774\u27c5\u27e6\u27e8\u27ea\u2983\u2985\u2987\u2989\u298b\u298d\u298f\u2991\u2993\u2995\u2997\u29d8\u29da\u29fc\u3008\u300a\u300c\u300e\u3010\u3014\u3016\u3018\u301a\u301d\ufd3e\ufe17\ufe35\ufe37\ufe39\ufe3b\ufe3d\ufe3f\ufe41\ufe43\ufe47\ufe59\ufe5b\ufe5d\uff08\uff3b\uff5b\uff5f\uff62]",
      Cc: "[\u0000-\u001f\u007f-\u009f]",
      Cf: "[\u00ad\u0600-\u0603\u06dd\u070f\u17b4\u17b5\u200b-\u200f\u202a-\u202e\u2060-\u2063\u206a-\u206f\ufeff\ufff9-\ufffb]",
      Ll: "[\u0061-\u007a\u00aa\u00b5\u00ba\u00df-\u00f6\u00f8-\u00ff\u0101\u0103\u0105\u0107\u0109\u010b\u010d\u010f\u0111\u0113\u0115\u0117\u0119\u011b\u011d\u011f\u0121\u0123\u0125\u0127\u0129\u012b\u012d\u012f\u0131\u0133\u0135\u0137\u0138\u013a\u013c\u013e\u0140\u0142\u0144\u0146\u0148\u0149\u014b\u014d\u014f\u0151\u0153\u0155\u0157\u0159\u015b\u015d\u015f\u0161\u0163\u0165\u0167\u0169\u016b\u016d\u016f\u0171\u0173\u0175\u0177\u017a\u017c\u017e-\u0180\u0183\u0185\u0188\u018c\u018d\u0192\u0195\u0199-\u019b\u019e\u01a1\u01a3\u01a5\u01a8\u01aa\u01ab\u01ad\u01b0\u01b4\u01b6\u01b9\u01ba\u01bd-\u01bf\u01c6\u01c9\u01cc\u01ce\u01d0\u01d2\u01d4\u01d6\u01d8\u01da\u01dc\u01dd\u01df\u01e1\u01e3\u01e5\u01e7\u01e9\u01eb\u01ed\u01ef\u01f0\u01f3\u01f5\u01f9\u01fb\u01fd\u01ff\u0201\u0203\u0205\u0207\u0209\u020b\u020d\u020f\u0211\u0213\u0215\u0217\u0219\u021b\u021d\u021f\u0221\u0223\u0225\u0227\u0229\u022b\u022d\u022f\u0231\u0233-\u0239\u023c\u023f\u0240\u0242\u0247\u0249\u024b\u024d\u024f-\u0293\u0295-\u02af\u037b-\u037d\u0390\u03ac-\u03ce\u03d0\u03d1\u03d5-\u03d7\u03d9\u03db\u03dd\u03df\u03e1\u03e3\u03e5\u03e7\u03e9\u03eb\u03ed\u03ef-\u03f3\u03f5\u03f8\u03fb\u03fc\u0430-\u045f\u0461\u0463\u0465\u0467\u0469\u046b\u046d\u046f\u0471\u0473\u0475\u0477\u0479\u047b\u047d\u047f\u0481\u048b\u048d\u048f\u0491\u0493\u0495\u0497\u0499\u049b\u049d\u049f\u04a1\u04a3\u04a5\u04a7\u04a9\u04ab\u04ad\u04af\u04b1\u04b3\u04b5\u04b7\u04b9\u04bb\u04bd\u04bf\u04c2\u04c4\u04c6\u04c8\u04ca\u04cc\u04ce\u04cf\u04d1\u04d3\u04d5\u04d7\u04d9\u04db\u04dd\u04df\u04e1\u04e3\u04e5\u04e7\u04e9\u04eb\u04ed\u04ef\u04f1\u04f3\u04f5\u04f7\u04f9\u04fb\u04fd\u04ff\u0501\u0503\u0505\u0507\u0509\u050b\u050d\u050f\u0511\u0513\u0561-\u0587\u1d00-\u1d2b\u1d62-\u1d77\u1d79-\u1d9a\u1e01\u1e03\u1e05\u1e07\u1e09\u1e0b\u1e0d\u1e0f\u1e11\u1e13\u1e15\u1e17\u1e19\u1e1b\u1e1d\u1e1f\u1e21\u1e23\u1e25\u1e27\u1e29\u1e2b\u1e2d\u1e2f\u1e31\u1e33\u1e35\u1e37\u1e39\u1e3b\u1e3d\u1e3f\u1e41\u1e43\u1e45\u1e47\u1e49\u1e4b\u1e4d\u1e4f\u1e51\u1e53\u1e55\u1e57\u1e59\u1e5b\u1e5d\u1e5f\u1e61\u1e63\u1e65\u1e67\u1e69\u1e6b\u1e6d\u1e6f\u1e71\u1e73\u1e75\u1e77\u1e79\u1e7b\u1e7d\u1e7f\u1e81\u1e83\u1e85\u1e87\u1e89\u1e8b\u1e8d\u1e8f\u1e91\u1e93\u1e95-\u1e9b\u1ea1\u1ea3\u1ea5\u1ea7\u1ea9\u1eab\u1ead\u1eaf\u1eb1\u1eb3\u1eb5\u1eb7\u1eb9\u1ebb\u1ebd\u1ebf\u1ec1\u1ec3\u1ec5\u1ec7\u1ec9\u1ecb\u1ecd\u1ecf\u1ed1\u1ed3\u1ed5\u1ed7\u1ed9\u1edb\u1edd\u1edf\u1ee1\u1ee3\u1ee5\u1ee7\u1ee9\u1eeb\u1eed\u1eef\u1ef1\u1ef3\u1ef5\u1ef7\u1ef9\u1f00-\u1f07\u1f10-\u1f15\u1f20-\u1f27\u1f30-\u1f37\u1f40-\u1f45\u1f50-\u1f57\u1f60-\u1f67\u1f70-\u1f7d\u1f80-\u1f87\u1f90-\u1f97\u1fa0-\u1fa7\u1fb0-\u1fb4\u1fb6\u1fb7\u1fbe\u1fc2-\u1fc4\u1fc6\u1fc7\u1fd0-\u1fd3\u1fd6\u1fd7\u1fe0-\u1fe7\u1ff2-\u1ff4\u1ff6\u1ff7\u2071\u207f\u210a\u210e\u210f\u2113\u212f\u2134\u2139\u213c\u213d\u2146-\u2149\u214e\u2184\u2c30-\u2c5e\u2c61\u2c65\u2c66\u2c68\u2c6a\u2c6c\u2c74\u2c76\u2c77\u2c81\u2c83\u2c85\u2c87\u2c89\u2c8b\u2c8d\u2c8f\u2c91\u2c93\u2c95\u2c97\u2c99\u2c9b\u2c9d\u2c9f\u2ca1\u2ca3\u2ca5\u2ca7\u2ca9\u2cab\u2cad\u2caf\u2cb1\u2cb3\u2cb5\u2cb7\u2cb9\u2cbb\u2cbd\u2cbf\u2cc1\u2cc3\u2cc5\u2cc7\u2cc9\u2ccb\u2ccd\u2ccf\u2cd1\u2cd3\u2cd5\u2cd7\u2cd9\u2cdb\u2cdd\u2cdf\u2ce1\u2ce3\u2ce4\u2d00-\u2d25\ufb00-\ufb06\ufb13-\ufb17\uff41-\uff5a]",
      Lm: "[\u02b0-\u02c1\u02c6-\u02d1\u02e0-\u02e4\u02ee\u037a\u0559\u0640\u06e5\u06e6\u07f4\u07f5\u07fa\u0e46\u0ec6\u10fc\u17d7\u1843\u1d2c-\u1d61\u1d78\u1d9b-\u1dbf\u2090-\u2094\u2d6f\u3005\u3031-\u3035\u303b\u309d\u309e\u30fc-\u30fe\ua015\ua717-\ua71a\uff70\uff9e\uff9f]",
      Lo: "[\u01bb\u01c0-\u01c3\u0294\u05d0-\u05ea\u05f0-\u05f2\u0621-\u063a\u0641-\u064a\u066e\u066f\u0671-\u06d3\u06d5\u06ee\u06ef\u06fa-\u06fc\u06ff\u0710\u0712-\u072f\u074d-\u076d\u0780-\u07a5\u07b1\u07ca-\u07ea\u0904-\u0939\u093d\u0950\u0958-\u0961\u097b-\u097f\u0985-\u098c\u098f\u0990\u0993-\u09a8\u09aa-\u09b0\u09b2\u09b6-\u09b9\u09bd\u09ce\u09dc\u09dd\u09df-\u09e1\u09f0\u09f1\u0a05-\u0a0a\u0a0f\u0a10\u0a13-\u0a28\u0a2a-\u0a30\u0a32\u0a33\u0a35\u0a36\u0a38\u0a39\u0a59-\u0a5c\u0a5e\u0a72-\u0a74\u0a85-\u0a8d\u0a8f-\u0a91\u0a93-\u0aa8\u0aaa-\u0ab0\u0ab2\u0ab3\u0ab5-\u0ab9\u0abd\u0ad0\u0ae0\u0ae1\u0b05-\u0b0c\u0b0f\u0b10\u0b13-\u0b28\u0b2a-\u0b30\u0b32\u0b33\u0b35-\u0b39\u0b3d\u0b5c\u0b5d\u0b5f-\u0b61\u0b71\u0b83\u0b85-\u0b8a\u0b8e-\u0b90\u0b92-\u0b95\u0b99\u0b9a\u0b9c\u0b9e\u0b9f\u0ba3\u0ba4\u0ba8-\u0baa\u0bae-\u0bb9\u0c05-\u0c0c\u0c0e-\u0c10\u0c12-\u0c28\u0c2a-\u0c33\u0c35-\u0c39\u0c60\u0c61\u0c85-\u0c8c\u0c8e-\u0c90\u0c92-\u0ca8\u0caa-\u0cb3\u0cb5-\u0cb9\u0cbd\u0cde\u0ce0\u0ce1\u0d05-\u0d0c\u0d0e-\u0d10\u0d12-\u0d28\u0d2a-\u0d39\u0d60\u0d61\u0d85-\u0d96\u0d9a-\u0db1\u0db3-\u0dbb\u0dbd\u0dc0-\u0dc6\u0e01-\u0e30\u0e32\u0e33\u0e40-\u0e45\u0e81\u0e82\u0e84\u0e87\u0e88\u0e8a\u0e8d\u0e94-\u0e97\u0e99-\u0e9f\u0ea1-\u0ea3\u0ea5\u0ea7\u0eaa\u0eab\u0ead-\u0eb0\u0eb2\u0eb3\u0ebd\u0ec0-\u0ec4\u0edc\u0edd\u0f00\u0f40-\u0f47\u0f49-\u0f6a\u0f88-\u0f8b\u1000-\u1021\u1023-\u1027\u1029\u102a\u1050-\u1055\u10d0-\u10fa\u1100-\u1159\u115f-\u11a2\u11a8-\u11f9\u1200-\u1248\u124a-\u124d\u1250-\u1256\u1258\u125a-\u125d\u1260-\u1288\u128a-\u128d\u1290-\u12b0\u12b2-\u12b5\u12b8-\u12be\u12c0\u12c2-\u12c5\u12c8-\u12d6\u12d8-\u1310\u1312-\u1315\u1318-\u135a\u1380-\u138f\u13a0-\u13f4\u1401-\u166c\u166f-\u1676\u1681-\u169a\u16a0-\u16ea\u1700-\u170c\u170e-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176c\u176e-\u1770\u1780-\u17b3\u17dc\u1820-\u1842\u1844-\u1877\u1880-\u18a8\u1900-\u191c\u1950-\u196d\u1970-\u1974\u1980-\u19a9\u19c1-\u19c7\u1a00-\u1a16\u1b05-\u1b33\u1b45-\u1b4b\u2135-\u2138\u2d30-\u2d65\u2d80-\u2d96\u2da0-\u2da6\u2da8-\u2dae\u2db0-\u2db6\u2db8-\u2dbe\u2dc0-\u2dc6\u2dc8-\u2dce\u2dd0-\u2dd6\u2dd8-\u2dde\u3006\u303c\u3041-\u3096\u309f\u30a1-\u30fa\u30ff\u3105-\u312c\u3131-\u318e\u31a0-\u31b7\u31f0-\u31ff\u3400\u4db5\u4e00\u9fbb\ua000-\ua014\ua016-\ua48c\ua800\ua801\ua803-\ua805\ua807-\ua80a\ua80c-\ua822\ua840-\ua873\uac00\ud7a3\uf900-\ufa2d\ufa30-\ufa6a\ufa70-\ufad9\ufb1d\ufb1f-\ufb28\ufb2a-\ufb36\ufb38-\ufb3c\ufb3e\ufb40\ufb41\ufb43\ufb44\ufb46-\ufbb1\ufbd3-\ufd3d\ufd50-\ufd8f\ufd92-\ufdc7\ufdf0-\ufdfb\ufe70-\ufe74\ufe76-\ufefc\uff66-\uff6f\uff71-\uff9d\uffa0-\uffbe\uffc2-\uffc7\uffca-\uffcf\uffd2-\uffd7\uffda-\uffdc]",
      Co: "[\ue000\uf8ff]",
      Nd: "[\u0030-\u0039\u0660-\u0669\u06f0-\u06f9\u07c0-\u07c9\u0966-\u096f\u09e6-\u09ef\u0a66-\u0a6f\u0ae6-\u0aef\u0b66-\u0b6f\u0be6-\u0bef\u0c66-\u0c6f\u0ce6-\u0cef\u0d66-\u0d6f\u0e50-\u0e59\u0ed0-\u0ed9\u0f20-\u0f29\u1040-\u1049\u17e0-\u17e9\u1810-\u1819\u1946-\u194f\u19d0-\u19d9\u1b50-\u1b59\uff10-\uff19]",
      Lt: "[\u01c5\u01c8\u01cb\u01f2\u1f88-\u1f8f\u1f98-\u1f9f\u1fa8-\u1faf\u1fbc\u1fcc\u1ffc]",
      Lu: "[\u0041-\u005a\u00c0-\u00d6\u00d8-\u00de\u0100\u0102\u0104\u0106\u0108\u010a\u010c\u010e\u0110\u0112\u0114\u0116\u0118\u011a\u011c\u011e\u0120\u0122\u0124\u0126\u0128\u012a\u012c\u012e\u0130\u0132\u0134\u0136\u0139\u013b\u013d\u013f\u0141\u0143\u0145\u0147\u014a\u014c\u014e\u0150\u0152\u0154\u0156\u0158\u015a\u015c\u015e\u0160\u0162\u0164\u0166\u0168\u016a\u016c\u016e\u0170\u0172\u0174\u0176\u0178\u0179\u017b\u017d\u0181\u0182\u0184\u0186\u0187\u0189-\u018b\u018e-\u0191\u0193\u0194\u0196-\u0198\u019c\u019d\u019f\u01a0\u01a2\u01a4\u01a6\u01a7\u01a9\u01ac\u01ae\u01af\u01b1-\u01b3\u01b5\u01b7\u01b8\u01bc\u01c4\u01c7\u01ca\u01cd\u01cf\u01d1\u01d3\u01d5\u01d7\u01d9\u01db\u01de\u01e0\u01e2\u01e4\u01e6\u01e8\u01ea\u01ec\u01ee\u01f1\u01f4\u01f6-\u01f8\u01fa\u01fc\u01fe\u0200\u0202\u0204\u0206\u0208\u020a\u020c\u020e\u0210\u0212\u0214\u0216\u0218\u021a\u021c\u021e\u0220\u0222\u0224\u0226\u0228\u022a\u022c\u022e\u0230\u0232\u023a\u023b\u023d\u023e\u0241\u0243-\u0246\u0248\u024a\u024c\u024e\u0386\u0388-\u038a\u038c\u038e\u038f\u0391-\u03a1\u03a3-\u03ab\u03d2-\u03d4\u03d8\u03da\u03dc\u03de\u03e0\u03e2\u03e4\u03e6\u03e8\u03ea\u03ec\u03ee\u03f4\u03f7\u03f9\u03fa\u03fd-\u042f\u0460\u0462\u0464\u0466\u0468\u046a\u046c\u046e\u0470\u0472\u0474\u0476\u0478\u047a\u047c\u047e\u0480\u048a\u048c\u048e\u0490\u0492\u0494\u0496\u0498\u049a\u049c\u049e\u04a0\u04a2\u04a4\u04a6\u04a8\u04aa\u04ac\u04ae\u04b0\u04b2\u04b4\u04b6\u04b8\u04ba\u04bc\u04be\u04c0\u04c1\u04c3\u04c5\u04c7\u04c9\u04cb\u04cd\u04d0\u04d2\u04d4\u04d6\u04d8\u04da\u04dc\u04de\u04e0\u04e2\u04e4\u04e6\u04e8\u04ea\u04ec\u04ee\u04f0\u04f2\u04f4\u04f6\u04f8\u04fa\u04fc\u04fe\u0500\u0502\u0504\u0506\u0508\u050a\u050c\u050e\u0510\u0512\u0531-\u0556\u10a0-\u10c5\u1e00\u1e02\u1e04\u1e06\u1e08\u1e0a\u1e0c\u1e0e\u1e10\u1e12\u1e14\u1e16\u1e18\u1e1a\u1e1c\u1e1e\u1e20\u1e22\u1e24\u1e26\u1e28\u1e2a\u1e2c\u1e2e\u1e30\u1e32\u1e34\u1e36\u1e38\u1e3a\u1e3c\u1e3e\u1e40\u1e42\u1e44\u1e46\u1e48\u1e4a\u1e4c\u1e4e\u1e50\u1e52\u1e54\u1e56\u1e58\u1e5a\u1e5c\u1e5e\u1e60\u1e62\u1e64\u1e66\u1e68\u1e6a\u1e6c\u1e6e\u1e70\u1e72\u1e74\u1e76\u1e78\u1e7a\u1e7c\u1e7e\u1e80\u1e82\u1e84\u1e86\u1e88\u1e8a\u1e8c\u1e8e\u1e90\u1e92\u1e94\u1ea0\u1ea2\u1ea4\u1ea6\u1ea8\u1eaa\u1eac\u1eae\u1eb0\u1eb2\u1eb4\u1eb6\u1eb8\u1eba\u1ebc\u1ebe\u1ec0\u1ec2\u1ec4\u1ec6\u1ec8\u1eca\u1ecc\u1ece\u1ed0\u1ed2\u1ed4\u1ed6\u1ed8\u1eda\u1edc\u1ede\u1ee0\u1ee2\u1ee4\u1ee6\u1ee8\u1eea\u1eec\u1eee\u1ef0\u1ef2\u1ef4\u1ef6\u1ef8\u1f08-\u1f0f\u1f18-\u1f1d\u1f28-\u1f2f\u1f38-\u1f3f\u1f48-\u1f4d\u1f59\u1f5b\u1f5d\u1f5f\u1f68-\u1f6f\u1fb8-\u1fbb\u1fc8-\u1fcb\u1fd8-\u1fdb\u1fe8-\u1fec\u1ff8-\u1ffb\u2102\u2107\u210b-\u210d\u2110-\u2112\u2115\u2119-\u211d\u2124\u2126\u2128\u212a-\u212d\u2130-\u2133\u213e\u213f\u2145\u2183\u2c00-\u2c2e\u2c60\u2c62-\u2c64\u2c67\u2c69\u2c6b\u2c75\u2c80\u2c82\u2c84\u2c86\u2c88\u2c8a\u2c8c\u2c8e\u2c90\u2c92\u2c94\u2c96\u2c98\u2c9a\u2c9c\u2c9e\u2ca0\u2ca2\u2ca4\u2ca6\u2ca8\u2caa\u2cac\u2cae\u2cb0\u2cb2\u2cb4\u2cb6\u2cb8\u2cba\u2cbc\u2cbe\u2cc0\u2cc2\u2cc4\u2cc6\u2cc8\u2cca\u2ccc\u2cce\u2cd0\u2cd2\u2cd4\u2cd6\u2cd8\u2cda\u2cdc\u2cde\u2ce0\u2ce2\uff21-\uff3a]",
      Cs: "[\ud800\udb7f\udb80\udbff\udc00\udfff]",
      Zl: "[\u2028]",
      Nl: "[\u16ee-\u16f0\u2160-\u2182\u3007\u3021-\u3029\u3038-\u303a]",
      Zp: "[\u2029]",
      No: "[\u00b2\u00b3\u00b9\u00bc-\u00be\u09f4-\u09f9\u0bf0-\u0bf2\u0f2a-\u0f33\u1369-\u137c\u17f0-\u17f9\u2070\u2074-\u2079\u2080-\u2089\u2153-\u215f\u2460-\u249b\u24ea-\u24ff\u2776-\u2793\u2cfd\u3192-\u3195\u3220-\u3229\u3251-\u325f\u3280-\u3289\u32b1-\u32bf]",
      Zs: "[\u0020\u00a0\u1680\u180e\u2000-\u200a\u202f\u205f\u3000]",
      Sc: "[\u0024\u00a2-\u00a5\u060b\u09f2\u09f3\u0af1\u0bf9\u0e3f\u17db\u20a0-\u20b5\ufdfc\ufe69\uff04\uffe0\uffe1\uffe5\uffe6]",
      Pc: "[\u005f\u203f\u2040\u2054\ufe33\ufe34\ufe4d-\ufe4f\uff3f]",
      Pd: "[\u002d\u058a\u1806\u2010-\u2015\u2e17\u301c\u3030\u30a0\ufe31\ufe32\ufe58\ufe63\uff0d]",
      Pe: "[\u0029\u005d\u007d\u0f3b\u0f3d\u169c\u2046\u207e\u208e\u232a\u2769\u276b\u276d\u276f\u2771\u2773\u2775\u27c6\u27e7\u27e9\u27eb\u2984\u2986\u2988\u298a\u298c\u298e\u2990\u2992\u2994\u2996\u2998\u29d9\u29db\u29fd\u3009\u300b\u300d\u300f\u3011\u3015\u3017\u3019\u301b\u301e\u301f\ufd3f\ufe18\ufe36\ufe38\ufe3a\ufe3c\ufe3e\ufe40\ufe42\ufe44\ufe48\ufe5a\ufe5c\ufe5e\uff09\uff3d\uff5d\uff60\uff63]",
      Pf: "[\u00bb\u2019\u201d\u203a\u2e03\u2e05\u2e0a\u2e0d\u2e1d]",
      Me: "[\u0488\u0489\u06de\u20dd-\u20e0\u20e2-\u20e4]",
      Mc: "[\u0903\u093e-\u0940\u0949-\u094c\u0982\u0983\u09be-\u09c0\u09c7\u09c8\u09cb\u09cc\u09d7\u0a03\u0a3e-\u0a40\u0a83\u0abe-\u0ac0\u0ac9\u0acb\u0acc\u0b02\u0b03\u0b3e\u0b40\u0b47\u0b48\u0b4b\u0b4c\u0b57\u0bbe\u0bbf\u0bc1\u0bc2\u0bc6-\u0bc8\u0bca-\u0bcc\u0bd7\u0c01-\u0c03\u0c41-\u0c44\u0c82\u0c83\u0cbe\u0cc0-\u0cc4\u0cc7\u0cc8\u0cca\u0ccb\u0cd5\u0cd6\u0d02\u0d03\u0d3e-\u0d40\u0d46-\u0d48\u0d4a-\u0d4c\u0d57\u0d82\u0d83\u0dcf-\u0dd1\u0dd8-\u0ddf\u0df2\u0df3\u0f3e\u0f3f\u0f7f\u102c\u1031\u1038\u1056\u1057\u17b6\u17be-\u17c5\u17c7\u17c8\u1923-\u1926\u1929-\u192b\u1930\u1931\u1933-\u1938\u19b0-\u19c0\u19c8\u19c9\u1a19-\u1a1b\u1b04\u1b35\u1b3b\u1b3d-\u1b41\u1b43\u1b44\ua802\ua823\ua824\ua827]",
    };
    /* Also supports the general category (only the first letter) */
    const firstLetters = {};
    for (var p in unicodeCategories) {
      if (firstLetters[p[0]])
        firstLetters[p[0]] =
          unicodeCategories[p].substring(0, unicodeCategories[p].length - 1) +
          firstLetters[p[0]].substring(1);
      else firstLetters[p[0]] = unicodeCategories[p];
    }
    for (var p in firstLetters) unicodeCategories[p] = firstLetters[p];

    /* Gets a regex written in a dialect that supports unicode categories and translates it to a dialect supported by JavaScript. */
    return function (regexpString) {
      let modifiers = "";
      if (regexpString instanceof RegExp) {
        modifiers =
          (regexpString.global ? "g" : "") +
          (regexpString.ignoreCase ? "i" : "") +
          (regexpString.multiline ? "m" : "");
        regexpString = regexpString.source;
      }
      regexpString = regexpString.replace(
        /\\p\{(..?)\}/g,
        function (match, group) {
          return unicodeCategories[group] || match;
        }
      );
      return new RegExp(regexpString, modifiers);
    };
  })(),

  safeResponse: new (function () {
    const validAttrs = ["class", "id", "href", "style"];

    this.__removeInvalidAttributes = function (target) {
      let attrs = target.attributes,
        currentAttr;

      for (let i = attrs.length - 1; i >= 0; i--) {
        currentAttr = attrs[i].name;

        if (attrs[i].specified && validAttrs.indexOf(currentAttr) === -1) {
          target.removeAttribute(currentAttr);
        }

        if (
          currentAttr === "href" &&
          /javascript[:]/gi.test(target.getAttribute("href"))
        ) {
          target.parentNode.removeChild(target);
        }
      }
    };

    this.__cleanDomString = function (data) {
      const parser = new DOMParser();
      const tmpDom = parser.parseFromString(data, "text/html").body;

      let list, current, currentHref;

      list = tmpDom.querySelectorAll("script,img");

      for (let i = list.length - 1; i >= 0; i--) {
        current = list[i];
        current.parentNode.removeChild(current);
      }

      list = tmpDom.getElementsByTagName("*");

      for (let i = list.length - 1; i >= 0; i--) {
        parent.__removeInvalidAttributes(list[i]);
      }

      return tmpDom.innerHTML;
    };

    return {
      cleanDomString: function (html) {
        return parent.__cleanDomString(html);
      },
    };
  })(),
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (string);


/***/ }),

/***/ "./src/ext/time.js":
/*!*************************!*\
  !*** ./src/ext/time.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const timeExt = {
  beautify: function (stamp) {
    return new Date(stamp)
      .toLocaleString()
      .replace(/(\:([0-9]+))(\:([0-9]+))/, "$1");
  },
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (timeExt);


/***/ }),

/***/ "./src/ext/tpl.js":
/*!************************!*\
  !*** ./src/ext/tpl.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "compile": () => (/* binding */ compile)
/* harmony export */ });
/* Kumquat Extension - Tpl
 *
 **/

const parseHtml = function (h) {
  return h.replace(/&lt;/gi, "<").replace(/&gt;/gi, ">");
};

function compile(str, data) {
  if (!str) {
    return "";
  }
  data = data || {};
  str = parseHtml(str);

  for (const key in data) {
    str = str
      .replace(new RegExp("<%=" + key + "%>", "g"), data[key])
      .replace(new RegExp("<%= " + key + " %>", "g"), data[key])
      .replace(new RegExp("<-= " + key + " %>", "g"), data[key])
      .replace(new RegExp("<-=" + key + "%>", "g"), data[key]);
  }

  return str;
}


/***/ }),

/***/ "./src/ext/translate.js":
/*!******************************!*\
  !*** ./src/ext/translate.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kumquat_polyfill */ "./src/ext/kumquat_polyfill.js");
/* harmony import */ var _ui_views_multi_variant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ui_views/multi_variant */ "./src/ui_views/multi_variant.js");



const translate = {
  getTranslation: (message, callback) => {
    chrome.runtime.sendMessage(
      {
        action: _kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.processCall("app", "translate", "get"),
        ...message,
      },
      async (data) => {
        if (data.parseArgs) {
          const parsed = await translate.parseReceivedTranslation(...data.parseArgs);
          // this is kinda useless, but was present in the original func
          parsed[6] = data.to;
          data.code = parsed[1];
          delete data.parseArgs;
          callback(data);
        } else {
          callback(data);
        }
      }
    );
  },
  // According to current settings (a single word/phrase or a bunch of variants)
  parseReceivedTranslation: async (
    json,
    mainAndVariantsSeparately,
    prefix,
    locales,
    complexSingle
  ) => {
    if (json[0]) {
      let response = [
        json[0],
        await _ui_views_multi_variant__WEBPACK_IMPORTED_MODULE_1__["default"].wrap(
          true,
          json,
          mainAndVariantsSeparately,
          prefix,
          locales
        ),
      ];
      if (mainAndVariantsSeparately) {
        const tmp = response;
        response = [tmp[0], json[3], tmp[1]];
      }

      return response;
    } else {
      return [
        false,
        await _ui_views_multi_variant__WEBPACK_IMPORTED_MODULE_1__["default"].wrap(
          false,
          json,
          mainAndVariantsSeparately,
          prefix,
          locales,
          complexSingle
        ),
      ];
    }
  },
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (translate);


/***/ }),

/***/ "./src/ext/util/langUtil.js":
/*!**********************************!*\
  !*** ./src/ext/util/langUtil.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getBingSyncedLang": () => (/* binding */ getBingSyncedLang),
/* harmony export */   "getCurrentUiLang": () => (/* binding */ getCurrentUiLang),
/* harmony export */   "getDetectedLang": () => (/* binding */ getDetectedLang),
/* harmony export */   "getFromLang": () => (/* binding */ getFromLang),
/* harmony export */   "getLangKeyOrAuto": () => (/* binding */ getLangKeyOrAuto),
/* harmony export */   "getLangNameByKey": () => (/* binding */ getLangNameByKey),
/* harmony export */   "getToLang": () => (/* binding */ getToLang),
/* harmony export */   "isFromLang": () => (/* binding */ isFromLang),
/* harmony export */   "isHieroglyphical": () => (/* binding */ isHieroglyphical),
/* harmony export */   "isRtl": () => (/* binding */ isRtl),
/* harmony export */   "isToLang": () => (/* binding */ isToLang),
/* harmony export */   "setFromLang": () => (/* binding */ setFromLang),
/* harmony export */   "setToLang": () => (/* binding */ setToLang),
/* harmony export */   "simplifyLangCode": () => (/* binding */ simplifyLangCode),
/* harmony export */   "supportsTranslit": () => (/* binding */ supportsTranslit)
/* harmony export */ });
/* harmony import */ var _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../src/ext/kumquat_polyfill */ "./src/ext/kumquat_polyfill.js");
/* harmony import */ var _src_ext_const_lang__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../src/ext/const/lang */ "./src/ext/const/lang.js");
/* harmony import */ var _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../src/ext/util/storageUtil */ "./src/ext/util/storageUtil.js");




// Almost the same object as `ke.ext.const.lang.list` is, but this one is reversed.
// In other words, language code here appears as a key, not value.

var LANG_LIST_REVERSED = {};

var SUPPORT_TRANSLIT =
  "ar,hy,bn,be,bg,zh-CN,zh-TW,ka,el,gu,hi,ja,kn,kk,km,ko,lo,mk,ml,mr,mn,my,my,me,pa,ru,sr,si,tg,ta,te,th,uk,yi".split(
    ","
  );
var RTL = ["ar", "yi", "ur"];
var HIEROGLYPH = ["zh-TW", "zh-CN"];

var bing_langs = {
  auto: "",
  bs: "bs-Latn",
  sr: "sr-Cyrl",
  "zh-TW": "zh-CHT",
  "zh-CN": "zh-CHS",
};

function supportsTranslit(lang) {
  return SUPPORT_TRANSLIT.includes(lang);
}

function isHieroglyphical(lang) {
  return HIEROGLYPH.includes(lang);
}

function isRtl(lang) {
  return RTL.includes(lang);
}

function getCurrentUiLang(simplify) {
  return _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.getCurrentLocale(simplify);
}

async function getFromLang() {
  return await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_2__["default"].getVal("from_lang");
}

async function getToLang() {
  return await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_2__["default"].getVal("to_lang");
}

async function setFromLang(c) {
  await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_2__["default"].setVal("from_lang", c);
}

async function setToLang(c) {
  await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_2__["default"].setVal("to_lang", c);
}

async function isFromLang(c) {
  return c === (await getFromLang());
}

async function isToLang(c) {
  return c === (await getToLang());
}

function simplifyLangCode(c) {
  return _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.simplifyLC(c);
}

function getDetectedLang(input, callback) {
  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.idb.exists(
    "it",
    "history",
    ["input", input],
    {
      l_from: "auto",
    },
    function (exists, primaryKey, existing_obj) {
      if (!exists) {
        callback(null);
        return;
      }
      callback(existing_obj.it_resp[5]);
    }
  );
}

function getLangKeyOrAuto(lang_name) {
  return _src_ext_const_lang__WEBPACK_IMPORTED_MODULE_1__.supportedLangs[lang_name] || "auto";
}

function getLangNameByKey(k) {
  if (k in LANG_LIST_REVERSED) {
    return LANG_LIST_REVERSED[k];
  }

  for (var key in _src_ext_const_lang__WEBPACK_IMPORTED_MODULE_1__.supportedLangs) {
    if (k === _src_ext_const_lang__WEBPACK_IMPORTED_MODULE_1__.supportedLangs[key]) {
      LANG_LIST_REVERSED[k] = key;
      return key;
    }
  }

  return null;
}

function getBingSyncedLang(lang) {
  return bing_langs[lang] != undefined ? bing_langs[lang] : lang;
}


/***/ }),

/***/ "./src/ext/util/selectorsUtil.js":
/*!***************************************!*\
  !*** ./src/ext/util/selectorsUtil.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getHistoryItemId": () => (/* binding */ getHistoryItemId),
/* harmony export */   "getHistoryOriginalLang": () => (/* binding */ getHistoryOriginalLang),
/* harmony export */   "getHistoryToLang": () => (/* binding */ getHistoryToLang),
/* harmony export */   "getSwitchFlagId": () => (/* binding */ getSwitchFlagId),
/* harmony export */   "getTooltipWrapRecursively": () => (/* binding */ getTooltipWrapRecursively),
/* harmony export */   "isMainVariantPlaque": () => (/* binding */ isMainVariantPlaque)
/* harmony export */ });
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../src/ext/kumquat_polyfill */ "./src/ext/kumquat_polyfill.js");



var MAX_STEPS = 100;

function getHistoryItemId(e) {
  var steps = 0;
  var currentElement = jquery__WEBPACK_IMPORTED_MODULE_0___default()(e);

  while (!currentElement.hasClass("history-item-wrap") && ++steps < MAX_STEPS) {
    currentElement = currentElement.parent();
  }

  return +currentElement.data("id");
}

function isMainVariantPlaque(e) {
  var isPlaque = false;

  for (var i = 0; i <= 3; ++i) {
    var currentElement = jquery__WEBPACK_IMPORTED_MODULE_0___default()(e).parent(i);
    if (currentElement.hasClass("main-variant-wrap")) {
      isPlaque = true;
      break;
    }
  }

  return isPlaque;
}

function getSwitchFlagId(e) {
  return +jquery__WEBPACK_IMPORTED_MODULE_0___default()(e).attr("class").split(" ")[1].split("-")[3];
}

function getHistoryOriginalLang(e) {
  return jquery__WEBPACK_IMPORTED_MODULE_0___default()(".expanded").find(".input-particle").data("langfrom");
}

function getHistoryToLang(e) {
  return jquery__WEBPACK_IMPORTED_MODULE_0___default()(".expanded").find(".main-output-particle").data("langto");
}

function getTooltipWrapRecursively(target) {
  return jquery__WEBPACK_IMPORTED_MODULE_0___default()(target).hasClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "tooltip-main-wrap")
    ? target
    : getTooltipWrapRecursively(jquery__WEBPACK_IMPORTED_MODULE_0___default()(target).parent()[0]);
}


/***/ }),

/***/ "./src/ext/util/storageUtil.js":
/*!*************************************!*\
  !*** ./src/ext/util/storageUtil.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _const_storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../const/storage */ "./src/ext/const/storage.js");


// TODO:
// ditch stringifying JSON before saving into storage
// chrome.storage can store objects
// can let us ditch lots of redundant methods here

const arrayInsertValAction = function (n, v, a) {
  const temp = JSON.parse(localStorage[(0,_const_storage__WEBPACK_IMPORTED_MODULE_0__["default"])(n)]);
  temp[a](v);
  localStorage.setItem((0,_const_storage__WEBPACK_IMPORTED_MODULE_0__["default"])(n), JSON.stringify(temp));
};

const arrayDeleteValAction = function (n, a) {
  const temp = JSON.parse(localStorage[(0,_const_storage__WEBPACK_IMPORTED_MODULE_0__["default"])(n)]);
  temp[a]();
  localStorage.setItem((0,_const_storage__WEBPACK_IMPORTED_MODULE_0__["default"])(n), JSON.stringify(temp));
};

const storageUtils = {
  requestProStatus: function (cb) {
    this.chainRequestBackgroundOption(
      [
        { fn: "getDecodedVal", args: ["sub_data"] },
        { fn: "isTrueOption", args: ["chr_pro_flag"] },
      ],
      function (responses) {
        if (cb) {
          cb(
            responses[0].response.isSubscriptionVerified ||
              responses[1].response
          );
        }
      },
      false
    );
  },

  requestBackgroundOption: function (fn, args, cb, is_background) {
    this.chainRequestBackgroundOption(
      [{ fn: fn, args: args }],
      function (responses) {
        // console.log(fn, args, responses)
        cb && cb(responses[0].response);
      },
      is_background
    );
  },

  chainRequestBackgroundOption: function (calls, cb, is_background) {
    const responses = [];
    const promises = [];

    calls.forEach((call) => {
      if (typeof call === "object") {
        // console.log(call);
        promises.push(storageUtils[call.fn].apply(storageUtils, call.args));
      }
    });

    Promise.all(promises).then((r) => {
      r.forEach((rr) => {
        responses.push({ response: rr });
      });

      // console.log(
      //   "chainRequestBackgroundOption returns responses:",
      //   calls,
      //   responses
      // );
      cb && cb(responses);
    });
  },

  isTrueOption: async function (n) {
    // not `=== true` for compatibility with Mate <v11 values
    // previously, booleans were stored as strings
    // localStorage API was used and it only supported strings
    // Chrome Storage API is a bit smarter in this regard
    // Eventually, stringified booleans will be overriden as user changes preferences 
    const val = await this.getVal(n);
    return val === "true" || val === true;
  },

  setOptionAsBoolean: async function (n, v) {
    await this.setVal(n, v);
  },

  isActiveJsonOption: async function (n) {
    return !!JSON.parse(await this.getVal(n)).active;
  },

  setActiveJsonValueAsBoolean: async function (n, v) {
    const temp = JSON.parse(await this.getVal(n));
    temp.active = v;
    await this.setVal(n, JSON.stringify(temp));
  },

  setJsonField: async function (n, f, v) {
    const setNest = function (obj, paths, val) {
      if (paths.length > 1) {
        setNest(obj[paths.shift()], paths, val);
      } else {
        obj[paths[0]] = val;
      }
    };

    const temp = JSON.parse(localStorage[(0,_const_storage__WEBPACK_IMPORTED_MODULE_0__["default"])(n)]);
    const fields = f.split(".");
    setNest(temp, fields, v);

    const value = JSON.stringify(temp);
    localStorage.setItem((0,_const_storage__WEBPACK_IMPORTED_MODULE_0__["default"])(n), value);
    await storageUtils.setVal(n, value);
  },

  getJsonField: async function (n, f) {
    return JSON.parse(await this.getVal(n))[f];
  },

  setJsonVal: async function (n, v) {
    await this.setJsonField(n, "value", v);
  },

  getJsonVal: function (n) {
    return this.getJsonField(n, "value");
  },

  setVal: async function (n, v) {
    if (!n) {
      return;
    }
    const o = {};
    o[n.toUpperCase()] = v;
    await chrome.storage.local.set(o);
  },

  getVal: async function (n) {
    const k = n.toUpperCase();
    const v = await chrome.storage.local.get([k]);
    // console.log(n, v);
    return v[k];
  },

  encodeAndSet: async function (n, o) {
    // chrome.storage works with objects but older entires may be strings
    await this.setVal(n, JSON.stringify(o));
  },

  deleteJsonElementByKey: async function (n, key) {
    const o = await this.getDecodedVal(n);
    delete o[key];
    await storageUtils.encodeAndSet(n, o);
  },

  getArrayValLen: async function (n) {
    return (await storageUtils.getDecodedVal(n)).length;
  },

  getDecodedVal: async function (n) {
    let o = await this.getVal(n);

    if (typeof o !== "object") {
      try {
        o = JSON.parse(o);
      } catch (e) {
        console.error(
          "Failed to get and decode the following JSON object: " + n
        );
      }
    }

    return o || {};
  },

  // pushArrayVal: function (n, v) {
  //     arrayInsertValAction(n, v, 'push');
  // },

  // unshiftArrayVal: function (n, v) {
  //     arrayInsertValAction(n, v, 'unshift');
  // },

  addArrayVal: async function (n, v) {
    let temp = await storageUtils.getDecodedVal(n);

    // Init a new array in case it does not exist
    if (_.isEmpty(temp)) {
      temp = [];
    }

    temp.push(v);

    temp = temp.filter((v, i, a) => a.findIndex((v2) => v2 === v) === i);

    const value = JSON.stringify(temp);
    localStorage.setItem((0,_const_storage__WEBPACK_IMPORTED_MODULE_0__["default"])(n), value);
    await storageUtils.setVal(n, value);
  },

  popArrayVal: function (n) {
    arrayDeleteValAction(n, "pop");
  },

  // shiftArrayVal: function (n) {
  //     arrayDeleteValAction(n, 'shift');
  // },

  // shiftArrayVal: function (n, v) {
  //     var spliced;
  //     var arr = storageUtils.getDecodedVal(n);

  //     for (var i = 0, len = arr.length; i < len; ++i) {
  //         if (arr[i] === v) {
  //             spliced = arr.splice(i, 1)[0];
  //             break;
  //         }
  //     }

  //     var value = JSON.stringify(arr);
  //     localStorage.setItem(getStorageConst(n), value);
  //     storageUtils.saveValue(n, value);

  //     return spliced;
  // },

  spliceBySearch: async function (n, v) {
    let spliced = [];
    const arr = (await storageUtils.getDecodedVal(n)) || [];
    for (let i = 0; i < arr.length; ++i) {
      if (arr[i] === v) {
        spliced = arr.splice(i, 1)[0];
        break;
      }
    }

    const value = JSON.stringify(arr);
    localStorage.setItem((0,_const_storage__WEBPACK_IMPORTED_MODULE_0__["default"])(n), value);
    await storageUtils.setVal(n, value);

    return spliced;
  },

  setIntValue: async function (n, v) {
    await this.setVal(n, v);
  },

  getIntValue: async function (n) {
    // Yes, float. Despite the name some of the options are float.
    return parseFloat(await this.getVal(n));
  },

  // incrementIntValue: function (n) {
  //     var new_val = this.getIntValue(n) + 1;
  //     this.setVal(n, new_val + "");
  //     return new_val;
  // },

  isEmpty: async function (n) {
    return !(await this.getVal(n));
  },

  isEmptyArray: async function (n) {
    const v = await this.getDecodedVal(n);
    return _.isEmpty(v);
  },

  // clear: function() {
  //     for (let key in localStorage) {
  //         delete localStorage[key];
  //     }
  // },

  // isIntlMonetizationOn: function () {
  //     return this.isTrueOption('monetization') && ke.getCurrentLocale() !== 'ru';
  // }
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (storageUtils);


/***/ }),

/***/ "./src/lib/analytics.js":
/*!******************************!*\
  !*** ./src/lib/analytics.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Analytics": () => (/* binding */ Analytics),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../src/ext/util/storageUtil */ "./src/ext/util/storageUtil.js");
/* harmony import */ var _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../src/ext/kumquat_polyfill */ "./src/ext/kumquat_polyfill.js");



let client_id
    , gdpr_consent
    , MEASUREMENT_ID
    , API_SECRET;

(async function () {
  client_id = await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_0__["default"].getVal("user_id");
  gdpr_consent = await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_0__["default"].isTrueOption("gdpr_consent");

  MEASUREMENT_ID = _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getAnalyticsMeasurementId();
  API_SECRET = _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getAnalyticsApiSecret();

  // console.log(`GA4 client_id: ${client_id}`);
  // console.log(`GA4 gdpr_consent: ${gdpr_consent}`);
})();

const GA_ENDPOINT = 'https://www.google-analytics.com/mp/collect';
const GA_DEBUG_ENDPOINT = 'https://www.google-analytics.com/debug/mp/collect';

// Get via https://developers.google.com/analytics/devguides/collection/protocol/ga4/sending-events?client_type=gtag#recommended_parameters_for_reports

const DEFAULT_ENGAGEMENT_TIME_MSEC = 100;

// Duration of inactivity after which a new session is created
const SESSION_EXPIRATION_IN_MIN = 30;

class Analytics {
  constructor(debug = false) {
    this.debug = debug;
  }

  // Returns the current session id, or creates a new one if one doesn't exist or
  // the previous one has expired.
  async getOrCreateSessionId() {
    // Use storage.session because it is only in memory
    let { sessionData } = await chrome.storage.session.get('sessionData');
    const currentTimeInMs = Date.now();
    // Check if session exists and is still valid
    if (sessionData && sessionData.timestamp) {
      // Calculate how long ago the session was last updated
      const durationInMin = (currentTimeInMs - sessionData.timestamp) / 60000;
      // Check if last update lays past the session expiration threshold
      if (durationInMin > SESSION_EXPIRATION_IN_MIN) {
        // Clear old session id to start a new session
        sessionData = null;
      } else {
        // Update timestamp to keep session alive
        sessionData.timestamp = currentTimeInMs;
        await chrome.storage.session.set({ sessionData });
      }
    }
    if (!sessionData) {
      // Create and store a new session
      sessionData = {
        session_id: currentTimeInMs.toString(),
        timestamp: currentTimeInMs.toString()
      };
      await chrome.storage.session.set({ sessionData });
    }
    return sessionData.session_id;
  }

  sanitizeName(name) {
    if (!name) return '';
    // Replace invalid characters with underscores and truncate if necessary
    return name.replace(/[^a-zA-Z0-9_]/g, '_').substring(0, 40);
  }

  sanitizeParameters(params) {
    if (!params || typeof params !== 'object') return {};
  
    const sanitizedParams = {};
    for (const key in params) {
      if (params.hasOwnProperty(key)) {
        const sanitizedKey = this.sanitizeName(key);
        sanitizedParams[sanitizedKey] = params[key];
      }
    }
    return sanitizedParams;
  }

  // Fires an event with optional params. Event names must only include letters and underscores.
  async fireEvent(name, params = {}) {
    // Configure session id and engagement time if not present, for more details see:
    // https://developers.google.com/analytics/devguides/collection/protocol/ga4/sending-events?client_type=gtag#recommended_parameters_for_reports
    if (!params.session_id) {
      params.session_id = await this.getOrCreateSessionId();
    }
    if (!params.engagement_time_msec) {
      params.engagement_time_msec = DEFAULT_ENGAGEMENT_TIME_MSEC;
    }

    try {
      const response = await fetch(
        `${
          this.debug ? GA_DEBUG_ENDPOINT : GA_ENDPOINT
        }?measurement_id=${MEASUREMENT_ID}&api_secret=${API_SECRET}`,
        {
          method: 'POST',
          body: JSON.stringify({
            client_id,
            events: [
              {
                name: this.sanitizeName(name),
                params: this.sanitizeParameters(params),
              }
            ],
          })
        }
      );
      if (!this.debug) {
        return;
      }
      // console.log(await response.text());
    } catch (e) {
      console.error('Google Analytics request failed with an exception', e);
    }
  }

  // Fire a page view event.
  async firePageViewEvent(pageTitle, pageLocation, additionalParams = {}) {
    return this.fireEvent('page_view', {
      page_title: pageTitle,
      page_location: pageLocation,
      ...additionalParams
    });
  }

  // Fire an error event.
  async fireErrorEvent(error, additionalParams = {}) {
    // Note: 'error' is a reserved event name and cannot be used
    // see https://developers.google.com/analytics/devguides/collection/protocol/ga4/reference?client_type=gtag#reserved_names
    return this.fireEvent('extension_error', {
      ...error,
      ...additionalParams
    });
  }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (new Analytics());

/***/ }),

/***/ "./src/lib/confetti.js":
/*!*****************************!*\
  !*** ./src/lib/confetti.js ***!
  \*****************************/
/***/ (() => {

/**
 * Minified by jsDelivr using Terser v5.3.5.
 * Original file: /npm/canvas-confetti@1.4.0/dist/confetti.browser.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
!(function (t, e) {
  !(function t(e, n, a, i) {
    var o = !!(
      e.Worker &&
      e.Blob &&
      e.Promise &&
      e.OffscreenCanvas &&
      e.OffscreenCanvasRenderingContext2D &&
      e.HTMLCanvasElement &&
      e.HTMLCanvasElement.prototype.transferControlToOffscreen &&
      e.URL &&
      e.URL.createObjectURL
    );
    function r() {}
    function l(t) {
      var a = n.exports.Promise,
        i = void 0 !== a ? a : e.Promise;
      return "function" == typeof i ? new i(t) : (t(r, r), null);
    }
    var c,
      s,
      u,
      d,
      f,
      h,
      g,
      m,
      b =
        ((u = Math.floor(1e3 / 60)),
        (d = {}),
        (f = 0),
        "function" == typeof requestAnimationFrame &&
        "function" == typeof cancelAnimationFrame
          ? ((c = function (t) {
              var e = Math.random();
              return (
                (d[e] = requestAnimationFrame(function n(a) {
                  f === a || f + u - 1 < a
                    ? ((f = a), delete d[e], t())
                    : (d[e] = requestAnimationFrame(n));
                })),
                e
              );
            }),
            (s = function (t) {
              d[t] && cancelAnimationFrame(d[t]);
            }))
          : ((c = function (t) {
              return setTimeout(t, u);
            }),
            (s = function (t) {
              return clearTimeout(t);
            })),
        { frame: c, cancel: s }),
      v =
        ((m = {}),
        function () {
          if (h) return h;
          if (!a && o) {
            var e = [
              "var CONFETTI, SIZE = {}, module = {};",
              "(" + t.toString() + ")(this, module, true, SIZE);",
              "onmessage = function(msg) {",
              "  if (msg.data.options) {",
              "    CONFETTI(msg.data.options).then(function () {",
              "      if (msg.data.callback) {",
              "        postMessage({ callback: msg.data.callback });",
              "      }",
              "    });",
              "  } else if (msg.data.reset) {",
              "    CONFETTI.reset();",
              "  } else if (msg.data.resize) {",
              "    SIZE.width = msg.data.resize.width;",
              "    SIZE.height = msg.data.resize.height;",
              "  } else if (msg.data.canvas) {",
              "    SIZE.width = msg.data.canvas.width;",
              "    SIZE.height = msg.data.canvas.height;",
              "    CONFETTI = module.exports.create(msg.data.canvas);",
              "  }",
              "}",
            ].join("\n");
            try {
              h = new Worker(URL.createObjectURL(new Blob([e])));
            } catch (t) {
              return (
                void 0 !== typeof console &&
                  "function" == typeof console.warn &&
                  console.warn("🎊 Could not load worker", t),
                null
              );
            }
            !(function (t) {
              function e(e, n) {
                t.postMessage({ options: e || {}, callback: n });
              }
              (t.init = function (e) {
                var n = e.transferControlToOffscreen();
                t.postMessage({ canvas: n }, [n]);
              }),
                (t.fire = function (n, a, i) {
                  if (g) return e(n, null), g;
                  var o = Math.random().toString(36).slice(2);
                  return (g = l(function (a) {
                    function r(e) {
                      e.data.callback === o &&
                        (delete m[o],
                        t.removeEventListener("message", r),
                        (g = null),
                        i(),
                        a());
                    }
                    t.addEventListener("message", r),
                      e(n, o),
                      (m[o] = r.bind(null, { data: { callback: o } }));
                  }));
                }),
                (t.reset = function () {
                  for (var e in (t.postMessage({ reset: !0 }), m))
                    m[e](), delete m[e];
                });
            })(h);
          }
          return h;
        }),
      y = {
        particleCount: 50,
        angle: 90,
        spread: 45,
        startVelocity: 45,
        decay: 0.9,
        gravity: 1,
        drift: 0,
        ticks: 200,
        x: 0.5,
        y: 0.5,
        shapes: ["square", "circle"],
        zIndex: 100,
        colors: [
          "#26ccff",
          "#a25afd",
          "#ff5e7e",
          "#88ff5a",
          "#fcff42",
          "#ffa62d",
          "#ff36ff",
        ],
        disableForReducedMotion: !1,
        scalar: 1,
      };
    function p(t, e, n) {
      return (function (t, e) {
        return e ? e(t) : t;
      })(t && null != t[e] ? t[e] : y[e], n);
    }
    function M(t) {
      return t < 0 ? 0 : Math.floor(t);
    }
    function w(t) {
      return parseInt(t, 16);
    }
    function x(t) {
      return t.map(C);
    }
    function C(t) {
      var e = String(t).replace(/[^0-9a-f]/gi, "");
      return (
        e.length < 6 && (e = e[0] + e[0] + e[1] + e[1] + e[2] + e[2]),
        {
          r: w(e.substring(0, 2)),
          g: w(e.substring(2, 4)),
          b: w(e.substring(4, 6)),
        }
      );
    }
    function k(t) {
      (t.width = document.documentElement.clientWidth),
        (t.height = document.documentElement.clientHeight);
    }
    function I(t) {
      var e = t.getBoundingClientRect();
      (t.width = e.width), (t.height = e.height);
    }
    function T(t, e, n, o, r) {
      var c,
        s,
        u = e.slice(),
        d = t.getContext("2d"),
        f = l(function (e) {
          function l() {
            (c = s = null), d.clearRect(0, 0, o.width, o.height), r(), e();
          }
          (c = b.frame(function e() {
            !a ||
              (o.width === i.width && o.height === i.height) ||
              ((o.width = t.width = i.width), (o.height = t.height = i.height)),
              o.width ||
                o.height ||
                (n(t), (o.width = t.width), (o.height = t.height)),
              d.clearRect(0, 0, o.width, o.height),
              (u = u.filter(function (t) {
                return (function (t, e) {
                  (e.x += Math.cos(e.angle2D) * e.velocity + e.drift),
                    (e.y += Math.sin(e.angle2D) * e.velocity + e.gravity),
                    (e.wobble += 0.1),
                    (e.velocity *= e.decay),
                    (e.tiltAngle += 0.1),
                    (e.tiltSin = Math.sin(e.tiltAngle)),
                    (e.tiltCos = Math.cos(e.tiltAngle)),
                    (e.random = Math.random() + 5),
                    (e.wobbleX = e.x + 10 * e.scalar * Math.cos(e.wobble)),
                    (e.wobbleY = e.y + 10 * e.scalar * Math.sin(e.wobble));
                  var n = e.tick++ / e.totalTicks,
                    a = e.x + e.random * e.tiltCos,
                    i = e.y + e.random * e.tiltSin,
                    o = e.wobbleX + e.random * e.tiltCos,
                    r = e.wobbleY + e.random * e.tiltSin;
                  return (
                    (t.fillStyle =
                      "rgba(" +
                      e.color.r +
                      ", " +
                      e.color.g +
                      ", " +
                      e.color.b +
                      ", " +
                      (1 - n) +
                      ")"),
                    t.beginPath(),
                    "circle" === e.shape
                      ? t.ellipse
                        ? t.ellipse(
                            e.x,
                            e.y,
                            Math.abs(o - a) * e.ovalScalar,
                            Math.abs(r - i) * e.ovalScalar,
                            (Math.PI / 10) * e.wobble,
                            0,
                            2 * Math.PI
                          )
                        : (function (t, e, n, a, i, o, r, l, c) {
                            t.save(),
                              t.translate(e, n),
                              t.rotate(o),
                              t.scale(a, i),
                              t.arc(0, 0, 1, r, l, c),
                              t.restore();
                          })(
                            t,
                            e.x,
                            e.y,
                            Math.abs(o - a) * e.ovalScalar,
                            Math.abs(r - i) * e.ovalScalar,
                            (Math.PI / 10) * e.wobble,
                            0,
                            2 * Math.PI
                          )
                      : (t.moveTo(Math.floor(e.x), Math.floor(e.y)),
                        t.lineTo(Math.floor(e.wobbleX), Math.floor(i)),
                        t.lineTo(Math.floor(o), Math.floor(r)),
                        t.lineTo(Math.floor(a), Math.floor(e.wobbleY))),
                    t.closePath(),
                    t.fill(),
                    e.tick < e.totalTicks
                  );
                })(d, t);
              })).length
                ? (c = b.frame(e))
                : l();
          })),
            (s = l);
        });
      return {
        addFettis: function (t) {
          return (u = u.concat(t)), f;
        },
        canvas: t,
        promise: f,
        reset: function () {
          c && b.cancel(c), s && s();
        },
      };
    }
    function E(t, n) {
      var a,
        i = !t,
        r = !!p(n || {}, "resize"),
        c = p(n, "disableForReducedMotion", Boolean),
        s = o && !!p(n || {}, "useWorker") ? v() : null,
        u = i ? k : I,
        d = !(!t || !s) && !!t.__confetti_initialized,
        f =
          "function" == typeof matchMedia &&
          matchMedia("(prefers-reduced-motion)").matches;
      function h(e, n, i) {
        for (
          var o,
            r,
            l,
            c,
            s,
            d = p(e, "particleCount", M),
            f = p(e, "angle", Number),
            h = p(e, "spread", Number),
            g = p(e, "startVelocity", Number),
            m = p(e, "decay", Number),
            b = p(e, "gravity", Number),
            v = p(e, "drift", Number),
            y = p(e, "colors", x),
            w = p(e, "ticks", Number),
            C = p(e, "shapes"),
            k = p(e, "scalar"),
            I = (function (t) {
              var e = p(t, "origin", Object);
              return (e.x = p(e, "x", Number)), (e.y = p(e, "y", Number)), e;
            })(e),
            E = d,
            S = [],
            F = t.width * I.x,
            N = t.height * I.y;
          E--;

        )
          S.push(
            ((o = {
              x: F,
              y: N,
              angle: f,
              spread: h,
              startVelocity: g,
              color: y[E % y.length],
              shape:
                C[
                  ((c = 0),
                  (s = C.length),
                  Math.floor(Math.random() * (s - c)) + c)
                ],
              ticks: w,
              decay: m,
              gravity: b,
              drift: v,
              scalar: k,
            }),
            (r = void 0),
            (l = void 0),
            (r = o.angle * (Math.PI / 180)),
            (l = o.spread * (Math.PI / 180)),
            {
              x: o.x,
              y: o.y,
              wobble: 10 * Math.random(),
              velocity: 0.5 * o.startVelocity + Math.random() * o.startVelocity,
              angle2D: -r + (0.5 * l - Math.random() * l),
              tiltAngle: Math.random() * Math.PI,
              color: o.color,
              shape: o.shape,
              tick: 0,
              totalTicks: o.ticks,
              decay: o.decay,
              drift: o.drift,
              random: Math.random() + 5,
              tiltSin: 0,
              tiltCos: 0,
              wobbleX: 0,
              wobbleY: 0,
              gravity: 3 * o.gravity,
              ovalScalar: 0.6,
              scalar: o.scalar,
            })
          );
        return a ? a.addFettis(S) : (a = T(t, S, u, n, i)).promise;
      }
      function g(n) {
        var o = c || p(n, "disableForReducedMotion", Boolean),
          g = p(n, "zIndex", Number);
        if (o && f)
          return l(function (t) {
            t();
          });
        i && a
          ? (t = a.canvas)
          : i &&
            !t &&
            ((t = (function (t) {
              var e = document.createElement("canvas");
              return (
                (e.style.position = "fixed"),
                (e.style.top = "0px"),
                (e.style.left = "0px"),
                (e.style.pointerEvents = "none"),
                (e.style.zIndex = t),
                e
              );
            })(g)),
            document.body.appendChild(t)),
          r && !d && u(t);
        var m = { width: t.width, height: t.height };
        function b() {
          if (s) {
            var e = {
              getBoundingClientRect: function () {
                if (!i) return t.getBoundingClientRect();
              },
            };
            return (
              u(e),
              void s.postMessage({
                resize: { width: e.width, height: e.height },
              })
            );
          }
          m.width = m.height = null;
        }
        function v() {
          (a = null),
            r && e.removeEventListener("resize", b),
            i && t && (document.body.removeChild(t), (t = null), (d = !1));
        }
        return (
          s && !d && s.init(t),
          (d = !0),
          s && (t.__confetti_initialized = !0),
          r && e.addEventListener("resize", b, !1),
          s ? s.fire(n, m, v) : h(n, m, v)
        );
      }
      return (
        (g.reset = function () {
          s && s.reset(), a && a.reset();
        }),
        g
      );
    }
    (n.exports = E(null, { useWorker: !0, resize: !0 })),
      (n.exports.create = E);
  })(
    (function () {
      return void 0 !== t ? t : "undefined" != typeof self ? self : this || {};
    })(),
    e,
    !1
  ),
    (t.confetti = e.exports);
})(window, {});


/***/ }),

/***/ "./src/lib/contextMenu.js":
/*!********************************!*\
  !*** ./src/lib/contextMenu.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);


/*
 *contextMenu.js v 1.4.1
 *Author: Sudhanshu Yadav
 *s-yadav.github.com
 *Copyright (c) 2013-2015 Sudhanshu Yadav.
 *Dual licensed under the MIT and GPL licenses
 */
(function ($, window, document, undefined) {
  "use strict";

  $.single = (function () {
    const single = $({});
    return function (elm) {
      single[0] = elm;
      return single;
    };
  })();

  $.fn.contextMenu = function (method, selector, option) {
    //parameter fix
    if (!methods[method]) {
      option = selector;
      selector = method;
      method = "popup";
    }
    //need to check for array object
    else if (selector) {
      if (
        !(
          selector instanceof Array ||
          typeof selector === "string" ||
          selector.nodeType ||
          selector.jquery
        )
      ) {
        option = selector;
        selector = null;
      }
    }

    if (selector instanceof Array && method !== "update") {
      method = "menu";
    }

    let myoptions = option;
    if ($.inArray(method, ["menu", "popup", "close", "destroy"]) > -1) {
      option = iMethods.optionOtimizer(method, option);
      this.each(function () {
        const $this = $(this);
        myoptions = $.extend({}, $.fn.contextMenu.defaults, option);
        if (!myoptions.baseTrigger) {
          myoptions.baseTrigger = $this;
        }
        methods[method].call($this, selector, myoptions);
      });
    } else {
      methods[method].call(this, selector, myoptions);
    }
    return this;
  };
  $.fn.contextMenu.defaults = {
    triggerOn: "click", //avaliable options are all event related mouse plus enter option
    subMenuTriggerOn: "hover click",
    displayAround: "cursor", // cursor or trigger
    mouseClick: "left",
    verAdjust: 0,
    horAdjust: 0,
    top: "auto",
    left: "auto",
    closeOther: true, //to close other already opened context menu
    containment: window,
    winEventClose: true,
    position: "auto", //allowed values are top, left, bottom and right
    closeOnClick: true, //close context menu on click/ trigger of any item in menu

    //callback
    onOpen: function (data, event) {},
    afterOpen: function (data, event) {},
    onClose: function (data, event) {},
  };

  let methods = {
    menu: function (selector, option) {
      selector = iMethods.createMenuList(this, selector, option);
      iMethods.contextMenuBind.call(this, selector, option, "menu");
    },
    popup: function (selector, option) {
      $(selector).addClass("iw-contextMenu");
      iMethods.contextMenuBind.call(this, selector, option, "popup");
    },
    update: function (selector, option) {
      const self = this;
      option = option || {};

      this.each(function () {
        let trgr = $(this),
          menuData = trgr.data("iw-menuData");
        //refresh if any new element is added
        if (!menuData) {
          self.contextMenu("refresh");
          menuData = trgr.data("iw-menuData");
        }

        const menu = menuData.menu;
        if (typeof selector === "object") {
          for (let i = 0; i < selector.length; i++) {
            let name = selector[i].name,
              disable = selector[i].disable,
              fun = selector[i].fun,
              icon = selector[i].icon,
              img = selector[i].img,
              title = selector[i].title,
              className = selector[i].className,
              elm = menu.children("li").filter(function () {
                return (
                  $(this)
                    .contents()
                    .filter(function () {
                      return this.nodeType === 3;
                    })
                    .text() === name
                );
              }),
              subMenu = selector[i].subMenu;

            //toggle disable if provided on update method
            disable !== undefined &&
              (disable
                ? elm.addClass("iw-mDisable")
                : elm.removeClass("iw-mDisable"));

            //bind new function if provided
            fun &&
              elm.unbind("click.contextMenu").bind("click.contextMenu", fun);

            //update title
            title !== undefined && elm.attr("title", title);

            //update class name
            className !== undefined && elm.attr("class", className);

            const imgIcon = elm.find(".iw-mIcon");
            if (imgIcon.length) imgIcon.remove();

            //update image or icon
            if (img) {
              elm.prepend(
                '<img src="' + img + '" align="absmiddle" class="iw-mIcon" />'
              );
            } else if (icon) {
              elm.prepend(
                '<span align="absmiddle" class="iw-mIcon ' + icon + '" />'
              );
            }

            //to change submenus
            if (subMenu) {
              elm.contextMenu("update", subMenu);
            }
          }
        }

        iMethods.onOff(menu);

        //bind event again if trigger option has changed.
        let triggerOn = option.triggerOn;
        if (triggerOn) {
          trgr.unbind(".contextMenu");

          //add contextMenu identifier on all events
          triggerOn = triggerOn.split(" ");
          const events = [];
          for (let i = 0, ln = triggerOn.length; i < ln; i++) {
            events.push(triggerOn[i] + ".contextMenu");
          }

          //to bind event
          trgr.bind(events.join(" "), iMethods.eventHandler);
        }

        //set menu data back to trigger element
        menuData.option = $.extend({}, menuData.option, option);
        trgr.data("iw-menuData", menuData);
      });
    },
    refresh: function () {
      const menuData = this.filter(function () {
          return !!$(this).data("iw-menuData");
        }).data("iw-menuData"),
        newElm = this.filter(function () {
          return !$(this).data("iw-menuData");
        });
      //to change basetrigger on refresh
      menuData.option.baseTrigger = this;
      iMethods.contextMenuBind.call(
        newElm,
        menuData.menuSelector,
        menuData.option
      );
    },
    open: function (sel, data) {
      data = data || {};
      const e = data.event || $.Event("click");
      if (data.top) e.clientY = data.top;
      if (data.left) e.clientX = data.left;
      this.each(function () {
        iMethods.eventHandler.call(this, e);
      });
    },
    //to force context menu to close
    close: function () {
      const menuData = this.data("iw-menuData");
      if (menuData) {
        iMethods.closeContextMenu(menuData.option, this, menuData.menu, null);
      }
    },
    //to get value of a key
    value: function (key) {
      const menuData = this.data("iw-menuData");
      if (menuData[key]) {
        return menuData[key];
      } else if (menuData.option) {
        return menuData.option[key];
      }
      return null;
    },
    destroy: function () {
      const trgr = this,
        menuId = trgr.data("iw-menuData").menuId,
        menu = $(".iw-contextMenu[menuId=" + menuId + "]"),
        menuData = menu.data("iw-menuData");

      //Handle the situation of dynamically added element.
      if (!menuData) return;

      if (menuData.noTrigger === 1) {
        if (menu.hasClass("iw-created")) {
          menu.remove();
        } else {
          menu
            .removeClass("iw-contextMenu " + menuId)
            .removeAttr("menuId")
            .removeData("iw-menuData");
          //to destroy submenus
          menu.find("li.iw-mTrigger").contextMenu("destroy");
        }
      } else {
        menuData.noTrigger--;
        menu.data("iw-menuData", menuData);
      }
      trgr
        .unbind(".contextMenu")
        .removeClass("iw-mTrigger")
        .removeData("iw-menuData");
    },
  };
  let iMethods = {
    contextMenuBind: function (selector, option, method) {
      let trigger = this,
        menu = $(selector),
        menuData = menu.data("iw-menuData");

      //fallback
      if (menu.length === 0) {
        menu = trigger.find(selector);
        if (menu.length === 0) {
          return;
        }
      }

      if (method === "menu") {
        iMethods.menuHover(menu);
      }
      //get base trigger
      const baseTrigger = option.baseTrigger;

      if (!menuData) {
        let menuId;
        if (!baseTrigger.data("iw-menuData")) {
          menuId = Math.ceil(Math.random() * 100000);
          baseTrigger.data("iw-menuData", {
            menuId: menuId,
          });
        } else {
          menuId = baseTrigger.data("iw-menuData").menuId;
        }
        //create clone menu to calculate exact height and width.
        const cloneMenu = menu.clone();
        cloneMenu.appendTo("body");

        menuData = {
          menuId: menuId,
          menuWidth: cloneMenu.outerWidth(true),
          menuHeight: cloneMenu.outerHeight(true),
          noTrigger: 1,
          trigger: trigger,
        };

        //to set data on selector
        menu.data("iw-menuData", menuData).attr("menuId", menuId);
        //remove clone menu
        cloneMenu.remove();
      } else {
        menuData.noTrigger++;
        menu.data("iw-menuData", menuData);
      }

      //to set data on trigger
      trigger.addClass("iw-mTrigger").data("iw-menuData", {
        menuId: menuData.menuId,
        option: option,
        menu: menu,
        menuSelector: selector,
        method: method,
      });

      //hover fix
      let triggerOn = option.triggerOn;
      if (triggerOn.indexOf("hover") !== -1) {
        triggerOn = triggerOn.replace("hover", "mouseenter");
        //hover out if display is of context menu is on hover
        if (baseTrigger.index(trigger) !== -1) {
          baseTrigger.add(menu).bind("mouseleave.contextMenu", function (e) {
            if ($(e.relatedTarget).closest(".iw-contextMenu").length === 0) {
              $('.iw-contextMenu[menuId="' + menuData.menuId + '"]').fadeOut(
                100
              );
            }
          });
        }
      }

      trigger.delegate("input,a,.needs-click", "click", function (e) {
        e.stopImmediatePropagation();
      });

      //add contextMenu identifier on all events
      triggerOn = triggerOn.split(" ");
      const events = [];
      for (let i = 0, ln = triggerOn.length; i < ln; i++) {
        events.push(triggerOn[i] + ".contextMenu");
      }

      //to bind event
      trigger.bind(events.join(" "), iMethods.eventHandler);

      //to stop bubbling in menu
      menu.bind("click mouseenter", function (e) {
        e.stopPropagation();
      });

      menu.delegate("li", "click", function (e) {
        if (option.closeOnClick && !$.single(this).hasClass("iw-has-submenu"))
          iMethods.closeContextMenu(option, trigger, menu, e);
      });
    },
    eventHandler: function (e) {
      e.preventDefault();

      const trigger = $(this),
        trgrData = trigger.data("iw-menuData"),
        menu = trgrData.menu,
        menuData = menu.data("iw-menuData"),
        option = trgrData.option,
        cntnmnt = option.containment,
        clbckData = {
          trigger: trigger,
          menu: menu,
        },
        //check conditions
        cntWin = cntnmnt === window,
        btChck = option.baseTrigger.index(trigger) === -1;

      //to close previous open menu.
      if (!btChck && option.closeOther) {
        $(".iw-contextMenu").css("display", "none");
      }

      //to reset already selected menu item
      menu.find(".iw-mSelected").removeClass("iw-mSelected");

      //call open callback
      option.onOpen.call(this, clbckData, e);

      let cObj = $(cntnmnt),
        cHeight = cObj.innerHeight(),
        cWidth = cObj.innerWidth(),
        cTop = 0,
        cLeft = 0,
        menuHeight = menuData.menuHeight,
        menuWidth = menuData.menuWidth,
        va,
        ha,
        left = 0,
        top = 0,
        bottomMenu,
        rightMenu,
        verAdjust = (va = parseInt(option.verAdjust)),
        horAdjust = (ha = parseInt(option.horAdjust));

      if (!cntWin) {
        cTop = cObj.offset().top;
        cLeft = cObj.offset().left;

        //to add relative position if no position is defined on containment
        if (cObj.css("position") === "static") {
          cObj.css("position", "relative");
        }
      }

      if (option.displayAround === "cursor") {
        left = cntWin ? e.clientX : e.clientX + $(window).scrollLeft() - cLeft;
        top = cntWin ? e.clientY : e.clientY + $(window).scrollTop() - cTop;
        bottomMenu = top + menuHeight;
        rightMenu = left + menuWidth;
        //max height and width of context menu
        if (bottomMenu > cHeight) {
          if (top - menuHeight < 0) {
            if (bottomMenu - cHeight < menuHeight - top) {
              top = cHeight - menuHeight;
              va = -1 * va;
            } else {
              top = 0;
              va = 0;
            }
          } else {
            top = top - menuHeight;
            va = -1 * va;
          }
        }
        if (rightMenu > cWidth) {
          if (left - menuWidth < 0) {
            if (rightMenu - cWidth < menuWidth - left) {
              left = cWidth - menuWidth;
              ha = -1 * ha;
            } else {
              left = 0;
              ha = 0;
            }
          } else {
            left = left - menuWidth;
            ha = -1 * ha;
          }
        }
      } else if (option.displayAround === "trigger") {
        let triggerHeight = trigger.outerHeight(true),
          triggerWidth = trigger.outerWidth(true),
          triggerLeft = cntWin
            ? trigger.offset().left - cObj.scrollLeft()
            : trigger.offset().left - cLeft,
          triggerTop = cntWin
            ? trigger.offset().top - cObj.scrollTop()
            : trigger.offset().top - cTop,
          leftShift = triggerWidth;

        left = triggerLeft + triggerWidth;
        top = triggerTop;

        bottomMenu = top + menuHeight;
        rightMenu = left + menuWidth;
        //max height and width of context menu
        if (bottomMenu > cHeight) {
          if (top - menuHeight < 0) {
            if (bottomMenu - cHeight < menuHeight - top) {
              top = cHeight - menuHeight;
              va = -1 * va;
            } else {
              top = 0;
              va = 0;
            }
          } else {
            top = top - menuHeight + triggerHeight;
            va = -1 * va;
          }
        }
        if (rightMenu > cWidth) {
          if (left - menuWidth < 0) {
            if (rightMenu - cWidth < menuWidth - left) {
              left = cWidth - menuWidth;
              ha = -1 * ha;
              leftShift = -triggerWidth;
            } else {
              left = 0;
              ha = 0;
              leftShift = 0;
            }
          } else {
            left = left - menuWidth - triggerWidth;
            ha = -1 * ha;
            leftShift = -triggerWidth;
          }
        }
        //test end
        if (option.position === "top") {
          top = triggerTop - menuHeight;
          va = verAdjust;
          left = left - leftShift;
        } else if (option.position === "left") {
          left = triggerLeft - menuWidth;
          ha = horAdjust;
        } else if (option.position === "bottom") {
          top = triggerTop + triggerHeight;
          va = verAdjust;
          left = left - leftShift;
        } else if (option.position === "right") {
          left = triggerLeft + triggerWidth;
          ha = horAdjust;
        }
      }

      //applying css property
      const cssObj = {
        position: cntWin || btChck ? "fixed" : "absolute",
        display: "inline-block",
        height: "",
        width: "",
      };

      //to get position from offset parent
      if (option.left !== "auto") {
        left = iMethods.getPxSize(option.left, cWidth);
      }
      if (option.top !== "auto") {
        top = iMethods.getPxSize(option.top, cHeight);
      }
      if (!cntWin) {
        const oParPos = trigger.offsetParent().offset();
        if (btChck) {
          left = left + cLeft - $(window).scrollLeft();
          top = top + cTop - $(window).scrollTop();
        } else {
          left = left - (cLeft - oParPos.left);
          top = top - (cTop - oParPos.top);
        }
      }
      cssObj.left = left + ha + "px";
      cssObj.top = top + va + "px";

      menu.css(cssObj);

      //to call after open call back
      option.afterOpen.call(this, clbckData, e);

      //to add current menu class
      if (trigger.closest(".iw-contextMenu").length === 0) {
        $(".iw-curMenu").removeClass("iw-curMenu");
        menu.addClass("iw-curMenu");
      }

      const dataParm = {
        trigger: trigger,
        menu: menu,
        option: option,
        method: trgrData.method,
      };
      $("html")
        .unbind("click", iMethods.clickEvent)
        .click(dataParm, iMethods.clickEvent);
      $(document)
        .unbind("keydown", iMethods.keyEvent)
        .keydown(dataParm, iMethods.keyEvent);
      if (option.winEventClose) {
        $(window).bind("scroll resize", dataParm, iMethods.scrollEvent);
      }
    },

    scrollEvent: function (e) {
      iMethods.closeContextMenu(e.data.option, e.data.trigger, e.data.menu, e);
    },

    clickEvent: function (e) {
      const button = e.data.trigger.get(0);

      if (
        button !== e.target &&
        $(e.target).closest(".iw-contextMenu").length === 0
      ) {
        iMethods.closeContextMenu(
          e.data.option,
          e.data.trigger,
          e.data.menu,
          e
        );
      }
    },
    keyEvent: function (e) {
      e.preventDefault();
      const menu = e.data.menu,
        option = e.data.option,
        keyCode = e.keyCode;
      // handle cursor keys
      if (keyCode === 27) {
        iMethods.closeContextMenu(option, e.data.trigger, menu, e);
      }
      if (e.data.method === "menu") {
        let curMenu = $(".iw-curMenu"),
          optList = curMenu.children("li:not(.iw-mDisable)"),
          selected = optList.filter(".iw-mSelected"),
          index = optList.index(selected),
          focusOn = function (elm) {
            iMethods.selectMenu(curMenu, elm);
            const menuData = elm.data("iw-menuData");
            if (menuData) {
              iMethods.eventHandler.call(elm[0], e);
            }
          },
          first = function () {
            focusOn(optList.filter(":first"));
          },
          last = function () {
            focusOn(optList.filter(":last"));
          },
          next = function () {
            focusOn(optList.filter(":eq(" + (index + 1) + ")"));
          },
          prev = function () {
            focusOn(optList.filter(":eq(" + (index - 1) + ")"));
          },
          subMenu = function () {
            const menuData = selected.data("iw-menuData");
            if (menuData) {
              iMethods.eventHandler.call(selected[0], e);
              const selector = menuData.menu;
              selector.addClass("iw-curMenu");
              curMenu.removeClass("iw-curMenu");
              curMenu = selector;
              optList = curMenu.children("li:not(.iw-mDisable)");
              selected = optList.filter(".iw-mSelected");
              first();
            }
          },
          parMenu = function () {
            const selector = curMenu.data("iw-menuData").trigger;
            const parMenu = selector.closest(".iw-contextMenu");
            if (parMenu.length !== 0) {
              curMenu.removeClass("iw-curMenu").css("display", "none");
              parMenu.addClass("iw-curMenu");
            }
          };
        switch (keyCode) {
          case 13:
            selected.click();
            break;
          case 40:
            index === optList.length - 1 || selected.length === 0
              ? first()
              : next();
            break;
          case 38:
            index === 0 || selected.length === 0 ? last() : prev();
            break;
          case 33:
            first();
            break;
          case 34:
            last();
            break;
          case 37:
            parMenu();
            break;
          case 39:
            subMenu();
            break;
        }
      }
    },
    closeContextMenu: function (option, trigger, menu, e) {
      //unbind all events from top DOM
      $(document).unbind("keydown", iMethods.keyEvent);
      $("html").unbind("click", iMethods.clickEvent);
      $(window).unbind("scroll resize", iMethods.scrollEvent);
      $(".iw-contextMenu").css("display", "none");
      $(document).focus();

      //call close function
      option.onClose.call(
        this,
        {
          trigger: trigger,
          menu: menu,
        },
        e
      );
    },
    getPxSize: function (size, of) {
      if (!isNaN(size)) {
        return size;
      }
      if (size.indexOf("%") !== -1) {
        return (parseInt(size) * of) / 100;
      } else {
        return parseInt(size);
      }
    },
    selectMenu: function (menu, elm) {
      //to select the list
      const selected = menu.find("li.iw-mSelected"),
        submenu = selected.find(".iw-contextMenu");
      if (submenu.length !== 0 && selected[0] !== elm[0]) {
        submenu.fadeOut(100);
      }
      selected.removeClass("iw-mSelected");
      elm.addClass("iw-mSelected");
    },
    menuHover: function (menu) {
      const lastEventTime = Date.now();
      menu
        .children("li")
        .bind("mouseenter.contextMenu click.contextMenu", function (e) {
          //to make curmenu
          $(".iw-curMenu").removeClass("iw-curMenu");
          menu.addClass("iw-curMenu");
          iMethods.selectMenu(menu, $(this));
        });
    },
    createMenuList: function (trgr, selector, option) {
      const baseTrigger = option.baseTrigger,
        randomNum = Math.floor(Math.random() * 10000);
      if (
        typeof selector === "object" &&
        !selector.nodeType &&
        !selector.jquery
      ) {
        const menuList = $(
          '<ul class="iw-contextMenu iw-created iw-cm-menu" id="iw-contextMenu' +
            randomNum +
            '"></ul>'
        );
        selector.forEach(function (selObj, index) {
          const name = selObj.name,
            fun = selObj.fun || function () {},
            subMenu = selObj.subMenu,
            img = selObj.img || "",
            icon = selObj.icon || "",
            title = selObj.title || "",
            className = selObj.className || "",
            disable = selObj.disable,
            list = $(
              '<li title="' +
                title +
                '" class="' +
                className +
                '">' +
                name +
                "</li>"
            );

          if (img) {
            list.prepend(
              '<img src="' + img + '" align="absmiddle" class="iw-mIcon" />'
            );
          } else if (icon) {
            list.prepend(
              '<span align="absmiddle" class="' + "iw-mIcon " + icon + '" />'
            );
          }
          //to add disable
          if (disable) {
            list.addClass("iw-mDisable");
          }

          if (!subMenu) {
            list.bind("click.contextMenu", function (e) {
              fun.call(
                this,
                {
                  trigger: baseTrigger,
                  menu: menuList,
                },
                e
              );
            });
          }

          //to create sub menu
          menuList.append(list);
          if (subMenu) {
            list
              .addClass("iw-has-submenu")
              .append('<div class="iw-cm-arrow-right" />');
            iMethods.subMenu(list, subMenu, baseTrigger, option);
          }
        });

        if (baseTrigger.index(trgr[0]) === -1) {
          trgr.append(menuList);
        } else {
          const par =
            option.containment === window ? "body" : option.containment;
          $(par).append(menuList);
        }

        iMethods.onOff($("#iw-contextMenu" + randomNum));
        return "#iw-contextMenu" + randomNum;
      } else if ($(selector).length !== 0) {
        const element = $(selector);
        element
          .removeClass("iw-contextMenuCurrent")
          .addClass("iw-contextMenu iw-cm-menu iw-contextMenu" + randomNum)
          .attr("menuId", "iw-contextMenu" + randomNum)
          .css("display", "none");

        //to create subMenu
        element.find("ul").each(function (index, element) {
          const subMenu = $(this),
            parent = subMenu.parent("li");
          parent.append('<div class="iw-cm-arrow-right" />');
          subMenu.addClass("iw-contextMenuCurrent");
          iMethods.subMenu(
            parent,
            ".iw-contextMenuCurrent",
            baseTrigger,
            option
          );
        });
        iMethods.onOff($(".iw-contextMenu" + randomNum));
        return ".iw-contextMenu" + randomNum;
      }
    },
    subMenu: function (trigger, selector, baseTrigger, option) {
      trigger.contextMenu("menu", selector, {
        triggerOn: option.subMenuTriggerOn,
        displayAround: "trigger",
        position: "auto",
        mouseClick: "left",
        baseTrigger: baseTrigger,
        containment: option.containment,
      });
    },
    onOff: function (menu) {
      menu.find(".iw-mOverlay").remove();
      menu.find(".iw-mDisable").each(function () {
        const list = $(this);
        list.append('<div class="iw-mOverlay"/>');
        list.find(".iw-mOverlay").bind("click mouseenter", function (event) {
          event.stopPropagation();
        });
      });
    },
    optionOtimizer: function (method, option) {
      if (!option) {
        return;
      }
      if (method === "menu") {
        if (!option.mouseClick) {
          option.mouseClick = "right";
        }
      }
      if (option.mouseClick === "right" && option.triggerOn === "click") {
        option.triggerOn = "contextmenu";
      }

      if (
        $.inArray(option.triggerOn, [
          "hover",
          "mouseenter",
          "mouseover",
          "mouseleave",
          "mouseout",
          "focusin",
          "focusout",
        ]) !== -1
      ) {
        option.displayAround = "trigger";
      }
      return option;
    },
  };
})((jquery__WEBPACK_IMPORTED_MODULE_0___default()), window, document);


/***/ }),

/***/ "./src/lib/ga.js":
/*!***********************!*\
  !*** ./src/lib/ga.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ga": () => (/* binding */ ga)
/* harmony export */ });

function ga() {
  
}


/***/ }),

/***/ "./src/lib/jqEase.js":
/*!***************************!*\
  !*** ./src/lib/jqEase.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);
/*
 * $ Easing v1.3 - http://gsgd.co.uk/sandbox/$/easing/
 *
 * Uses the built in easing capabilities added In $ 1.1
 * to offer multiple easing options
 *
 * TERMS OF USE - $ Easing
 *
 * Open source under the BSD License.
 *
 * Copyright В© 2008 George McGinley Smith
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *
 * Redistributions of source code must retain the above copyright notice, this list of
 * conditions and the following disclaimer.
 * Redistributions in binary form must reproduce the above copyright notice, this list
 * of conditions and the following disclaimer in the documentation and/or other materials
 * provided with the distribution.
 *
 * Neither the name of the author nor the names of contributors may be used to endorse
 * or promote products derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 *  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
 *  GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
 * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */



((jquery__WEBPACK_IMPORTED_MODULE_0___default().easing.jswing) = (jquery__WEBPACK_IMPORTED_MODULE_0___default().easing.swing)),
  jquery__WEBPACK_IMPORTED_MODULE_0___default().extend((jquery__WEBPACK_IMPORTED_MODULE_0___default().easing), {
    def: "easeOutQuad",
    swing: function (a, b, c, d, e) {
      return (jquery__WEBPACK_IMPORTED_MODULE_0___default().easing)[(jquery__WEBPACK_IMPORTED_MODULE_0___default().easing.def)](a, b, c, d, e);
    },
    easeInQuad: function (a, b, c, d, e) {
      return d * (b /= e) * b + c;
    },
    easeOutQuad: function (a, b, c, d, e) {
      return -d * (b /= e) * (b - 2) + c;
    },
    easeInOutQuad: function (a, b, c, d, e) {
      return (b /= e / 2) < 1
        ? (d / 2) * b * b + c
        : (-d / 2) * (--b * (b - 2) - 1) + c;
    },
    easeInCubic: function (a, b, c, d, e) {
      return d * (b /= e) * b * b + c;
    },
    easeOutCubic: function (a, b, c, d, e) {
      return d * ((b = b / e - 1) * b * b + 1) + c;
    },
    easeInOutCubic: function (a, b, c, d, e) {
      return (b /= e / 2) < 1
        ? (d / 2) * b * b * b + c
        : (d / 2) * ((b -= 2) * b * b + 2) + c;
    },
    easeInQuart: function (a, b, c, d, e) {
      return d * (b /= e) * b * b * b + c;
    },
    easeOutQuart: function (a, b, c, d, e) {
      return -d * ((b = b / e - 1) * b * b * b - 1) + c;
    },
    easeInOutQuart: function (a, b, c, d, e) {
      return (b /= e / 2) < 1
        ? (d / 2) * b * b * b * b + c
        : (-d / 2) * ((b -= 2) * b * b * b - 2) + c;
    },
    easeInQuint: function (a, b, c, d, e) {
      return d * (b /= e) * b * b * b * b + c;
    },
    easeOutQuint: function (a, b, c, d, e) {
      return d * ((b = b / e - 1) * b * b * b * b + 1) + c;
    },
    easeInOutQuint: function (a, b, c, d, e) {
      return (b /= e / 2) < 1
        ? (d / 2) * b * b * b * b * b + c
        : (d / 2) * ((b -= 2) * b * b * b * b + 2) + c;
    },
    easeInSine: function (a, b, c, d, e) {
      return -d * Math.cos((b / e) * (Math.PI / 2)) + d + c;
    },
    easeOutSine: function (a, b, c, d, e) {
      return d * Math.sin((b / e) * (Math.PI / 2)) + c;
    },
    easeInOutSine: function (a, b, c, d, e) {
      return (-d / 2) * (Math.cos((Math.PI * b) / e) - 1) + c;
    },
    easeInExpo: function (a, b, c, d, e) {
      return 0 == b ? c : d * Math.pow(2, 10 * (b / e - 1)) + c;
    },
    easeOutExpo: function (a, b, c, d, e) {
      return b == e ? c + d : d * (-Math.pow(2, (-10 * b) / e) + 1) + c;
    },
    easeInOutExpo: function (a, b, c, d, e) {
      return 0 == b
        ? c
        : b == e
        ? c + d
        : (b /= e / 2) < 1
        ? (d / 2) * Math.pow(2, 10 * (b - 1)) + c
        : (d / 2) * (-Math.pow(2, -10 * --b) + 2) + c;
    },
    easeInCirc: function (a, b, c, d, e) {
      return -d * (Math.sqrt(1 - (b /= e) * b) - 1) + c;
    },
    easeOutCirc: function (a, b, c, d, e) {
      return d * Math.sqrt(1 - (b = b / e - 1) * b) + c;
    },
    easeInOutCirc: function (a, b, c, d, e) {
      return (b /= e / 2) < 1
        ? (-d / 2) * (Math.sqrt(1 - b * b) - 1) + c
        : (d / 2) * (Math.sqrt(1 - (b -= 2) * b) + 1) + c;
    },
    easeInElastic: function (a, b, c, d, e) {
      var f = 1.70158,
        g = 0,
        h = d;
      if (0 == b) return c;
      if (1 == (b /= e)) return c + d;
      if ((g || (g = 0.3 * e), h < Math.abs(d))) {
        h = d;
        var f = g / 4;
      } else var f = (g / (2 * Math.PI)) * Math.asin(d / h);
      return (
        -(
          h *
          Math.pow(2, 10 * (b -= 1)) *
          Math.sin(((b * e - f) * 2 * Math.PI) / g)
        ) + c
      );
    },
    easeOutElastic: function (a, b, c, d, e) {
      var f = 1.70158,
        g = 0,
        h = d;
      if (0 == b) return c;
      if (1 == (b /= e)) return c + d;
      if ((g || (g = 0.3 * e), h < Math.abs(d))) {
        h = d;
        var f = g / 4;
      } else var f = (g / (2 * Math.PI)) * Math.asin(d / h);
      return (
        h * Math.pow(2, -10 * b) * Math.sin(((b * e - f) * 2 * Math.PI) / g) +
        d +
        c
      );
    },
    easeInOutElastic: function (a, b, c, d, e) {
      var f = 1.70158,
        g = 0,
        h = d;
      if (0 == b) return c;
      if (2 == (b /= e / 2)) return c + d;
      if ((g || (g = e * 0.3 * 1.5), h < Math.abs(d))) {
        h = d;
        var f = g / 4;
      } else var f = (g / (2 * Math.PI)) * Math.asin(d / h);
      return 1 > b
        ? -0.5 *
            h *
            Math.pow(2, 10 * (b -= 1)) *
            Math.sin(((b * e - f) * 2 * Math.PI) / g) +
            c
        : 0.5 *
            h *
            Math.pow(2, -10 * (b -= 1)) *
            Math.sin(((b * e - f) * 2 * Math.PI) / g) +
            d +
            c;
    },
    easeInBack: function (a, b, c, d, e, f) {
      return (
        void 0 == f && (f = 1.70158), d * (b /= e) * b * ((f + 1) * b - f) + c
      );
    },
    easeOutBack: function (a, b, c, d, e, f) {
      return (
        void 0 == f && (f = 1.70158),
        d * ((b = b / e - 1) * b * ((f + 1) * b + f) + 1) + c
      );
    },
    easeInOutBack: function (a, b, c, d, e, f) {
      return (
        void 0 == f && (f = 1.70158),
        (b /= e / 2) < 1
          ? (d / 2) * b * b * (((f *= 1.525) + 1) * b - f) + c
          : (d / 2) * ((b -= 2) * b * (((f *= 1.525) + 1) * b + f) + 2) + c
      );
    },
    easeInBounce: function (a, b, c, d, e) {
      return d - jquery__WEBPACK_IMPORTED_MODULE_0___default().easing.easeOutBounce(a, e - b, 0, d, e) + c;
    },
    easeOutBounce: function (a, b, c, d, e) {
      return (b /= e) < 1 / 2.75
        ? d * 7.5625 * b * b + c
        : 2 / 2.75 > b
        ? d * (7.5625 * (b -= 1.5 / 2.75) * b + 0.75) + c
        : 2.5 / 2.75 > b
        ? d * (7.5625 * (b -= 2.25 / 2.75) * b + 0.9375) + c
        : d * (7.5625 * (b -= 2.625 / 2.75) * b + 0.984375) + c;
    },
    easeInOutBounce: function (a, b, c, d, e) {
      return e / 2 > b
        ? 0.5 * jquery__WEBPACK_IMPORTED_MODULE_0___default().easing.easeInBounce(a, 2 * b, 0, d, e) + c
        : 0.5 * jquery__WEBPACK_IMPORTED_MODULE_0___default().easing.easeOutBounce(a, 2 * b - e, 0, d, e) +
            0.5 * d +
            c;
    },
  });


/***/ }),

/***/ "./src/lib/siriwave.js":
/*!*****************************!*\
  !*** ./src/lib/siriwave.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function SiriWave(opt) {
  opt = opt || {};

  this.phase = 0;
  this.run = false;

  // UI vars

  this.ratio = opt.ratio || window.devicePixelRatio || 1;

  this.width = this.ratio * (opt.width || 320);
  this.width_2 = this.width / 2;
  this.width_4 = this.width / 4;

  this.height = this.ratio * (opt.height || 100);
  this.height_2 = this.height / 2;

  this.MAX = this.height_2 - 4;

  // Constructor opt

  this.amplitude = typeof opt.amplitude === "undefined" ? 1 : opt.amplitude;
  this.speed = typeof opt.speed === "undefined" ? 0.2 : opt.speed;
  this.frequency = typeof opt.frequency === "undefined" ? 6 : opt.frequency;
  this.color =
    (function hex2rgb(hex) {
      const shorthandRegex = /^#?([a-f\d])([a-f\d])([a-f\d])$/i;
      hex = hex.replace(shorthandRegex, function (m, r, g, b) {
        return r + r + g + g + b + b;
      });
      const result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
      return result
        ? parseInt(result[1], 16).toString() +
            "," +
            parseInt(result[2], 16).toString() +
            "," +
            parseInt(result[3], 16).toString()
        : null;
    })(opt.color || "#fff") || "255,255,255";

  // Interpolation

  this.speedInterpolationSpeed = opt.speedInterpolationSpeed || 0.005;
  this.amplitudeInterpolationSpeed = opt.amplitudeInterpolationSpeed || 0.05;

  this._interpolation = {
    speed: this.speed,
    amplitude: this.amplitude,
  };

  // Canvas

  this.canvas = document.createElement("canvas");
  this.canvas.width = this.width;
  this.canvas.height = this.height;

  if (opt.cover) {
    this.canvas.style.width = this.canvas.style.height = "100%";
  } else {
    this.canvas.style.width = this.width / this.ratio + "px";
    this.canvas.style.height = this.height / this.ratio + "px";
  }
  this.container = opt.container || document.body;
  this.container.appendChild(this.canvas);

  this.ctx = this.canvas.getContext("2d");

  // Start

  if (opt.autostart) {
    this.start();
  }
}

SiriWave.prototype._interpolate = function (propertyStr) {
  let increment;
  increment = this[propertyStr + "InterpolationSpeed"];

  if (
    Math.abs(this._interpolation[propertyStr] - this[propertyStr]) <= increment
  ) {
    this[propertyStr] = this._interpolation[propertyStr];
  } else {
    if (this._interpolation[propertyStr] > this[propertyStr]) {
      this[propertyStr] += increment;
    } else {
      this[propertyStr] -= increment;
    }
  }
};

SiriWave.prototype._GATF_cache = {};
SiriWave.prototype._globAttFunc = function (x) {
  if (SiriWave.prototype._GATF_cache[x] == null) {
    SiriWave.prototype._GATF_cache[x] = Math.pow(4 / (4 + Math.pow(x, 4)), 4);
  }
  return SiriWave.prototype._GATF_cache[x];
};

SiriWave.prototype._xpos = function (i) {
  return this.width_2 + i * this.width_4;
};

SiriWave.prototype._ypos = function (i, attenuation) {
  const att = (this.MAX * this.amplitude) / attenuation;
  return (
    this.height_2 +
    this._globAttFunc(i) * att * Math.sin(this.frequency * i - this.phase)
  );
};

SiriWave.prototype._drawLine = function (attenuation, color, width) {
  this.ctx.moveTo(0, 0);
  this.ctx.beginPath();
  this.ctx.strokeStyle = color;
  this.ctx.lineWidth = width || 1;

  let i = -2;
  while ((i += 0.01) <= 2) {
    let y = this._ypos(i, attenuation);
    if (Math.abs(i) >= 1.9) y = this.height_2;
    this.ctx.lineTo(this._xpos(i), y);
  }

  this.ctx.stroke();
};

SiriWave.prototype._clear = function () {
  this.ctx.globalCompositeOperation = "destination-out";
  this.ctx.fillRect(0, 0, this.width, this.height);
  this.ctx.globalCompositeOperation = "source-over";
};

SiriWave.prototype._draw = function () {
  this._drawLine(-2, "rgba(" + this.color + ",0.1)");
  this._drawLine(-6, "rgba(" + this.color + ",0.2)");
  this._drawLine(4, "rgba(" + this.color + ",0.4)");
  this._drawLine(2, "rgba(" + this.color + ",0.6)");
  this._drawLine(1, "rgba(" + this.color + ",1)", 1.5);
};

SiriWave.prototype._startDrawCycle = function () {
  if (this.run === false) return;
  this._clear();

  // Interpolate values
  this._interpolate("amplitude");
  this._interpolate("speed");

  this._draw();
  this.phase = (this.phase + Math.PI * this.speed) % (2 * Math.PI);

  if (window.requestAnimationFrame) {
    window.requestAnimationFrame(this._startDrawCycle.bind(this));
  } else {
    setTimeout(this._startDrawCycle.bind(this), 20);
  }
};

/* API */

SiriWave.prototype.start = function () {
  this.phase = 0;
  this.run = true;
  this._startDrawCycle();
};

SiriWave.prototype.stop = function () {
  this.phase = 0;
  this.run = false;
};

SiriWave.prototype.setSpeed = function (v, increment) {
  this._interpolation.speed = v;
};

SiriWave.prototype.setNoise = SiriWave.prototype.setAmplitude = function (v) {
  this._interpolation.amplitude = Math.max(Math.min(v, 1), 0);
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SiriWave);


/***/ }),

/***/ "./src/pages/background/syncManager.js":
/*!*********************************************!*\
  !*** ./src/pages/background/syncManager.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "deleteHistoryItems": () => (/* binding */ deleteHistoryItems),
/* harmony export */   "deleteWordlists": () => (/* binding */ deleteWordlists),
/* harmony export */   "handleUploadWordlistsResponse": () => (/* binding */ handleUploadWordlistsResponse),
/* harmony export */   "mapPhrasebookUploadIds": () => (/* binding */ mapPhrasebookUploadIds),
/* harmony export */   "sendAndHandlePhrasebookSyncRequest": () => (/* binding */ sendAndHandlePhrasebookSyncRequest),
/* harmony export */   "syncHistory": () => (/* binding */ syncHistory),
/* harmony export */   "syncPhrasebook": () => (/* binding */ syncPhrasebook),
/* harmony export */   "uploadHistoryItems": () => (/* binding */ uploadHistoryItems),
/* harmony export */   "uploadWordlists": () => (/* binding */ uploadWordlists),
/* harmony export */   "uploadWords": () => (/* binding */ uploadWords)
/* harmony export */ });
/* harmony import */ var _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../src/ext/kumquat_polyfill */ "./src/ext/kumquat_polyfill.js");
/* harmony import */ var _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../src/ext/util/storageUtil */ "./src/ext/util/storageUtil.js");
/* harmony import */ var _src_ext_cache__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../src/ext/cache */ "./src/ext/cache.js");
/**
 * Created by chernikovalexey on 28/10/17.
 */

// Used only in background
// Thus, no local storage requests forwarding required





const MAX_DB_REQ_TIME = 7500;

async function syncHistory(callback) {
  const token = await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_1__["default"].getVal("account_token");

  if (!token) {
    callback({ error: true, message: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.getLocale("Sync_NotSignedInError") });
    return;
  }

  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.idb["enum"](
    "it",
    "history",
    Number.MAX_VALUE,
    null,
    true,
    async function (items) {
      const to_del = [];
      const server_ids = [];
      const translations = [];

      const timestamp_to_id = {};
      const to_del_ids = [];

      items.forEach(function (translation) {
        timestamp_to_id[translation.time] = translation.id;

        if (typeof translation.server_id === "number") {
          if (translation.pending_removal) {
            to_del.push(translation.server_id);
            to_del_ids.push(translation.id);
          } else {
            server_ids.push(translation.server_id);
          }
        } else if (!translation.pending_removal) {
          translations.push({
            timestamp: translation.time,
            json: translation.it_resp,
          });
        }
      });

      //console.log('Items pending removal:', to_del.length);
      //console.log('Synchronized items:', server_ids.length);
      //console.log('Items pending upload:', translations.length);

      const req = await fetch(`https://${await _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.syncServer()}/hist_sync`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          lang: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.browserLang,
          token: token,
          ids_to_delete: to_del,
          local_server_ids: server_ids,
          translations: translations,
        }),
      });

      if (req.ok) {
        const r = await req.json();

        let pending_requests = 0;
        let finished_requests = 0;
        let enabled_count = 0;
        let add_rm_changes = false;

        if (!r.deletion.error && r.deletion.deletion_succeeded) {
          if (to_del_ids.length > 0) ++pending_requests;

          // delete items from the db forever
          _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.idb.del("it", "history", to_del_ids, function () {
            ++finished_requests;
          });

          ++enabled_count;
        } else {
          callback({
            error: true,
            message: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.getLocale("Sync_SyncFailedError") + r.deletion.reason,
          });
          return;
        }

        if (!r.download.error) {
          // save items
          r.download.translations.forEach(function (downloaded_item) {
            ++pending_requests;
            add_rm_changes = true;

            _src_ext_cache__WEBPACK_IMPORTED_MODULE_2__.saveOrUpdate(
              downloaded_item.json[5],
              downloaded_item.json[6],
              downloaded_item.json[1],
              downloaded_item.json,
              "adev",
              function () {
                ++finished_requests;
              },
              downloaded_item
            );
          });

          ++enabled_count;

          // remove items
          r.download.deleted.forEach(function (deleted_id) {
            ++pending_requests;
            add_rm_changes = true;

            _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.idb.exists(
              "it",
              "history",
              ["server_id", deleted_id],
              {},
              function (exists, primaryKey) {
                if (exists) {
                  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.idb.del("it", "history", [primaryKey], function () {
                    ++finished_requests;

                    //console.log(primaryKey, 'deleted ok..');
                  });
                } else {
                  ++finished_requests;

                  //console.log(primaryKey, 'does not exist!');
                }
              }
            );
          });

          ++enabled_count;
        } else {
          callback({
            error: true,
            message: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.getLocale("Sync_SyncFailedError") + r.download.reason,
          });
          return;
        }

        if (!r.upload.error) {
          r.upload.server_ids.forEach(function (uploaded_item) {
            ++pending_requests;

            _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.idb.update(
              "it",
              "history",
              timestamp_to_id[uploaded_item.timestamp],
              {
                server_id: uploaded_item.server_id,
              },
              function () {
                ++finished_requests;

                //console.log('updated item (server_id)');
              }
            );
          });

          ++enabled_count;
        } else {
          callback({
            error: true,
            message: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.getLocale("Sync_SyncFailedError") + r.upload.reason,
          });
          return;
        }

        const start_time = Date.now();
        var i = setInterval(function () {
          if (
            (enabled_count === 4 && finished_requests >= pending_requests) ||
            Date.now() - start_time >= MAX_DB_REQ_TIME
          ) {
            clearInterval(i);
            callback({
              error: false,
              downloaded: r.download.translations.length,
              uploaded: r.upload.server_ids.length,
              add_rm_changes: add_rm_changes,
            });
          }
        }, 10);
      } else {
        callback({ error: true, message: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.getLocale("Sync_NetworkError") });
      }
    }
  );
}

async function uploadHistoryItems(items, callback) {
  const token = await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_1__["default"].getVal("account_token");

  if (!token) {
    callback({ error: true, message: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.getLocale("Sync_NotSignedInError") });
    return;
  }

  if (items.length === 0) {
    callback({ error: true, message: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.getLocale("Sync_NoItemsError") });
    return;
  }

  const timestamp_to_ids = {};
  for (let i = 0, len = items.length; i < len; ++i) {
    timestamp_to_ids[items[i].timestamp] = items[i].id;
    delete items[i].id;
  }

  const req = await fetch(`https://${await _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.syncServer()}/hist_upload`, {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
    },
    body: JSON.stringify({
      lang: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.browserLang,
      token: token,
      translations: items,
    }),
  });

  if (req.ok) {
    const r = await req.json();

    let pending_requests = 0;
    let finished_requests = 0;

    if (!r.error) {
      r.server_ids.forEach(function (item) {
        ++pending_requests;

        _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.idb.update(
          "it",
          "history",
          timestamp_to_ids[item.timestamp],
          {
            server_id: item.server_id,
          },
          function () {
            ++finished_requests;
          }
        );
      });

      const start_time = Date.now();
      let i = setInterval(function () {
        if (
          finished_requests === pending_requests ||
          Date.now() - start_time >= MAX_DB_REQ_TIME
        ) {
          clearInterval(i);
          callback({ error: false });
        }
      }, 10);
    } else {
      callback({
        error: true,
        message: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.getLocale("Sync_SyncFailedError"),
      });
    }
  } else {
    callback({ error: true, message: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.getLocale("Sync_NetworkError") });
  }
}

async function deleteHistoryItems(items, callback) {
  const token = await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_1__["default"].getVal("account_token");

  if (!token) {
    callback({ error: true, message: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.getLocale("Sync_NotSignedInError") });
    return;
  }

  if (items.length === 0) {
    callback({ error: true, message: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.getLocale("Sync_NoItemsError") });
    return;
  }

  const ids = [];
  const server_ids = [];
  for (let i = 0, len = items.length; i < len; ++i) {
    ids.push(items[i].id);
    server_ids.push(items[i].server_id);
  }

  const req = await fetch(`https://${await _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.syncServer()}/hist_delete`, {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
    },
    body: JSON.stringify({
      lang: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.browserLang,
      token: token,
      ids_to_delete: server_ids,
    }),
  });

  if (req.ok) {
    const r = await req.json();

    if (!r.error && r.deletion_succeeded) {
      _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.idb.del("it", "history", ids, function () {
        callback({ error: false });
      });
    } else {
      callback({
        error: true,
        message: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.getLocale("Sync_SyncFailedError"),
      });
    }
  } else {
    callback({ error: true, message: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.getLocale("Sync_NetworkError") });
  }
}

async function syncPhrasebook(callback) {
  const token = await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_1__["default"].getVal("account_token");

  if (!token) {
    callback({ error: true, message: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.getLocale("Sync_NotSignedInError") });
    return;
  }

  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.idb["enum"](
    "it",
    "wordlists",
    Number.MAX_VALUE,
    null,
    true,
    function (items) {
      const to_del = [];
      const local_wl_ids = [];
      const wordlists = [];

      const wl_to_del_local_ids = [];
      const words_to_del_local_ids = [];

      const timestamp_to_word = {};
      const timestamp_to_id = {};

      let overshoot = 0;

      items.forEach(function (wordlist) {
        if (wordlist.server_id) {
          timestamp_to_id[wordlist.last_update] = wordlist.id;
        } else {
          timestamp_to_id[wordlist.created] = wordlist.id;
        }

        _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.idb.search(
          "it",
          "phrases",
          {
            parent_wordlist_key: wordlist.id,
          },
          function (words) {
            if (wordlist.server_id) {
              const word_server_ids = [];
              const words_to_upload = [];
              const words_to_del = [];

              words.forEach(function (word) {
                timestamp_to_word[word.added] = word.id;

                if (word.server_id) {
                  if (word.pending_removal) {
                    words_to_del_local_ids.push(word.id);
                    words_to_del.push(word.server_id);
                  } else {
                    word_server_ids.push(word.server_id);
                  }
                } else {
                  words_to_upload.push({
                    id: word.id,
                    added: word.added,
                    json: word.json,
                  });
                }
              });

              if (wordlist.pending_removal) {
                wl_to_del_local_ids.push(wordlist.id);
                to_del.push({
                  r: true,
                  id: wordlist.server_id,
                  words: word_server_ids.concat(words_to_del),
                });
              } else {
                local_wl_ids.push({
                  id: wordlist.server_id,
                  words: word_server_ids,
                });
              }

              if (words_to_del.length > 0) {
                ++overshoot;

                to_del.push({
                  r: false,
                  id: wordlist.server_id,
                  words: words_to_del,
                });
              }

              if (words_to_upload.length > 0) {
                ++overshoot;

                wordlists.push({
                  id: wordlist.id,
                  server_id: wordlist.server_id,
                  last_update: wordlist.last_update,
                  words: words_to_upload,
                });
              }
            } else if (!wordlist.pending_removal) {
              const word_items = [];
              words.forEach(function (word) {
                timestamp_to_word[word.added] = word.id;

                word_items.push({
                  added: word.added,
                  json: word.json,
                });
              });

              wordlists.push({
                timestamp: wordlist.created,
                last_update: wordlist.last_update,

                from: wordlist.from,
                to: wordlist.to,
                name: wordlist.name,

                words: word_items,
              });
            } else {
              --overshoot;
            }
          }
        );
      });

      const start_time = Date.now();
      let i = setInterval(function () {
        if (
          to_del.length + local_wl_ids.length + wordlists.length - overshoot ===
          items.length
        ) {
          clearInterval(i);
          sendAndHandlePhrasebookSyncRequest(
            token,
            to_del,
            local_wl_ids,
            wordlists,
            wl_to_del_local_ids,
            words_to_del_local_ids,
            timestamp_to_id,
            timestamp_to_word,
            callback
          );
        } else if (Date.now() - start_time >= MAX_DB_REQ_TIME) {
          clearInterval(i);
          callback({ error: true, message: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.getLocale("Sync_UnknownError") });
        }
      });
    }
  );
}

async function sendAndHandlePhrasebookSyncRequest(
  token,
  to_del,
  local_wl_ids,
  wordlists,
  wl_to_del_local_ids,
  words_to_del_local_ids,
  timestamp_to_id,
  timestamp_to_word,
  callback
) {
  //console.log('Local data (to delete, local WL ids, ununploaded wordlists):');
  //console.log(to_del);
  //console.log(local_wl_ids);
  //console.log(wordlists);
  //console.log('-=-=-');

  const req = await fetch(`https://${await _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.syncServer()}/pb_sync`, {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
    },
    body: JSON.stringify({
      lang: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.browserLang,
      token: token,
      to_del: to_del,
      local_wl_ids: local_wl_ids,
      wordlists: wordlists,
    }),
  });

  if (req.ok) {
    const r = await req.json();

    let pending_requests = 0;
    let finished_requests = 0;
    let enabled_count = 0;
    let dynamic_enabled_count = 0;
    let add_rm_changes = false;

    if (r.error) {
      callback({ error: true, message: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.getLocale("Sync_PbGeneralError") });

      return;
    }

    if (r.deleted.success) {
      if (wl_to_del_local_ids.length > 0) ++pending_requests;

      _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.idb.del("it", "wordlists", wl_to_del_local_ids, function () {
        ++finished_requests;
      });

      if (words_to_del_local_ids.length > 0) ++pending_requests;

      _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.idb.del("it", "phrases", words_to_del_local_ids, function () {
        ++finished_requests;
      });
    } else {
      callback({ error: true, message: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.getLocale("Sync_PbDeleteError") });
      return;
    }

    if (_.isArray(r.to_delete)) {
      r.to_delete.forEach(function (to_del_item) {
        ++pending_requests;
        add_rm_changes = true;

        _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.idb.exists(
          "it",
          "wordlists",
          ["server_id", to_del_item.id],
          {},
          function (exists, primaryKey) {
            if (exists) {
              if (to_del_item.r) {
                ++pending_requests;
                _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.idb.del("it", "wordlists", [primaryKey], function () {
                  ++finished_requests;
                });

                ++pending_requests;
                _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.idb.findAndDel(
                  "it",
                  "phrases",
                  {
                    parent_wordlist_key: primaryKey,
                  },
                  function () {
                    ++finished_requests;
                  }
                );
              } else {
                ++dynamic_enabled_count;
                to_del_item.words.forEach(function (word_server_id) {
                  ++pending_requests;

                  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.idb.findAndDel(
                    "it",
                    "phrases",
                    {
                      server_id: word_server_id,
                    },
                    function () {
                      ++finished_requests;
                    }
                  );
                });
                ++enabled_count;

                ++pending_requests;
                _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.idb.update(
                  "it",
                  "wordlists",
                  primaryKey,
                  {
                    phrases_count: {
                      update_type: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.idb.ARITH_ADD_UPDATE_TYPE,
                      value: -to_del_item.words.length,
                    },
                  },
                  function () {
                    ++finished_requests;
                  }
                );
              }
            } else {
            }

            ++finished_requests;
          }
        );
      });

      ++enabled_count; // normal
    } else {
      callback({
        error: true,
        message: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.getLocale("Sync_SyncFailedError"),
      });
      return;
    }

    if (!r.to_download.error) {
      const saveWords = function (wl_id, words) {
        words.forEach(function (word) {
          ++pending_requests;

          _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.idb.add(
            "it",
            "phrases",
            {
              parent_wordlist_key: wl_id,
              text: word.json[1],
              translation: word.json[3],
              json: word.json,
              added: word.added,
              server_id: word.server_id,
              usageExample: "",
              pending_removal: false,
            },
            "phrase",
            function (new_phrase_id, new_phrase) {
              ++finished_requests;
            }
          );
        });

        ++enabled_count;
      };

      r.to_download.items.forEach(function (wordlist) {
        ++pending_requests;
        add_rm_changes = true;

        if (wordlist.timestamp) {
          // create new wordlist

          _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.idb.add(
            "it",
            "wordlists",
            {
              from: wordlist.from,
              to: wordlist.to,
              name: wordlist.name,
              last_update: wordlist.last_update,
              created: wordlist.timestamp,
              phrases_count: wordlist.words.length,
              server_id: wordlist.server_id,
              pending_removal: false,
            },
            "wordlist",
            function (wl_id, new_wordlist) {
              ++finished_requests;
              ++dynamic_enabled_count;

              saveWords(wl_id, wordlist.words);
            }
          );
        } else {
          // update old wordlist

          _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.idb.findAndUpdate(
            "it",
            "wordlists",
            {
              server_id: wordlist.server_id,
            },
            {
              last_update: wordlist.last_update,
              phrases_count: {
                update_type: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.idb.ARITH_ADD_UPDATE_TYPE,
                value: +wordlist.words.length,
              },
            },
            function (upd_items) {
              if (upd_items.length === 0) {
                ++finished_requests;
                return;
              }

              ++finished_requests;
              ++dynamic_enabled_count;

              saveWords(upd_items[0].id, wordlist.words);
            }
          );
        }
      });

      ++enabled_count;
    } else {
      callback({
        error: true,
        message: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.getLocale("Sync_SyncFailedError"),
      });
      return;
    }

    ++pending_requests;
    handleUploadWordlistsResponse(
      timestamp_to_id,
      timestamp_to_word,
      r.uploaded,
      function (o) {
        if (o.error) {
          callback(o);
        } else {
          ++finished_requests;
        }
      }
    );

    const start_time = Date.now();
    var i = setInterval(function () {
      if (
        (enabled_count === 2 + dynamic_enabled_count &&
          finished_requests === pending_requests) ||
        Date.now() - start_time >= MAX_DB_REQ_TIME
      ) {
        clearInterval(i);
        callback({
          error: false,
          add_rm_changes: add_rm_changes,
        });
      }
    }, 10);
  } else {
    callback({ error: true, message: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.getLocale("Sync_NetworkError") });
  }
}

async function uploadWordlists(items, callback) {
  const token = await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_1__["default"].getVal("account_token");

  if (!token) {
    callback({ error: true, message: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.getLocale("Sync_NotSignedInError") });
    return;
  }

  if (items.length === 0) {
    callback({ error: true, message: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.getLocale("Sync_NoItemsError") });
    return;
  }

  const ids_mapped = mapPhrasebookUploadIds(items);

  const req = await fetch(`https://${await _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.syncServer()}/wl_upload`, {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
    },
    body: JSON.stringify({
      lang: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.browserLang,
      token: token,
      wordlists: items,
    }),
  });

  if (req.ok) {
    const r = await req.json();

    handleUploadWordlistsResponse(
      ids_mapped.t2ids,
      ids_mapped.t2words,
      r,
      callback
    );
  } else {
    callback({ error: true, message: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.getLocale("Sync_NetworkError") });
  }
}

function mapPhrasebookUploadIds(items) {
  const timestamp_to_id = {};
  const timestamp_to_word_id = {};

  for (let i = 0, len = items.length; i < len; ++i) {
    timestamp_to_id[items[i].timestamp || items[i].last_update] = items[i].id;
    delete items[i].id;

    for (let j = 0, len2 = items[i].words.length; j < len2; ++j) {
      timestamp_to_word_id[items[i].words[j].added] = items[i].words[j].id;
      delete items[i].words[j].id;
    }
  }

  return {
    t2ids: timestamp_to_id,
    t2words: timestamp_to_word_id,
  };
}

function handleUploadWordlistsResponse(
  timestamp_to_id,
  timestamp_to_word_id,
  r,
  callback
) {
  let pending_requests = 0;
  let finished_requests = 0;
  let dynamic_enables_count = 0;
  let enabled_count = 0;

  const updateWordlistAndWords = function (
    wordlist,
    wl_update_obj,
    wl_id_name,
    words_name
  ) {
    _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.idb.update(
      "it",
      "wordlists",
      timestamp_to_id[wordlist[wl_id_name]],
      wl_update_obj,
      function () {
        ++finished_requests;
      }
    );

    wordlist[words_name].forEach(function (word) {
      ++pending_requests;

      _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.idb.update(
        "it",
        "phrases",
        timestamp_to_word_id[word.added],
        {
          server_id: word.server_id,
        },
        function () {
          ++finished_requests;
        }
      );
    });

    ++enabled_count;
  };

  if (r.new_lists) {
    r.new_lists.forEach(function (wordlist) {
      if (wordlist.error) {
        return;
      }

      ++pending_requests;
      ++dynamic_enables_count;

      updateWordlistAndWords(
        wordlist,
        {
          server_id: wordlist.server_id,
        },
        "timestamp",
        "words"
      );
    });

    ++enabled_count;
  }

  if (r.updated_lists) {
    r.updated_lists.forEach(function (wordlist) {
      if (wordlist.error) {
        return;
      }

      ++pending_requests;
      ++dynamic_enables_count;

      updateWordlistAndWords(
        wordlist,
        {
          server_id: wordlist.server_id,
          last_update: wordlist.last_update,
        },
        "last_update",
        "words_ids"
      );
    });

    ++enabled_count;
  }

  const start_time = Date.now();
  let i = setInterval(function () {
    if (
      (enabled_count === 2 + dynamic_enables_count &&
        finished_requests === pending_requests) ||
      Date.now() - start_time >= MAX_DB_REQ_TIME
    ) {
      clearInterval(i);
      if (callback) {
        callback({ error: false });
      }
    }
  }, 10);
}

async function uploadWords(items, callback) {
  const token = await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_1__["default"].getVal("account_token");

  if (!token) {
    callback({ error: true, message: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.getLocale("Sync_NotSignedInError") });
    return;
  }

  if (items.length === 0) {
    callback({ error: true, message: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.getLocale("Sync_NoItemsError") });
    return;
  }

  const ids_mapped = mapPhrasebookUploadIds(items);

  const req = await fetch(`https://${await _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.syncServer()}/wl_upload`, {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
    },
    body: JSON.stringify({
      lang: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.browserLang,
      token: token,
      wordlists: items,
    }),
  });

  if (req.ok) {
    const r = await req.json();

    if (r.error) {
      console.error(r.reason);
      return;
    }

    handleUploadWordlistsResponse(ids_mapped.t2ids, ids_mapped.t2words, r);
  } else {
  }
}

async function deleteWordlists(items, callback) {
  const token = await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_1__["default"].getVal("account_token");

  if (!token) {
    callback({ error: true, message: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.getLocale("Sync_NotSignedInError") });
    return;
  }

  if (items.length === 0) {
    callback({ error: true, message: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.getLocale("Sync_NoItemsError") });
    return;
  }

  const wl_ids = [];
  const words_ids = [];

  for (let i = 0, len = items.length; i < len; ++i) {
    if (items[i].r) {
      wl_ids.push(items[i]._id);
    }
    words_ids.push(items[i]._words);

    delete items[i]._id;
    delete items[i]._words;
  }

  const req = await fetch(`https://${await _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.syncServer()}/wl_delete`, {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
    },
    body: JSON.stringify({
      lang: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.browserLang,
      token: token,
      to_del: items,
    }),
  });

  if (req.ok) {
    const r = await req.json();

    if (r.success) {
      _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.idb.del("it", "wordlists", wl_ids, function () {
        _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.idb.del("it", "phrases", words_ids, function () {
          callback({ error: false });
        });
      });
    } else {
      callback({
        error: true,
        message: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.getLocale("Sync_SyncFailedError"),
      });
    }
  } else {
    callback({ error: true, message: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.getLocale("Sync_NetworkError") });
  }
}


/***/ }),

/***/ "./src/pages/content/fpTranslator.js":
/*!*******************************************!*\
  !*** ./src/pages/content/fpTranslator.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "onFPLangSelectorValueChanged": () => (/* binding */ onFPLangSelectorValueChanged),
/* harmony export */   "tryShowingMateBar": () => (/* binding */ tryShowingMateBar)
/* harmony export */ });
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../src/ext/kumquat_polyfill */ "./src/ext/kumquat_polyfill.js");
/* harmony import */ var _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../src/ext/util/storageUtil */ "./src/ext/util/storageUtil.js");
/* harmony import */ var _src_ext_util_langUtil__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../src/ext/util/langUtil */ "./src/ext/util/langUtil.js");
/* harmony import */ var _initContentDropdowns__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./initContentDropdowns */ "./src/pages/content/initContentDropdowns.js");
/* harmony import */ var _ext_tpl__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../ext/tpl */ "./src/ext/tpl.js");








/* Copyright 2021 Gikken UG */
const translation_callbacks = {};

function fpTranslate() {
  const BFI_APPID = "000000000A9F426B41914349A3EC94D7073FF941";
  let BFI_DONEMSG = "nil";
  let BFI_TOLANG = "nil";
  let BFI_SAMELANGMSG = "nil";
  let BFI_LOADINGLANGMSG = "nil";
  let BFI_CANCEL = "nil";

  window["_mstConfig"] = {
    //appId: 'ThItpYrZC8u7LA_4XaMM9h1vkkDbKII4khHm2jXmvMYo\x2a',
    appId: "NTBD",
    rootURL: "https\x3a\x2f\x2fwww.microsofttranslator.com\x2f",
    baseURL:
      "https\x3a\x2f\x2fwww.microsofttranslator.com\x2fajax\x2fv3\x2fwidgetV3.ashx\x3fsettings\x3dmanual",
    serviceURL:
      "https\x3a\x2f\x2fapi.microsofttranslator.com\x2fv2\x2fajax.svc",
    imagePath:
      "https\x3a\x2f\x2fwww.microsofttranslator.com\x2fstatic\x2f197997\x2fimg\x2f",
    debug: false,
    locale: "en",
    country: "",
    category: "",
    ref: "WidgetV3",
    service: "WG3",
    maxChars: 1000000000,
    noAuto: ["facebook.", "youtube."],
    escapeNonAscii: false,
    requestGroup: "",
    preTrans: false,
  };
  window._mstConfig["SignIn"] =
    '<a href="https://login.live.com/login.srf?wa=wsignin1.0&amp;rpsnv=12&amp;ct=1401208142&amp;rver=6.0.5276.0&amp;wp=LBI&amp;wreply=http:%2F%2Fwww.microsofttranslator.com%2Fajax%2Fv2%2Fauth.aspx%3Fpru%3Dhttp%253a%252f%252fwww.microsofttranslator.com%252fajax%252fv3%252fwidgetV3.ashx&amp;lc=1033&amp;id=268160">Sign in</a>';

  if (!window.Microsoft) window.Microsoft = {};
  if (!window.Microsoft.Translator) window.Microsoft.Translator = {};
  if (window.Microsoft.Translator.Reset) window.Microsoft.Translator.Reset();

  window.Microsoft.Translator = new (function () {
    const strWidgetFloaterPanels = "WidgetFloaterPanels",
      sevenSeconds = 7e3,
      strBlock = "block",
      fourPxPadding = "4px 4px 4px 4px",
      strPointer = "pointer",
      maxZIndex = "2147483647",
      strAbsolute = "absolute",
      strInlineBlock = "inline-block",
      strDirection = "direction",
      strLang = "lang",
      gtSign = ">",
      strFont = "font",
      tagImg = "img",
      strFalse = "false",
      strLeft = "left",
      strRight = "right",
      oneHundred = 100,
      strVisible = "visible",
      num255 = 255,
      strDiv = "div",
      strInline = "inline",
      strPosition = "position",
      fourHundred = 400,
      strSelect = "select",
      px = "px",
      zeroPx = "0px",
      languageMappingsKey = "languageMappings",
      localizedLangsKey = "localizedLangs",
      langSpanish = "es",
      langNorwegian = "no",
      langGerman = "de",
      langFrench = "fr",
      langTraditionalChinese = "zh-cht",
      langSimplifiedChinese = "zh-chs",
      langArabic = "ar",
      leftToRight = "ltr",
      rightToLeft = "rtl",
      none = "none",
      strIframe = "iframe",
      radixHex = 16,
      trueValue = true,
      numberTypeString = "number",
      functionTypeString = "function",
      undefinedTypeString = "undefined",
      head = "head",
      negativeOne = -1,
      pathDelimiter = "/",
      mstConfigKey = "_mstConfig",
      langEnglish = "en",
      falseValue = false,
      staticImgPath = "/static/img/",
      emptyString = "",
      nullValue = null,
      self = this;
    self.AddTranslation = function (
      appId,
      originalText,
      translatedText,
      from,
      to,
      rating,
      contentType,
      category,
      user,
      uri,
      onSuccess,
      onError,
      timeout
    ) {
      return new callTranslateAPI(
        "AddTranslation",
        {
          appId: appId,
          originalText: originalText,
          translatedText: translatedText,
          from: from,
          to: to,
          rating: rating,
          contentType: contentType,
          category: category,
          user: user,
          uri: uri,
        },
        onSuccess,
        onError,
        timeout
      );
    };
    self.BreakSentences = function (
      appId,
      text,
      language,
      onSuccess,
      onError,
      timeout
    ) {
      return new callTranslateAPI(
        "BreakSentences",
        {
          appId: appId,
          text: text,
          language: language,
        },
        onSuccess,
        onError,
        timeout
      );
    };
    self.Detect = function (appId, text, onSuccess, onError, timeout) {
      return new callTranslateAPI(
        "Detect",
        {
          appId: appId,
          text: text,
        },
        onSuccess,
        onError,
        timeout
      );
    };
    self.DetectArray = function (appId, texts, onSuccess, onError, timeout) {
      return new callTranslateAPI(
        "DetectArray",
        {
          appId: appId,
          texts: texts,
        },
        onSuccess,
        onError,
        timeout
      );
    };
    self.GetAppIdToken = function (
      appId,
      minRatingRead,
      maxRatingWrite,
      expireSeconds,
      onSuccess,
      onError,
      timeout
    ) {
      return new callTranslateAPI(
        "GetAppIdToken",
        {
          appId: appId,
          minRatingRead: minRatingRead,
          maxRatingWrite: maxRatingWrite,
          expireSeconds: expireSeconds,
        },
        onSuccess,
        onError,
        timeout
      );
    };
    self.GetLanguageNames = function (
      appId,
      locale,
      languageCodes,
      onSuccess,
      onError,
      timeout
    ) {
      return new callTranslateAPI(
        "GetLanguageNames",
        {
          appId: appId,
          locale: locale,
          languageCodes: languageCodes,
        },
        onSuccess,
        onError,
        timeout
      );
    };
    self.GetLanguagesForSpeak = function (appId, onSuccess, onError, timeout) {
      return new callTranslateAPI(
        "GetLanguagesForSpeak",
        {
          appId: appId,
        },
        onSuccess,
        onError,
        timeout
      );
    };
    self.GetLanguagesForTranslate = function (
      appId,
      onSuccess,
      onError,
      timeout
    ) {
      return new callTranslateAPI(
        "GetLanguagesForTranslate",
        {
          appId: appId,
        },
        onSuccess,
        onError,
        timeout
      );
    };
    self.GetTranslations = function (
      appId,
      text,
      from,
      to,
      maxTranslations,
      options,
      onSuccess,
      onError,
      timeout
    ) {
      return new callTranslateAPI(
        "GetTranslations",
        {
          appId: appId,
          text: text,
          from: from,
          to: to,
          maxTranslations: maxTranslations,
          options: options,
        },
        onSuccess,
        onError,
        timeout
      );
    };
    self.Translate = function (
      appId,
      text,
      from,
      to,
      contentType,
      category,
      onSuccess,
      onError,
      timeout
    ) {
      return new callTranslateAPI(
        "Translate",
        {
          appId: appId,
          text: text,
          from: from,
          to: to,
          contentType: contentType,
          category: category,
        },
        onSuccess,
        onError,
        timeout
      );
    };
    self.AddTranslationArray = function (
      appId,
      translations,
      from,
      to,
      options,
      onSuccess,
      onError,
      timeout
    ) {
      return new callTranslateAPI(
        "AddTranslationArray",
        {
          appId: appId,
          translations: translations,
          from: from,
          to: to,
          options: options,
        },
        onSuccess,
        onError,
        timeout
      );
    };
    self.GetTranslationsArray = function (
      appId,
      texts,
      from,
      to,
      maxTranslations,
      options,
      onSuccess,
      onError,
      timeout
    ) {
      return new callTranslateAPI(
        "GetTranslationsArray",
        {
          appId: appId,
          texts: texts,
          from: from,
          to: to,
          maxTranslations: maxTranslations,
          options: options,
        },
        onSuccess,
        onError,
        timeout
      );
    };
    self.Speak = function (
      appId,
      text,
      language,
      format,
      options,
      onSuccess,
      onError,
      timeout
    ) {
      return new callTranslateAPI(
        "Speak",
        {
          appId: appId,
          text: text,
          language: language,
          format: format,
          options: options,
        },
        onSuccess,
        onError,
        timeout
      );
    };
    self.TranslateArray = function (
      appId,
      texts,
      from,
      to,
      options,
      onSuccess,
      onError,
      timeout
    ) {
      return new callTranslateAPI(
        "TranslateArray",
        {
          appId: appId,
          texts: texts,
          from: from,
          to: to,
          options: options,
        },
        onSuccess,
        onError,
        timeout
      );
    };
    self.TranslateArray2 = function (
      appId,
      texts,
      from,
      to,
      options,
      onSuccess,
      onError,
      timeout
    ) {
      return new callTranslateAPI(
        "TranslateArray2",
        {
          appId: appId,
          texts: texts,
          from: from,
          to: to,
          options: options,
        },
        onSuccess,
        onError,
        timeout
      );
    };
    let config = {
      serviceClient: nullValue,
      appId: emptyString,
      lpURL: "https://www.bing.com/translator",
      rootURL: "https://www.microsofttranslator.com/",
      baseURL: "https://www.microsofttranslator.com/Ajax/V2/Toolkit.ashx",
      serviceURL: "https://api.microsofttranslator.com/V2/Ajax.svc",
      imagePath: staticImgPath,
      debug: falseValue,
      locale: langEnglish,
      country: emptyString,
      category: emptyString,
      ref: emptyString,
      service: emptyString,
      maxChars: 1e9,
      noAuto: [],
      escapeNonAscii: falseValue,
      requestGroup: emptyString,
      preTrans: falseValue,
    };
    config.serviceClient = self;

    if (window[mstConfigKey]) {
      for (const key in config)
        if (!window[mstConfigKey][key]) window[mstConfigKey][key] = config[key];
      config = window[mstConfigKey];
    } else {
      window[mstConfigKey] = config;
    }

    var sendRequest = (config.serviceClient.LoadScript = new (function () {
        function URL(url, baseUrl) {
          let self = this,
            matched = url
              .toString()
              .match(/^([^:]*:\/\/[^\/]*)(\/[^\?\#]*)([\?][^#]*)*/);
          if (matched) {
            self.auth = matched[1] || emptyString;
            self.path = matched[2] || emptyString;
            self.query = matched[3] || emptyString;
          } else {
            matched = baseUrl
              .toString()
              .match(/^([^:]*:\/\/[^\/]*)(\/[^\?\#]*)([\?][^#]*)*/);
            const baseAuth = matched[1] || emptyString,
              basePath = matched[2] || emptyString,
              basePathParts =
                url.substr(0, 1) === pathDelimiter
                  ? []
                  : basePath.split(pathDelimiter);
            matched = url.match(/^([^?]*)([\?][^#]*)*$/);
            const parts = (matched[1] || emptyString).split(pathDelimiter),
              query = matched[2] || emptyString;
            if (
              basePathParts.length > 0 &&
              parts.length > 0 &&
              parts[0] !== "."
            )
              basePathParts.pop();
            while (parts.length > 0) {
              const part = parts.shift();
              switch (part) {
                case ".":
                  break;
                case "..":
                  if (basePathParts.length) basePathParts.pop();
                  break;
                default:
                  basePathParts.push(part);
              }
            }
            self.auth = baseAuth;
            self.path = basePathParts.join(pathDelimiter);
            self.query = query;
          }
          self.toString = function () {
            return this.auth + this.path + this.query;
          };
          return self;
        }
        // mate note
        // include scripts with translations PJSON or whatever it's called
        return function (url, baseUrl, doc, callback_id) {
          url = new URL(
            url,
            baseUrl ? baseUrl : new URL(config.baseURL)
          ).toString();
          doc = doc ? doc : document;
          const urlLength = encodeURIComponent(url).replace(
            /%\w\w/g,
            " "
          ).length;
          if (
            (navigator.userAgent.indexOf("MSIE") > negativeOne &&
              urlLength > 2048) ||
            urlLength > 8192
          )
            return nullValue;

          //console.log('Requesting URL:', f, callback_id);

          if (url.indexOf("sync.ashx") > -1) {
            // Taining: sync.ashx is for logging, it's fine to ignore such requests completely
          } else {
            fetch(url)
              .then(async (res) => {
                const d = await res.json();
                //console.log(callback_id, translation_callbacks["_mstc" + callback_id]);
                if (
                  typeof translation_callbacks["_mstc" + callback_id] ===
                  "function"
                ) {
                  translation_callbacks["_mstc" + callback_id](d);
                }
              })
              .catch((e) => {
                //console.log(callback_id, translation_callbacks["_mstc" + callback_id]);
                if (
                  typeof translation_callbacks["_mste" + callback_id] ===
                  "function"
                ) {
                  translation_callbacks["_mste" + callback_id](e);
                }
              });
          }

          return false;
        };
      })()),
      getType = new (function () {
        const builtinClassNames = {
            1: "Array",
            2: "Boolean",
            3: "Date",
            4: "Function",
            5: "Number",
            6: "Object",
            7: "RegExp",
            8: "String",
          },
          nodeTypeMapping = {
            1: "element",
            2: "attribute",
            3: "text",
            4: "cdata",
            5: "entityReference",
            6: "entity",
            7: "instruction",
            8: "comment",
            9: "document",
            10: "documentType",
            11: "documentFragment",
            12: "notation",
          },
          constructorTypeMapping = {};
        for (const key in builtinClassNames)
          constructorTypeMapping[window[builtinClassNames[key]]] =
            builtinClassNames[key].toLowerCase();
        return function (value) {
          if (value === undefined) return undefinedTypeString;
          else if (value === nullValue) return "null";
          else if (
            typeof value.constructor === functionTypeString &&
            constructorTypeMapping[value.constructor]
          )
            return constructorTypeMapping[value.constructor];
          else if (
            typeof value.nodeType === numberTypeString &&
            nodeTypeMapping[value.nodeType]
          )
            return nodeTypeMapping[value.nodeType];
          return typeof value;
        };
      })(),
      toEncodedString = new (function () {
        const localNullValue = nullValue;
        if (
          navigator.userAgent.toLowerCase().indexOf("msie 6.") > negativeOne ||
          (navigator.userAgent.toLowerCase().indexOf("webkit") > negativeOne &&
            (document.charset || document.characterSet || emptyString)
              .toLowerCase()
              .indexOf("utf") === negativeOne)
        )
          config.escapeNonAscii = trueValue;
        let unicodeTemplate = "\\u0000",
          signChars = '"#%&+:;=?@\\',
          nonAsciiTextRanges = ["\\x00-\\x1F", "\\x7F-\\xA0"],
          unicodeRanges = [
            "\\u02B0-\\u038F",
            "\\u2000-\\u20FF",
            "\\u3000-\\u303F",
          ],
          quotes = {
            '"': '\\"',
            "\\": "\\\\",
          },
          regexp;

        function compileRegexp() {
          regexp = new RegExp(
            "[\\s" +
              signChars.replace(/./g, function (char) {
                const hex = char.charCodeAt(0).toString(radixHex);
                return (
                  unicodeTemplate.substr(
                    0,
                    unicodeTemplate.length - hex.length
                  ) + hex
                );
              }) +
              nonAsciiTextRanges.join(emptyString) +
              (config.escapeNonAscii
                ? "\\x7B-\\uFFFF"
                : unicodeRanges.join(emptyString)) +
              "]",
            "g"
          );
          regexp.compile(regexp.source, "g");
        }

        function replacer(char) {
          if (quotes[char]) return quotes[char];
          if (char.match(/[\s\xA0]/)) return "+";
          const c = char.charCodeAt(0),
            hex = c.toString(radixHex),
            encodedByBuiltin = encodeURIComponent(char),
            encodedByCustom =
              unicodeTemplate.substr(0, unicodeTemplate.length - hex.length) +
              hex;
          if (
            (encodedByBuiltin.length < encodedByCustom.length && c > 34) ||
            (config.escapeNonAscii && c > 122)
          )
            return encodedByBuiltin;
          else return encodedByCustom;
        }

        function encode(value) {
          return value.toString().replace(regexp, replacer);
        }

        function encodeString(a) {
          return '"' + encode(a) + '"';
        }

        function encodeArray(arr) {
          const result = [];
          for (let i = 0; i < arr.length; ++i) {
            const item = toEncodedString(arr[i]);
            if (item !== localNullValue) result.push(item);
          }
          return "[" + result.join(",") + "]";
        }

        function encodeObject(obj) {
          const result = [];
          for (const key in obj) {
            const item = toEncodedString(obj[key]);
            if (item !== localNullValue) result.push('"' + key + '":' + item);
          }
          return "{" + result.join(",") + "}";
        }
        return function (value) {
          compileRegexp();
          switch (getType(value)) {
            case undefinedTypeString:
              return localNullValue;
            case "null":
              return localNullValue;
            case "boolean":
              return encode(value.toString());
            case numberTypeString:
              return encode(value.toString());
            case "string":
              return encodeString(value);
            case "array":
              return encodeArray(value);
            default:
              return encodeObject(value);
          }
        };
      })(),
      callTranslateAPI = new (function () {
        let k,
          count = 0,
          win = window,
          lowerCaseCharset = (
            document.charset ||
            document.characterSet ||
            emptyString
          ).toLowerCase();
        if (
          lowerCaseCharset.indexOf("utf") === negativeOne &&
          lowerCaseCharset.indexOf("unicode") === negativeOne
        )
          try {
            config.escapeNonAscii = trueValue;
            const element = document.createElement(strIframe);
            element.id = "MstReqFrm";
            element.style.display = none;
            element.translate = falseValue;
            document.documentElement.insertBefore(
              element,
              document.documentElement.firstChild
            );
            element.contentWindow.document.open("text/html", "replace");
            element.contentWindow.document.write(
              '<html><head><meta charset="utf-8"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"></head><body></body></html>'
            );
            element.contentWindow.document.close();
            win = element.contentWindow;
          } catch (err) {
            console.error(err);
            if (config.debug);
          }
        return function (action, queries, onSuccess, onError, q) {
          let funcType = functionTypeString,
            uid = ++count,
            timer,
            domForRequest,
            isDestroyed = falseValue,
            isAborted = falseValue,
            errorMessage = emptyString;
          // mate note
          // adding callbacks into the main scope for jsonp
          // on success callback
          translation_callbacks["_mstc" + uid] = function (value) {
            if (validTranslation) return;
            validTranslation = true;
            //console.log("SUCCESS " + d);
            setTimeout(function () {
              if (isAborted) {
                errorCallback(errorMessage);
                return;
              }
              if (isDestroyed) return;
              setTimeout(destroy, 0);
              if (onSuccess && typeof onSuccess === funcType) onSuccess(value);
            }, 0);
          };
          // on error callback
          var errorCallback = (translation_callbacks["_mste" + uid] = function (
            a
          ) {
            setTimeout(function () {
              if (isDestroyed) return;
              setTimeout(destroy, 0);
              if (onError && typeof onError === funcType) onError(a);
            }, 0);
          });
          var validPage = false,
            validTranslation = false;

          // console.log('Added callbacks:', "_mstc" + d, "_mste" + d);

          // [TODO Taining]: I think it's Test code made by us and could be removed later
          if (
            window.location.href ===
            "http://mi.fujigen.co.jp/collection/ser_expert_flame.html"
          ) {
            setTimeout(function (a) {
              if (validTranslation) return;
              //document.body.style.backgroundColor = 'red';
              if (uid === 1) {
                console.log("MOCK SEND");
                window["_mstc1"]([
                  {
                    From: "ja",
                    OriginalTextSentenceLengths: [10],
                    TranslatedText: "COLLECTION",
                    TranslatedTextSentenceLengths: [10],
                  },
                  {
                    From: "ja",
                    OriginalTextSentenceLengths: [6],
                    TranslatedText: "Guitar",
                    TranslatedTextSentenceLengths: [6],
                  },
                  {
                    From: "ja",
                    OriginalTextSentenceLengths: [4],
                    TranslatedText: "Bass",
                    TranslatedTextSentenceLengths: [4],
                  },
                  {
                    From: "ja",
                    OriginalTextSentenceLengths: [9],
                    TranslatedText: "Accessory",
                    TranslatedTextSentenceLengths: [9],
                  },
                  {
                    From: "ja",
                    OriginalTextSentenceLengths: [17],
                    TranslatedText: "WEB DEISGN SYSTEM",
                    TranslatedTextSentenceLengths: [17],
                  },
                  {
                    From: "ja",
                    OriginalTextSentenceLengths: [11],
                    TranslatedText: "ONLINE SHOP",
                    TranslatedTextSentenceLengths: [11],
                  },
                  {
                    From: "ja",
                    OriginalTextSentenceLengths: [13],
                    TranslatedText: "COMMUNICATION",
                    TranslatedTextSentenceLengths: [13],
                  },
                  {
                    From: "ja",
                    OriginalTextSentenceLengths: [6],
                    TranslatedText: "Artist",
                    TranslatedTextSentenceLengths: [6],
                  },
                  {
                    From: "ja",
                    OriginalTextSentenceLengths: [10],
                    TranslatedText: "Technology",
                    TranslatedTextSentenceLengths: [10],
                  },
                  {
                    From: "ja",
                    OriginalTextSentenceLengths: [7],
                    TranslatedText: "Dealers",
                    TranslatedTextSentenceLengths: [7],
                  },
                  {
                    From: "ja",
                    OriginalTextSentenceLengths: [8],
                    TranslatedText: "About Us",
                    TranslatedTextSentenceLengths: [8],
                  },
                  {
                    From: "ja",
                    OriginalTextSentenceLengths: [40],
                    TranslatedText: "<b10> GUITAR</b10> &gt;&gt; EXPERT SERIES",
                    TranslatedTextSentenceLengths: [41],
                  },
                  {
                    From: "ja",
                    OriginalTextSentenceLengths: [12],
                    TranslatedText: "Expert FLAME",
                    TranslatedTextSentenceLengths: [12],
                  },
                  {
                    From: "ja",
                    OriginalTextSentenceLengths: [8],
                    TranslatedText: "FEATURES",
                    TranslatedTextSentenceLengths: [8],
                  },
                  {
                    From: "ja",
                    OriginalTextSentenceLengths: [17],
                    TranslatedText: "Circles fretting system",
                    TranslatedTextSentenceLengths: [23],
                  },
                  {
                    From: "ja",
                    OriginalTextSentenceLengths: [45, 36],
                    TranslatedText:
                      "Hitting the fret in an arc-shaped, each chord and each fret and intersect at right angles and minimizes contact surface. Delivers clear and of good, rich sound sustain.",
                    TranslatedTextSentenceLengths: [121, 47],
                  },
                  {
                    From: "ja",
                    OriginalTextSentenceLengths: [57],
                    TranslatedText:
                      " FUJIGEN, FGN all electric guitars, electric bass circles fretting system adopted.",
                    TranslatedTextSentenceLengths: [82],
                  },
                  {
                    From: "ja",
                    OriginalTextSentenceLengths: [6],
                    TranslatedText: "For more information, click here.",
                    TranslatedTextSentenceLengths: [33],
                  },
                  {
                    From: "ja",
                    OriginalTextSentenceLengths: [17],
                    TranslatedText: "Low set-up set up",
                    TranslatedTextSentenceLengths: [17],
                  },
                  {
                    From: "ja",
                    OriginalTextSentenceLengths: [71, 29],
                    TranslatedText:
                      "Without lowering the frets to compared to traditional electric guitar neck to set about 1 mm deeper body, has shortened the distance between the strings and body top. Expert OS expert FL, NST to adoption.",
                    TranslatedTextSentenceLengths: [167, 37],
                  },
                  {
                    From: "ja",
                    OriginalTextSentenceLengths: [6],
                    TranslatedText: "For more information, click here.",
                    TranslatedTextSentenceLengths: [33],
                  },
                  {
                    From: "ja",
                    OriginalTextSentenceLengths: [15],
                    TranslatedText: "Expert fret edges",
                    TranslatedTextSentenceLengths: [17],
                  },
                  {
                    From: "ja",
                    OriginalTextSentenceLengths: [51],
                    TranslatedText:
                      "Fret edges by craftsmen hand-made finish contributes to the smooth, smooth fingering.",
                    TranslatedTextSentenceLengths: [85],
                  },
                  {
                    From: "ja",
                    OriginalTextSentenceLengths: [24],
                    TranslatedText: "Natural satin finish neck back",
                    TranslatedTextSentenceLengths: [30],
                  },
                  {
                    From: "ja",
                    OriginalTextSentenceLengths: [61],
                    TranslatedText:
                      "Natural satin FI 2 she to achieve smooth and comfortable playability sweating hands neck and back....",
                    TranslatedTextSentenceLengths: [101],
                  },
                  {
                    From: "ja",
                    OriginalTextSentenceLengths: [18],
                    TranslatedText: "Smooth heel neck joints",
                    TranslatedTextSentenceLengths: [23],
                  },
                ]);
              } else if (uid === 2) {
                window["_mstc2"]([
                  {
                    From: "ja",
                    OriginalTextSentenceLengths: [43],
                    TranslatedText:
                      "It is possible a smooth access to the fretboard smooth heel neck joints.",
                    TranslatedTextSentenceLengths: [72],
                  },
                  {
                    From: "ja",
                    OriginalTextSentenceLengths: [11],
                    TranslatedText: "FJTP tailpiece",
                    TranslatedTextSentenceLengths: [14],
                  },
                  {
                    From: "ja",
                    OriginalTextSentenceLengths: [57],
                    TranslatedText:
                      "FGN オリジナルテイル piece FJTP through body style, stop tail style 2 type is selectable.",
                    TranslatedTextSentenceLengths: [81],
                  },
                  {
                    From: "ja",
                    OriginalTextSentenceLengths: [19],
                    TranslatedText: "Expert FLAME LINEUP",
                    TranslatedTextSentenceLengths: [19],
                  },
                  {
                    From: "ja",
                    OriginalTextSentenceLengths: [6],
                    TranslatedText: "EFL-FM",
                    TranslatedTextSentenceLengths: [6],
                  },
                  {
                    From: "ja",
                    OriginalTextSentenceLengths: [6],
                    TranslatedText: "EFL-DE",
                    TranslatedTextSentenceLengths: [6],
                  },
                  {
                    From: "ja",
                    OriginalTextSentenceLengths: [6],
                    TranslatedText: "EFL-HM",
                    TranslatedTextSentenceLengths: [6],
                  },
                  {
                    From: "ja",
                    OriginalTextSentenceLengths: [8],
                    TranslatedText: "PAGE TOP",
                    TranslatedTextSentenceLengths: [8],
                  },
                  {
                    From: "ja",
                    OriginalTextSentenceLengths: [11],
                    TranslatedText: "ONLINE SHOP",
                    TranslatedTextSentenceLengths: [11],
                  },
                  {
                    From: "ja",
                    OriginalTextSentenceLengths: [5],
                    TranslatedText: "LINKS",
                    TranslatedTextSentenceLengths: [5],
                  },
                  {
                    From: "ja",
                    OriginalTextSentenceLengths: [7],
                    TranslatedText: "CONTACT",
                    TranslatedTextSentenceLengths: [7],
                  },
                  {
                    From: "ja",
                    OriginalTextSentenceLengths: [10],
                    TranslatedText: "SITEPOLICY",
                    TranslatedTextSentenceLengths: [10],
                  },
                  {
                    From: "ja",
                    OriginalTextSentenceLengths: [7],
                    TranslatedText: "SITEMAP",
                    TranslatedTextSentenceLengths: [7],
                  },
                  {
                    From: "ja",
                    OriginalTextSentenceLengths: [35],
                    TranslatedText: "All copyright reserved Fujigen Inc.",
                    TranslatedTextSentenceLengths: [35],
                  },
                ]);
              }
              console.log("TIMEOUT RECEIVED SEND MOCK");
              validTranslation = true;
            }, 5000);
          }

          function destroy() {
            try {
              //delete e["_mstc" + d]
            } catch (err) {}
            try {
              //delete e["_mste" + d]
            } catch (err) {}
            try {
              if (domForRequest)
                domForRequest.parentNode.removeChild(domForRequest);
            } catch (a) {}
            try {
              if (timer) clearTimeout(timer);
            } catch (a) {}
            isDestroyed = trueValue;
          }
          this.abort = function (a) {
            isAborted = trueValue;
            errorMessage =
              "The request has been aborted" + (a ? ": " + a : emptyString);
          };
          const c = [];
          for (const key in queries)
            if (queries[key]) c.push(key + "=" + toEncodedString(queries[key]));
          //c.push("oncomplete=_mstc" + d);
          //c.push("onerror=_mste" + d);
          c.push("loc=" + encodeURIComponent(config.locale));
          c.push("ctr=" + encodeURIComponent(config.country));
          if (config.ref) c.push("ref=" + encodeURIComponent(config.ref));
          c.push("rgp=" + encodeURIComponent(config.requestGroup));
          const x = "./" + action + "?" + c.join("&");
          // mate note
          // trying to include scripts with translations
          // d = callback_id, _mstc
          // console.log('trying to call', a.serviceURL);
          domForRequest = sendRequest(x, config.serviceURL, win.document, uid);
          /*if (f) {
                        if (typeof q === C && q > 0) o = setTimeout(function () {
                            n("The request has timed out")
                        }, q)
                    } else {
                        if (a.debug);
                        n("The script could not be loaded")
                    }*/
          return this;
        };
      })(),
      localizedLangs = {
        af: "",
        sq: "",
        am: "",
        ar: "العربية",
        hy: "",
        az: "",
        bn: "",
        bs: "",
        bg: "Български",
        ca: "Català",
        "zh-CHS": "简体中文",
        "zh-CHT": "繁體中文",
        hr: "",
        cs: "Čeština",
        da: "Dansk",
        nl: "Nederlands",
        en: "English",
        et: "Eesti",
        fi: "Suomi",
        fr: "Français",
        de: "Deutsch",
        el: "Ελληνικά",
        gu: "",
        ht: "Haitian Creole",
        he: "עברית",
        is: "",
        hi: "हिंदी",
        mww: "Hmong Daw",
        hu: "Magyar",
        id: "Indonesia",
        it: "Italiano",
        ja: "日本語",
        kn: "",
        kk: "",
        km: "",
        tlh: "Klingon",
        ko: "한국어",
        ku: "",
        lo: "",
        lv: "Latviešu",
        lt: "Lietuvių",
        mg: "",
        ms: "Melayu",
        ml: "",
        mt: "Il-Malti",
        mi: "",
        mr: "",
        my: "",
        no: "Norsk",
        ne: "",
        fa: "Persian",
        pl: "Polski",
        pt: "Português",
        ps: "",
        pa: "",
        ro: "Română",
        ru: "Русский",
        sk: "Slovenčina",
        sl: "Slovenščina",
        es: "Español",
        sv: "Svenska",
        sm: "",
        ta: "",
        te: "",
        th: "ไทย",
        tr: "Türkçe",
        uk: "Українська",
        ur: "اردو",
        vi: "Tiếng Việt",
        cy: "Welsh",
      },
      languageDirs = {
        af: leftToRight,
        sq: leftToRight,
        am: leftToRight,
        hy: leftToRight,
        az: leftToRight,
        bn: leftToRight,
        bs: leftToRight,
        hr: leftToRight,
        gu: leftToRight,
        is: leftToRight,
        kn: leftToRight,
        kk: leftToRight,
        km: leftToRight,
        ku: leftToRight,
        lo: leftToRight,
        mg: leftToRight,
        ml: leftToRight,
        mi: leftToRight,
        mr: leftToRight,
        my: leftToRight,
        ne: leftToRight,
        ps: leftToRight,
        pa: leftToRight,
        sm: leftToRight,
        ta: leftToRight,
        te: leftToRight,
        ar: rightToLeft,
        bg: leftToRight,
        ca: leftToRight,
        "zh-chs": leftToRight,
        "zh-cht": leftToRight,
        cs: leftToRight,
        da: leftToRight,
        nl: leftToRight,
        en: leftToRight,
        et: leftToRight,
        fi: leftToRight,
        fr: leftToRight,
        de: leftToRight,
        el: leftToRight,
        ht: leftToRight,
        he: rightToLeft,
        hi: leftToRight,
        mww: leftToRight,
        hu: leftToRight,
        id: leftToRight,
        it: leftToRight,
        ja: leftToRight,
        tlh: leftToRight,
        "tlh-qaak": leftToRight,
        ko: leftToRight,
        lv: leftToRight,
        lt: leftToRight,
        ms: leftToRight,
        mt: leftToRight,
        no: leftToRight,
        fa: rightToLeft,
        pl: leftToRight,
        pt: leftToRight,
        ro: leftToRight,
        ru: leftToRight,
        sk: leftToRight,
        sl: leftToRight,
        es: leftToRight,
        sv: leftToRight,
        th: leftToRight,
        tr: leftToRight,
        uk: leftToRight,
        ur: rightToLeft,
        vi: leftToRight,
        cy: leftToRight,
      },
      languageMappings = {
        "ar-sa": langArabic,
        ar: langArabic,
        "ar-iq": langArabic,
        "ar-eg": langArabic,
        "ar-ly": langArabic,
        "ar-dz": langArabic,
        "ar-ma": langArabic,
        "ar-tn": langArabic,
        "ar-om": langArabic,
        "ar-ye": langArabic,
        "ar-sy": langArabic,
        "ar-jo": langArabic,
        "ar-lb": langArabic,
        "ar-kw": langArabic,
        "ar-ae": langArabic,
        "ar-bh": langArabic,
        "ar-qa": langArabic,
        "bg-bg": "bg",
        bg: "bg",
        "ca-es": "ca",
        ca: "ca",
        "ca-es-valencia": "ca",
        "zh-cn": langSimplifiedChinese,
        "zh-chs": langSimplifiedChinese,
        "zh-sg": langSimplifiedChinese,
        "zh-tw": langTraditionalChinese,
        "zh-cht": langTraditionalChinese,
        "zh-hk": langTraditionalChinese,
        "zh-mo": langTraditionalChinese,
        "cs-cz": "cs",
        cs: "cs",
        "da-dk": "da",
        da: "da",
        "nl-nl": "nl",
        nl: "nl",
        "nl-be": "nl",
        "en-us": langEnglish,
        en: langEnglish,
        "en-gb": langEnglish,
        "en-au": langEnglish,
        "en-ca": langEnglish,
        "en-nz": langEnglish,
        "en-ie": langEnglish,
        "en-za": langEnglish,
        "en-jm": langEnglish,
        "en-029": langEnglish,
        "en-bz": langEnglish,
        "en-tt": langEnglish,
        "en-zw": langEnglish,
        "en-ph": langEnglish,
        "en-in": langEnglish,
        "en-my": langEnglish,
        "en-sg": langEnglish,
        "et-ee": "et",
        et: "et",
        "fi-fi": "fi",
        fi: "fi",
        "fr-fr": langFrench,
        fr: langFrench,
        "fr-be": langFrench,
        "fr-ca": langFrench,
        "fr-ch": langFrench,
        "fr-lu": langFrench,
        "fr-mc": langFrench,
        "de-de": langGerman,
        de: langGerman,
        "de-ch": langGerman,
        "de-at": langGerman,
        "de-lu": langGerman,
        "de-li": langGerman,
        "el-gr": "el",
        el: "el",
        "he-il": "he",
        he: "he",
        "hi-in": "hi",
        hi: "hi",
        "hu-hu": "hu",
        hu: "hu",
        "id-id": "id",
        id: "id",
        "it-it": "it",
        it: "it",
        "it-ch": "it",
        "ja-jp": "ja",
        ja: "ja",
        "ko-kr": "ko",
        ko: "ko",
        "lv-lv": "lv",
        lv: "lv",
        "lt-lt": "lt",
        lt: "lt",
        "ms-my": "ms",
        ms: "ms",
        "ms-bn": "ms",
        "mt-mt": "mt",
        mt: "mt",
        "nb-no": langNorwegian,
        nb: langNorwegian,
        no: langNorwegian,
        "nn-no": langNorwegian,
        nn: langNorwegian,
        "fa-ir": "fa",
        fa: "fa",
        "pl-pl": "pl",
        pl: "pl",
        "pt-br": "pt",
        pt: "pt",
        "pt-pt": "pt",
        "ro-ro": "ro",
        ro: "ro",
        "ru-ru": "ru",
        ru: "ru",
        "sk-sk": "sk",
        sk: "sk",
        "sl-si": "sl",
        sl: "sl",
        "es-mx": langSpanish,
        es: langSpanish,
        "es-es": langSpanish,
        "es-gt": langSpanish,
        "es-cr": langSpanish,
        "es-pa": langSpanish,
        "es-do": langSpanish,
        "es-ve": langSpanish,
        "es-co": langSpanish,
        "es-pe": langSpanish,
        "es-ar": langSpanish,
        "es-ec": langSpanish,
        "es-cl": langSpanish,
        "es-uy": langSpanish,
        "es-py": langSpanish,
        "es-bo": langSpanish,
        "es-sv": langSpanish,
        "es-hn": langSpanish,
        "es-ni": langSpanish,
        "es-pr": langSpanish,
        "es-us": langSpanish,
        "sv-se": "sv",
        sv: "sv",
        "sv-fi": "sv",
        "th-th": "th",
        th: "th",
        "tr-tr": "tr",
        tr: "tr",
        "uk-ua": "uk",
        uk: "uk",
        "ur-pk": "ur",
        ur: "ur",
        "vi-vn": "vi",
        vi: "vi",
        "cy-gb": "cy",
        cy: "cy",
      };
    window[localizedLangsKey] = localizedLangs;
    window["languageDirs"] = languageDirs;
    window[languageMappingsKey] = languageMappings;
    var domUtils = new (function () {
      const oneHundredPercent = "100%",
        zeroString = "0",
        self = this,
        bmpHeader = [
          66, 77, 0, 0, 0, 0, 0, 0, 0, 0, 54, 0, 0, 0, 40, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 1, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0,
        ],
        base64chars = [],
        charRanges = [
          {
            startChar: "A",
            charCount: 26,
          },
          {
            startChar: "a",
            charCount: 26,
          },
          {
            startChar: zeroString,
            charCount: 10,
          },
          {
            startChar: "+",
            charCount: 1,
          },
          {
            startChar: pathDelimiter,
            charCount: 1,
          },
        ];

      for (let t = 0; t < charRanges.length; ++t)
        for (let y = 0; y < charRanges[t].charCount; ++y)
          base64chars.push(
            String.fromCharCode(charRanges[t].startChar.charCodeAt(0) + y)
          );

      self.addEvent = function (element, event, callback, context) {
        const onTrigger = function () {
          return callback(element, context);
        };
        if (element.addEventListener)
          element.addEventListener(event, onTrigger, falseValue);
        else if (element.attachEvent)
          element.attachEvent("on" + event, onTrigger);
        return onTrigger;
      };
      self.removeEvent = function (el, event, callback) {
        if (el.removeEventListener)
          el.removeEventListener(event, callback, falseValue);
        else if (el.detachEvent) el.detachEvent("on" + event, callback);
      };
      var getStyleValue = (self.getStyleValue = function (element, styleName) {
          if (element.style[styleName]) return element.style[styleName];
          if (element.currentStyle)
            return !element.currentStyle[styleName]
              ? emptyString
              : element.currentStyle[styleName];
          if (document.defaultView && document.defaultView.getComputedStyle) {
            styleName = styleName.replace(/([A-Z])/g, "-$1").toLowerCase();
            const d = document.defaultView.getComputedStyle(
              element,
              emptyString
            );
            return d && d.getPropertyValue(styleName);
          }
          return emptyString;
        }),
        fixIEQuirks = (self.fixIEQuirks = function (element) {
          if (element.tagName.toLowerCase() === strSelect) return;
          const width = getStyleValue(element, "width");
          if (width && width.indexOf(px) > negativeOne)
            element.style.width =
              parseInt(width) +
              parseInt(zeroString + getStyleValue(element, "borderLeftWidth")) +
              parseInt(
                zeroString + getStyleValue(element, "borderRightWidth")
              ) +
              parseInt(zeroString + getStyleValue(element, "paddingLeft")) +
              parseInt(zeroString + getStyleValue(element, "paddingRight")) +
              px;
          const height = getStyleValue(element, "height");
          if (height && height.indexOf(px) > negativeOne)
            element.style.height =
              parseInt(height) +
              parseInt(zeroString + getStyleValue(element, "borderTopWidth")) +
              parseInt(
                zeroString + getStyleValue(element, "borderBottomWidth")
              ) +
              parseInt(zeroString + getStyleValue(element, "paddingTop")) +
              parseInt(zeroString + getStyleValue(element, "paddingBottom")) +
              px;
          for (let b = 0; b < element.childNodes.length; ++b)
            if (element.childNodes[b].nodeType === 1)
              fixIEQuirks(element.childNodes[b]);
        });
      self.absXPos = function (el) {
        if (el.getBoundingClientRect)
          return (
            el.getBoundingClientRect().left +
            (Math.max(
              el.ownerDocument.documentElement.scrollLeft,
              el.ownerDocument.body.scrollLeft
            ) -
              Math.max(
                el.ownerDocument.documentElement.clientLeft,
                el.ownerDocument.documentElement.offsetLeft
              ))
          );
        else return getOffsetLeft(el) + getScrollLeft(el);
      };

      function getOffsetLeft(el) {
        return (
          el.offsetLeft +
          (el.offsetParent && el.offsetParent.nodeType === 1
            ? getOffsetLeft(el.offsetParent)
            : 0)
        );
      }

      function getScrollLeft(el) {
        return (
          (el.parentNode && el.parentNode.nodeType === 1
            ? getScrollLeft(el.parentNode)
            : 0) +
          (el.nodeName.toLowerCase() !== "html" &&
          el.nodeName.toLowerCase() !== "body" &&
          el.scrollLeft
            ? -el.scrollLeft
            : 0)
        );
      }
      self.absYPos = function (el) {
        if (el.getBoundingClientRect)
          return (
            el.getBoundingClientRect().top +
            (Math.max(
              el.ownerDocument.documentElement.scrollTop,
              el.ownerDocument.body.scrollTop
            ) -
              Math.max(
                el.ownerDocument.documentElement.clientTop,
                el.ownerDocument.documentElement.offsetTop
              ))
          );
        else return getOffsetTop(el) + getScrollTop(el);
      };

      function getOffsetTop(el) {
        return (
          el.offsetTop +
          (el.offsetParent && el.offsetParent.nodeType === 1
            ? getOffsetTop(el.offsetParent)
            : 0)
        );
      }

      function getScrollTop(el) {
        return (
          (el.parentNode && el.parentNode.nodeType === 1
            ? getScrollTop(el.parentNode)
            : 0) +
          (el.nodeName.toLowerCase() !== "html" &&
          el.nodeName.toLowerCase() !== "body" &&
          el.scrollTop
            ? -el.scrollTop
            : 0)
        );
      }
      self.getVisibleWidth = function (doc) {
        let result = fourHundred;
        if (window.innerWidth && window.innerWidth > result)
          result = window.innerWidth;
        else if (
          doc.documentElement.clientWidth &&
          doc.documentElement.clientWidth > result
        )
          result = doc.documentElement.clientWidth;
        else if (doc.body.clientWidth && doc.body.clientWidth > result)
          result = doc.body.clientWidth;
        return result;
      };
      self.getVisibleHeight = function (doc) {
        return isQuirksMode(doc)
          ? doc.body.clientHeight
          : doc.documentElement.clientHeight;
      };
      self.getStringByteCount = function (str) {
        return config.escapeNonAscii
          ? encodeURIComponent(str).length
          : encodeURIComponent(str).replace(/%\w\w/g, " ").length;
      };
      var getBlockParent = (self.getBlockParent = function (el) {
          const display = (el._display =
              el._display || domUtils.getStyleValue(el, "display")),
            position = (el._position =
              el._position || domUtils.getStyleValue(el, strPosition));
          return display &&
            display.toLowerCase() === strInline &&
            position.toLowerCase() === "static" &&
            el.parentNode &&
            el.parentNode.nodeType === 1
            ? getBlockParent(el.parentNode)
            : el;
        }),
        isQuirksMode = (self.isQuirksMode = function (doc) {
          if (doc.compatMode && doc.compatMode.indexOf("CSS") !== negativeOne)
            return falseValue;
          else return trueValue;
        }),
        isInternetExplorer11OrHigher = (self.isInternetExplorer11OrHigher =
          function () {
            let result = falseValue;
            if (navigator.appName === "Netscape") {
              const ua = navigator.userAgent,
                reg = new RegExp("Trident/.*rv:([0-9]{1,}[.0-9]{0,})");
              if (reg.exec(ua)) {
                const rv = parseFloat(RegExp.$1);
                if (rv >= 11) result = trueValue;
              }
            }
            return result;
          }),
        S = (self.isInternetExplorerAnyVersion = function () {
          const a = isInternetExplorer(),
            b = isInternetExplorer11OrHigher();
          return a || b;
        }),
        isInternetExplorer = (self.isInternetExplorer = function () {
          return (
            window.navigator.userAgent.toUpperCase().indexOf("MSIE") >
            negativeOne
          );
        });
      self.setGradient = function (el, colorFrom, colorTo, height) {
        if (!height) height = el.offsetHeight;
        if (
          el._mstGradCol1 !== colorFrom.toString() ||
          el._mstGradCol2 !== colorTo.toString()
        ) {
          if (el._mstGradElem && el._mstGradElem.parentNode === el)
            el.removeChild(el._mstGradElem);
          if (colorFrom.toString() === colorTo.toString())
            el.style.backgroundColor = "#" + colorFrom.toString();
          else if (
            isInternetExplorer() &&
            (!document.documentMode || document.documentMode < 8)
          )
            createGradientwithIEFilter(el, colorFrom, colorTo, height);
          else {
            el.style.backgroundRepeat = "repeat-x";
            el.style.backgroundImage =
              "url('data:image/x-ms-bmp;base64," +
              toBase64String(
                bytesFor1pxWidthGradientImage(colorFrom, colorTo, height)
              ) +
              "')";
          }
          el._mstGradCol1 = colorFrom.toString();
          el._mstGradCol2 = colorTo.toString();
        }
      };

      function createGradientwithIEFilter(el, colorFrom, colorTo, height) {
        const endColorPrefix = ",endColorStr=#FF",
          gradientFilterPrefix =
            "progid:DXImageTransform.Microsoft.Gradient(startColorStr=#FF";
        el._mstGradElem = document.createElement(strDiv);
        el._mstGradElem.style.fontSize = zeroPx;
        el._mstGradElem.style.width = oneHundredPercent;
        el._mstGradElem.style.height = height + px;
        el._mstGradElem.style.marginBottom = "-" + el._mstGradElem.style.height;
        el.insertBefore(el._mstGradElem, el.firstChild);
        el._mstGradElem.appendChild(document.createElement(strDiv));
        el._mstGradElem.appendChild(document.createElement(strDiv));
        el._mstGradElem.firstChild.style.width =
          el._mstGradElem.lastChild.style.width = oneHundredPercent;
        el._mstGradElem.firstChild.style.height =
          el._mstGradElem.lastChild.style.height = height / 2 + px;
        el._mstGradElem.firstChild.style.fontSize =
          el._mstGradElem.lastChild.style.fontSize = zeroPx;
        el._mstGradElem.firstChild.style.filter =
          gradientFilterPrefix +
          colorTo +
          endColorPrefix +
          colorTo.interpolate(colorFrom, 0.5) +
          ")";
        el._mstGradElem.lastChild.style.filter =
          gradientFilterPrefix +
          colorFrom +
          endColorPrefix +
          colorFrom.interpolate(colorTo, 0.5) +
          ")";
      }

      function bytesFor1pxWidthGradientImage(colorFrom, colorTo, height) {
        const pixelCount = 1 * height,
          bytes = [];
        for (let b = 0; b < bmpHeader.length; ++b) bytes.push(bmpHeader[b]);
        write4bytesInByteArray(bytes, 2, 54 + pixelCount * 4);
        // BMP width
        write4bytesInByteArray(bytes, 18, 1);
        // BMP height
        write4bytesInByteArray(bytes, 22, height);
        write4bytesInByteArray(bytes, 34, pixelCount * 4);
        for (let b = 0; b < height; ++b) {
          const color =
            b < height / 2
              ? colorFrom.interpolate(colorTo, 0.5 - b / height)
              : colorFrom.interpolate(colorTo, b / height);
          bytes.push(color.b);
          bytes.push(color.g);
          bytes.push(color.r);
          bytes.push(num255);
        }
        return bytes;
      }

      function write4bytesInByteArray(bytes, index, value) {
        bytes.splice(index, 1, value & num255);
        bytes.splice(index + 1, 1, (value >>> 8) & num255);
        bytes.splice(index + 2, 1, (value >>> 16) & num255);
        bytes.splice(index + 3, 1, (value >>> 24) & num255);
      }
      self.applyProtectiveCss = function (el) {
        const contentBox = "content-box",
          normal = "normal";
        el.style.backgroundAttachment = "scroll";
        el.style.backgroundColor = "Transparent";
        el.style.backgroundImage = none;
        el.style.color = "White";
        el.style.fontStyle = normal;
        el.style.fontVariant = normal;
        el.style.fontWeight = normal;
        el.style.letterSpacing = normal;
        el.style.lineHeight = normal;
        el.style.margin = zeroPx;
        el.style.outline = none;
        el.style.overflow = strVisible;
        el.style.padding = zeroPx;
        el.style.verticalAlign = "baseline";
        el.style.wordSpacing = normal;
        el.style.fontFamily =
          '"Segoe UI", Frutiger, "Frutiger Linotype", "Dejavu Sans", "Helvetica Neue", Arial, sans-serif';
        try {
          el.style.fontSize = "inherit";
        } catch (e) {
          el.style.fontSize = oneHundredPercent;
        }
        el.style.textTransform = none;
        el.style.textDecoration = none;
        el.style.border = zeroPx;
        el.style.boxSizing = contentBox;
        el.style.MozBoxSizing = contentBox;
        el.style.float = none;
        el.style.maxWidth = none;
      };

      function toBase64String(bytes) {
        const e = 1048576,
          result = [];
        while (bytes.length) {
          const a = [];
          a.push(bytes.shift());
          result.push(base64chars[(a[0] >> 2) & 63]);
          a.push(bytes.length > 0 ? bytes.shift() : e);
          a.push(bytes.length > 0 ? bytes.shift() : e);
          result.push(base64chars[((a[0] << 4) | (a[1] >>> 4)) & 63]);
          result.push(
            a[1] === e ? "=" : base64chars[((a[1] << 2) | (a[2] >>> 6)) & 63]
          );
          result.push(a[2] === e ? "=" : base64chars[a[2] & 63]);
        }
        return result.join(emptyString);
      }
      const R = (self.clone = function (obj) {
        const result = {};
        for (const key in obj)
          if (typeof obj[key] === "object" && obj !== nullValue)
            result[key] = this.clone(obj);
          else result[key] = obj[key];
        return result;
      });
      self.compress = function (str) {
        let charCodeMap = {},
          negativeIndex = 0,
          pos = 0,
          accumulated = emptyString,
          c,
          nextAccumulated,
          result = [];
        while ((c = str.charAt(pos++))) {
          charCodeMap[c] = c.charCodeAt(0);
          nextAccumulated = accumulated + c;
          if (charCodeMap[nextAccumulated]) accumulated = nextAccumulated;
          else {
            charCodeMap[nextAccumulated] = --negativeIndex;
            result.push(charCodeMap[accumulated]);
            accumulated = c;
          }
        }
        if (accumulated) result.push(charCodeMap[accumulated]);
        return result;
      };
      self.decompress = function (numArray) {
        let stringMap = {},
          negativeIndex = 0,
          pos = 0,
          lastStr = String.fromCharCode(numArray[pos++]),
          curNum,
          curStr,
          result = lastStr;
        while ((curNum = numArray[pos++])) {
          if (curNum > 0) stringMap[curNum] = String.fromCharCode(curNum);
          if (stringMap[curNum]) curStr = stringMap[curNum];
          else if (curNum + 1 === negativeIndex)
            curStr = lastStr + lastStr.charAt(0);
          else throw "Invalid input data";
          result += curStr;
          stringMap[--negativeIndex] = lastStr + curStr.charAt(0);
          lastStr = curStr;
        }
        return result;
      };
      return self;
    })();

    function Color(red, green, blue) {
      const self = this;

      self.r = red;
      self.g = green;
      self.b = blue;

      for (const key in self) {
        self[key] = self[key] > num255 ? num255 : self[key] < 0 ? 0 : self[key];
      }

      self.toString = function () {
        const redStr = "0" + this.r.toString(radixHex),
          greenStr = "0" + this.g.toString(radixHex),
          blueStr = "0" + this.b.toString(radixHex);
        return (
          redStr.substr(redStr.length - 2) +
          greenStr.substr(greenStr.length - 2) +
          blueStr.substr(blueStr.length - 2)
        ).toUpperCase();
      };
      self.interpolate = function (color2, ratio) {
        const self = this;
        if (self.toString() === color2.toString())
          return new Color(self.r, self.g, self.b);
        return new Color(
          Math.round(self.r + ratio * (color2.r - self.r)),
          Math.round(self.g + ratio * (color2.g - self.g)),
          Math.round(self.b + ratio * (color2.b - self.b))
        );
      };
      return self;
    }
    Color.parse = function (colorStr) {
      const matched = colorStr.match(/rgb\((\d+)\s*,\s*(\d+)\s*,\s*(\d+)\)/i);

      if (matched) {
        return new Color(
          parseInt(matched[1], 10),
          parseInt(matched[2], 10),
          parseInt(matched[3], 10)
        );
      }

      colorStr = colorStr.split(" ")[0];

      if (colorStr.substr(0, 1) === "#") {
        if (colorStr.length === 4) {
          return new Color(
            radixHex * parseInt(colorStr.substr(1, 1), radixHex),
            radixHex * parseInt(colorStr.substr(2, 1), radixHex),
            radixHex * parseInt(colorStr.substr(3, 1), radixHex)
          );
        } else if (colorStr.length === 7) {
          return new Color(
            parseInt(colorStr.substr(1, 2), radixHex),
            parseInt(colorStr.substr(3, 2), radixHex),
            parseInt(colorStr.substr(5, 2), radixHex)
          );
        }
      } else if (Color.nameTable[colorStr.toLowerCase()]) {
        return Color.parse(Color.nameTable[colorStr.toLowerCase()]);
      } else throw "Color format not suported: " + colorStr;
    };
    Color.nameTable = {
      Black: "#000000",
      Navy: "#000080",
      DarkBlue: "#00008B",
      MediumBlue: "#0000CD",
      Blue: "#0000FF",
      DarkGreen: "#006400",
      Green: "#008000",
      Teal: "#008080",
      DarkCyan: "#008B8B",
      DeepSkyBlue: "#00BFFF",
      DarkTurquoise: "#00CED1",
      MediumSpringGreen: "#00FA9A",
      Lime: "#00FF00",
      SpringGreen: "#00FF7F",
      Aqua: "#00FFFF",
      Cyan: "#00FFFF",
      MidnightBlue: "#191970",
      DodgerBlue: "#1E90FF",
      LightSeaGreen: "#20B2AA",
      ForestGreen: "#228B22",
      SeaGreen: "#2E8B57",
      DarkSlateGray: "#2F4F4F",
      LimeGreen: "#32CD32",
      MediumSeaGreen: "#3CB371",
      Turquoise: "#40E0D0",
      RoyalBlue: "#4169E1",
      SteelBlue: "#4682B4",
      DarkSlateBlue: "#483D8B",
      MediumTurquoise: "#48D1CC",
      "Indigo ": "#4B0082",
      DarkOliveGreen: "#556B2F",
      CadetBlue: "#5F9EA0",
      CornflowerBlue: "#6495ED",
      MediumAquaMarine: "#66CDAA",
      DimGray: "#696969",
      SlateBlue: "#6A5ACD",
      OliveDrab: "#6B8E23",
      SlateGray: "#708090",
      LightSlateGray: "#778899",
      MediumSlateBlue: "#7B68EE",
      LawnGreen: "#7CFC00",
      Chartreuse: "#7FFF00",
      Aquamarine: "#7FFFD4",
      Maroon: "#800000",
      Purple: "#800080",
      Olive: "#808000",
      Gray: "#808080",
      SkyBlue: "#87CEEB",
      LightSkyBlue: "#87CEFA",
      BlueViolet: "#8A2BE2",
      DarkRed: "#8B0000",
      DarkMagenta: "#8B008B",
      SaddleBrown: "#8B4513",
      DarkSeaGreen: "#8FBC8F",
      LightGreen: "#90EE90",
      MediumPurple: "#9370D8",
      DarkViolet: "#9400D3",
      PaleGreen: "#98FB98",
      DarkOrchid: "#9932CC",
      YellowGreen: "#9ACD32",
      Sienna: "#A0522D",
      Brown: "#A52A2A",
      DarkGray: "#A9A9A9",
      LightBlue: "#ADD8E6",
      GreenYellow: "#ADFF2F",
      PaleTurquoise: "#AFEEEE",
      LightSteelBlue: "#B0C4DE",
      PowderBlue: "#B0E0E6",
      FireBrick: "#B22222",
      DarkGoldenRod: "#B8860B",
      MediumOrchid: "#BA55D3",
      RosyBrown: "#BC8F8F",
      DarkKhaki: "#BDB76B",
      Silver: "#C0C0C0",
      MediumVioletRed: "#C71585",
      "IndianRed ": "#CD5C5C",
      Peru: "#CD853F",
      Chocolate: "#D2691E",
      Tan: "#D2B48C",
      LightGrey: "#D3D3D3",
      PaleVioletRed: "#D87093",
      Thistle: "#D8BFD8",
      Orchid: "#DA70D6",
      GoldenRod: "#DAA520",
      Crimson: "#DC143C",
      Gainsboro: "#DCDCDC",
      Plum: "#DDA0DD",
      BurlyWood: "#DEB887",
      LightCyan: "#E0FFFF",
      Lavender: "#E6E6FA",
      DarkSalmon: "#E9967A",
      Violet: "#EE82EE",
      PaleGoldenRod: "#EEE8AA",
      LightCoral: "#F08080",
      Khaki: "#F0E68C",
      AliceBlue: "#F0F8FF",
      HoneyDew: "#F0FFF0",
      Azure: "#F0FFFF",
      SandyBrown: "#F4A460",
      Wheat: "#F5DEB3",
      Beige: "#F5F5DC",
      WhiteSmoke: "#F5F5F5",
      MintCream: "#F5FFFA",
      GhostWhite: "#F8F8FF",
      Salmon: "#FA8072",
      AntiqueWhite: "#FAEBD7",
      Linen: "#FAF0E6",
      LightGoldenRodYellow: "#FAFAD2",
      OldLace: "#FDF5E6",
      Red: "#FF0000",
      Fuchsia: "#FF00FF",
      Magenta: "#FF00FF",
      DeepPink: "#FF1493",
      OrangeRed: "#FF4500",
      Tomato: "#FF6347",
      HotPink: "#FF69B4",
      Coral: "#FF7F50",
      Darkorange: "#FF8C00",
      LightSalmon: "#FFA07A",
      Orange: "#FFA500",
      LightPink: "#FFB6C1",
      Pink: "#FFC0CB",
      Gold: "#FFD700",
      PeachPuff: "#FFDAB9",
      NavajoWhite: "#FFDEAD",
      Moccasin: "#FFE4B5",
      Bisque: "#FFE4C4",
      MistyRose: "#FFE4E1",
      BlanchedAlmond: "#FFEBCD",
      PapayaWhip: "#FFEFD5",
      LavenderBlush: "#FFF0F5",
      SeaShell: "#FFF5EE",
      Cornsilk: "#FFF8DC",
      LemonChiffon: "#FFFACD",
      FloralWhite: "#FFFAF0",
      Snow: "#FFFAFA",
      Yellow: "#FFFF00",
      LightYellow: "#FFFFE0",
      Ivory: "#FFFFF0",
      White: "#FFFFFF",
    };
    new (function () {
      const table = {};
      for (const key in Color.nameTable)
        table[key.toLowerCase()] = Color.nameTable[key];
      // Convert all nameTable keys to lower case
      Color.nameTable = table;
    })();

    function DOMTranslator(
      Hb,
      dom,
      from,
      to,
      onSuccess,
      onError,
      initialTimeout,
      isSourceFrame,
      isParallelSupported,
      disableUntranslate
    ) {
      let errorMessageForTooDeep = "Element too deep",
        tempTagPrefix = "b",
        serviceLP = "LP",
        scrollEventName = "scroll",
        space = " ",
        self = this,
        that = self,
        langFrom = from,
        langTo = to,
        el = dom,
        localOnSuccess = onSuccess, // Function
        localOnError = onError, // Function
        apiTimeout = initialTimeout,
        progressListeners = [],
        parallel,
        directionStyles,
        supportParallel = isParallelSupported ? trueValue : falseValue,
        alwaysTrue = trueValue,
        Bc;

      window.Microsoft.Translator.APIRequests = 0;
      window.Microsoft.Translator.APIResponses = 0;

      let isUntranslateEnabled = !disableUntranslate && !isParallelSupported,
        batchCursor = 0,
        maxBatches = 9,
        timeoutForCheck = 0,
        cycleToReduceMaxBatches = 15,
        thresholdToStopBatch = oneHundred;

      if (
        navigator.userAgent &&
        (navigator.userAgent.indexOf("Chrome") > negativeOne ||
          navigator.userAgent.indexOf("Mobile") > negativeOne)
      ) {
        cycleToReduceMaxBatches /= 3;
        maxBatches /= 2;
        thresholdToStopBatch /= 3;
        timeoutForCheck = 0; /* APPLE OVERRIDE */
      }
      apiTimeout = apiTimeout * maxBatches;
      const successListeners = [],
        errorListeners = [],
        batches = {}; // Record<number, { Dom: DOM[], Txt: string[] }>
      batches.size = 0;
      let batchCandidates = [],
        imageElements;

      config.requestGroup = Math.floor(Math.random() * 1e9).toString(radixHex);
      config.from = from;
      config.to = to;

      if (dom.nodeType !== 1) throw new Error("Invalid input type");
      if (from === to) {
        activateImages(1);
        if (onSuccess) onSuccess(dom);
        return self;
      }
      if (!el.innerHTML || (!el.innerText && !el.textContent)) {
        if (onSuccess) onSuccess(dom);
        return self;
      }

      let translateRequest,
        latestTranslatedTextAndSentenceLengths,
        gb = 1400,
        maxStringByteCount = 1600,
        textWithNormalizedSpace = (el.innerText || el.textContent).replace(
          /\s+/g,
          space
        ),
        accumulatedHTMLSkeletonCharCount = 0,
        noTranslateTextLength = 0,
        accumulatedHTMLLength = el.innerHTML.length,
        accumulatedCharCount = 0,
        domStack = [el],
        childIndexesInParent = [0],
        textLengthOffsetStack = [
          {
            o: accumulatedHTMLLength, // Text Length
            p: 0, // Text Offset
          },
        ],
        nodesToTranslate = [],
        htmlSkeletons = [],
        domsOfLatestBatch = [],
        textsOfLatestBatch = [],
        textsWithoutTag = [],
        destroyed = falseValue,
        isTranslating = falseValue,
        hasScrolled = falseValue,
        shouldReactToScroll = falseValue;

      self.text = textWithNormalizedSpace;
      self.textLength = textWithNormalizedSpace.length;
      self.showTooltips = trueValue;
      self.showHighlight = trueValue;
      self.sourceFrame = isSourceFrame ? trueValue : falseValue;
      self.detectedLanguage;
      self.transItems = [];

      let stats = [],
        latestRequestStartTime,
        latestRequestTextLength = 0,
        latestRequestDomCount = 0;

      if (
        alwaysTrue &&
        el.ownerDocument &&
        el.ownerDocument.documentElement &&
        el === el.ownerDocument.documentElement
      ) {
        const headElement = el.ownerDocument.getElementsByTagName(head)[0];
        if (headElement) {
          accumulatedHTMLLength -= headElement.innerHTML.length;
          textLengthOffsetStack[0].o = accumulatedHTMLLength;
        }
      }
      if (window.translatorOnBegin || document.translatorOnBegin) {
        try {
          (window.translatorOnBegin || document.translatorOnBegin)();
        } catch (err) {
          console.log(err);
        }
      }

      function onScroll() {
        hasScrolled = trueValue;
        if (shouldReactToScroll) {
          shouldReactToScroll = falseValue;
          if (batches.size < maxBatches)
            if (isParallelSupported && isSourceFrame) traverseDomToTranslate();
            else
              setTimeout(function () {
                traverseDomToTranslate();
              }, timeoutForCheck);
        }
      }

      domUtils.addEvent(
        el.ownerDocument.defaultView || el.ownerDocument.parentWindow,
        scrollEventName,
        onScroll
      );

      const cancel = (self.cancel = function () {
        if (
          window.Microsoft.TranslatorOverride &&
          window.Microsoft.TranslatorOverride.hideTooltip
        )
          window.Microsoft.TranslatorOverride.hideTooltip();
        if (!el) return;
        destroyed = trueValue;
        if (translateRequest) translateRequest.abort("canceled by user.");
        untranslate(el);
        el = nullValue;
      });

      try {
        if (
          !toolbar ||
          !toolbar.addExitEvent ||
          !toolbar.setProgress ||
          !toolbar.setLanguagePair
        )
          toolbar = nullValue;
      } catch (err) {
        toolbar = nullValue;
      }

      const exit = (self.exit = function () {
        cancel();
        if (toolbar) toolbar.hide();
      });

      function triggerProgress(progress) {
        progress = Math.max(progress, 0);
        progress = Math.min(progress, oneHundred);
        for (let i = 0; i < progressListeners.length; ++i)
          progressListeners[i](progress);
      }
      self.addProgressEvent = function (onProgressChange) {
        progressListeners.push(onProgressChange);
      };
      if (!that.sourceFrame)
        if (toolbar && toolbar.setProgress)
          that.addProgressEvent(toolbar.setProgress);
      self.setParallel = function (value) {
        parallel = value;
      };
      if (toolbar) {
        toolbar.addExitEvent(self.exit);
        toolbar.setProgress(0);
        toolbar.setLanguagePair(langFrom, langTo);
      }
      const ToggleEnum = {
          Inherit: 0,
          On: 1,
          Off: 2,
          Skip: 3,
        },
        metaForToggle = {
          google: {
            value: {
              notranslate: ToggleEnum.Off,
            },
            content: {
              notranslate: ToggleEnum.Off,
            },
          },
          microsoft: {
            value: {
              notranslate: ToggleEnum.Off,
            },
            content: {
              notranslate: ToggleEnum.Off,
            },
          },
        },
        attributesForToggle = {
          translate: {
            true: ToggleEnum.On,
            yes: ToggleEnum.On,
            false: ToggleEnum.Off,
            no: ToggleEnum.Off,
            skip: ToggleEnum.Skip,
          },
        },
        classNamesForToggle = {
          notranslate: ToggleEnum.Off,
          skiptranslate: ToggleEnum.Skip,
        };
      if (shouldTranslatePage(el) === ToggleEnum.Off) {
        if (onSuccess) onSuccess(dom);
        return;
      }
      // Util function for array to get last element
      domStack.top =
        childIndexesInParent.top =
        textLengthOffsetStack.top =
          function () {
            return this[this.length - 1];
          };
      const tagNamesToSkipTranslate = {
          head: 1,
          script: 1,
          style: 1,
          code: 1,
          samp: 1,
          var: 1,
          kbd: 1,
          pre: 1,
          input: 1,
          object: 1,
          address: 1,
          textarea: 1,
          noscript: 1,
        },
        tagNamesToIgnoreText = {
          hr: 1,
          option: 1,
          title: 1,
          br: 1,
          frame: 1,
          iframe: 1,
        };
      for (const key in tagNamesToSkipTranslate) tagNamesToIgnoreText[key] = 1;
      delete tagNamesToIgnoreText["code"];
      delete tagNamesToIgnoreText["samp"];
      delete tagNamesToIgnoreText["var"];

      function getDirectionRelatedStyles(langCode) {
        let result;
        if (languageDirs[langCode] === rightToLeft)
          result = {
            direction: rightToLeft,
            textAlign: strRight,
          };
        else
          result = {
            direction: leftToRight,
            textAlign: strLeft,
          };
        return result;
      }
      if (!isSourceFrame && !isParallelSupported)
        directionStyles = getDirectionRelatedStyles(to);

      function getPathForCurrentElements() {
        const result = [];
        for (let a = domStack.length - 2; a >= 0; --a)
          if (domStack[a].id) {
            result.unshift(domStack[a].id.toString());
            break;
          } else
            result.unshift(
              (domStack[a].nodeName && domStack[a].nodeName.toLowerCase
                ? domStack[a].nodeName.toLowerCase()
                : emptyString) +
                "-" +
                childIndexesInParent[a].toString()
            );
        return result.join("_");
      }

      function traverseDomToTranslate() {
        const attrNameForLength = "len";
        if (
          config.maxChars &&
          config.maxChars < accumulatedCharCount &&
          !hasScrolled &&
          !that.sourceFrame
        ) {
          if (!shouldReactToScroll) {
            reportStats();
            shouldReactToScroll = trueValue;
          }
          return;
        }
        let textOrInlineNodes = [],
          needCleanUp = falseValue,
          nodePath = nullValue;
        if (alwaysTrue && textLengthOffsetStack.length) {
          let extractedTextLength = 0;
          for (let i = 0; i < textLengthOffsetStack.length; ++i)
            extractedTextLength += parseInt(textLengthOffsetStack[i].p);
          triggerProgress(
            Math.min(
              (99.999 * (extractedTextLength - noTranslateTextLength)) /
                (accumulatedHTMLLength - noTranslateTextLength),
              99.999
            )
          );
        }

        // Traverse the given DOM
        while (
          domStack.length > 0 &&
          (accumulatedHTMLSkeletonCharCount < gb || textOrInlineNodes.length)
        ) {
          if (
            domStack.length &&
            isDocumentAccessible(domStack.top()) &&
            shouldTranslate(domStack.top())
          ) {
            domStack.push(
              domStack.top().contentWindow.document.documentElement
            );
            childIndexesInParent.push(0);
            textLengthOffsetStack.push({
              o: 0,
              p: 0,
            });
            needCleanUp = trueValue;
            domUtils.addEvent(
              domStack.top().ownerDocument.defaultView ||
                domStack.top().ownerDocument.parentWindow,
              scrollEventName,
              onScroll
            );
            if (alwaysTrue) {
              var len =
                typeof domStack.top().length === numberTypeString
                  ? domStack.top().length
                  : domStack.top().getAttribute(attrNameForLength) ||
                    (domStack.top().innerHTML && domStack.top().innerHTML.length
                      ? domStack.top().innerHTML.length
                      : 0);
              try {
                if (
                  !domStack.top().length &&
                  !domStack.top().getAttribute(attrNameForLength)
                )
                  domStack.top().setAttribute(attrNameForLength, len);
              } catch (err) {}
              textLengthOffsetStack[textLengthOffsetStack.length - 1].o = len;
              accumulatedHTMLLength += len;
            }
          } else if (
            domStack.length &&
            domStack.top().firstChild &&
            domStack.top().firstChild.parentNode === domStack.top() &&
            !isTextOrInlineNode(domStack.top()) &&
            shouldTranslate(domStack.top())
          ) {
            domStack.push(domStack.top().firstChild);
            childIndexesInParent.push(0);
            textLengthOffsetStack.push({
              o: 0,
              p: 0,
            });
            needCleanUp = trueValue;
            if (alwaysTrue) {
              var len =
                typeof domStack.top().length === numberTypeString
                  ? domStack.top().length
                  : domStack.top().getAttribute(attrNameForLength) ||
                    (domStack.top().innerHTML && domStack.top().innerHTML.length
                      ? domStack.top().innerHTML.length
                      : 0);
              try {
                if (
                  !domStack.top().length &&
                  !domStack.top().getAttribute(attrNameForLength)
                )
                  domStack.top().setAttribute(attrNameForLength, len);
              } catch (err) {}
              textLengthOffsetStack[textLengthOffsetStack.length - 1].o = len;
            }
          } else {
            while (
              domStack.length &&
              !domStack.top().nextSibling &&
              !domStack.top().nextElementSibling
            ) {
              domStack.pop();
              childIndexesInParent.pop();
              textLengthOffsetStack.pop();
              needCleanUp = trueValue;
            }
            if (domStack.length > 1) {
              if (alwaysTrue && domStack.top().nodeName.toLowerCase() !== head)
                textLengthOffsetStack[textLengthOffsetStack.length - 2].p +=
                  parseInt(
                    textLengthOffsetStack[textLengthOffsetStack.length - 1].o
                  );
              domStack.push(domStack.pop().nextSibling);
              textLengthOffsetStack[textLengthOffsetStack.length - 1] = {
                o: 0,
                p: 0,
              };
              if (!isTextOrInlineNode(domStack.top())) needCleanUp = trueValue;
              if (alwaysTrue) {
                var len =
                  typeof domStack.top().length === numberTypeString
                    ? domStack.top().length
                    : domStack.top().getAttribute(attrNameForLength) ||
                      (domStack.top().innerHTML &&
                      domStack.top().innerHTML.length
                        ? domStack.top().innerHTML.length
                        : 0);
                try {
                  if (
                    !domStack.top().length &&
                    !domStack.top().getAttribute(attrNameForLength)
                  )
                    domStack.top().setAttribute(attrNameForLength, len);
                } catch (j) {}
                textLengthOffsetStack[textLengthOffsetStack.length - 1].o = len;
              }
            } else {
              domStack.pop();
              childIndexesInParent.pop();
              textLengthOffsetStack.pop();
              needCleanUp = trueValue;
            }
          }

          if (
            needCleanUp ||
            (domStack.length > 0 && !isTextOrInlineNode(domStack.top()))
          ) {
            if (textOrInlineNodes.length)
              try {
                cleanupNodesAndPrepareHtmlForThem(textOrInlineNodes, nodePath);
              } catch (l) {
                if (config.debug);
              }
            needCleanUp = falseValue;
            nodePath = nullValue;
          }

          if (domStack.length) {
            if (domStack.top().clientHeight < domStack.top().scrollHeight)
              domUtils.addEvent(domStack.top(), scrollEventName, onScroll);
            if (isTextOrInlineNode(domStack.top())) {
              if (!nodePath) nodePath = getPathForCurrentElements();
              ++childIndexesInParent[childIndexesInParent.length - 1];
              textOrInlineNodes.push(domStack.top());
            }
            if (
              domStack.top().nodeName.toLowerCase() !== head &&
              !shouldTranslate(domStack.top())
            )
              noTranslateTextLength += parseInt(textLengthOffsetStack.top().o);
            adjustAlign(domStack.top());
          }
        }
        if (accumulatedHTMLSkeletonCharCount > 0 || batchCandidates.length > 0)
          translatePreparedNodesAndTexts();
        else {
          if (batches.size > 0 || batchCandidates.length > 0) return;
          triggerProgress(oneHundred);
          activateImages(1);
          if (localOnSuccess) localOnSuccess(el);
          localOnSuccess = nullValue;
          if (
            window.Microsoft.TranslatorOverride &&
            window.Microsoft.TranslatorOverride.showHighlight
          )
            window.Microsoft.TranslatorOverride.showHighlight(
              that,
              langFrom,
              langTo
            );
          if (window.translatorOnComplete || document.translatorOnComplete)
            try {
              (window.translatorOnComplete || document.translatorOnComplete)();
            } catch (l) {
              if (config.debug);
            }
          reportStats();
        }
      }

      function adjustAlign(el) {
        const attrName = "adjustalign";
        try {
          if (!el.getAttribute) return;
          el.adjustAlign =
            el.getAttribute(attrName) &&
            !(el.getAttribute(attrName).toLowerCase() === strFalse);
          if (!el.adjustAlign) el.adjustAlign = el.parentNode.adjustAlign;
          if (el.adjustAlign === undefined || el.adjustAlign === nullValue)
            el.adjustAlign = trueValue;
          if (
            directionStyles &&
            el &&
            el.style &&
            shouldTranslate(el) &&
            !that.sourceFrame &&
            config.service !== serviceLP &&
            el.adjustAlign
          )
            for (const d in directionStyles)
              try {
                const e = domUtils.getStyleValue(el, d);
                if (e !== directionStyles[d]) {
                  if (
                    d === "textAlign" &&
                    ((e && e.toLowerCase().indexOf("center") !== negativeOne) ||
                      (el.tagName && el.tagName.toLowerCase() === "center"))
                  )
                    continue;
                  if (isUntranslateEnabled) {
                    if (!el._mstStyle) el._mstStyle = {};
                    if (el.style[d]) el._mstStyle[d] = el.style[d];
                    else el._mstStyle[d] = e;
                  }
                  el.style[d] = directionStyles[d];
                }
              } catch (e) {
                console.error(e);
              }
        } catch (e) {
          console.error(e);
        }
      }

      function activateImages(factor) {
        const attrName = "_mssrc";
        if (!imageElements)
          if (el.getElementsByTagName)
            imageElements = el.getElementsByTagName(tagImg);
          else if (el.documentElement.getElementsByTagName)
            imageElements = el.documentElement.getElementsByTagName(tagImg);
          else if (el.ownerDocument.documentElement.getElementsByTagName)
            imageElements =
              el.ownerDocument.documentElement.getElementsByTagName(tagImg);
        let img;
        if (imageElements && imageElements.length > 0) var d = 0;
        for (
          let i = 0;
          i < imageElements.length &&
          d < Math.max(1, imageElements.length * factor);
          i++
        ) {
          img = imageElements[i];
          if (img.getAttribute(attrName)) {
            img.src = img.getAttribute(attrName);
            img.removeAttribute(attrName);
            d++;
          }
        }
      }

      function reportStats() {
        if (!parallel || !that.sourceFrame) {
          const b = [];
          b.push("svc=" + encodeURIComponent(config.service));
          b.push("loc=" + encodeURIComponent(config.locale));
          b.push("ref=" + encodeURIComponent(config.ref));
          b.push(
            "from=" + encodeURIComponent(langFrom ? langFrom : emptyString)
          );
          b.push("to=" + encodeURIComponent(langTo ? langTo : emptyString));
          b.push(
            "dtc=" +
              encodeURIComponent(
                that.detectedLanguage ? that.detectedLanguage : emptyString
              )
          );
          let d = textsWithoutTag.join(" | "),
            e = domUtils.getStringByteCount(d);
          if (e > 128)
            d = d.substr(0, Math.round((d.length * 128) / e)) + "...";
          b.push("text=" + toEncodedString(d ? d : emptyString));
          for (let c = 0; c < stats.length && c < 64; ++c)
            b.push(
              c.toString() +
                "=" +
                [
                  stats[c].r,
                  stats[c].c,
                  stats[c].s,
                  stats[c].e,
                  stats[c].l,
                ].join("_")
            );
          sendRequest("/sync.ashx?" + b.join("&"));
          textsWithoutTag = [];
          stats = [];
        }
      }

      function shouldTranslate(node) {
        if (node.nodeType === 3) return trueValue;
        if (node.nodeType !== 1) return falseValue;
        if (!node.hasChildNodes() && !isDocumentAccessible(node))
          return falseValue;
        let c;
        try {
          c = getTranslateToggleValueForNode(node);
        } catch (d) {
          if (config.debug);
        }
        if (c === ToggleEnum.Off || c === ToggleEnum.Skip) return falseValue;
        if (tagNamesToSkipTranslate[node.nodeName.toLowerCase()])
          return falseValue;
        if (!node.innerHTML || !notEmptyString(node.innerHTML))
          return falseValue;
        return trueValue;
      }

      function isTextOrInlineNode(node) {
        if (node.nodeType === 3) return trueValue;
        else if (
          node.nodeType !== 1 ||
          node._mstChunk ||
          domUtils.getStyleValue(node, "display").toLowerCase() !== strInline ||
          domUtils.getStyleValue(node, strPosition).toLowerCase() !==
            "static" ||
          tagNamesToIgnoreText[node.nodeName.toLowerCase()]
        )
          return falseValue;
        for (let b = 0; b < node.childNodes.length; ++b)
          if (!isTextOrInlineNode(node.childNodes[b])) return falseValue;
        return trueValue;
      }

      function isDocumentAccessible(b) {
        try {
          if (
            b.contentWindow &&
            b.contentWindow.document &&
            b.contentWindow.document.documentElement
          )
            return trueValue;
        } catch (c) {
          if (config.debug);
        }
        return falseValue;
      }

      function getTranslateToggleValueForNode(node) {
        let result = ToggleEnum.Inherit;
        if (!node.getAttribute) return result;
        for (const attrName in attributesForToggle) {
          const attrValue = getAttribute(node, attrName);

          if (attrValue != nullValue) {
            var valueToggleMap = attributesForToggle[attrName];

            toggle = valueToggleMap[attrValue.toString().toLowerCase()];
            result = toggle || result;
            if (result === ToggleEnum.Off || result === ToggleEnum.Skip)
              return result;
          }
        }
        const className =
          getAttribute(node, "class") || getAttribute(node, "className");
        if (className) {
          const classes = className.toString().split(space);
          for (let i = 0; i < classes.length; i++) {
            var klass = classes[i],
              toggle = classNamesForToggle[klass.toLowerCase()];
            result = toggle || result;
            if (result === ToggleEnum.Off) return result;
          }
        }
        return result;
      }

      function getAttribute(c, b) {
        try {
          return c.getAttribute(b) || c[b];
        } catch (d) {
          if (config.debug);
          return nullValue;
        }
      }

      function shouldTranslatePage(el) {
        let result = ToggleEnum.Inherit,
          metas = el.ownerDocument.getElementsByTagName("meta");
        for (let d = 0; d < metas.length; d++) {
          const meta = metas[d],
            metaName = getAttribute(meta, "name");
          if (metaName)
            if (metaForToggle[metaName.toString().toLowerCase()]) {
              const item = metaForToggle[metaName.toString().toLowerCase()];
              for (const attrName in item) {
                let attr = getAttribute(meta, attrName);
                if (attr) {
                  attr = attr.toString().toLowerCase();
                  const toggle = item[attrName][attr];
                  if (toggle) {
                    result = toggle || result;
                    if (result === ToggleEnum.Off) return result;
                  }
                  if (attr.match(/^notranslateclasses\s/i)) {
                    const i = attr.split(/\s+/);
                    for (let e = 1; e < i.length; e++)
                      classNamesForToggle[i[e]] = ToggleEnum.Off;
                  }
                }
              }
            }
        }
        return result;
      }

      // Prepare nodes that are ready for translation
      function cleanupNodesAndPrepareHtmlForThem(nodes, nodePath) {
        trimNodesCollapsableToEmptyString(nodes);

        const parentNode = getOrCreateExclusiveParent(nodes);
        if (parentNode && shouldTranslate(parentNode)) {
          parentNode._mstHash = hashStringToNumber(nodePath);
          // In case hash function gets collision, try to get a unique hash number
          while (that[parentNode._mstHash]) ++parentNode._mstHash;
          that[parentNode._mstHash] = parentNode;
          if (supportParallel && !that.sourceFrame) {
            if (supportParallel && parallel && parallel[parentNode._mstHash]) {
              htmlSkeleton = htmlSkeletonForTranslation(
                parallel[parentNode._mstHash],
                tempTagPrefix
              );
              var htmlSkeletonForCurrent = htmlSkeletonForTranslation(
                parentNode,
                tempTagPrefix
              );
              if (
                htmlSkeleton.split(/<b\d+/g).length !=
                htmlSkeletonForCurrent.split(/<b\d+/g).length
              ) {
                if (config.debug);
                return;
              }
            } else {
              if (config.debug);
              return;
            }
          } else {
            var htmlSkeleton = htmlSkeletonForTranslation(
              parentNode,
              tempTagPrefix
            );
          }

          if (notEmptyString(htmlSkeleton)) {
            accumulatedHTMLSkeletonCharCount +=
              domUtils.getStringByteCount(htmlSkeleton);
            nodesToTranslate.push(parentNode);
            htmlSkeletons.push(htmlSkeleton);
          }
        }
      }

      // Given a list of nodes that share the same parent node, get the parent node or
      // create a new parent node that exclusively contains the given nodes
      function getOrCreateExclusiveParent(nodes) {
        let result = nullValue;
        if (nodes.length > 0)
          if (nodes.length === 1 && nodes[0].nodeType === 1)
            result = nodes.pop();
          else if (
            nodes[0].parentNode &&
            nodes.length === nodes[0].parentNode.childNodes.length
          ) {
            result = nodes.pop().parentNode;
            while (nodes.length > 0) nodes.pop();
          } else {
            result = nodes[0].ownerDocument.createElement(strFont);
            result._mstChunk = trueValue;
            if (nodes[0].parentNode)
              nodes[0].parentNode.insertBefore(result, nodes[0]);
            while (nodes.length > 0) result.appendChild(nodes.shift());
          }
        return result;
      }

      // Given a list of nodes in the same parent node, both the leading and trailing empty nodes
      // (or with just spaces) contribute no characters into the extracted text, so they could be removed
      function trimNodesCollapsableToEmptyString(nodes) {
        let c = trueValue;
        while (c) {
          c = falseValue;
          if (nodes.length === 1 && !shouldTranslate(nodes[0])) return;
          if (
            nodes.length === 1 &&
            nodes[0].nodeType === 1 &&
            nodes[0].childNodes.length > 0
          ) {
            const e = nodes.pop();
            for (let d = 0; d < e.childNodes.length; d++)
              nodes.push(e.childNodes[d]);
            c = trueValue;
          }
          if (nodes.length > 0)
            if (!isBlockNodeOrWithValidText(nodes[0])) {
              var b = nodes.shift();
              if (b.nodeType === 3 && !b.nodeValue) b.parentNode.removeChild(b);
              c = trueValue;
            } else if (!isBlockNodeOrWithValidText(nodes[nodes.length - 1])) {
              var b = nodes.pop();
              if (b.nodeType === 3 && !b.nodeValue) b.parentNode.removeChild(b);
              c = trueValue;
            }
        }
        if (nodes.length === 1 && !isBlockNodeOrWithValidText(nodes[0]))
          nodes.pop();
      }

      function notEmptyString(a) {
        return !!(
          a.match(/[a-zA-Z0-9\xC0-\uFFFF]/) ||
          (isParallelSupported &&
            a.replace(/[\r\n\s]/g, emptyString).length > 0)
        );
      }

      function isBlockNodeOrWithValidText(node) {
        if (!isTextOrInlineNode(node)) return trueValue;
        let str = emptyString;
        switch (node.nodeType) {
          case 1:
            str = node.innerText || node.textContent || emptyString;
            break;
          case 3:
            str = node.nodeValue || emptyString;
        }
        if (str.match(/^[\s\xA0]*$/)) return falseValue;
        if (notEmptyString(str)) return trueValue;
        return falseValue;
      }

      // Create a HTML to copy the structure of the given node, excluding all nodes that should not be translated
      // I think the result HTML is for translation to fit in
      function htmlSkeletonForTranslation(node, tagPrefix, level) {
        level = level ? level : 1;
        if (level > 9) throw new Error(errorMessageForTooDeep);
        let parts = [],
          translationIndexInSameLevel = 0,
          m = 0;
        for (let i = 0; i < node.childNodes.length; ++i)
          switch (node.childNodes[i].nodeType) {
            case 1:
              var tag =
                tagPrefix +
                level.toString() +
                translationIndexInSameLevel.toString();
              try {
                var toggle = getTranslateToggleValueForNode(node.childNodes[i]);
              } catch (k) {
                if (config.debug);
              }
              if (
                toggle === ToggleEnum.Skip &&
                node.childNodes[i].previousSibling &&
                node.childNodes[i].previousSibling.nodeType === 1
              )
                node.childNodes[i].previousSibling._mstSkipNext =
                  translationIndexInSameLevel;
              else if (
                toggle === ToggleEnum.Skip &&
                node.childNodes[i].nextSibling &&
                node.childNodes[i].nextSibling.nodeType === 1
              )
                node.childNodes[i].nextSibling._mstSkipPrev =
                  translationIndexInSameLevel;
              else {
                parts.push("<");
                parts.push(tag);
                parts.push(gtSign);
                if (toggle !== ToggleEnum.Skip)
                  parts.push(
                    htmlSkeletonForTranslation(
                      node.childNodes[i],
                      tagPrefix,
                      level + 1
                    )
                  );
                parts.push("</");
                parts.push(tag);
                parts.push(gtSign);
              }

              ++translationIndexInSameLevel;
              break;
            case 3:
              if (node.childNodes[i].nodeValue) {
                const h = node.childNodes[i].nodeValue.replace(
                  /[\s\xA0]+/g,
                  space
                );
                if (h !== node.childNodes[i].nodeValue)
                  node.replaceChild(
                    node.ownerDocument.createTextNode(h),
                    node.childNodes[i]
                  );
                parts.push(encodeHtmlEntities(h));
              }
          }
        return parts.join(emptyString);
      }

      function renderTranslatedText(
        el,
        translatedText,
        tagPrefix,
        textSentenceLengths,
        createdNodes,
        tagLevel
      ) {
        if (!tagLevel) tagLevel = 1;
        if (tagLevel > 9) throw new Error(errorMessageForTooDeep);
        const childElements = [];
        for (let i = 0; i < el.childNodes.length; ++i) {
          if (el.childNodes[i].parentNode !== el)
            el.appendChild(el.childNodes[i--]);
          if (el.childNodes[i].nodeType === 1)
            childElements.push(el.childNodes[i]);
        }
        let currentOffset = 0,
          childIndex = 0;
        translatedText.replace(
          new RegExp(
            "<" +
              tagPrefix +
              tagLevel +
              "(\\d+)>(.*)<\\/" +
              tagPrefix +
              tagLevel +
              "\\1>",
            "gi"
          ),
          function (
            matchedText,
            strChildElementIndex,
            innerHtml,
            offsetInTranslatedText
          ) {
            while (
              textSentenceLengths &&
              textSentenceLengths[0] <= offsetInTranslatedText - currentOffset
            ) {
              var textNode = el.ownerDocument.createTextNode(
                textFromHtml(
                  translatedText.substr(currentOffset, textSentenceLengths[0])
                )
              );
              createdNodes[createdNodes.length - 1].push(textNode);
              createdNodes.push([]);
              el.insertBefore(
                textNode,
                childIndex < el.childNodes.length
                  ? el.childNodes[childIndex]
                  : nullValue
              );
              ++childIndex;
              currentOffset += textSentenceLengths[0];
              textSentenceLengths.shift();
            }
            if (currentOffset < offsetInTranslatedText) {
              var textNode = el.ownerDocument.createTextNode(
                textFromHtml(
                  translatedText.substr(
                    currentOffset,
                    offsetInTranslatedText - currentOffset
                  )
                )
              );
              if (textSentenceLengths) {
                createdNodes[createdNodes.length - 1].push(textNode);
                textSentenceLengths[0] -=
                  offsetInTranslatedText - currentOffset;
              }
              el.insertBefore(
                textNode,
                childIndex < el.childNodes.length
                  ? el.childNodes[childIndex]
                  : nullValue
              );
              ++childIndex;
              currentOffset = offsetInTranslatedText;
            }
            const childElement = childElements[parseInt(strChildElementIndex)];
            if (childElement !== el.childNodes[childIndex])
              el.insertBefore(childElement, el.childNodes[childIndex]);
            ++childIndex;
            if (typeof childElement._mstSkipPrev === numberTypeString) {
              const elToSkip = childElements[childElement._mstSkipPrev];
              el.insertBefore(elToSkip, childElement);
              ++childIndex;
              if (textSentenceLengths)
                createdNodes[createdNodes.length - 1].push(elToSkip);
              childElement._mstSkipPrev = emptyString;
            }
            if (shouldTranslate(childElement))
              if (textSentenceLengths)
                if (textSentenceLengths[0] < matchedText.length) {
                  createdNodes.push([]);
                  textSentenceLengths[0] -= 4 + strChildElementIndex.length;
                  renderTranslatedText(
                    childElement,
                    innerHtml,
                    tagPrefix,
                    textSentenceLengths,
                    createdNodes,
                    tagLevel + 1
                  );
                  textSentenceLengths[0] -= 5 + strChildElementIndex.length;
                } else {
                  createdNodes[createdNodes.length - 1].push(childElement);
                  renderTranslatedText(
                    childElement,
                    innerHtml,
                    tagPrefix,
                    nullValue,
                    nullValue,
                    tagLevel + 1
                  );
                  textSentenceLengths[0] -= matchedText.length;
                }
              else
                renderTranslatedText(
                  childElement,
                  innerHtml,
                  tagPrefix,
                  nullValue,
                  nullValue,
                  tagLevel + 1
                );
            else if (textSentenceLengths) {
              if (textSentenceLengths[0] < matchedText.length)
                createdNodes.push([childElement], []);
              else createdNodes[createdNodes.length - 1].push(childElement);
              for (
                var len = matchedText.length;
                len > textSentenceLengths[0];
                textSentenceLengths.shift()
              )
                len -= textSentenceLengths[0];
              textSentenceLengths[0] -= len;
            }
            if (typeof childElement._mstSkipNext === numberTypeString) {
              const r = childElements[childElement._mstSkipNext];
              el.insertBefore(r, childElement.nextSibling);
              ++childIndex;
              if (textSentenceLengths)
                createdNodes[createdNodes.length - 1].push(r);
              childElement._mstSkipNext = emptyString;
            }
            currentOffset += matchedText.length;
          }
        );
        while (
          textSentenceLengths &&
          textSentenceLengths[0] <= translatedText.length - currentOffset
        ) {
          var textNode = el.ownerDocument.createTextNode(
            textFromHtml(
              translatedText.substr(currentOffset, textSentenceLengths[0])
            )
          );
          createdNodes[createdNodes.length - 1].push(textNode);
          createdNodes.push([]);
          el.insertBefore(
            textNode,
            childIndex < el.childNodes.length
              ? el.childNodes[childIndex]
              : nullValue
          );
          ++childIndex;
          currentOffset += textSentenceLengths[0];
          textSentenceLengths.shift();
        }
        if (currentOffset < translatedText.length) {
          var textNode = el.ownerDocument.createTextNode(
            textFromHtml(
              translatedText.substr(
                currentOffset,
                translatedText.length - currentOffset
              )
            )
          );
          el.insertBefore(
            textNode,
            childIndex < el.childNodes.length
              ? el.childNodes[childIndex]
              : nullValue
          );
          ++childIndex;
          if (textSentenceLengths) {
            createdNodes[createdNodes.length - 1].push(textNode);
            textSentenceLengths[0] -= translatedText.length - currentOffset;
          }
        }
        while (childIndex < el.childNodes.length)
          el.removeChild(el.childNodes[childIndex]);
        if (createdNodes && createdNodes[createdNodes.length - 1].length)
          createdNodes.push([]);
      }

      function encodeHtmlEntities(b) {
        if (config.service === serviceLP && Default.Globals.PhraseAlignment)
          return b.replace(/[\s\xA0]/g, space);
        else
          return b
            .replace(/&/g, "&amp;")
            .replace(/</g, "&lt;")
            .replace(/>/g, "&gt;")
            .replace(/[\s\xA0]/g, space);
      }

      function textFromHtml(b) {
        if (config.service === serviceLP && Default.Globals.PhraseAlignment)
          return b;
        else
          return b
            .replace(/<\w+>/g, emptyString)
            .replace(/<\/\w+>/g, emptyString)
            .replace(/&gt;/gi, gtSign)
            .replace(/&lt;/gi, "<")
            .replace(/&amp;/gi, "&");
      }

      function hashStringToNumber(str) {
        str = str.replace(/[\s\xA0]/g, emptyString);
        let result = 0;
        for (let i = 0; i < str.length; ++i)
          result += str.charCodeAt(i) * 13 * (i + 7);
        return result;
      }

      function translatePreparedNodesAndTexts() {
        let doms = [],
          texts = [],
          requestTextLength = 0,
          textLength = domUtils.getStringByteCount(htmlSkeletons[0]);
        if (batchCandidates.length > 0 && !isTranslating) {
          isTranslating = trueValue;
          const item = batchCandidates.shift();
          textsOfLatestBatch = item.txt;
          requestTextLength = item.length;
          domsOfLatestBatch = item.dom;
          let text = textsOfLatestBatch[0],
            maxTextLen = Math.floor((text.length * gb) / requestTextLength);
          textsOfLatestBatch = [text.substr(0, maxTextLen), text];
          while (
            domUtils.getStringByteCount(textsOfLatestBatch[0]) > gb &&
            maxTextLen > fourHundred
          ) {
            maxTextLen = Math.floor(maxTextLen / 2);
            textsOfLatestBatch = [text.substr(0, maxTextLen), text];
          }
          latestTranslatedTextAndSentenceLengths = {
            aTxt: [],
            aSrcSnt: [],
            aTgtSnt: [],
          };
          latestRequestStartTime = new Date();
          latestRequestTextLength = textsOfLatestBatch[0].length;
          latestRequestDomCount = 1;
          
          translateRequest = config.serviceClient.TranslateArray(
            BFI_APPID,
            [textsOfLatestBatch[0]],
            langFrom,
            langTo,
            config.category
              ? {
                  Category: config.category,
                }
              : nullValue,
            onTranslateArraySuccess,
            onBatchError,
            apiTimeout
          );
          window.Microsoft.Translator.APIRequests++;
          return;
        }
        do {
          if (htmlSkeletons.length === 0) break;
          if (
            textsWithoutTag.length &&
            textsWithoutTag[0].length < 32 &&
            htmlSkeletons[0].length > 32
          )
            textsWithoutTag = [];
          textsWithoutTag.push(
            htmlSkeletons[0]
              .replace(/<[^>]*>/g, space)
              .replace(/[\s\xA0]+/g, space)
          );
          accumulatedHTMLSkeletonCharCount -= textLength;
          requestTextLength += textLength;
          accumulatedCharCount += htmlSkeletons[0].length;
          doms.push(nodesToTranslate.shift());
          texts.push(htmlSkeletons.shift());
          textLength =
            htmlSkeletons.length > 0
              ? domUtils.getStringByteCount(htmlSkeletons[0])
              : 0;
        } while (
          nodesToTranslate.length > 0 &&
          requestTextLength < gb &&
          requestTextLength +
            textLength +
            (texts.length + 1) * domUtils.getStringByteCount('"",') <=
            maxStringByteCount
        );

        if (
          requestTextLength > maxStringByteCount &&
          (!parallel || !that.sourceFrame)
        ) {
          batchCandidates.push({
            dom: doms,
            txt: texts,
            length: requestTextLength,
          });
          traverseDomToTranslate();
        } else if (requestTextLength > 0 && (!parallel || !that.sourceFrame)) {
          latestRequestStartTime = new Date();
          latestRequestTextLength = requestTextLength;
          latestRequestDomCount = texts.length;
          successListeners[batchCursor] = (function (a) {
            return function (b) {
              onBatchSuccess(b, a);
            };
          })(batchCursor);
          errorListeners[batchCursor] = (function (a) {
            return function (b) {
              onBatchError(b, a);
            };
          })(batchCursor);
          batches[batchCursor] = {
            Dom: doms,
            Txt: texts,
          };
          batches.size++;
          
          if (config.service === serviceLP)
            translateRequest = config.serviceClient.TranslateArray2(
              BFI_APPID,
              texts,
              langFrom,
              langTo,
              config.category
                ? {
                    Category: config.category,
                  }
                : nullValue,
              successListeners[batchCursor],
              errorListeners[batchCursor],
              apiTimeout
            );
          else
            translateRequest = config.serviceClient.TranslateArray(
              BFI_APPID,
              texts,
              langFrom,
              langTo,
              config.category
                ? {
                    Category: config.category,
                  }
                : nullValue,
              successListeners[batchCursor],
              errorListeners[batchCursor],
              apiTimeout
            );
          batchCursor++;
          window.Microsoft.Translator.APIRequests++;
          adjustBandwidhAccordingToBatchesInProgress();
          if (batches.size < maxBatches)
            if (isParallelSupported && isSourceFrame) traverseDomToTranslate();
            else
              setTimeout(function () {
                traverseDomToTranslate();
              }, timeoutForCheck);
        } else if (batches.size < maxBatches)
          if (isParallelSupported && isSourceFrame) traverseDomToTranslate();
          else
            setTimeout(function () {
              traverseDomToTranslate();
            }, timeoutForCheck);
      }

      function onTranslateArraySuccess(translations) {
        if (destroyed) return;
        if (!isTranslating) return;
        isTranslating = falseValue;
        window.Microsoft.Translator.APIResponses++;
        that.detectedLanguage =
          translations && translations[0] && translations[0].From
            ? translations[0].From.toLowerCase()
            : that.detectedLanguage;

        let translatedText = translations[0].TranslatedText,
          originalTextSentenceLengths =
            translations[0].OriginalTextSentenceLengths,
          translatedTextSentenceLengths =
            translations[0].TranslatedTextSentenceLengths,
          orignalTextOffset = 0,
          translatedTextOffset = 0;
        if (
          !(
            translatedText &&
            originalTextSentenceLengths &&
            translatedTextSentenceLengths
          )
        ) {
          isTranslating = trueValue;
          onBatchError(translations[0].Error);
          return;
        }
        collectStats(translations);
        for (
          var el = 0;
          el <
          (textsOfLatestBatch.length > 1
            ? Math.max(originalTextSentenceLengths.length - 2, 1)
            : originalTextSentenceLengths.length);
          ++el
        ) {
          latestTranslatedTextAndSentenceLengths.aTxt.push(
            translatedText.substr(
              translatedTextOffset,
              translatedTextSentenceLengths[el]
            )
          );
          latestTranslatedTextAndSentenceLengths.aSrcSnt.push(
            originalTextSentenceLengths[el]
          );
          latestTranslatedTextAndSentenceLengths.aTgtSnt.push(
            translatedTextSentenceLengths[el]
          );
          orignalTextOffset += originalTextSentenceLengths[el];
          translatedTextOffset += translatedTextSentenceLengths[el];
        }
        if (textsOfLatestBatch.length > 1)
          if (originalTextSentenceLengths.length < 1) traverseDomToTranslate();
          else {
            let c = textsOfLatestBatch[1].substr(orignalTextOffset),
              r = domUtils.getStringByteCount(c),
              e = Math.floor((c.length * gb) / r);
            textsOfLatestBatch = e > gb ? [c.substr(0, e), c] : [c];
            while (
              domUtils.getStringByteCount(textsOfLatestBatch[0]) > gb &&
              e > fourHundred
            ) {
              e = Math.floor(e / 2);
              textsOfLatestBatch = [c.substr(0, e), c];
            }
            if (isTranslating) return;
            isTranslating = trueValue;
            latestRequestStartTime = new Date();
            latestRequestTextLength = textsOfLatestBatch[0].length;
            latestRequestDomCount = 1;
            
            translateRequest = config.serviceClient.TranslateArray(
              BFI_APPID,
              [textsOfLatestBatch[0]],
              langFrom,
              langTo,
              nullValue,
              onTranslateArraySuccess,
              onBatchError,
              apiTimeout
            );
          }
        else {
          var el = domsOfLatestBatch.shift(),
            s = from || that.detectedLanguage;
          if (!isSourceFrame && !isParallelSupported) {
            directionStyles = getDirectionRelatedStyles(to);
            adjustAlign(el);
          }
          try {
            translateElement(
              el,
              htmlSkeletonForTranslation(el, tempTagPrefix),
              latestTranslatedTextAndSentenceLengths.aTxt.join(emptyString),
              latestTranslatedTextAndSentenceLengths.aSrcSnt,
              latestTranslatedTextAndSentenceLengths.aTgtSnt
            );
          } catch (p) {
            if (config.debug);
          }
          if (batches.size < maxBatches)
            if (isParallelSupported && isSourceFrame) traverseDomToTranslate();
            else
              setTimeout(function () {
                traverseDomToTranslate();
              }, timeoutForCheck);
        }
      }

      function onBatchSuccess(translations, batchIndex) {
        if (destroyed) return;
        window.Microsoft.Translator.APIResponses++;
        if (
          batches[batchIndex] &&
          translations.length !== batches[batchIndex].Dom.length
        ) {
          onBatchError("Inconsistent Data", batchIndex);
          return;
        }
        collectStats(translations);
        that.detectedLanguage =
          translations && translations[0] && translations[0].From
            ? translations[0].From.toLowerCase()
            : that.detectedLanguage;
        const i = from || that.detectedLanguage;
        if (!isSourceFrame && !isParallelSupported) {
          directionStyles = getDirectionRelatedStyles(to);
          adjustAlign(batches[batchIndex].Dom);
        }
        let textForAlignment = emptyString;
        for (
          var dom = batches[batchIndex].Dom.shift(),
            text = batches[batchIndex].Txt.shift(),
            translation = translations.shift();
          dom && translation;
          dom = batches[batchIndex].Dom.shift(),
            ((text = batches[batchIndex].Txt.shift()),
            (translation = translations.shift()))
        ) {
          if (translation.Alignment) {
            if (textForAlignment.length !== 0) textForAlignment += "|";
            textForAlignment += translation.Alignment;
          }
          try {
            translateElement(
              dom,
              text,
              translation.TranslatedText,
              translation.OriginalTextSentenceLengths,
              translation.TranslatedTextSentenceLengths
            );
          } catch (h) {
            if (config.debug);
          }
        }
        if (textForAlignment.length !== 0)
          dom.setAttribute("mstAlign", textForAlignment);
        delete batches[batchIndex];
        batches.size--;
        if (batches.size < maxBatches)
          if (isParallelSupported && isSourceFrame) traverseDomToTranslate();
          else
            setTimeout(function () {
              traverseDomToTranslate();
            }, timeoutForCheck);
      }

      function adjustBandwidhAccordingToBatchesInProgress() {
        if (batchCursor > thresholdToStopBatch) {
          maxBatches = 1;
          timeoutForCheck = 500;
        } else if (
          maxBatches > 2 &&
          batchCursor % cycleToReduceMaxBatches === 0
        ) {
          maxBatches = maxBatches - parseInt(maxBatches / 3);
          timeoutForCheck += 10;
          activateImages(0.1);
        }
      }

      function onBatchError(error, batchIndex) {
        if (batchIndex) {
          delete batches[batchIndex];
          batches.size--;
        }
        if (destroyed) return;
        if (config.debug);
        window.Microsoft.Translator.APIResponses++;
        collectStats(nullValue);
        if (localOnError) localOnError(error);
        if (batches.size < maxBatches) traverseDomToTranslate();
      }

      function collectStats(translations) {
        let now = new Date(),
          duration = now.getTime() - latestRequestStartTime.getTime();
        if (duration > 13000) duration = 13000;
        let translatedDomCount = 0;
        if (translations)
          for (let d = 0; d < translations.length; ++d)
            translatedDomCount +=
              translations[d].OriginalTextSentenceLengths.length;
        else translatedDomCount = latestRequestDomCount;
        stats.push({
          r: translations ? "S" : "E",
          c: latestRequestTextLength,
          s: translatedDomCount,
          e: latestRequestDomCount,
          l: duration,
        });
      }

      var translateElement = (self.translateElement = function (
        el,
        htmlSkeleton,
        translatedText,
        originalTextSentenceLengths,
        translatedTextSentenceLengths
      ) {
        el._mstSrcHtml = el.innerHTML;
        if (el.nodeName.toLowerCase() === "option") {
          renderTranslatedText(
            el,
            translatedText,
            tempTagPrefix,
            nullValue,
            nullValue
          );
          return;
        }
        let elForTranslation,
          hashNumber = el._mstHash;
        if (that.sourceFrame) elForTranslation = el.cloneNode(trueValue);
        else {
          elForTranslation = el;
          el = elForTranslation.cloneNode(trueValue);
        }
        const copyOfOriginalTextSentenceLengths = originalTextSentenceLengths
            ? originalTextSentenceLengths.slice(0)
            : [],
          copyOfTranslatedTextSentenceLengths = translatedTextSentenceLengths
            ? translatedTextSentenceLengths.slice(0)
            : [],
          createdNodesForOriginalText = [[]],
          createdNodesForTranslatedText = [[]];
        try {
          renderTranslatedText(
            el,
            htmlSkeleton,
            tempTagPrefix,
            copyOfOriginalTextSentenceLengths,
            createdNodesForOriginalText
          );
          renderTranslatedText(
            elForTranslation,
            translatedText,
            tempTagPrefix,
            copyOfTranslatedTextSentenceLengths,
            createdNodesForTranslatedText
          );
        } catch (p) {
          if (config.debug);
        }

        if (
          createdNodesForOriginalText.length > 2 &&
          createdNodesForTranslatedText.length > 2
        ) {
          el._mstSrcHtml = el.innerHTML;
          for (
            let i = 0;
            i < createdNodesForOriginalText.length &&
            i < createdNodesForTranslatedText.length;
            ++i
          )
            recordTranslatedElementTuple(
              getOrCreateExclusiveParent(createdNodesForOriginalText[i]),
              getOrCreateExclusiveParent(createdNodesForTranslatedText[i]),
              hashNumber * (i + 1)
            );
        } else recordTranslatedElementTuple(el, elForTranslation, hashNumber);

        if (parallel && parallel[hashNumber] && !that.sourceFrame) {
          parallel.translateElement(
            parallel[hashNumber],
            htmlSkeleton,
            translatedText,
            originalTextSentenceLengths,
            translatedTextSentenceLengths
          );
        }
      });

      function recordTranslatedElementTuple(
        originalEl,
        translatedEl,
        hashNumber
      ) {
        if (!(originalEl && translatedEl)) return;

        const originalTextContent =
            originalEl.textContent || originalEl.innerText || emptyString,
          translatedTextContent =
            translatedEl.textContent || translatedEl.innerText || emptyString;

        if (
          !originalTextContent.match(/[a-zA-Z0-9\xC0-\uFFFF]/) &&
          !translatedTextContent.match(/[a-zA-Z0-9\xC0-\uFFFF]/)
        )
          return;

        originalEl._mstHash = translatedEl._mstHash = hashNumber;

        if (isUntranslateEnabled)
          translatedEl._mstSrcHtml = originalEl.innerHTML;

        try {
          originalEl.setAttribute(strLang, langFrom);
          translatedEl.setAttribute(strLang, langTo);
        } catch (e) {
          if (config.debug);
        }

        originalEl._mstNormalize = function () {
          return htmlSkeletonForTranslation(originalEl, tempTagPrefix);
        };
        translatedEl._mstNormalize = function () {
          return htmlSkeletonForTranslation(translatedEl, tempTagPrefix);
        };
        translatedEl._mstDenormalize = function (d) {
          const clonedEl = originalEl.cloneNode(trueValue);
          clonedEl._mstNormalize = function () {
            return htmlSkeletonForTranslation(clonedEl, tempTagPrefix);
          };
          try {
            renderTranslatedText(clonedEl, d, tempTagPrefix);
          } catch (e) {
            if (config.debug);
          }
          return clonedEl;
        };

        try {
          if (that.sourceFrame) {
            that[hashNumber] = originalEl;
            new Tooltip(
              originalEl,
              translatedEl,
              domUtils.getBlockParent(originalEl),
              getDirectionRelatedStyles(langTo),
              that,
              parallel
            );
          } else {
            that[hashNumber] = translatedEl;
            new Tooltip(
              translatedEl,
              originalEl,
              domUtils.getBlockParent(translatedEl),
              getDirectionRelatedStyles(langFrom || that.detectedLanguage),
              that,
              parallel
            );
          }
        } catch (i) {}

        that.transItems.push({
          src: originalEl,
          tgt: translatedEl,
        });
      }

      function untranslate(el) {
        if (!isUntranslateEnabled)
          throw new Error(
            "Untranslate feature was turned off, please consider modifying the parameter in the constructor!"
          );
        if (
          el.nodeName.toLowerCase() === "frame" ||
          el.nodeName.toLowerCase() === strIframe
        )
          try {
            untranslate(el.contentWindow.document.documentElement);
          } catch (c) {
            if (config.debug);
          }
        else {
          if (el._mstStyle)
            for (const key in el._mstStyle)
              try {
                el.style[key] = el._mstStyle[key];
              } catch (c) {
                if (config.debug);
              }
          el._mstStyle = nullValue;
          if (el._mstSrcHtml) {
            el.innerHTML = el._mstSrcHtml;
            if (el._mstTooltip) el._mstTooltip.detach();
          } else
            for (let d = 0; d < el.childNodes.length; ++d)
              try {
                untranslate(el.childNodes[d]);
              } catch (c) {
                if (config.debug);
              }
        }
      }
      if (isParallelSupported && isSourceFrame) {
        traverseDomToTranslate();
        if (toolbar) toolbar.show();
      } else {
        setTimeout(traverseDomToTranslate, 0);
        if (toolbar) setTimeout(toolbar.show, 10);
      }
      return self;
    }
    const Language = (function () {
        function Language(b, a) {
          this.Name = b;
          this.Code = a;
        }
        return Language;
      })(),
      Links = (function () {
        function Links(signInLink, signOutLink, helpLink) {
          this.SignIn = signInLink;
          this.SignOut = signOutLink;
          this.Help = helpLink;
        }
        return Links;
      })(),
      TranslatorWidget = (function () {
        const objectTypeString = "object",
          strOnComplete = "onComplete",
          stringTypeString = "string";

        function Widget() {
          const userNameKey = "UserName",
            self = this;
          self.languageNames = [];
          self.langLocalized = nullValue;
          self.appId = window._mstConfig.appId;
          self.unTranslateDelegate = nullValue;
          self.Links = new Links(
            window._mstConfig["SignIn"]
              ? window._mstConfig["SignIn"]
              : emptyString,
            window._mstConfig["SignOut"]
              ? window._mstConfig["SignOut"]
              : emptyString,
            "https://go.microsoft.com/?linkid=9722454"
          );
          self.UserName = window._mstConfig[userNameKey]
            ? window._mstConfig[userNameKey]
            : emptyString;
          self.languageCodes = [];
          for (const key in window[localizedLangsKey])
            self.languageCodes[self.languageCodes.length] = key;
        }
        Widget.prototype.Translate = function (
          from,
          to,
          onProgress,
          onError,
          onComplete,
          onRestoreOriginal,
          timeout
        ) {
          this.TranslateElement(
            from,
            to,
            document.documentElement,
            onProgress,
            onError,
            onComplete,
            onRestoreOriginal,
            timeout,
            false
          );
        };
        Widget.prototype.TranslateElement = function (
          from,
          to,
          el,
          onProgress,
          onError,
          onComplete,
          onRestoreOriginal,
          timeout,
          showFloater
        ) {
          const self = this;

          if (typeof el === undefinedTypeString) el = document.documentElement;
          if (typeof showFloater === undefinedTypeString)
            showFloater = trueValue;

          self.validate(from, "from", falseValue, stringTypeString);
          self.validate(to, "to", trueValue, stringTypeString);

          if (!self.isElement(el) && !self.isNode(el))
            throw new Error("Invalid DomElement");

          self.validate(
            onProgress,
            "onProgress",
            falseValue,
            functionTypeString
          );
          self.validate(onError, "onError", falseValue, functionTypeString);
          self.validate(
            onComplete,
            strOnComplete,
            falseValue,
            functionTypeString
          );
          self.validate(
            onRestoreOriginal,
            "onRestoreOriginal",
            falseValue,
            functionTypeString
          );
          self.validate(
            timeout,
            "timeOut",
            falseValue,
            numberTypeString,
            trueValue
          );
          self.validate(showFloater, "showFloater", falseValue, "boolean");

          let completed = falseValue;
          self.lastToLanguage = to;

          if (self.domTranslator && self.domTranslator.cancel)
            self.domTranslator.cancel();
          if (showFloater) uiController.Show(to);

          var localOnSuccess = function () {
              localOnProgress(oneHundred);
              completed = trueValue;
              try {
                if (showFloater) uiController.TranslationComplete();
              } catch (err) {
                console.error(err);
              }
              try {
                if (onComplete) onComplete();
              } catch (err) {
                console.error(err);
              }
            },
            localOnError = function (error) {
              try {
                if (showFloater) uiController.TranslationError(error);
              } catch (err) {
                console.error(err);
              }
              try {
                if (onError) onError(error);
              } catch (err) {
                console.error(err);
              }
            },
            localOnProgress = function (progress) {
              if (completed) return;
              if (progress === oneHundred) completed = trueValue;
              try {
                if (showFloater) uiController.TranslationProgress(progress);
              } catch (err) {
                console.error(err);
              }
              try {
                if (onProgress) onProgress(progress);
              } catch (err) {
                console.error(err);
              }
            };
          self.domTranslator = new DOMTranslator(
            self.appId,
            el,
            from,
            to,
            localOnSuccess,
            onError,
            timeout,
            falseValue,
            falseValue
          );
          if (self.domTranslator.addProgressEvent)
            self.domTranslator.addProgressEvent(localOnProgress);
          if (onRestoreOriginal) b.unTranslateDelegate = onRestoreOriginal;
          if (onError && timeout) {
            const translator = self.domTranslator;
            setTimeout(function () {
              if (!completed) {
                onError("Timout expired before translation could be finished");
                if (translator.cancel) translator.cancel();
              }
            }, timeout);
          }
        };
        Widget.prototype.validate = function (
          val,
          name,
          required,
          expectedType,
          requirePositiveNumber
        ) {
          const typeErrorMessage = " should be of type ";
          if (required) {
            if (!val) throw new Error(name + " is required");
            if (typeof val != expectedType)
              throw new Error(name + typeErrorMessage + expectedType);
          } else if (val && typeof val != expectedType)
            throw new Error(name + typeErrorMessage + expectedType);
          if (
            expectedType == numberTypeString &&
            requirePositiveNumber &&
            val &&
            val < 0
          )
            throw new Error(name + " should be a positive number");
        };
        Widget.prototype.isNode = function (val) {
          return typeof Node === objectTypeString
            ? val instanceof Node
            : val &&
                typeof val === objectTypeString &&
                typeof val.nodeType === numberTypeString &&
                typeof val.nodeName === stringTypeString;
        };
        Widget.prototype.isElement = function (val) {
          return typeof HTMLElement === objectTypeString
            ? val instanceof HTMLElement
            : val &&
                typeof val === objectTypeString &&
                val &&
                val.nodeType === 1 &&
                typeof val.nodeName === stringTypeString;
        };
        Widget.prototype.RestoreOriginal = function () {
          const self = this;
          if (!self.domTranslator)
            throw new Error(
              "Can not RestoreOriginal before making a translation"
            );
          if (self.domTranslator.cancel) self.domTranslator.cancel();
          if (self.unTranslateDelegate) {
            try {
              self.unTranslateDelegate(self.lastToLanguage);
            } catch (err) {
              console.error(err);
            }
          }
        };
        Widget.prototype.GetLanguagesForTranslate = function (
          locale,
          onComplete,
          onError,
          timeout
        ) {
          const self = this;
          self.validate(locale, "locale", trueValue, stringTypeString);
          self.validate(
            onComplete,
            strOnComplete,
            trueValue,
            functionTypeString
          );
          self.validate(onError, "onError", falseValue, functionTypeString);
          self.validate(
            timeout,
            "timeOut",
            falseValue,
            numberTypeString,
            trueValue
          );

          if (self.languageNames[locale]) {
            try {
              console.log(self.languageNames);
              onComplete(self.languageNames[locale]);
            } catch (err) {
              console.error(err);
            }
            return;
          }

          window.Microsoft.Translator.Widget.GetLanguageNamesCallBack(
            [
              "Arabic",
              "Bulgarian",
              "Catalan",
              "Chinese Simplified",
              "Chinese Traditional",
              "Czech",
              "Danish",
              "Dutch",
              "English",
              "Estonian",
              "Finnish",
              "French",
              "German",
              "Greek",
              "Haitian Creole",
              "Hebrew",
              "Hindi",
              "Hmong Daw",
              "Hungarian",
              "Indonesian",
              "Italian",
              "Japanese",
              "Klingon",
              "Korean",
              "Latvian",
              "Lithuanian",
              "Malay",
              "Maltese",
              "Norwegian",
              "Persian",
              "Polish",
              "Portuguese",
              "Romanian",
              "Russian",
              "Slovak",
              "Slovenian",
              "Spanish",
              "Swedish",
              "Thai",
              "Turkish",
              "Ukrainian",
              "Urdu",
              "Vietnamese",
              "Welsh",
            ],
            locale,
            onComplete,
            onError
          );
          //Microsoft.Translator.GetLanguageNames(b.appId, c, b.languageCodes, function (a) {
          //                                      Microsoft.Translator.Widget.GetLanguageNamesCallBack(a, c, h, i)
          //                                      }, i, j)
        };
        Widget.prototype.GetLanguageNamesCallBack = function (
          langNames,
          locale,
          onComplete,
          onError
        ) {
          if (!langNames || !langNames[0]) {
            if (onError) onError("Invalid locale " + locale);
            return;
          }
          const result = [];
          for (let i = 0; i < langNames.length; i++)
            result[i] = new Language(langNames[i], this.languageCodes[i]);

          this.languageNames[locale] = result;
          try {
            onComplete(result);
          } catch (err) {
            console.error(err);
          }
        };
        Widget.prototype.GetLanguagesForTranslateLocalized = function () {
          const self = this;
          if (!self.langLocalized) {
            self.langLocalized = [];
            for (const key in window[localizedLangsKey])
              self.langLocalized[self.langLocalized.length] = new Language(
                window[localizedLangsKey][key],
                key
              );
          }
          return self.langLocalized;
        };
        Widget.prototype.GetAutoDetectedLanguage = function () {
          if (!this.domTranslator || !this.domTranslator.detectedLanguage)
            throw new Error(
              "Can not return auto detected language before making a translation with 'from' parameter set to null "
            );
          return this.domTranslator.detectedLanguage;
        };
        return Widget;
      })();
    self.Widget = new TranslatorWidget();
    var Tooltip = new (function () {
        let isLocked = falseValue,
          timeoutForShowAndHide = 600,
          contentMinWidth = 430,
          highlightFrontColor = "#0F0F5F",
          highlightBackgroundColor = "rgba(1, 233, 175, 0.5)", // "#F0F0A0",
          r;
        return function (
          el,
          el2,
          parent,
          directionStyles,
          domTranslator,
          parallel
        ) {
          const mouseOutEvent = "mouseout",
            mouseOverEvent = "mouseover",
            self = this;

          if (el._mstTooltip) {
            try {
              el._mstTooltip.detach();
            } catch (err) {}
          }

          el._mstTooltip = el2._mstTooltip = self;
          if (!parent) parent = el;

          let shouldShow = falseValue,
            isShown = falseValue,
            originalFrontColor = el.style.color,
            originalBackgroundColor = el.style.backgroundColor,
            doc = el.ownerDocument,
            hover = (self.hover = function (event) {
              if (isLocked) return;
              if (domTranslator.showHighlight) {
                let color = el.style.color;
                try {
                  color = "#" + Color.parse(el.style.color).toString();
                } catch (err) {}

                if (color !== highlightFrontColor)
                  originalFrontColor = el.style.color;

                let bgColor = el.style.backgroundColor;
                try {
                  bgColor =
                    "#" + Color.parse(el.style.backgroundColor).toString();
                } catch (err) {}

                if (bgColor !== highlightBackgroundColor)
                  originalBackgroundColor = el.style.backgroundColor;
                // mate note
                // highlighting html elements to show original text
                //r.className = ke.getPrefix() + 'highlighted-for-original';
                el.style.color = highlightFrontColor;
                el.style.backgroundColor = highlightBackgroundColor;
              }
              if (domTranslator.showTooltips && event) {
                shouldShow = trueValue;
                setTimeout(tryToShow, timeoutForShowAndHide);
              }
              if (
                event &&
                parallel &&
                parallel[el._mstHash] &&
                parallel[el._mstHash]._mstTooltip
              )
                parallel[el._mstHash]._mstTooltip.hover();
            }),
            unhover = (self.unhover = function (a) {
              if (isLocked) return;
              if (domTranslator.showHighlight) {
                el.style.color = originalFrontColor;
                el.style.backgroundColor = originalBackgroundColor;
                //r.className = '';
              }
              if (domTranslator.showTooltips && a) {
                shouldShow = falseValue;
                setTimeout(tryToHide, timeoutForShowAndHide);
              }
              if (
                a &&
                parallel &&
                parallel[el._mstHash] &&
                parallel[el._mstHash]._mstTooltip
              )
                parallel[el._mstHash]._mstTooltip.unhover();
            });

          function tryToShow() {
            if (isLocked) return;
            if (shouldShow) show();
          }
          // mate note
          // original tooltip is shown here
          var show = (self.show = function () {
            const eb = "none 0px",
              F = "normal",
              fb = "0px 0px 0px 0px";

            const db = strInlineBlock;

            if (isShown) return;
            else isShown = trueValue;

            if (!doc._mstTooltip) {
              let lb =
                  config.baseURL.substr(0, 8) +
                  config.baseURL.substr(8).replace(/\/.*$/, staticImgPath),
                isDirectionRightToLeft = falseValue;

              if (
                languageMappings[config.locale] &&
                languageDirs[languageMappings[config.locale]] &&
                languageDirs[languageMappings[config.locale]] === rightToLeft
              ) {
                isDirectionRightToLeft = trueValue;
              }

              doc._mstTooltip = doc.createElement(strDiv);
              doc._mstTooltip.translate = falseValue;
              doc._mstTooltip.setAttribute("translate", langNorwegian);
              doc._mstTooltip.className =
                _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "inline-original-tooltip";
              doc._mstTooltip.style.display = none;
              doc._mstTooltip.style.zIndex = maxZIndex;

              _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_2__["default"].requestBackgroundOption(
                "isTrueOption",
                ["dark_mode"],
                (dark_mode) => {
                  if (dark_mode) {
                    doc._mstTooltip.className +=
                      " " + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "dark-mode";
                  }
                }
              );

              chrome.runtime
                .sendMessage({
                  action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.processCall(
                    "app",
                    "commands",
                    "sendAnalyticsEvent"
                  ),
                  cat: "full-page",
                  event: "show-original-tooltip",
                  subevent: "",
                })
                .then();

              /*h._mstTooltip.style.position = W;
                            h._mstTooltip.style.margin = fb;
                            h._mstTooltip.style.border = "2px solid #D2D2D2";
                            h._mstTooltip.style.padding = fb;
                            h._mstTooltip.style.color = "#000000";
                            h._mstTooltip.style.backgroundColor = "#E6E6E6";
                            h._mstTooltip.style.fontFamily = "Arial, Helvetica, Sans-Serif";
                            h._mstTooltip.style.fontStyle = F;
                            h._mstTooltip.style.fontVariant = F;
                            h._mstTooltip.style.fontWeight = F;
                            h._mstTooltip.style.fontSize = "12px";
                            h._mstTooltip.style.lineHeight = F;*/

              if (!isDirectionRightToLeft) {
                doc._mstTooltip.style.direction = leftToRight;
                doc._mstTooltip.style.textAlign = strLeft;
              } else {
                doc._mstTooltip.style.direction = rightToLeft;
                doc._mstTooltip.style.textAlign = strRight;
              }

              const divCloseButton = doc.createElement(strDiv);
              if (!isDirectionRightToLeft)
                divCloseButton.style.styleFloat =
                  divCloseButton.style.cssFloat = strRight;
              else
                divCloseButton.style.styleFloat =
                  divCloseButton.style.cssFloat = strLeft;

              /*var j = h.createElement("a");
                            j.href = a.lpURL;
                            j.target = "_blank";
                            j.style.display = db;
                            j.style.margin = "4px 4px 0px 4px";
                            j.style.border = eb;
                            j.style.cursor = J;
                            j.style.textDecoration = C;
                            // close button
                            var V = h.createElement(t);
                            // a.imagePath is no longer valid
                            V.src = a.imagePath + "binglogo_ctf.png";
                            V.style.border = eb;
                            // Don't add the link to Bing Translator to the popover
                            // j.appendChild(V);
                            //n.appendChild(j);*/

              doc._mstTooltip.cl = doc.createElement("a");
              doc._mstTooltip.cl.style.display = db;
              doc._mstTooltip.cl.className =
                _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "close-original-tooltip";
              /*h._mstTooltip.cl.style.cursor = J;
                            h._mstTooltip.cl.style.textDecoration = C;
                            h._mstTooltip.cl.style.verticalAlign = "top";
                            h._mstTooltip.cl.style.border = eb;
                            h._mstTooltip.cl.style.padding = S;*/

              // close image inside the afore-described container
              /*var ib = h.createElement(t);
                            // a.imagePath is no longer valid
                            // ib.src = a.imagePath + "tooltip_close.gif";
                            ib.src = "http://az577702.vo.msecnd.net/images/cancel.png"
                            h._mstTooltip.cl.appendChild(ib);*/

              divCloseButton.appendChild(doc._mstTooltip.cl);
              doc._mstTooltip.appendChild(divCloseButton);

              // mate note
              // original label
              const divOriginalLabel = doc.createElement(strDiv);
              divOriginalLabel.className = _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "original-label";
              /*m.style.margin = "4px 4px 8px 4px";
                            m.style.fontWeight = "bold";
                            m.style.fontFamily = "Segoe UI";
                            m.style.fontSize = "10px";
                            m.style.letterSpacing = "1px";
                            m.style.textTransform = "uppercase";
                            m.style.color = "#4D4D4D";*/
              if (!domTranslator.sourceFrame) {
                var labelText = "Original";
                try {
                  labelText =
                    localizedOriginal[
                      languageMappings[config.locale || langEnglish] ||
                        langEnglish
                    ] || labelText;
                } catch (M) {}
              } else {
                var labelText = "Translation";
                try {
                  labelText =
                    localizedTranslation[
                      languageMappings[config.locale || langEnglish] ||
                        langEnglish
                    ] || labelText;
                } catch (M) {}
              }
              divOriginalLabel.appendChild(doc.createTextNode(labelText));
              doc._mstTooltip.appendChild(divOriginalLabel);
              doc._mstTooltip.cp = doc.createElement(strDiv);
              doc._mstTooltip.appendChild(doc._mstTooltip.cp);

              // inner text layout
              doc._mstTooltip.cb = doc.createElement("span");
              doc._mstTooltip.cb.style.display = db;
              doc._mstTooltip.cb.className = _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "text-layout";
              /*h._mstTooltip.cb.style.margin = "0px 4px 4px 4px";
                            h._mstTooltip.cb.style.fontFamily = "Arial";
                            h._mstTooltip.cb.style.fontSize = "12px";
                            h._mstTooltip.cb.style.color = "black";*/
              doc._mstTooltip.cp.appendChild(doc._mstTooltip.cb);
              doc.body.appendChild(doc._mstTooltip);
            }
            doc._mstTooltip.cl.onclick = hide;
            doc._mstTooltip.style.width = emptyString;
            doc._mstTooltip.cb.style.whiteSpace = "nowrap";
            doc._mstTooltip.cb.innerHTML = emptyString;
            doc._mstTooltip.cb.appendChild(
              doc.createTextNode(el2.innerText || el2.textContent)
            );
            doc._mstTooltip.style.display = strBlock;

            for (const key in directionStyles) {
              try {
                doc._mstTooltip.cp.style[key] = directionStyles[key];
              } catch (err) {
                if (config.debug);
              }
            }

            doc._mstTooltip.onmouseover = function () {
              shouldShow = trueValue;
              hover();
              tryToShow();
            };
            doc._mstTooltip.onmouseout = function () {
              shouldShow = falseValue;
              setTimeout(tryToHide, fourHundred);
            };

            const docWidth = Math.max(
                domUtils.getVisibleWidth(doc),
                fourHundred
              ),
              scrollLeft =
                window.pageXOffset ||
                doc.documentElement.scrollLeft ||
                doc.body.scrollLeft,
              kb = Math.max(
                doc.documentElement.scrollWidth,
                doc.body.scrollWidth
              );

            if (
              window.Microsoft.TranslatorOverride &&
              window.Microsoft.TranslatorOverride.showTooltip
            ) {
              try {
                window.Microsoft.TranslatorOverride.showTooltip(
                  el2,
                  el,
                  doc._mstTooltip
                );
                contentMinWidth = 430;
              } catch (err) {}
            }

            let width = doc._mstTooltip.cb.offsetWidth + 12;
            if (width > parent.offsetWidth) width = parent.offsetWidth;
            if (width > docWidth - radixHex) width = docWidth - radixHex;
            if (width < contentMinWidth) width = contentMinWidth;

            doc._mstTooltip.style.width = width.toString() + px;
            doc._mstTooltip.cb.style.whiteSpace = emptyString;

            let left;

            if (
              domUtils.getStyleValue(el, strDirection) === rightToLeft ||
              domUtils.getStyleValue(el, "text-align") === strRight
            ) {
              left =
                domUtils.absXPos(el) +
                el.offsetWidth -
                doc._mstTooltip.offsetWidth;
            } else {
              left = domUtils.absXPos(el);
            }

            if (
              left + doc._mstTooltip.offsetWidth >
              domUtils.absXPos(parent) + parent.offsetWidth
            ) {
              left =
                domUtils.absXPos(parent) +
                parent.offsetWidth -
                doc._mstTooltip.offsetWidth;
            }

            if (left < domUtils.absXPos(parent)) {
              left = domUtils.absXPos(parent);
            }

            if (domUtils.getStyleValue(el, strDirection) !== rightToLeft) {
              if (
                left + doc._mstTooltip.offsetWidth >
                docWidth + scrollLeft - 8
              )
                left = docWidth + scrollLeft - 8 - doc._mstTooltip.offsetWidth;
              if (left < scrollLeft + 8) left = scrollLeft + 8;
            }

            doc._mstTooltip.style.left = left + px;
            doc._mstTooltip.style.top =
              Math.max(
                domUtils.absYPos(el) - (doc._mstTooltip.offsetHeight + 8),
                8
              ) + px;
          });

          function tryToHide() {
            if (isLocked) return;
            if (!shouldShow) hide();
          }
          var hide = (self.hide = function () {
              setLock(falseValue);
              if (!isShown) return;
              else isShown = falseValue;

              if (domTranslator.showHighlight) {
                el.style.color = originalFrontColor;
                el.style.backgroundColor = originalBackgroundColor;
              }
              if (doc._mstTooltip) doc._mstTooltip.style.display = none;
            }),
            setLock = (self.setLock = function (val) {
              isLocked = val;
            }),
            detach = (self.detach = function () {
              domUtils.removeEvent(el, mouseOverEvent, wrappedOnMouseover);
              domUtils.removeEvent(el, mouseOutEvent, wrappedOnMouseout);
            }),
            wrappedOnMouseover = domUtils.addEvent(el, mouseOverEvent, hover),
            wrappedOnMouseout = domUtils.addEvent(el, mouseOutEvent, unhover);
        };
      })(),
      ub = new (function (baseUrl) {
        let maxUrlLength = 1600,
          whiteColor = "white",
          greyColor = "#E6E6E6",
          strSpan = "span",
          strHidden = "hidden",
          transPanelId = "MSTCTransPanel",
          self = this,
          qc = 0,
          locale,
          langCodeFrom,
          langCodeTo,
          originalEl,
          translatedEl,
          $translatorCommunity,
          $content,
          $expandLink,
          $rootPanel,
          $loading,
          $submitting,
          $transPanel,
          $prevNextPanel,
          $prevLink,
          $nextLink,
          $prevCount,
          $nextCount,
          $footerPanel,
          $dashboardLink,
          $transPanelError,
          $transPanelErrorMsg,
          $okImgBtn,
          $helpImgBtn,
          jc,
          $approve,
          $approveTooltip,
          $reject,
          $rejectTooltip,
          $restore,
          $restoreTooltip,
          $userId,
          $buttonPanel,
          $dashboard,
          siteData,
          maxRating,
          imagePath,
          lowerAuthLang,
          dashboardUrl,
          mstTooltip,
          tc,
          locked = falseValue,
          shouldShowDashboard = trueValue,
          rc = 1e6,
          uiTransItems,
          cursor = 0,
          ctfLangDict,
          initTranslatorCommunity;
        window._mstCmCb = function () {
          config.appId = document.getElementById("MSTCAppIdToken").innerHTML;
          maxRating = parseInt(
            document.getElementById("MSTCMaxRating").innerHTML
          );
          imagePath = document.getElementById("MSTCImagePath").innerHTML;
          lowerAuthLang = document
            .getElementById("MSTCAuthLang")
            .innerHTML.toLowerCase();
          dashboardUrl = document.getElementById("MSTCDashboardUrl").href;
          $content = document.getElementById("MSTCContent");
          $expandLink = document.getElementById("MSTCExpandLink");
          $rootPanel = document.getElementById("MSTCRootPanel");
          $loading = document.getElementById("MSTCLoading");
          $submitting = document.getElementById("MSTCSubmitting");
          $transPanel = document.getElementById(transPanelId);
          $prevNextPanel = document.getElementById("MSTCPrevNextPanel");
          $prevLink = document.getElementById("MSTCPrevLink");
          $nextLink = document.getElementById("MSTCNextLink");
          $prevCount = document.getElementById("MSTCPrevCount");
          $nextCount = document.getElementById("MSTCNextCount");
          $footerPanel = document.getElementById("MSTCFooterPanel");
          $dashboardLink = document.getElementById("MSTCDashboardLink");
          $approve = document.getElementById("MSTCApprove");
          $approveTooltip = document.getElementById("MSTCApproveTooltip");
          $reject = document.getElementById("MSTCReject");
          $rejectTooltip = document.getElementById("MSTCRejectTooltip");
          $restore = document.getElementById("MSTCRestore");
          $restoreTooltip = document.getElementById("MSTCRestoreTooltip");
          $userId = document.getElementById("MSTCUserID");
          $buttonPanel = document.getElementById("MSTCButtonPanel");
          $transPanelError = document.getElementById("MSTCTransPanelError");
          $transPanelErrorMsg = document.getElementById(
            "MSTCTransPanelErrorMsg"
          );
          $okImgBtn = document.getElementById("MSTCOKImgBtn");
          $helpImgBtn = document.getElementById("MSTCHelpImgBtn");

          if ($okImgBtn) $okImgBtn.onclick = hideTransPanellError;
          if (domUtils.isInternetExplorer() && domUtils.isQuirksMode(document))
            domUtils.fixIEQuirks($translatorCommunity);

          $prevLink.onclick = function () {
            stepBy(-3);
            return falseValue;
          };
          $nextLink.onclick = function () {
            stepBy(3);
            return falseValue;
          };
          if ($dashboardLink)
            if (shouldShowDashboard) {
              $dashboardLink.onclick = showDashboard;
              const el = document.getElementById("MSTTDashboardLink");
              if (el) {
                el.parentNode.style.display = strInlineBlock;
                el.onclick = showDashboard;
                el.href = "javascript: " + el.title;
              }
            } else $dashboardLink.style.visibility = strHidden;

          if (!window.Microsoft) window.Microsoft = {};

          window.Microsoft.TranslatorOverride = {
            showTooltip: showTooltip,
            hideTooltip: hideTooltip,
          };
          if (maxRating >= 5)
            window.Microsoft.TranslatorOverride.showHighlight = startHighlight;
        };
        var showTooltip = (self.showTooltip = function (
            el,
            transEl,
            $container
          ) {
            if (
              !$translatorCommunity ||
              $translatorCommunity.ownerDocument !== $container.ownerDocument
            )
              return;
            mstTooltip = el._mstTooltip;
            langCodeFrom = el.getAttribute(strLang);
            langCodeTo = transEl.getAttribute(strLang);
            originalEl = el;
            translatedEl = transEl;
            locked = falseValue;
            $expandLink.onclick = showTranslations;
            $translatorCommunity.style.display = strBlock;
            $rootPanel.style.display = none;
            $transPanel.style.display = none;
            hideTransPanellError();
            $container.appendChild($translatorCommunity);
          }),
          showTranslations = (self.showTranslations = function () {
            $expandLink.onclick = onClickExpankLink;
            $rootPanel.style.display = strBlock;
            $loading.style.display = strBlock;
            $transPanel.style.display = none;
            hideTransPanellError();
            $prevNextPanel.style.display = none;
            config.serviceClient.GetTranslations(
              config.appId,
              originalEl._mstNormalize(),
              langCodeFrom,
              langCodeTo,
              24,
              config.category
                ? {
                    Category: config.category,
                  }
                : nullValue,
              onSuccessGetTranslations,
              onErrorGetTranslations,
              sevenSeconds
            );
            return falseValue;
          });

        function onSuccessGetTranslations(response) {
          $loading.style.display = none;
          $transPanel.innerHTML = emptyString;
          $transPanel.style.display = strBlock;

          if (response.Translations.length > 3)
            $prevNextPanel.style.display = strBlock;

          let shouldShowButtonTooltip =
              maxRating >= 5 &&
              maxRating >= Math.abs(response.Translations[0].Rating) &&
              (!lowerAuthLang || lowerAuthLang === langCodeTo.toLowerCase()),
            shouldHighlight =
              response.Translations.length > 0 &&
              response.Translations[0].Rating >= 5,
            shouldMouseOverOnInit =
              !response.NoEdit && response.Translations.length === 1,
            reject = response.Reject,
            firstFiveRatingTransIndex,
            transLength = response.Translations.length;

          for (
            firstFiveRatingTransIndex = 0;
            firstFiveRatingTransIndex < transLength;
            firstFiveRatingTransIndex++
          )
            if (response.Translations[firstFiveRatingTransIndex].Rating === 5)
              break;

          if (firstFiveRatingTransIndex !== transLength) {
            const fiveTratingTransText =
              response.Translations[firstFiveRatingTransIndex].TranslatedText;

            for (var d = 0; d < response.Translations.length; d++) {
              if (d === firstFiveRatingTransIndex) continue;
              if (
                fiveTratingTransText === response.Translations[d].TranslatedText
              ) {
                if (d < firstFiveRatingTransIndex) firstFiveRatingTransIndex--;
                response.Translations.splice(d, 1);
                d--;
              }
            }
          }

          let firstLtFiveIndex = negativeOne,
            firstGtNegFiveIndex = negativeOne;

          for (var d = 0; d < response.Translations.length; ++d) {
            if (
              firstLtFiveIndex === negativeOne &&
              response.Translations[d].Rating < 5
            )
              firstLtFiveIndex = d;
            if (
              firstLtFiveIndex !== negativeOne &&
              response.Translations[d].Rating > -5
            )
              firstGtNegFiveIndex = d;
          }
          if (firstLtFiveIndex >= 0 && firstGtNegFiveIndex > firstLtFiveIndex)
            for (var d = firstLtFiveIndex; d < firstGtNegFiveIndex; ++d)
              for (let i = d + 1; i <= firstGtNegFiveIndex; ++i)
                if (
                  response.Translations[d].Count <
                  response.Translations[i].Count
                ) {
                  const t = response.Translations[d];
                  response.Translations[d] = response.Translations[i];
                  response.Translations[i] = t;
                }
          uiTransItems = [];

          while (response.Translations.length > 0) {
            const transItem = response.Translations.shift();
            try {
              uiTransItems.push(
                new TranslationItemUI(
                  transItem,
                  $transPanel,
                  shouldShowButtonTooltip,
                  shouldHighlight,
                  shouldMouseOverOnInit,
                  reject
                )
              );
            } catch (err) {
              if (config.debug);
              continue;
            }
            if (shouldHighlight) shouldHighlight = falseValue;
          }
          if (response.Hover && uiTransItems.length && uiTransItems[0].hover)
            uiTransItems[0].hover();
          cursor = 0;
          stepBy();
          if (
            document._mstTooltip &&
            (document._mstTooltip.style.display === none ||
              $translatorCommunity.style.display === none)
          )
            hideTooltip();
          return uiTransItems.slice(0);
        }

        function showError($container, errorMsg) {
          $transPanelErrorMsg.textContent = $transPanelErrorMsg.innerText =
            errorMsg;
          $transPanelError.style.width = $container.offsetWidth - 20 + px;
          $transPanelError.style.height = $container.offsetHeight + px;
          $transPanelError.style.left = $container.offsetLeft + px;
          $transPanelError.style.top = $container.offsetTop + px;
          $transPanelError.style.display = emptyString;
        }

        function hideTransPanellError() {
          $transPanelError.style.display = none;
        }

        function onErrorGetTranslations() {
          if (config.debug);
          onClickExpankLink();
        }

        function onClickExpankLink() {
          locked = falseValue;
          mstTooltip.setLock(falseValue);
          $expandLink.onclick = showTranslations;
          $translatorCommunity.style.display = strBlock;
          $rootPanel.style.display = none;
          $transPanel.style.display = none;
          hideTransPanellError();
          return falseValue;
        }

        function stepBy(delta) {
          if (locked) return falseValue;

          if (!delta) cursor = 0;
          else cursor += delta;

          if (cursor < 0) cursor = 0;
          else if (cursor >= uiTransItems.length) cursor -= 3;

          mstTooltip.setLock(trueValue);

          for (let a = 0; a < uiTransItems.length; ++a) {
            if (a >= cursor && a < cursor + 3)
              uiTransItems[a].panel.style.display = strBlock;
            else uiTransItems[a].panel.style.display = none;
          }

          const prevCount = cursor,
            nextCount = Math.max(uiTransItems.length - (cursor + 3), 0);

          $prevCount.innerHTML = "(" + prevCount.toString() + ")";
          $nextCount.innerHTML = "(" + nextCount.toString() + ")";

          if (prevCount > 0) {
            $prevLink.style.color = "#59F";
            $prevCount.style.display = emptyString;
          } else {
            $prevLink.style.color = "#999";
            $prevCount.style.display = none;
          }
          if (nextCount > 0) {
            $nextLink.style.color = "#59F";
            $nextCount.style.display = emptyString;
          } else {
            $nextLink.style.color = "#999";
            $nextCount.style.display = none;
          }

          setTimeout(function () {
            mstTooltip.setLock(falseValue);
          }, 500);
        }

        function TranslationItemUI(
          transItem,
          $container,
          shouldShowButtonTooltip,
          shouldSetcolor,
          shouldMouseOverOnInit,
          reject
        ) {
          const cancelButtonClassName = "MSTCCancelButton",
            submitButtonClassName = "MSTCSubmitButton",
            reportButtonClassName = "MSTCReportButton",
            selectButtonClassName = "MSTCSelectButton",
            editButtonClassName = "MSTCEditButton",
            marginForLeftToRight = "4px 1px 0px 3px",
            marginForRightToLeft = "4px 3px 0px 1px",
            badgeGifName = "ctfbadge.gif",
            self = this,
            $panel = (self.panel = document.createElement(strDiv));

          $panel.className = transPanelId;
          $container.appendChild($panel);

          transItem.OriginalText = originalEl._mstNormalize();

          const hb = translatedEl._mstDenormalize(transItem.TranslatedText),
            $transBox = document.createElement(strDiv);

          $transBox.className = "MSTCTransBox";
          if (shouldSetcolor) $transBox.style.color = "#009345";

          $transBox.appendChild(
            document.createTextNode(hb.innerText || hb.textContent)
          );
          $panel.appendChild($transBox);

          const $statsTab = document.createElement(strDiv);
          $statsTab.className = "MSTCStatsTab";
          $panel.insertBefore($statsTab, $panel.firstChild);

          const $voteCount = document.createElement(strDiv);
          $voteCount.className = "MSTCVoteCount";
          $statsTab.appendChild($voteCount);

          if (transItem.Rating > 5) {
            const $container1 = document.createElement(strSpan),
              $badgeImg = document.createElement(tagImg);

            $badgeImg.src = config.imagePath + badgeGifName;
            $badgeImg.style.margin = "4px 5px 0px 5px";
            $container1.appendChild($badgeImg);
            $voteCount.appendChild($container1);

            if (transItem.Rating >= 10)
              $container1.style.backgroundColor = "#F2C341";
            else if (transItem.Rating >= 8)
              $container1.style.backgroundColor = "#B2B2B2";
            else if (transItem.Rating >= 6)
              $container1.style.backgroundColor = "#8C7853";
          } else if (transItem.Rating === 5) {
            var $container2 = document.createElement(strSpan),
              $fmtImg = document.createElement(tagImg);

            $fmtImg.src = config.imagePath + "ctfmt.gif";
            $fmtImg.style.margin = "2px 2px 0px 3px";
            $container2.appendChild($fmtImg);
            $voteCount.appendChild($container2);
          } else if (transItem.Count) {
            var $container3 = document.createElement(strSpan),
              $font = document.createElement(strFont);

            $font.style.display = strInlineBlock;
            $font.appendChild(document.createTextNode(transItem.Count));
            $container3.appendChild($font);

            var $fmtImg = document.createElement(tagImg);
            $fmtImg.src = config.imagePath + "ctfvotes.gif";
            $container3.appendChild($fmtImg);
            $voteCount.appendChild($container3);

            if (
              domUtils.getStyleValue($content, strDirection) === rightToLeft
            ) {
              $font.style.margin = marginForRightToLeft;
              $fmtImg.style.margin = "7px 1px 0px 3px";
            } else {
              $font.style.margin = marginForLeftToRight;
              $fmtImg.style.margin = "3px 3px 0px 1px";
            }
          } else $statsTab.parentNode.removeChild($statsTab);

          if (transItem.Flags) {
            const $flagCount = document.createElement(strDiv);
            $flagCount.className = "MSTCFlagCount";
            $flagCount.style.marginTop = "2px";
            $statsTab.appendChild($flagCount);

            const $onePixWidth = document.createElement(strSpan);
            $onePixWidth.style.width = $onePixWidth.style.minWidth = "1px";
            $onePixWidth.style.height = "19px";
            $flagCount.appendChild($onePixWidth);

            var $container5 = document.createElement(strSpan),
              $font = document.createElement(strFont);
            $font.style.display = strInlineBlock;
            $font.appendChild(document.createTextNode(transItem.Flags));
            $container5.appendChild($font);

            const $flagsImg = document.createElement(tagImg);
            $flagsImg.src = config.imagePath + "ctfflags.gif";
            $container5.appendChild($flagsImg);
            $flagCount.appendChild($container5);

            if (
              domUtils.getStyleValue($content, strDirection) === rightToLeft
            ) {
              $font.style.margin = marginForRightToLeft;
              $flagsImg.style.margin = "7px 1px 0px 2px";
            } else {
              $font.style.margin = marginForLeftToRight;
              $flagsImg.style.margin = "7px 2px 0px 1px";
            }
          }

          $statsTab.style.marginTop =
            ($panel.offsetHeight - $statsTab.offsetHeight) / 2 + px;

          const $clonedButtonPanel = $buttonPanel.cloneNode(trueValue);
          $clonedButtonPanel.style.visibility = strHidden;

          $panel.insertBefore($clonedButtonPanel, $panel.firstChild);

          if (shouldShowButtonTooltip) {
            var editButton = new Button(
                findDescendantWithClassName(
                  $clonedButtonPanel,
                  editButtonClassName
                )
              ),
              selectButton = new Button(
                findDescendantWithClassName(
                  $clonedButtonPanel,
                  selectButtonClassName
                ),
                $approve.innerText || $approve.textContent,
                $approveTooltip.innerText || $approveTooltip.textContent
              );

            if (transItem.Rating > -5)
              var reportButton = new Button(
                findDescendantWithClassName(
                  $clonedButtonPanel,
                  reportButtonClassName
                ),
                $reject.innerText || $reject.textContent,
                $rejectTooltip.innerText || $rejectTooltip.textContent
              );
            else {
              var reportButton = new Button(
                findDescendantWithClassName(
                  $clonedButtonPanel,
                  reportButtonClassName
                ),
                $restore.innerText || $restore.textContent,
                $restoreTooltip.innerText || $restoreTooltip.textContent
              );
              $transBox.style.color = "#A6A6A6";
            }

            var submitButton = new Button(
                findDescendantWithClassName(
                  $clonedButtonPanel,
                  submitButtonClassName
                ),
                nullValue,
                $approveTooltip.innerText || $approveTooltip.textContent
              ),
              cancelButton = new Button(
                findDescendantWithClassName(
                  $clonedButtonPanel,
                  cancelButtonClassName
                )
              );

            selectButton.setIcon(badgeGifName);
            submitButton.setIcon(badgeGifName);
          } else {
            var editButton = new Button(
                findDescendantWithClassName(
                  $clonedButtonPanel,
                  editButtonClassName
                )
              ),
              selectButton = new Button(
                findDescendantWithClassName(
                  $clonedButtonPanel,
                  selectButtonClassName
                ),
                nullValue,
                nullValue,
                transItem.Count
              ),
              reportButton = new Button(
                findDescendantWithClassName(
                  $clonedButtonPanel,
                  reportButtonClassName
                )
              ),
              submitButton = new Button(
                findDescendantWithClassName(
                  $clonedButtonPanel,
                  submitButtonClassName
                )
              ),
              cancelButton = new Button(
                findDescendantWithClassName(
                  $clonedButtonPanel,
                  cancelButtonClassName
                )
              );
          }

          let $containerOfTransEdit, $transEdit, timer;

          if (!reject) {
            selectButton.hover();
            editButton.collapse();
            reportButton.collapse();
          } else {
            selectButton.collapse();
            editButton.collapse();
            reportButton.hover();
          }

          self.hover = $panel.onmouseover = function () {
            if (locked) return;
            $panel.className = $panel.className + " MSTCTransPanelHover";
            $statsTab.style.visibility = strHidden;
            $clonedButtonPanel.style.marginTop =
              ($panel.offsetHeight - $clonedButtonPanel.offsetHeight) / 2 + px;
            $clonedButtonPanel.style.visibility = strVisible;
          };
          self.unhover = $panel.onmouseout = function () {
            if (locked) return;
            $panel.className = $panel.className
              .replace(/\s+/g, " ")
              .replace(/MSTCTransPanelHover/g, emptyString);
            $statsTab.style.visibility = strVisible;
            $clonedButtonPanel.style.visibility = strHidden;
          };
          $clonedButtonPanel.onmouseover = function () {
            if (locked) return;
            editButton.expand();
            selectButton.expand();
            reportButton.expand();
          };
          $clonedButtonPanel.onmouseout = function () {
            if (locked) return;
            if (!reject) {
              selectButton.hover();
              editButton.collapse();
              reportButton.collapse();
            } else {
              selectButton.collapse();
              editButton.collapse();
              reportButton.hover();
            }
          };
          editButton.setCallback(function () {
            if (locked) return falseValue;
            locked = trueValue;
            mstTooltip.setLock(trueValue);
            if (!$transEdit) {
              $containerOfTransEdit = document.createElement(strDiv);
              $containerOfTransEdit.style.padding = "14px 4px 14px 4px";

              $transEdit = document.createElement("textarea");
              $transEdit.className = "MSTCTransEdit";
              $transEdit.style.width =
                ($panel.offsetWidth - 116).toString() + px;
              $transEdit.style.height =
                ($panel.offsetHeight - 38).toString() + px;
              $transEdit.style.padding = fourPxPadding;
              $transEdit.onkeypress = function (a) {
                a = a || window.event;
                if (a.keyCode === 13) {
                  submitButton.doCallback();
                  return falseValue;
                } else if (a.keyCode === 27) {
                  cancelButton.doCallback();
                  return falseValue;
                }
              };
              $containerOfTransEdit.appendChild($transEdit);
              $panel.appendChild($containerOfTransEdit);
            }
            $transBox.style.display = none;
            $containerOfTransEdit.style.display = strBlock;

            editButton.hide();
            selectButton.hide();
            reportButton.hide();
            submitButton.show();
            cancelButton.show();
            $clonedButtonPanel.style.marginTop =
              ($panel.offsetHeight - $clonedButtonPanel.offsetHeight) / 2 + px;
            $transEdit.value = replaceHtmlTagWithLiteralTag(
              transItem.TranslatedText
            );
            $transEdit.focus();
            $transEdit.select();
            return falseValue;
          });
          editButton.setHover(function () {
            selectButton.unhover();
            reportButton.unhover();
          });
          selectButton.setCallback(function () {
            if (locked) return falseValue;
            editButton.hide();
            selectButton.hide();
            reportButton.hide();
            submitButton.hide();
            cancelButton.show();

            $clonedButtonPanel.style.marginTop =
              ($panel.offsetHeight - $clonedButtonPanel.offsetHeight) / 2 + px;
            $panel.style.backgroundColor = greyColor;
            $transBox.style.display = none;
            $panel.appendChild($submitting);
            $submitting.style.display = strBlock;

            locked = trueValue;
            mstTooltip.setLock(trueValue);

            timer = setTimeout(function () {
              locked = falseValue;
              hideTooltip();

              $panel.removeChild($submitting);
              $panel.style.backgroundColor = emptyString;
              $transBox.style.display = strBlock;
              $panel.onmouseout();

              editButton.show();
              selectButton.show();
              reportButton.show();
              submitButton.hide();
              cancelButton.hide();

              let rating = maxRating;
              if (lowerAuthLang && lowerAuthLang !== langCodeTo.toLowerCase())
                rating = 2;

              const url = getUrl(),
                originalText = replaceHtmlTagWithLiteralB(
                  transItem.OriginalText
                ),
                translatedText = replaceHtmlTagWithLiteralB(
                  transItem.TranslatedText
                );

              config.serviceClient.AddTranslation(
                config.appId,
                originalText,
                translatedText,
                langCodeFrom,
                langCodeTo,
                rating,
                nullValue,
                config.category ? config.category : nullValue,
                getUser(),
                url,
                function () {},
                function () {},
                sevenSeconds
              );

              if (transItem.Callback) transItem.Callback(rating);
              try {
                translatedEl.innerHTML = translatedEl._mstDenormalize(
                  transItem.TranslatedText
                ).innerHTML;
              } catch (err) {}
            }, 1e3);
            return falseValue;
          });
          selectButton.setHover(function () {
            editButton.unhover();
            reportButton.unhover();
          });
          reportButton.setCallback(function () {
            if (locked) return falseValue;

            editButton.hide();
            selectButton.hide();
            reportButton.hide();
            submitButton.hide();
            cancelButton.show();

            $clonedButtonPanel.style.marginTop =
              ($panel.offsetHeight - $clonedButtonPanel.offsetHeight) / 2 + px;
            $panel.style.backgroundColor = greyColor;
            $transBox.style.display = none;
            $panel.appendChild($submitting);
            $submitting.style.display = strBlock;

            locked = trueValue;
            mstTooltip.setLock(trueValue);

            timer = setTimeout(function () {
              locked = falseValue;
              mstTooltip.setLock(falseValue);

              $panel.removeChild($submitting);
              $transBox.style.display = strBlock;
              $submitting.style.display = none;
              $statsTab.style.display = none;
              cancelButton.hide();

              let user = getUser();

              if (
                maxRating >= 5 &&
                (!lowerAuthLang || lowerAuthLang === langCodeTo.toLowerCase())
              )
                user = "authuser";
              let rating = maxRating;

              if (lowerAuthLang && lowerAuthLang !== langCodeTo.toLowerCase())
                rating = 2;
              else if (transItem.Rating < -5) rating = 0;

              const url = getUrl(),
                originalText = replaceHtmlTagWithLiteralB(
                  transItem.OriginalText
                ),
                translatedText = replaceHtmlTagWithLiteralB(
                  transItem.TranslatedText
                );

              config.serviceClient.AddTranslation(
                config.appId,
                originalText,
                translatedText,
                langCodeFrom,
                langCodeTo,
                -rating,
                nullValue,
                config.category ? config.category : nullValue,
                user,
                url,
                function () {},
                function () {},
                sevenSeconds
              );

              if (transItem.Callback) transItem.Callback(rating);

              if (rating > 5 || rating === 0) {
                transItem.Rating = -rating;
                editButton.show();
                selectButton.show();
                reportButton.show();
                $clonedButtonPanel.style.marginTop =
                  ($panel.offsetHeight - $clonedButtonPanel.offsetHeight) / 2 +
                  px;
                if (rating === 0) {
                  reportButton.setLabel(
                    $reject.innerText || $reject.textContent,
                    $rejectTooltip.innerText || $rejectTooltip.textContent
                  );
                  $transBox.style.color = emptyString;
                } else {
                  reportButton.setLabel(
                    $restore.innerText || $restore.textContent,
                    $restoreTooltip.innerText || $restoreTooltip.textContent
                  );
                  $transBox.style.color = "#A6A6A6";
                }
                $panel.style.backgroundColor = emptyString;
              }
            }, 1e3);

            return falseValue;
          });
          reportButton.setHover(function () {
            editButton.unhover();
            selectButton.unhover();
          });
          submitButton.setCallback(function () {
            if (!$transEdit.value) return;
            if (!$transEdit.value.replace(/\s/g, emptyString)) return;

            $transBox.style.display = strBlock;
            $containerOfTransEdit.style.display = none;

            editButton.hide();
            selectButton.hide();
            reportButton.hide();
            submitButton.hide();
            cancelButton.show();

            $clonedButtonPanel.style.marginTop =
              ($panel.offsetHeight - $clonedButtonPanel.offsetHeight) / 2 + px;
            $panel.style.backgroundColor = greyColor;
            $transBox.style.display = none;
            $panel.appendChild($submitting);
            $submitting.style.display = strBlock;

            locked = trueValue;
            mstTooltip.setLock(trueValue);

            timer = setTimeout(function () {
              let rating = maxRating;
              if (lowerAuthLang && lowerAuthLang !== langCodeTo.toLowerCase())
                rating = 2;

              const url = getUrl(),
                originalText = replaceHtmlTagWithLiteralB(
                  transItem.OriginalText
                ),
                translatedText = replaceHtmlTagWithLiteralB($transEdit.value);

              config.serviceClient.AddTranslation(
                config.appId,
                originalText,
                translatedText,
                langCodeFrom,
                langCodeTo,
                rating,
                nullValue,
                config.category ? config.category : nullValue,
                getUser(),
                url,
                function () {
                  locked = falseValue;
                  hideTooltip();
                  $panel.removeChild($submitting);
                  $panel.style.backgroundColor = emptyString;
                  $transBox.style.display = strBlock;
                  $panel.onmouseout();
                  editButton.show();
                  selectButton.show();
                  reportButton.show();
                  submitButton.hide();
                  cancelButton.hide();
                  if (transItem.Callback) transItem.Callback(rating);
                  try {
                    translatedEl.innerHTML = translatedEl._mstDenormalize(
                      replaceHtmlTagWithLiteralB($transEdit.value)
                    ).innerHTML;
                  } catch (a) {
                    alert(
                      "The translation could not be displayed.  Please try again later."
                    );
                  }
                },
                function (a) {
                  cancelButton.hide();
                  if (a.indexOf("InvalidRequest_MismatchedTags") >= 0) {
                    showError(
                      $panel,
                      "The translation could not be added. Please check that the tags are preserved and try again."
                    );
                    $panel.style.backgroundColor = emptyString;
                    $transBox.style.display = emptyString;
                    $submitting.style.display = none;
                    locked = falseValue;
                    editButton.doCallback();
                  } else {
                    alert(
                      "The translation could not be added.  Please try again later."
                    );
                    hideTooltip();
                  }
                },
                sevenSeconds
              );
            }, 1e3);

            return falseValue;
          });
          cancelButton.setCallback(function () {
            if (timer) {
              clearTimeout(timer);
              timer = nullValue;
            }

            $panel.style.backgroundColor = emptyString;
            $transBox.style.display = strBlock;
            if ($containerOfTransEdit)
              $containerOfTransEdit.style.display = none;
            $submitting.style.display = none;

            editButton.show();
            selectButton.show();
            reportButton.show();
            submitButton.hide();
            cancelButton.hide();

            try {
              $panel.removeChild($submitting);
            } catch (err) {}

            $clonedButtonPanel.style.marginTop =
              ($panel.offsetHeight - $clonedButtonPanel.offsetHeight) / 2 + px;

            setTimeout(function () {
              locked = falseValue;
              mstTooltip.setLock(falseValue);
              if (shouldMouseOverOnInit) hideTooltip();
            }, oneHundred);

            return falseValue;
          });

          if (!reject) {
            $panel.title = selectButton.tooltip;
            $panel.onclick = function () {
              selectButton.doCallback();
              return falseValue;
            };
          } else {
            $panel.title = reportButton.tooltip;
            $panel.onclick = function () {
              reportButton.doCallback();
              return falseValue;
            };
          }

          if (shouldMouseOverOnInit) {
            $panel.onmouseover();
            editButton.doCallback();
          }
          return self;
        }

        function Button(el, buttonText, tooltipText, voteCount) {
          let self = this,
            $root = el,
            $buttonIcon = findDescendantWithClassName($root, "MSTCButtonIcon"),
            $voteCountSelect = findDescendantWithClassName(
              $root,
              "MSTCVoteCountSelect"
            ),
            $buttonImg = findDescendantWithClassName($root, "MSTCButtonImg"),
            $buttonLabel = findDescendantWithClassName(
              $root,
              "MSTCButtonLabel"
            ),
            buttonLabelColor = domUtils.getStyleValue($buttonLabel, "color"),
            buttonLabelBgColor = domUtils.getStyleValue(
              $buttonLabel,
              "backgroundColor"
            ),
            buttonImgFileExt = $buttonImg.src.match(/^(.*)(\.[^\.]*)$/)[1],
            styleNameForBorder =
              domUtils.getStyleValue($content, strDirection) === rightToLeft
                ? "borderRightColor"
                : "borderLeftColor",
            callback,
            onHover,
            onUnhover,
            isCallingExternalCallback = falseValue;
          if (buttonText) {
            $buttonLabel.innerHTML = emptyString;
            $buttonLabel.appendChild(document.createTextNode(buttonText));
          }
          if (tooltipText) $root.title = tooltipText;
          if (voteCount)
            if (voteCount.toString().length <= 2)
              $voteCountSelect.appendChild(document.createTextNode(voteCount));
            else {
              $voteCountSelect.title = voteCount;
              $voteCountSelect.appendChild(
                document.createTextNode(voteCount.toString().substr(0, 1) + "x")
              );
            }
          self.tooltip = $root.title;
          $buttonLabel.style[styleNameForBorder] = whiteColor;
          const $span = document.createElement(strSpan);
          $span.style.display = strInlineBlock;
          $span.style.width = "1px";
          $span.style.height = "19px";
          $span.style.backgroundColor = buttonLabelBgColor;
          $root.insertBefore($span, $root.firstChild);
          self.setIcon = function (a) {
            buttonImgFileExt =
              $buttonImg.src.match(/^(.*\/)([^\/]*)$/)[1] +
              a.match(/^(.*)(\.[^\.]*)$/)[1];
            $buttonImg.src = buttonImgFileExt + ".gif";
          };
          self.setCallback = function (func) {
            callback = $root.onclick = func;
          };
          self.doCallback = function () {
            if (callback && !isCallingExternalCallback) {
              isCallingExternalCallback = trueValue;
              callback();
              isCallingExternalCallback = falseValue;
            }
          };
          self.hover = $root.onmouseover = function () {
            $buttonIcon.style.color = $buttonLabel.style.color =
              buttonLabelBgColor;
            $buttonIcon.style.backgroundColor =
              $buttonLabel.style.backgroundColor = buttonLabelColor;
            $buttonLabel.style[styleNameForBorder] = emptyString;
            $buttonImg.src = buttonImgFileExt + "_h.gif";
            if (buttonImgFileExt.indexOf(strSelect) > negativeOne) {
              $buttonImg.style.marginLeft = "-3px";
              $buttonImg.style.marginTop = "2px";
            }
            if ($voteCountSelect)
              $voteCountSelect.style.display = strInlineBlock;
            if (onHover && !isCallingExternalCallback) {
              isCallingExternalCallback = trueValue;
              onHover();
              isCallingExternalCallback = falseValue;
            }
          };
          self.unhover = $root.onmouseout = function () {
            $buttonIcon.style.color = $buttonLabel.style.color =
              buttonLabelColor;
            $buttonIcon.style.backgroundColor =
              $buttonLabel.style.backgroundColor = buttonLabelBgColor;
            $buttonLabel.style[styleNameForBorder] = whiteColor;
            $buttonImg.src = buttonImgFileExt + ".gif";
            if (buttonImgFileExt.indexOf(strSelect) > negativeOne) {
              $buttonImg.style.marginLeft = zeroPx;
              $buttonImg.style.marginTop = zeroPx;
            }
            if ($voteCountSelect) $voteCountSelect.style.display = none;
            if (onUnhover && !isCallingExternalCallback) {
              isCallingExternalCallback = trueValue;
              onUnhover();
              isCallingExternalCallback = falseValue;
            }
          };
          self.setHover = function (func) {
            onHover = func;
          };
          self.setUnhover = function (func) {
            onUnhover = func;
          };
          self.show = function () {
            $root.style.display = strBlock;
          };
          self.hide = function () {
            $root.style.display = none;
          };
          self.expand = function () {
            $buttonLabel.style.display = emptyString;
          };
          self.collapse = function () {
            $buttonLabel.style.display = none;
          };
          self.setLabel = function (labelText, tooltipText) {
            if (labelText) {
              $buttonLabel.innerHTML = emptyString;
              $buttonLabel.appendChild(document.createTextNode(labelText));
            }
            if (tooltipText) $root.title = tooltipText;
            this.tooltip = $root.title;
          };
        }
        var hideTooltip = (self.hideTooltip = function () {
          locked = falseValue;
          $translatorCommunity.style.display = none;
          if (mstTooltip) mstTooltip.hide();
          if ($dashboard && $dashboard.parentNode === document.body)
            try {
              document.body.removeChild($dashboard);
            } catch (a) {}
        });

        function findDescendantWithClassName(node, className, level) {
          if (!level) level = 0;
          if (level > 40) return nullValue;
          let nodeWithClassName;
          for (let a = 0; a < node.childNodes.length; ++a) {
            const childNode = node.childNodes[a];
            if (
              childNode.className &&
              childNode.className.indexOf(className) > negativeOne
            )
              nodeWithClassName = node.childNodes[a];
            else if (
              node.childNodes[a].nodeType === 1 &&
              node.childNodes[a].childNodes
            )
              nodeWithClassName = findDescendantWithClassName(
                node.childNodes[a],
                className,
                level + 1
              );
            if (nodeWithClassName) break;
          }
          return nodeWithClassName;
        }
        var showDashboard = (self.showDashboard = function () {
          hideTooltip();
          if (mstTooltip) mstTooltip.setLock(trueValue);
          $dashboard = document.createElement(strDiv);
          $dashboard.style.position = strAbsolute;
          $dashboard.style.zIndex = maxZIndex;
          $dashboard.style.width = "97%";
          $dashboard.style.margin = "44px 8px";
          $dashboard.style.borderRight = $dashboard.style.borderBottom =
            "solid 0px black";
          $dashboard.style.backgroundColor = whiteColor;

          let height =
            window.innerHeight ||
            document.documentElement.clientHeight ||
            document.body.clientHeight ||
            fourHundred;
          if (height < fourHundred) height = fourHundred;
          height -= 60;

          const $iframe = document.createElement(strIframe);
          $iframe.style.width = "100%";
          $iframe.style.height = height.toString() + px;
          $iframe.src = 'javascript:document.write("Loading...")';
          $dashboard.appendChild($iframe);

          const $closeButton = document.createElement("a");
          try {
            domUtils.applyProtectiveCss($closeButton);
          } catch (j) {
            if (config.debug);
          }

          $closeButton.style.display = strInlineBlock;
          $closeButton.style.position = strAbsolute;
          $closeButton.style.styleFloat = strRight;
          $closeButton.style.top = "4px";
          $closeButton.style.cursor = strPointer;
          $closeButton.title = "Close dashboard";

          const $closeButtonSpan = document.createElement(strSpan);
          $closeButtonSpan.style.display = strInlineBlock;
          $closeButtonSpan.style.width = "28px";
          $closeButtonSpan.style.height = "28px";
          $closeButtonSpan.style.marginRight = "16px";
          $closeButton.appendChild($closeButtonSpan);

          const $closeButtonImg = document.createElement(tagImg);
          try {
            domUtils.applyProtectiveCss($closeButtonImg);
          } catch (j) {
            if (config.debug);
          }

          $closeButtonImg.src = config.imagePath + "ctfdashboardclose.gif";
          $closeButtonImg.style.display = strInlineBlock;
          $closeButtonImg.style.marginTop = "8px";
          $closeButtonImg.style.marginLeft = "8px";
          $closeButtonImg.style.border = zeroPx;
          $closeButtonSpan.appendChild($closeButtonImg);
          $closeButton.onclick = function () {
            if (mstTooltip) mstTooltip.setLock(falseValue);
            document.body.removeChild($dashboard);
          };

          $dashboard.appendChild($closeButton);
          $dashboard.style.height = height.toString() + px;
          $dashboard.style.overflow = strHidden;
          $dashboard.style.textAlign = strLeft;

          window.scrollTo(0, 0);
          document.body.insertBefore($dashboard, document.body.firstChild);

          setTimeout(function () {
            $closeButton.style.right = "4px";
            if (!domUtils.isInternetExplorer())
              $closeButton.style.left =
                ($dashboard.offsetWidth - $closeButton.offsetWidth).toString() +
                px;

            let encodedUrl = encodeURIComponent(location.href);
            if (encodedUrl.length > maxUrlLength)
              encodedUrl = encodedUrl.substr(0, maxUrlLength);

            const src =
              dashboardUrl +
              "?siteData=" +
              siteData +
              "&url=" +
              encodedUrl +
              "&from=" +
              encodeURIComponent(config.from) +
              "&to=" +
              encodeURIComponent(config.to) +
              "&category=" +
              encodeURIComponent(config.category) +
              "&usr=" +
              encodeURIComponent(getUser());
            $iframe.src = src;
          }, 0);

          return falseValue;
        });

        function replaceHtmlTagWithLiteralTag(html) {
          return html
            .replace(/<([a-zA-Z]*)(\d*)>/g, function (b, c, a) {
              return "<tag" + a + gtSign;
            })
            .replace(/<\/([a-zA-Z]*)(\d*)>/g, function (b, c, a) {
              return "</tag" + a + gtSign;
            });
        }

        function replaceHtmlTagWithLiteralB(text) {
          return text
            .replace(/<([a-zA-Z]*)(\d*)>/g, function (b, c, a) {
              return "<b" + a + gtSign;
            })
            .replace(/<\/([a-zA-Z]*)(\d*)>/g, function (b, c, a) {
              return "</b" + a + gtSign;
            });
        }

        function getUrl() {
          let result = document.location.href;
          if (document.location.href.indexOf(config.rootURL) === 0) {
            const matches = document.location.href.match(/url=([^&]+)/);
            if (matches) result = decodeURIComponent(matches[1]);
          }
          return result;
        }
        let transItemIndex = 0;

        function startHighlight(domTranslator, langFrom, langTo) {
          if (!domTranslator.transItems || !domTranslator.transItems.length)
            return;
          transItemIndex = 0;
          recursiveTranslateAndHighlight(domTranslator, langFrom, langTo);
        }

        function recursiveTranslateAndHighlight(
          domTranslator,
          langFrom,
          langTo
        ) {
          if (transItemIndex >= domTranslator.transItems.length) return;

          let texts = [],
            charCount = 0;

          for (
            let d = transItemIndex;
            d < domTranslator.transItems.length &&
            charCount < maxUrlLength &&
            d - transItemIndex < 10;
            ++d
          ) {
            const originalText =
              domTranslator.transItems[d].src._mstNormalize();
            charCount += domUtils.getStringByteCount(originalText);
            texts.push(originalText);
          }
          if (charCount >= maxUrlLength) texts.pop();

          config.serviceClient.GetTranslationsArray(
            config.appId,
            texts,
            langFrom,
            langTo,
            3,
            config.category
              ? {
                  Category: config.category,
                }
              : nullValue,
            function (response) {
              for (let i = 0; i < response.length; ++i)
                if (response[i].Translations.length > 1)
                  if (response[i].Translations[0].Rating > 5)
                    domTranslator.transItems[
                      transItemIndex + i
                    ].tgt.style.backgroundColor = greyColor;
                  else if (response[i].Translations[1].Count < 0)
                    domTranslator.transItems[
                      transItemIndex + i
                    ].tgt.style.backgroundColor = "#E5917F";
                  else
                    domTranslator.transItems[
                      transItemIndex + i
                    ].tgt.style.backgroundColor = "#B9E4FC";

              transItemIndex += texts.length;
              recursiveTranslateAndHighlight(domTranslator, langFrom, langTo);
            },
            function () {
              transItemIndex += texts.length > 1 ? texts.length : 1;
              recursiveTranslateAndHighlight(domTranslator, langFrom, langTo);
            },
            sevenSeconds
          );
        }
        const sc = (self.forceLoad = function () {
          if (initTranslatorCommunity) initTranslatorCommunity();
        });

        function getUser() {
          let result = $userId.innerText || $userId.textContent;
          if (!result) {
            const matches = document.cookie.match(/mstcid=([^;]+)/i);
            if (matches) result = matches[1];
            else {
              result = Math.floor(Math.random() * 1e9).toString(radixHex);
              document.cookie =
                "mstcid=" +
                result +
                "; expires=Sun, 01-Jan-2040 01:01:01 GMT; path=" +
                ((location.host.indexOf("bing") > negativeOne &&
                  location.pathname.indexOf("/translator")) > negativeOne
                  ? location.pathname
                  : pathDelimiter);
            }
          }
          return result;
        }
        new (function () {
          let matches, ctfLanguages;

          matches = baseUrl.match(/siteData=([^&]*)/);
          if (matches) siteData = matches[1];

          locale = config.locale;
          matches = baseUrl.match(/loc=([^&]+)/);
          if (matches) locale = matches[1];

          matches = baseUrl.match(/ctfLanguages=([^&]*)/);
          if (matches) ctfLanguages = matches[1];

          matches = baseUrl.match(/showDashboard=([^&]*)/);
          if (
            matches &&
            (matches[1].toLowerCase() === strFalse ||
              matches[1].toLowerCase() === langNorwegian)
          ) {
            shouldShowDashboard = falseValue;
          }

          if (ctfLanguages) {
            ctfLangDict = {};
            const langs = ctfLanguages.split(",");
            for (let d = 0; d < langs.length; ++d)
              ctfLangDict[langs[d].toLowerCase()] = 1;
          }

          if (siteData) {
            initTranslatorCommunity = function () {
              const communityDivId = "MicrosoftTranslatorCommunity";

              if (!initTranslatorCommunity) return;
              initTranslatorCommunity = nullValue;

              $translatorCommunity = document.getElementById(communityDivId);
              if ($translatorCommunity)
                $translatorCommunity.parentNode.removeChild(
                  $translatorCommunity
                );
              $translatorCommunity = document.createElement(strDiv);
              $translatorCommunity.id = communityDivId;
              $translatorCommunity.style.display = none;
              document.body.insertBefore(
                $translatorCommunity,
                document.body.firstChild
              );

              let inrt = emptyString;
              if (
                domUtils.isInternetExplorer() &&
                domUtils.isQuirksMode(document)
              )
                inrt = "&inrt=1";
              jc = sendRequest(
                "/ajax/v3/community.aspx?fmt=js&loc=" +
                  locale +
                  inrt +
                  "&siteData=" +
                  siteData,
                config.rootURL
              );
            };
          }

          if (config.tokRef) {
            window._mstRefTok = function (appId) {
              config.appId = appId;
            };
            setInterval(function () {
              if (window._eTokenScript)
                window._eTokenScript.parentNode.removeChild(
                  window._eTokenScript
                );
              window._eTokenScript = sendRequest(
                "/ajax/v3/community.aspx?reftok=1&siteData=" + siteData,
                config.rootURL
              );
            }, config.tokRef * 1e3);
          }
        })();
        config.serviceClient.Community = self;
      })(config.baseURL),
      uiController;

    (function (instance) {
      let draggingClassName = "dragging",
        mstToQuery = "__mstto=",
        strValue = "value",
        bracedZero = "{0}",
        strStyle = "style",
        languageMenuKey = "LanguageMenu",
        strTitle = "title",
        strHref = "href",
        langCodeNameMapping = {},
        localLanguageCode,
        currentLangCode,
        detectedLangCode = nullValue,
        timer = nullValue,
        isTranslationCompleted = falseValue,
        $widgetFloater,
        $widgetFloaterPanels,
        $widgetFloaterCollapsed,
        $floaterSharePanel,
        $floaterEmbed,
        $floaterProgressBar,
        $originalLanguageSpan,
        mouseX,
        mouseY,
        hasForceLoad = falseValue,
        shouldForceLoad = trueValue,
        isMouseOver = falseValue,
        isFloaterVisible = trueValue,
        initialized = falseValue,
        hasShownBefore = falseValue,
        noDetectedLangCode;

      function Initialize(langCode, boolInString, autoDetectedLangCode) {
        const bwmIdKey = "_bwmid",
          scriptForMouseOver = "Microsoft.Translator.OnMouseOverFloater()",
          strOnMouseOver = "onmouseover",
          idForSignOutSpan = "SignOutSpan",
          idForSignInSpan = "SignInSpan";

        if (typeof boolInString === undefinedTypeString) boolInString = "true";
        if (typeof autoDetectedLangCode === undefinedTypeString)
          autoDetectedLangCode = emptyString;

        $widgetFloater = Util.GetElement("WidgetFloater");
        $widgetFloaterPanels = Util.GetElement(strWidgetFloaterPanels);
        $widgetFloaterCollapsed = Util.GetElement("WidgetFloaterCollapsed");
        $floaterSharePanel = Util.GetElement("FloaterSharePanel");
        $floaterEmbed = Util.GetElement("FloaterEmbed");
        $floaterProgressBar = Util.GetElement("FloaterProgressBar");
        noDetectedLangCode = autoDetectedLangCode === emptyString;
        detectedLangCode = autoDetectedLangCode;
        //var h = document.createElement("link");
        //h.setAttribute(ab, window[Z].floaterStylePath);
        //h.setAttribute("rel", "stylesheet");
        const q = document.getElementsByTagName(head)[0];
        //q.insertBefore(h, q.firstChild);
        Util.GetElement("HelpLink").setAttribute(
          strHref,
          window.Microsoft.Translator.Widget.Links.Help
        );

        if (Util.GetElement("CTFAuthPanel")) {
          Util.GetElement(idForSignInSpan).style.display = none;
          Util.GetElement(idForSignOutSpan).style.display = none;

          if (window.Microsoft.Translator.Widget.Links.SignIn) {
            Util.GetElement(idForSignInSpan).innerHTML =
              window.Microsoft.Translator.Widget.Links.SignIn;
            Util.GetElement(idForSignInSpan).style.display = strInline;
          } else if (window.Microsoft.Translator.Widget.Links.SignOut) {
            Util.GetElement(idForSignOutSpan).style.display = strInlineBlock;
            Util.GetElement("UsernameLink").innerHTML =
              window.Microsoft.Translator.Widget.UserName;
            Util.GetElement(idForSignOutSpan).innerHTML +=
              "<span> | </span>" +
              window.Microsoft.Translator.Widget.Links.SignOut;

            const lastChild =
              Util.GetElement(idForSignOutSpan).children[
                Util.GetElement(idForSignOutSpan).children.length - 1
              ];
            if (lastChild.innerText)
              lastChild.setAttribute(strTitle, lastChild.innerText);
            else lastChild.setAttribute(strTitle, lastChild.textContent);
          }
        }

        $widgetFloaterPanels.onmousedown = onMouseDown;
        $widgetFloater.setAttribute(strOnMouseOver, scriptForMouseOver);
        $widgetFloater.setAttribute(
          "onmouseout",
          "Microsoft.Translator.OnMouseOutFloater()"
        );
        $widgetFloaterCollapsed.setAttribute(
          strOnMouseOver,
          scriptForMouseOver
        );

        localLanguageCode = langCode;
        window.Microsoft.Translator.Widget.GetLanguagesForTranslate(
          langCode,
          onSucessGetLanguages,
          onErrorGetLanguages
        );

        const inputs = $widgetFloaterPanels.getElementsByTagName("input");

        for (let i = 0; i < inputs.length; i++) {
          const input = inputs[i];
          if (input.getAttribute("type").toLowerCase() === "text")
            input.setAttribute("onclick", "this.select()");
        }

        if (boolInString.toLowerCase() === strFalse)
          shouldForceLoad = falseValue;
        initialized = trueValue;

        if (window[bwmIdKey]) window[bwmIdKey] += ",translator";
        else window[bwmIdKey] = "translator";
        //db("widget/metrics.js", (document.location.protocol === "https:" ? "https://ssl" : "http://www") + ".bing.com/")
      }
      instance.Initialize = Initialize;

      function showFloaterPanels() {
        $widgetFloaterPanels.style.display = strBlock;
      }

      function Show(langCode) {
        if (!initialized) {
          setTimeout(function () {
            Show(langCode);
          }, 50);
          return;
        }

        let $laucher;

        if (!hasShownBefore)
          if (($laucher = document.getElementById("WidgetLauncher"))) {
            let rect = $laucher.getBoundingClientRect();
            if (window["Util"].IsElementInViewport($laucher))
              if (rect.left === 0 && rect.top === 0)
                setTimeout(function () {
                  rect = $laucher.getBoundingClientRect();
                  repositionPanels(rect.left, rect.top);
                }, 200);
              else repositionPanels(rect.left, rect.top);
            else repositionPanels(50, 50);
          } else if (!$laucher) repositionPanels(50, 50);

        hasShownBefore = trueValue;

        hideFloater();
        showFloaterPanels();

        $widgetFloater.style.display = strBlock;
        currentLangCode = window[languageMappingsKey][langCode.toLowerCase()];

        if (!currentLangCode) currentLangCode = langCode;

        var intervalTimer = setInterval(function () {
          if (window[languageMenuKey]) {
            window[languageMenuKey].onChanged = onLanguageChange;
            try {
              try {
                window[languageMenuKey].setValue(currentLangCode);
              } catch (err) {
                console.error(err);
              }
              $originalLanguageSpan = Util.GetElement("OriginalLanguageSpan");
              if (detectedLangCode === emptyString)
                $originalLanguageSpan.parentNode[strStyle].display = none;
              else {
                $originalLanguageSpan.parentNode[strStyle].display = strBlock;
                if (noDetectedLangCode)
                  $originalLanguageSpan.innerHTML = window[
                    mstConfigKey
                  ].autoDetected.replace(
                    bracedZero,
                    langCodeNameMapping[detectedLangCode]
                  );
                else
                  $originalLanguageSpan.innerHTML =
                    langCodeNameMapping[detectedLangCode];
              }
            } catch (err) {
              console.warn(err);
            }
            clearInterval(intervalTimer);
          }
        }, 1);

        isFloaterVisible = trueValue;

        if (timer) clearTimeout(timer);
        if (!isMouseOver) {
          isTranslationCompleted = trueValue;
          scheduleAutoHideFloater();
        }
        if (!hasForceLoad && shouldForceLoad) {
          config.serviceClient.Community.forceLoad();
          hasForceLoad = trueValue;
        }
      }
      instance.Show = Show;

      function hidePanels() {
        $widgetFloaterPanels.style.display = none;
      }

      function hideFloater() {
        $widgetFloater.style.display = none;
        $floaterSharePanel.style.display = none;
        $widgetFloaterCollapsed.style.display = none;
        $floaterEmbed.style.display = none;
        isFloaterVisible = falseValue;
        clearTimeout(timer);
      }

      function repositionPanels(a, b) {
        $widgetFloaterPanels.style.top = b + px;
        $widgetFloaterPanels.style.left = a + px;
      }

      function TranslationComplete() {
        hideProgress();
        isTranslationCompleted = trueValue;
        scheduleAutoHideFloater();
      }
      instance.TranslationComplete = TranslationComplete;

      function TranslationProgress(g) {
        if (g >= 0 && g < oneHundred) {
          isTranslationCompleted = falseValue;
          clearTimeout(timer);
          showProgress();
          renderProgress(g);
        }
        let langCode = nullValue;

        try {
          langCode =
            window.Microsoft.Translator.Widget.GetAutoDetectedLanguage();
        } catch (err) {}

        if (
          langCode &&
          window[languageMenuKey] &&
          window[languageMenuKey].getValue
        ) {
          detectedLangCode = langCode;
          $originalLanguageSpan.parentNode[strStyle].display = strBlock;

          if (noDetectedLangCode)
            $originalLanguageSpan.innerHTML = window[
              mstConfigKey
            ].autoDetected.replace(
              bracedZero,
              langCodeNameMapping[detectedLangCode]
            );
          else
            $originalLanguageSpan.innerHTML =
              langCodeNameMapping[detectedLangCode];

          let langNameFrom = langCodeNameMapping[langCode],
            langNameTo =
              langCodeNameMapping[window[languageMenuKey].getValue()],
            urlWithoutHash = location.href.substr(
              0,
              location.href.length - (location.hash || emptyString).length
            ),
            appendNewQueryWithChar =
              document.location.search.length === 0 ? "?" : "&",
            emailSubject =
              Util.GetElement("EmailSubject").getAttribute(strValue);

          emailSubject = emailSubject.replace(bracedZero, langNameTo);
          emailSubject = emailSubject.replace("{1}", langNameFrom);

          let c = Util.GetElement("EmailBody").getAttribute(strValue);
          c = c.replace(
            bracedZero,
            encodeURIComponent(
              urlWithoutHash +
                appendNewQueryWithChar +
                mstToQuery +
                window[languageMenuKey].getValue()
            )
          );
          c = c.replace("{1}", encodeURIComponent(urlWithoutHash));

          Util.GetElement("EmailLink").setAttribute(
            strHref,
            "mailto:?charset=utf-8&subject=" + emailSubject + "&body=" + c
          );
          Util.GetElement("ShareHelpLink").setAttribute(
            strTitle,
            Util.GetElement("ShareHelpText")
              .getAttribute(strValue)
              .replace(bracedZero, langNameTo)
          );

          window["Util"].SetCookie(
            "mstto",
            window[languageMenuKey].getValue(),
            falseValue
          );
        }
      }
      instance.TranslationProgress = TranslationProgress;

      function TranslationError(a) {
        console.log(a);
      }
      instance.TranslationError = TranslationError;

      function OnClose() {
        window.Microsoft.Translator.Widget.RestoreOriginal();
        hidePanels();
      }
      instance.OnClose = OnClose;

      function OnShareBackClick() {
        hideFloater();
        Show(currentLangCode);
      }
      instance.OnShareBackClick = OnShareBackClick;

      function OnEmbedBackClick() {
        hideFloater();
        Show(currentLangCode);
      }
      instance.OnEmbedBackClick = OnEmbedBackClick;

      function OnMouseOverFloater() {
        clearTimeout(timer);
        isMouseOver = trueValue;
        Show(currentLangCode);
      }
      instance.OnMouseOverFloater = OnMouseOverFloater;

      function OnMouseOutFloater() {
        isMouseOver = falseValue;
        if (isFloaterVisible) scheduleAutoHideFloater();
      }
      instance.OnMouseOutFloater = OnMouseOutFloater;

      function scheduleAutoHideFloater() {
        if (isTranslationCompleted && !isMouseOver && isFloaterVisible)
          timer = setTimeout(function () {
            hideIfVisibleAndMouseOut();
          }, sevenSeconds);
      }

      function ShowSharePanel() {
        const shareTextboxId = "ShareTextbox";

        hideFloater();
        showFloaterPanels();

        const urlWithoutHash = location.href.substr(
          0,
          location.href.length - (location.hash || emptyString).length
        );

        if (location.search.length === 0)
          Util.GetElement(shareTextboxId).setAttribute(
            strValue,
            urlWithoutHash + "?__mstto=" + currentLangCode
          );
        else if (location.search.indexOf("__mstto") !== negativeOne) {
          if (urlWithoutHash.match(/__mstto=(.+)([&]+)/i))
            Util.GetElement(shareTextboxId).setAttribute(
              strValue,
              urlWithoutHash.replace(
                /__mstto=(.+)([&&]+)/i,
                mstToQuery + currentLangCode + "&"
              )
            );
          else if (urlWithoutHash.match(/__mstto=(.+)/i))
            Util.GetElement(shareTextboxId).setAttribute(
              strValue,
              urlWithoutHash.replace(
                /__mstto=(.+)/i,
                mstToQuery + currentLangCode
              )
            );
        } else
          Util.GetElement(shareTextboxId).setAttribute(
            strValue,
            urlWithoutHash + "&amp;__mstto=" + currentLangCode
          );

        $floaterSharePanel.style.display = strBlock;
      }
      instance.ShowSharePanel = ShowSharePanel;

      function ShowEmbed() {
        hideFloater();
        $floaterEmbed.style.display = strBlock;
      }
      instance.ShowEmbed = ShowEmbed;

      function hideIfVisibleAndMouseOut() {
        if (isTranslationCompleted && !isMouseOver && isFloaterVisible) {
          hideFloater();
          $widgetFloaterCollapsed.style.display = strBlock;
        }
      }

      function onSucessGetLanguages(languages) {
        for (let a = 0; a < languages.length; a++)
          langCodeNameMapping[languages[a].Code] = languages[a].Name;
      }

      function onErrorGetLanguages() {
        if (localLanguageCode !== langEnglish) {
          localLanguageCode = langEnglish;
          window.Microsoft.Translator.Widget.GetLanguagesForTranslate(
            langEnglish,
            onSucessGetLanguages,
            onErrorGetLanguages
          );
        }
      }

      function renderProgress(percentage) {
        Util.GetElement("ProgressFill").style.width = percentage + "%";
      }

      function hideProgress() {
        $floaterProgressBar.style.visibility = "hidden";
      }

      function showProgress() {
        $floaterProgressBar.style.visibility = strVisible;
      }

      function onLanguageChange() {
        if (
          currentLangCode.toLowerCase() !=
          window[languageMenuKey].getValue().toLowerCase()
        ) {
          clearTimeout(timer);
          window.Microsoft.Translator.Widget.Translate(
            detectedLangCode,
            window[languageMenuKey].getValue()
          );
          currentLangCode = window[languageMenuKey].getValue();
          window[languageMenuKey].elemHeader.focus();
        }
      }

      function onMouseDown(e) {
        e = e || event;
        mouseX = e.clientX;
        mouseY = e.clientY;
        document.onmousemove = onMouseMove;
        document.onmouseup = onMouseUp;
        document.body.focus();
        document.onselectstart = function () {
          return falseValue;
        };
        $widgetFloaterPanels.ondragstart = function () {
          return falseValue;
        };
        Util.addClass($widgetFloaterPanels, draggingClassName);
        return falseValue;
      }

      function onMouseMove(e) {
        e = e || event;
        const pos = Util.getPosition($widgetFloaterPanels),
          deltaX = e.clientX - mouseX,
          deltaY = e.clientY - mouseY;
        repositionPanels(
          parseInt(pos.left) + deltaX,
          parseInt(pos.top) + deltaY
        );
        mouseX = e.clientX;
        mouseY = e.clientY;
        return falseValue;
      }

      function onMouseUp(e) {
        e = e || event;
        document.onmousemove = nullValue;
        document.onselectstart = nullValue;
        $widgetFloaterPanels.ondragstart = nullValue;
        Util.removeClass($widgetFloaterPanels, draggingClassName);
        return falseValue;
      }
    })(uiController || (uiController = {}));

    self.FloaterInitialize = function (
      langCode,
      boolString,
      autoDetectedLangCode
    ) {
      uiController.Initialize(langCode, boolString, autoDetectedLangCode);
    };
    self.FloaterShowSharePanel = function () {
      uiController.ShowSharePanel();
    };
    self.FloaterShowEmbed = function () {
      uiController.ShowEmbed();
    };
    self.FloaterOnClose = function () {
      uiController.OnClose();
      return falseValue;
    };
    self.FloaterOnShareBackClick = function () {
      uiController.OnShareBackClick();
    };
    self.FloaterOnEmbedBackClick = function () {
      uiController.OnEmbedBackClick();
    };
    self.OnMouseOverFloater = function () {
      uiController.OnMouseOverFloater();
      return falseValue;
    };
    self.OnMouseOutFloater = function () {
      uiController.OnMouseOutFloater();
      return falseValue;
    };
    const el = document.getElementById(strWidgetFloaterPanels);
    if (el) el.parentNode.removeChild(el);
  })();

  function CUtil() {
    const strCharacter = "character",
      nullValue = null,
      negativeOne = -1,
      self = this,
      ua = navigator.userAgent.toLowerCase();

    self.MSIE =
      ua.indexOf("msie") !== negativeOne && ua.indexOf("opera") === negativeOne;
    self.MSIE6 = self.MSIE && ua.indexOf("msie 6.") !== negativeOne;
    self.MSIE7 = self.MSIE && ua.indexOf("msie 7.") !== negativeOne;
    self.FIREFOX = ua.indexOf("firefox") !== negativeOne;
    self.SAFARI = ua.indexOf("applewebkit") !== negativeOne;
    self.GetPath = function () {
      let result = "/";
      if (location.pathname) {
        result = location.pathname.match(/\/\w*/i);
        if (result) result = result[0];
      }
      return result;
    };
    self.AddFavorites = function () {
      const title = document.title,
        url = window.location.href;
      if (this.FIREFOX) window.sidebar.addPanel(title, url, "");
      else window.external.AddFavorite(url, title);
    };
    self.SetCookie = function (name, value, longLive, path) {
      if (!path) path = "/";
      document.cookie =
        name +
        "=" +
        value +
        (longLive ? "; expires=Sun, 01-Jan-2040 01:01:01 GMT" : "") +
        "; path=" +
        path;
    };
    self.DeleteCookie = function (name, path) {
      if (!path) path = "/";
      document.cookie = name + "=;Thu, 01 Jan 1970 00:00:01 GMT; path=" + path;
    };
    self.GetCookie = function (name) {
      let codePrefix = "document.cookie.match(/",
        result = eval(codePrefix + name + "s*=([^;]*)(;|$)/);");
      if (result) return result[1];
      else {
        result = eval(codePrefix + name + "s*([^;]*)(;|$)/);");
        if (result) return result[1];
        else return nullValue;
      }
    };
    self.AddEvent = function (el, eventName, handler) {
      if (el.addEventListener) el.addEventListener(eventName, handler, false);
      else if (el.attachEvent) el.attachEvent("on" + eventName, handler);
    };
    self.AbsXPos = function (el) {
      return (
        el.offsetLeft + (el.offsetParent ? this.AbsXPos(el.offsetParent) : 0)
      );
    };
    self.AbsYPos = function (el) {
      return (
        el.offsetTop + (el.offsetParent ? this.AbsYPos(el.offsetParent) : 0)
      );
    };
    self.SetDDLByVal = function (selectedValue, $select) {
      for (let i = 0; i < $select.options.length; i++)
        if ($select.options[i].value === selectedValue) {
          $select.options[i].selected = true;
          return;
        }
    };
    self.GetElement = function (id) {
      if (arguments.length <= 0) return nullValue;
      if (document.getElementById) return document.getElementById(id);
      else if (document.all) return document.all(id);
      else if (document.layers) return window.document.layers[id];
      else return nullValue;
    };
    self.GetStyleObject = function (id) {
      if (document.getElementById && document.getElementById(id))
        return document.getElementById(id).style;
      else if (document.all && document.all(id)) return document.all(id).style;
      else if (document.layers && document.layers[id])
        return document.layers[id];
      else return false;
    };
    self.GetStyleValue = function (id, styleName) {
      let el = document.getElementById(id) || document.body,
        result;
      if (el.currentStyle)
        result =
          el.currentStyle[styleName] ||
          el.currentStyle.getAttribute(styleName.replace("-"));
      else if (window.getComputedStyle)
        result = document.defaultView
          .getComputedStyle(el, nullValue)
          .getPropertyValue(styleName);
      return result;
    };
    self.GetScrollBounds = function (el) {
      if (!el)
        return {
          x: 0,
          y: 0,
          width: 0,
          height: 0,
        };
      let left, top, width, height;
      if (
        el.documentElement &&
        el.documentElement.scrollTop &&
        el.documentElement.scrollTop >= el.body.scrollTop
      ) {
        left = el.documentElement.scrollLeft;
        top = el.documentElement.scrollTop;
        width = el.documentElement.scrollWidth;
        height = el.documentElement.scrollHeight;
      } else {
        left = el.body.scrollLeft;
        top = el.body.scrollTop;
        width = el.body.scrollWidth;
        height = el.body.scrollHeight;
      }
      return {
        x: left,
        y: top,
        width: width,
        height: height,
      };
    };
    self.getLanguageDirStyle = function (langCode) {
      let result;
      if (window.Microsoft.Translator.languageDirs[langCode] === "rtl")
        result = {
          direction: "rtl",
          textAlign: "right",
        };
      else
        result = {
          direction: "ltr",
          textAlign: "left",
        };
      return result;
    };
    self.setScrollValue = function (
      el,
      absScrollValue,
      deltaX,
      deltaY,
      topOrLeft
    ) {
      const d = el.ownerDocument.defaultView
        ? el.ownerDocument.defaultView
        : el.ownerDocument.parentWindow;
      if (d.scrollBy) d.scrollBy(deltaX, deltaY);
      else {
        el["scroll" + topOrLeft] = absScrollValue;
        el.ownerDocument.body["scroll" + topOrLeft] = absScrollValue;
      }
    };
    self.GetUrlParameter = function (url, paramName) {
      paramName = paramName.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
      const strReg = "[\\?&]" + paramName + "=([^&#]*)",
        regexp = new RegExp(strReg, "i"),
        result = regexp.exec(url);
      if (result == nullValue) return nullValue;
      else return result[1];
    };

    self.GetDocumentUrl = function (doc) {
      let path = "/bv.aspx",
        query = "a=",
        result = "";
      if (doc.location.hash.length > 1) result = doc.location.hash.substring(1);
      else if (doc.location.search.indexOf(query) > 0)
        result = decodeURIComponent(
          doc.location.search.substring(doc.location.search.indexOf(query) + 2)
        );
      while (
        result &&
        result.toLowerCase().indexOf(path) >= 0 &&
        result.toLowerCase().indexOf(query) >= 0
      )
        result = decodeURIComponent(
          result.substring(result.toLowerCase().indexOf(query) + 2)
        );
      if (result.length > 0) {
        result = result.replace(/^\s*/, "").replace(/\s*$/, "");
        if (result.indexOf("?") === negativeOne)
          result = result.replace("&", "?");
      }
      if (result && result.indexOf("://") === negativeOne)
        result = "http://" + result;
      if (result && result.toLowerCase().indexOf(path) >= 0) result = "";
      return result;
    };
    self.SendPostRequest = function (action, data, target) {
      const $form = document.createElement("form");
      $form.action = action;
      $form.method = "post";
      $form.target = target;
      for (const key in data)
        if (data.hasOwnProperty(key)) {
          const b = document.createElement("input");
          b.name = key;
          b.value = data[key];
          b.type = "hidden";
          $form.appendChild(b);
        }
      document.body.appendChild($form);
      $form.submit();
      document.body.removeChild($form);
    };
    self.Log = function (service, logs) {
      window.Microsoft.Translator.LoadScript(
        "/sync.ashx?svc=" + service + "&" + logs.join("&")
      );
    };
    self.GetCaretPosition = function (input) {
      let result = 0;
      if (input.selectionStart || input.selectionStart === "0")
        result = input.selectionStart;
      else if (document.selection) {
        let range = document.selection.createRange(),
          start = 0,
          end = 0;

        if (range && range.parentElement() === input) {
          const len = input.value.length,
            k = input.value.replace(/\r\n/g, "\n"),
            textRange = input.createTextRange();
          textRange.moveToBookmark(range.getBookmark());
          const collapsedTextRange = input.createTextRange();
          collapsedTextRange.collapse(false);
          if (
            textRange.compareEndPoints("StartToEnd", collapsedTextRange) >
            negativeOne
          )
            start = end = len;
          else {
            start = -textRange.moveStart(strCharacter, -len);
            if (
              textRange.compareEndPoints("EndToEnd", collapsedTextRange) >
              negativeOne
            )
              end = len;
            else end = -textRange.moveEnd(strCharacter, -len);
          }
        }
        result = start;
      }
      return result;
    };
    self.SetSelectionRange = function (input, start, end) {
      if (input.setSelectionRange) {
        input.focus();
        input.setSelectionRange(start, end);
      } else if (input.createTextRange) {
        const b = input.createTextRange();
        b.collapse(true);
        b.moveEnd(strCharacter, end);
        b.moveStart(strCharacter, start);
        b.select();
      }
    };
    self.SetCaretToPosition = function (input, pos) {
      this.SetSelectionRange(input, pos, pos);
    };
    self.addClass = function (el, className) {
      const existingClasses = el.className.split(" ");
      for (let a = 0; a < existingClasses.length; a++)
        if (className === existingClasses[a]) return;
      el.className += " " + className;
    };
    self.removeClass = function (el, className) {
      const existingClasses = el.className.split(" ");
      el.className = "";
      for (let a = 0; a < existingClasses.length; a++)
        if (className !== existingClasses[a]) {
          el.className += existingClasses[a];
          if (a === existingClasses.length - 1) el.className += " ";
        }
    };
    self.getPosition = function (el) {
      let left = 0,
        top = 0;
      while (el && !isNaN(el.offsetLeft) && !isNaN(el.offsetTop)) {
        left += el.offsetLeft - el.scrollLeft;
        top += el.offsetTop - el.scrollTop;
        el = el.offsetParent;
      }
      return {
        top: top,
        left: left,
      };
    };
    self.IsElementInViewport = function (el) {
      const rect = el.getBoundingClientRect();
      return (
        rect.top >= 0 &&
        rect.left >= 0 &&
        rect.bottom <=
          (window.innerHeight || document.documentElement.clientHeight) &&
        rect.right <=
          (window.innerWidth || document.documentElement.clientWidth)
      );
    };
    return self;
  }
  var Util = new CUtil();
  const MtPopUpList = function () {
    const self = this;
    self.onChanged = null;
    self.shiftKeyDown = false;
    self.MRUL = [];
    self.MAX_MRUL = 2;
  };
  MtPopUpList.prototype = {
    keysBuffer: "",
    Init: function (name, keyMaps, i, onChanged, popupElementId) {
      const self = this;
      self.Items = [];
      self.Keys = [];
      self.KeyMap = " " + keyMaps.join(" ") + " ";
      self.keysBuffer = "";
      let f = 0;
      for (let b = 0; b < keyMaps.length; b++) {
        self.Items[keyMaps[b]] = i[b];
        if (keyMaps[b] !== "-") {
          self.Keys[f] = keyMaps[b];
          f++;
        }
      }
      self.onChanged = onChanged;
      document.onclick = self.HideCurrentPopup;
      self.elemHeader = Util.GetElement("__" + name + "_header");
      self.elemSvID = Util.GetElement(name + "_svid");
      self.elemTextId = Util.GetElement(name + "_textid");
      self.elemPopup = document.getElementById(popupElementId);
      self.cropText();
      if (self.elemPopup !== null) {
        self.elemPopup.onkeydown = new self.doKeyDown(
          self,
          self.HideCurrentPopup
        ).execute;
        self.elemPopup.onkeyup = new self.doKeyUp(self).execute;
        self.elemPopup.onkeypress = new self.doKeyPress(self).execute;
      }
      self.name = name;
      self.mrul_cookie = name + "_lpmru";
      const cookieValue = Util.GetCookie(self.mrul_cookie);
      if (cookieValue !== null && cookieValue !== "undefined")
        self.MRUL = cookieValue.split(",");
      else self.MRUL = [];
    },
    getLinks: function () {
      return this.elemPopup.getElementsByTagName("a");
    },
    getActiveLink: function () {
      const $links = this.getLinks(),
        svID = this.elemSvID.value;
      if (svID !== null)
        for (let i = 0; i < $links.length; i++)
          if ($links[i].href.indexOf("#" + svID) !== -1) return $links[i];
      return $links[0];
    },
    getByLetter: function (i, charCode, elements) {
      let self = this,
        upperChar = String.fromCharCode(charCode).toUpperCase(),
        $activeLink = self.getActiveLink(),
        $links = [],
        b;
      for (b = 0; b < elements.length; b++) $links[b] = elements[b];
      $links.sort(function (el1, el2) {
        const text1 = el1.innerText || el1.textContent,
          text2 = el2.innerText || el2.textContent;
        if (text1 < text2) return -1;
        if (text1 > text2) return 1;
        return 0;
      });
      let c = 0;
      for (; c < $links.length; c++)
        if ($activeLink === $links[c]) {
          c++;
          break;
        }
      for (; c < $links.length; c++)
        if (self.getFirstChar($links[c]) === upperChar)
          return self.getHref($links[c]);
      for (b = 0; b < $links.length; b++)
        if (
          self.getFirstChar($links[b]) === upperChar &&
          $activeLink !== $links[b]
        )
          return self.getHref($links[b]);
      return null;
    },
    getFirstChar: function (el) {
      const text = el.innerText || el.textContent;
      if (text !== undefined && text !== null && text.length > 0)
        return text.substr(0, 1).toUpperCase();
      else return "";
    },
    getNextKey: function (key, step) {
      let self = this,
        index = 0;
      for (let c = 0; c < self.Keys.length; c++)
        if (self.Keys[c] === key) {
          index = c;
          break;
        }
      index = index + step;
      if (index > self.Keys.length) index = 0;
      else if (index < 0) index = self.Keys.length - 1;
      return self.Keys[index];
    },
    getNextSibling: function (g, step) {
      let $activeLink = this.getActiveLink(),
        $parent = $activeLink.parentNode;
      while (
        $parent.tagName.toLowerCase() !== "tr" &&
        $parent.parentNode !== null
      )
        $parent = $parent.parentNode;
      let $links = $parent.getElementsByTagName("a"),
        index = 0;
      for (let d = 0; d < $links.length; d++)
        if ($activeLink.href === $links[d].href) {
          index = d;
          break;
        }
      index = index + step;
      if (index < 0) index = 0;
      else if (index >= $links.length) index = $links.length - 1;
      return this.getHref($links[index]);
    },
    doKeyUp: function (that) {
      this.execute = function (event) {
        if (!event) event = window.event;
        if (event.keyCode === 16) {
          that.shiftKeyDown = false;
          if (event.preventDefault) event.preventDefault();
          else event.returnValue = false;
          event.cancelBubble = true;
          return true;
        } else return false;
      };
    },
    doKeyPress: function (that) {
      this.execute = function (event) {
        if (!event) event = window.event;
        that.keysBuffer += String.fromCharCode(
          event.charCode || event.keyCode
        ).toLowerCase();
        clearTimeout(that.keyTimeOut);
        that.keyTimeOut = setTimeout(function () {
          that.keysBuffer = "";
        }, 1e3);
      };
    },
    doKeyDown: function (that, hideCurrentPopup) {
      this.execute = function (event) {
        let falseValue = false,
          nextKey = null;
        if (!event) event = window.event;
        let $links = that.getLinks(),
          svID = that.elemSvID.value,
          noMatch = falseValue;
        switch (event.keyCode) {
          case 16:
            that.shiftKeyDown = true;
            return falseValue;
          case 9:
            if (that.shiftKeyDown) nextKey = that.getNextKey(svID, -1);
            else nextKey = that.getNextKey(svID, 1);
            break;
          case 40:
            nextKey = that.getNextKey(svID, 1);
            break;
          case 38:
            nextKey = that.getNextKey(svID, -1);
            break;
          case 39:
            nextKey = that.getNextSibling(svID, 1);
            break;
          case 37:
            nextKey = that.getNextSibling(svID, -1);
            break;
          case 13:
          case 27:
            hideCurrentPopup();
            return falseValue;
          default:
            noMatch = true;
        }
        if (!noMatch) {
          let $link = $links[0];
          for (let h = 0; h < $links.length; h++)
            if ($links[h].href.indexOf("#" + nextKey) !== -1) {
              $link = $links[h];
              break;
            }
          try {
            $link.focus();
            $link.onclick();
          } catch (k) {}
          return falseValue;
        } else {
          window.evt = event;
          setTimeout(function () {
            if (!event) event = window.evt;
            let $links = that.getLinks(),
              $link;
            for (let b = 0; b < $links.length; b++) {
              const f = $links[b].outerText || $links[b].text;
              if (
                f.toLowerCase().indexOf(that.keysBuffer) === 0 &&
                f !=
                  (that.getActiveLink().outerText || that.getActiveLink().text)
              ) {
                $link = $links[b];
                break;
              }
            }
            try {
              if ($link) {
                $link.focus();
                $link.onclick();
              }
            } catch (g) {}
          }, 30);
        }
        return true;
      };
    },
    Hide: function () {
      this.HideCurrentPopup();
    },
    Show: function (el, event) {
      const trueValue = true,
        self = this;
      if (event) {
        if (event.keyCode === 27) {
          self.Hide(el, event);
          return trueValue;
        }
        if (event.keyCode && event.keyCode !== 40) return false;
        if (window.curDisplayedPopup === el) {
          self.HideCurrentPopup();
          return trueValue;
        }
        self.HideCurrentPopup();
        event.cancelBubble = trueValue;
        if (self.ChangeObjectDisplay(el, "block")) {
          window.curDisplayedDDHeader = self.elemHeader;
          window.curDisplayedPopup = el;
          self.getActiveLink().focus();
          Util.addClass(self.elemHeader, "DDSActive");
          return trueValue;
        }
      }
      return false;
    },
    cropText: function () {
      let strOverflow = "overflow",
        self = this,
        ellipsis = "...",
        headerHtml = self.elemHeader.innerHTML;
      self.elemHeader.title = headerHtml;
      self.elemHeader.innerHTML += "____";
      self.elemHeader.style[strOverflow] = "hidden";
      const g = self.elemHeader.clientWidth,
        h = self.elemHeader.scrollWidth,
        d = ((g * 1) / h) * 1;
      if (d < 1) {
        const e = Math.ceil(d * headerHtml.length);
        if (e < headerHtml.length)
          headerHtml =
            String(headerHtml).substring(0, e - ellipsis.length) + ellipsis;
      }
      self.elemHeader.style[strOverflow] = "visible";
      self.elemHeader.innerHTML = headerHtml;
    },
    getHref: function ($link) {
      return $link.href.substr($link.href.indexOf("#") + 1);
    },
    setValue: function (svID, boolString) {
      const self = this;
      if (svID) {
        const match = new RegExp(" (" + svID + ") ", "i").exec(self.KeyMap);
        if (match && match[1]) svID = match[1];
      }
      if (self.Items[svID] === null)
        throw new Error("Value is not in the current list.");
      self.elemSvID.value = svID;
      self.elemHeader.value = self.Items[svID];
      if (boolString !== "true") self.addMRUL(svID);
      const e = document.getElementById(self.name);
      if (e.tagName === "SELECT")
        for (let d = 0; d < e.options.length; d++) {
          const g = e.options[d];
          if (g.value === svID) {
            g.selected = "selected";
            break;
          }
        }
      self.setText(self.Items[svID], boolString);
    },
    getValue: function () {
      return this.elemSvID.value;
    },
    setText: function (text, boolString) {
      const self = this,
        el = document.getElementById(self.name);
      if (el.tagName.toLowerCase() === "select")
        if (el.value === "") el.options[0].text = text;
        else if (el.options[0].value === "")
          el.options[0].text = self.Items[""];
      self.elemTextId.value = text;
      self.elemHeader.innerHTML = text;
      self.cropText();
      if (boolString !== "true") self.onChanged(text, self.Items[text]);
    },
    getText: function () {
      return this.elemTextId.value;
    },
    onclick: function (svID) {
      this.setValue(svID);
      return false;
    },
    ondragstart: function (event) {
      if (!event) event = window.event;
      if (event.preventDefault) event.preventDefault();
    },
    OnSelectedValueChanged: function () {
      return this.onChanged;
    },
    HideCurrentPopup: function () {
      if (window.curDisplayedPopup) {
        Util.GetElement(window.curDisplayedPopup).style.display = "none";
        Util.removeClass(window.curDisplayedDDHeader, "DDSActive");
        window.curDisplayedPopup = false;
        window.curDisplayedDDHeader = null;
      }
      this.shiftKeyDown = false;
    },
    ChangeObjectDisplay: function (id, displayValue) {
      const styles = Util.GetStyleObject(id);
      if (styles && styles.display) {
        styles.display = displayValue;
        return true;
      } else return false;
    },
    addMRUL: function (newValue) {
      const self = this;
      if (!newValue) return;
      if (self.MRUL[0] === newValue) return;
      let index = 0,
        b;
      for (b = 1; b < self.MRUL.length; b++)
        if (self.MRUL[b] === newValue) {
          index = b;
          break;
        }
      if (index === 0) self.MRUL.unshift(newValue);
      else {
        const value = index > 0 ? self.MRUL[index] : newValue;
        for (b = index; b > 0; b--) self.MRUL[b] = self.MRUL[b - 1];
        self.MRUL[0] = value;
      }
      while (self.MRUL.length > self.MAX_MRUL) self.MRUL.pop();
      Util.SetCookie(self.mrul_cookie, self.MRUL, true, Util.GetPath());
    },
  };
  window["_mstConfig"].floaterStylePath =
    "https://www.microsofttranslator.com/static/197997/css/WidgetV3_fail.css"; //'http://www.microsofttranslator.com/static/197997/css/WidgetV3.css';
  window["_mstConfig"].translateWithBing = "TRANSLATE with {0}";
  window["_mstConfig"].withBing = "with {0}";
  window["_mstConfig"].autoDetected = "{0} (Auto-Detected)";

  function loadAllScripts(fn) {
    /*var intervalID = setInterval(function () {
         if (document.readyState !== 'complete') return;
         clearInterval(intervalID);
         fn();
         }, 10);*/
    fn();
  }

  // mate note
  // this is called when scripts are included
  // ukr mova break
  function onloadCallback() {
    const head = document.getElementsByTagName("head")[0];
    try {
      const body = document.getElementsByTagName("body")[0];

      // bail out if it's an iframe
      if (body.ownerDocument !== document) {
        return;
      }

      const numChildren = body.children.length;
      const numScripts = body.getElementsByTagName("script").length;

      function appendHTMLToBody(html) {
        const temp = document.createElement("div");
        temp.innerHTML = html;
        for (let i = 0; i < temp.children.length; i++) {
          body.appendChild(temp.children[i]);
        }
      }

      appendHTMLToBody(decodeURIComponent("%3ctitle%3e%20%3c%2ftitle%3e"));

      appendHTMLToBody(
        decodeURIComponent(
          "%20%3cdiv%20id%3d%22WidgetFloaterPanels%22%20translate%3d%22no%22%20style%3d%22display%3a%20none%3btext-align%3a%20left%3bdirection%3a%20ltr%22%20class%3d%22LTRStyle%22%20%3e%20%3cdiv%20id%3d%22WidgetFloater%22%20style%3d%22display%3a%20none%22%20%3e%20%3cdiv%20id%3d%22WidgetLogoPanel%22%3e%20%3cspan%20id%3d%22WidgetTranslateWithSpan%22%3e%3cspan%3eTRANSLATE%20with%20%3c%2fspan%3e%3cimg%20id%3d%22FloaterLogo%22%20%2f%3e%3c%2fspan%3e%20%3cspan%20id%3d%22WidgetCloseButton%22%20title%3d%22Exit%20Translation%22%20onclick%3d%22Microsoft.Translator.FloaterOnClose()%22%3ex%3c%2fspan%3e%3c%2fdiv%3e%20%3cdiv%20id%3d%22LanguageMenuPanel%22%3e%20%3cdiv%20class%3d%22DDStyle_outer%22%3e%3cinput%20name%3d%22LanguageMenu_svid%22%20type%3d%22text%22%20id%3d%22LanguageMenu_svid%22%20style%3d%22display%3anone%3b%22%20autocomplete%3d%22on%22%20value%3d%22en%22%20%2f%3e%20%3cinput%20name%3d%22LanguageMenu_textid%22%20type%3d%22text%22%20id%3d%22LanguageMenu_textid%22%20style%3d%22display%3anone%3b%22%20autocomplete%3d%22on%22%20%2f%3e%20%3cspan%20onselectstart%3d%22return%20false%22%20tabindex%3d%220%22%20class%3d%22DDStyle%22%20id%3d%22__LanguageMenu_header%22%20onclick%3d%22return%20LanguageMenu%20%26amp%3b%26amp%3b%20!LanguageMenu.Show(%26%2339%3b__LanguageMenu_popup%26%2339%3b%2c%20event)%3b%22%20onkeydown%3d%22return%20LanguageMenu%20%26amp%3b%26amp%3b%20!LanguageMenu.Show(%26%2339%3b__LanguageMenu_popup%26%2339%3b%2c%20event)%3b%22%3eEnglish%3c%2fspan%3e%20%3cdiv%20style%3d%22position%3arelative%3btext-align%3aleft%3bleft%3a0%3b%22%3e%3cdiv%20style%3d%22position%3aabsolute%3bwidth%3a%3bleft%3a0px%3b%22%3e%3cdiv%20class%3d%22DDStyle%22%20style%3d%22display%3anone%3b%22%20id%3d%22__LanguageMenu_popup%22%3e%20%3ctable%20id%3d%22LanguageMenu%22%20border%3d%220%22%3e%20%3ctr%3e%20%3ctd%3e%3ca%20tabindex%3d%22-1%22%20onclick%3d%22return%20LanguageMenu.onclick(%26%2339%3bar%26%2339%3b)%3b%22%20ondragstart%3d%22LanguageMenu.ondragstart(event)%3b%22%20href%3d%22%23ar%22%3eArabic%3c%2fa%3e%3c%2ftd%3e%3ctd%3e%3ca%20tabindex%3d%22-1%22%20onclick%3d%22return%20LanguageMenu.onclick(%26%2339%3bhe%26%2339%3b)%3b%22%20ondragstart%3d%22LanguageMenu.ondragstart(event)%3b%22%20href%3d%22%23he%22%3eHebrew%3c%2fa%3e%3c%2ftd%3e%3ctd%3e%3ca%20tabindex%3d%22-1%22%20onclick%3d%22return%20LanguageMenu.onclick(%26%2339%3bpl%26%2339%3b)%3b%22%20ondragstart%3d%22LanguageMenu.ondragstart(event)%3b%22%20href%3d%22%23pl%22%3ePolish%3c%2fa%3e%3c%2ftd%3e%20%3c%2ftr%3e%3ctr%3e%20%3ctd%3e%3ca%20tabindex%3d%22-1%22%20onclick%3d%22return%20LanguageMenu.onclick(%26%2339%3bbg%26%2339%3b)%3b%22%20ondragstart%3d%22LanguageMenu.ondragstart(event)%3b%22%20href%3d%22%23bg%22%3eBulgarian%3c%2fa%3e%3c%2ftd%3e%3ctd%3e%3ca%20tabindex%3d%22-1%22%20onclick%3d%22return%20LanguageMenu.onclick(%26%2339%3bhi%26%2339%3b)%3b%22%20ondragstart%3d%22LanguageMenu.ondragstart(event)%3b%22%20href%3d%22%23hi%22%3eHindi%3c%2fa%3e%3c%2ftd%3e%3ctd%3e%3ca%20tabindex%3d%22-1%22%20onclick%3d%22return%20LanguageMenu.onclick(%26%2339%3bpt%26%2339%3b)%3b%22%20ondragstart%3d%22LanguageMenu.ondragstart(event)%3b%22%20href%3d%22%23pt%22%3ePortuguese%3c%2fa%3e%3c%2ftd%3e%20%3c%2ftr%3e%3ctr%3e%20%3ctd%3e%3ca%20tabindex%3d%22-1%22%20onclick%3d%22return%20LanguageMenu.onclick(%26%2339%3bca%26%2339%3b)%3b%22%20ondragstart%3d%22LanguageMenu.ondragstart(event)%3b%22%20href%3d%22%23ca%22%3eCatalan%3c%2fa%3e%3c%2ftd%3e%3ctd%3e%3ca%20tabindex%3d%22-1%22%20onclick%3d%22return%20LanguageMenu.onclick(%26%2339%3bmww%26%2339%3b)%3b%22%20ondragstart%3d%22LanguageMenu.ondragstart(event)%3b%22%20href%3d%22%23mww%22%3eHmong%20Daw%3c%2fa%3e%3c%2ftd%3e%3ctd%3e%3ca%20tabindex%3d%22-1%22%20onclick%3d%22return%20LanguageMenu.onclick(%26%2339%3bro%26%2339%3b)%3b%22%20ondragstart%3d%22LanguageMenu.ondragstart(event)%3b%22%20href%3d%22%23ro%22%3eRomanian%3c%2fa%3e%3c%2ftd%3e%20%3c%2ftr%3e%3ctr%3e%20%3ctd%3e%3ca%20tabindex%3d%22-1%22%20onclick%3d%22return%20LanguageMenu.onclick(%26%2339%3bzh-CHS%26%2339%3b)%3b%22%20ondragstart%3d%22LanguageMenu.ondragstart(event)%3b%22%20href%3d%22%23zh-CHS%22%3eChinese%20Simplified%3c%2fa%3e%3c%2ftd%3e%3ctd%3e%3ca%20tabindex%3d%22-1%22%20onclick%3d%22return%20LanguageMenu.onclick(%26%2339%3bhu%26%2339%3b)%3b%22%20ondragstart%3d%22LanguageMenu.ondragstart(event)%3b%22%20href%3d%22%23hu%22%3eHungarian%3c%2fa%3e%3c%2ftd%3e%3ctd%3e%3ca%20tabindex%3d%22-1%22%20onclick%3d%22return%20LanguageMenu.onclick(%26%2339%3bru%26%2339%3b)%3b%22%20ondragstart%3d%22LanguageMenu.ondragstart(event)%3b%22%20href%3d%22%23ru%22%3eRussian%3c%2fa%3e%3c%2ftd%3e%20%3c%2ftr%3e%3ctr%3e%20%3ctd%3e%3ca%20tabindex%3d%22-1%22%20onclick%3d%22return%20LanguageMenu.onclick(%26%2339%3bzh-CHT%26%2339%3b)%3b%22%20ondragstart%3d%22LanguageMenu.ondragstart(event)%3b%22%20href%3d%22%23zh-CHT%22%3eChinese%20Traditional%3c%2fa%3e%3c%2ftd%3e%3ctd%3e%3ca%20tabindex%3d%22-1%22%20onclick%3d%22return%20LanguageMenu.onclick(%26%2339%3bid%26%2339%3b)%3b%22%20ondragstart%3d%22LanguageMenu.ondragstart(event)%3b%22%20href%3d%22%23id%22%3eIndonesian%3c%2fa%3e%3c%2ftd%3e%3ctd%3e%3ca%20tabindex%3d%22-1%22%20onclick%3d%22return%20LanguageMenu.onclick(%26%2339%3bsk%26%2339%3b)%3b%22%20ondragstart%3d%22LanguageMenu.ondragstart(event)%3b%22%20href%3d%22%23sk%22%3eSlovak%3c%2fa%3e%3c%2ftd%3e%20%3c%2ftr%3e%3ctr%3e%20%3ctd%3e%3ca%20tabindex%3d%22-1%22%20onclick%3d%22return%20LanguageMenu.onclick(%26%2339%3bcs%26%2339%3b)%3b%22%20ondragstart%3d%22LanguageMenu.ondragstart(event)%3b%22%20href%3d%22%23cs%22%3eCzech%3c%2fa%3e%3c%2ftd%3e%3ctd%3e%3ca%20tabindex%3d%22-1%22%20onclick%3d%22return%20LanguageMenu.onclick(%26%2339%3bit%26%2339%3b)%3b%22%20ondragstart%3d%22LanguageMenu.ondragstart(event)%3b%22%20href%3d%22%23it%22%3eItalian%3c%2fa%3e%3c%2ftd%3e%3ctd%3e%3ca%20tabindex%3d%22-1%22%20onclick%3d%22return%20LanguageMenu.onclick(%26%2339%3bsl%26%2339%3b)%3b%22%20ondragstart%3d%22LanguageMenu.ondragstart(event)%3b%22%20href%3d%22%23sl%22%3eSlovenian%3c%2fa%3e%3c%2ftd%3e%20%3c%2ftr%3e%3ctr%3e%20%3ctd%3e%3ca%20tabindex%3d%22-1%22%20onclick%3d%22return%20LanguageMenu.onclick(%26%2339%3bda%26%2339%3b)%3b%22%20ondragstart%3d%22LanguageMenu.ondragstart(event)%3b%22%20href%3d%22%23da%22%3eDanish%3c%2fa%3e%3c%2ftd%3e%3ctd%3e%3ca%20tabindex%3d%22-1%22%20onclick%3d%22return%20LanguageMenu.onclick(%26%2339%3bja%26%2339%3b)%3b%22%20ondragstart%3d%22LanguageMenu.ondragstart(event)%3b%22%20href%3d%22%23ja%22%3eJapanese%3c%2fa%3e%3c%2ftd%3e%3ctd%3e%3ca%20tabindex%3d%22-1%22%20onclick%3d%22return%20LanguageMenu.onclick(%26%2339%3bes%26%2339%3b)%3b%22%20ondragstart%3d%22LanguageMenu.ondragstart(event)%3b%22%20href%3d%22%23es%22%3eSpanish%3c%2fa%3e%3c%2ftd%3e%20%3c%2ftr%3e%3ctr%3e%20%3ctd%3e%3ca%20tabindex%3d%22-1%22%20onclick%3d%22return%20LanguageMenu.onclick(%26%2339%3bnl%26%2339%3b)%3b%22%20ondragstart%3d%22LanguageMenu.ondragstart(event)%3b%22%20href%3d%22%23nl%22%3eDutch%3c%2fa%3e%3c%2ftd%3e%3ctd%3e%3ca%20tabindex%3d%22-1%22%20onclick%3d%22return%20LanguageMenu.onclick(%26%2339%3btlh%26%2339%3b)%3b%22%20ondragstart%3d%22LanguageMenu.ondragstart(event)%3b%22%20href%3d%22%23tlh%22%3eKlingon%3c%2fa%3e%3c%2ftd%3e%3ctd%3e%3ca%20tabindex%3d%22-1%22%20onclick%3d%22return%20LanguageMenu.onclick(%26%2339%3bsv%26%2339%3b)%3b%22%20ondragstart%3d%22LanguageMenu.ondragstart(event)%3b%22%20href%3d%22%23sv%22%3eSwedish%3c%2fa%3e%3c%2ftd%3e%20%3c%2ftr%3e%3ctr%3e%20%3ctd%3e%3ca%20tabindex%3d%22-1%22%20onclick%3d%22return%20LanguageMenu.onclick(%26%2339%3ben%26%2339%3b)%3b%22%20ondragstart%3d%22LanguageMenu.ondragstart(event)%3b%22%20href%3d%22%23en%22%3eEnglish%3c%2fa%3e%3c%2ftd%3e%3ctd%3e%3ca%20tabindex%3d%22-1%22%20onclick%3d%22return%20LanguageMenu.onclick(%26%2339%3bko%26%2339%3b)%3b%22%20ondragstart%3d%22LanguageMenu.ondragstart(event)%3b%22%20href%3d%22%23ko%22%3eKorean%3c%2fa%3e%3c%2ftd%3e%3ctd%3e%3ca%20tabindex%3d%22-1%22%20onclick%3d%22return%20LanguageMenu.onclick(%26%2339%3bth%26%2339%3b)%3b%22%20ondragstart%3d%22LanguageMenu.ondragstart(event)%3b%22%20href%3d%22%23th%22%3eThai%3c%2fa%3e%3c%2ftd%3e%20%3c%2ftr%3e%3ctr%3e%20%3ctd%3e%3ca%20tabindex%3d%22-1%22%20onclick%3d%22return%20LanguageMenu.onclick(%26%2339%3bet%26%2339%3b)%3b%22%20ondragstart%3d%22LanguageMenu.ondragstart(event)%3b%22%20href%3d%22%23et%22%3eEstonian%3c%2fa%3e%3c%2ftd%3e%3ctd%3e%3ca%20tabindex%3d%22-1%22%20onclick%3d%22return%20LanguageMenu.onclick(%26%2339%3blv%26%2339%3b)%3b%22%20ondragstart%3d%22LanguageMenu.ondragstart(event)%3b%22%20href%3d%22%23lv%22%3eLatvian%3c%2fa%3e%3c%2ftd%3e%3ctd%3e%3ca%20tabindex%3d%22-1%22%20onclick%3d%22return%20LanguageMenu.onclick(%26%2339%3btr%26%2339%3b)%3b%22%20ondragstart%3d%22LanguageMenu.ondragstart(event)%3b%22%20href%3d%22%23tr%22%3eTurkish%3c%2fa%3e%3c%2ftd%3e%20%3c%2ftr%3e%3ctr%3e%20%3ctd%3e%3ca%20tabindex%3d%22-1%22%20onclick%3d%22return%20LanguageMenu.onclick(%26%2339%3bfi%26%2339%3b)%3b%22%20ondragstart%3d%22LanguageMenu.ondragstart(event)%3b%22%20href%3d%22%23fi%22%3eFinnish%3c%2fa%3e%3c%2ftd%3e%3ctd%3e%3ca%20tabindex%3d%22-1%22%20onclick%3d%22return%20LanguageMenu.onclick(%26%2339%3blt%26%2339%3b)%3b%22%20ondragstart%3d%22LanguageMenu.ondragstart(event)%3b%22%20href%3d%22%23lt%22%3eLithuanian%3c%2fa%3e%3c%2ftd%3e%3ctd%3e%3ca%20tabindex%3d%22-1%22%20onclick%3d%22return%20LanguageMenu.onclick(%26%2339%3buk%26%2339%3b)%3b%22%20ondragstart%3d%22LanguageMenu.ondragstart(event)%3b%22%20href%3d%22%23uk%22%3eUkrainian%3c%2fa%3e%3c%2ftd%3e%20%3c%2ftr%3e%3ctr%3e%20%3ctd%3e%3ca%20tabindex%3d%22-1%22%20onclick%3d%22return%20LanguageMenu.onclick(%26%2339%3bfr%26%2339%3b)%3b%22%20ondragstart%3d%22LanguageMenu.ondragstart(event)%3b%22%20href%3d%22%23fr%22%3eFrench%3c%2fa%3e%3c%2ftd%3e%3ctd%3e%3ca%20tabindex%3d%22-1%22%20onclick%3d%22return%20LanguageMenu.onclick(%26%2339%3bms%26%2339%3b)%3b%22%20ondragstart%3d%22LanguageMenu.ondragstart(event)%3b%22%20href%3d%22%23ms%22%3eMalay%3c%2fa%3e%3c%2ftd%3e%3ctd%3e%3ca%20tabindex%3d%22-1%22%20onclick%3d%22return%20LanguageMenu.onclick(%26%2339%3bur%26%2339%3b)%3b%22%20ondragstart%3d%22LanguageMenu.ondragstart(event)%3b%22%20href%3d%22%23ur%22%3eUrdu%3c%2fa%3e%3c%2ftd%3e%20%3c%2ftr%3e%3ctr%3e%20%3ctd%3e%3ca%20tabindex%3d%22-1%22%20onclick%3d%22return%20LanguageMenu.onclick(%26%2339%3bde%26%2339%3b)%3b%22%20ondragstart%3d%22LanguageMenu.ondragstart(event)%3b%22%20href%3d%22%23de%22%3eGerman%3c%2fa%3e%3c%2ftd%3e%3ctd%3e%3ca%20tabindex%3d%22-1%22%20onclick%3d%22return%20LanguageMenu.onclick(%26%2339%3bmt%26%2339%3b)%3b%22%20ondragstart%3d%22LanguageMenu.ondragstart(event)%3b%22%20href%3d%22%23mt%22%3eMaltese%3c%2fa%3e%3c%2ftd%3e%3ctd%3e%3ca%20tabindex%3d%22-1%22%20onclick%3d%22return%20LanguageMenu.onclick(%26%2339%3bvi%26%2339%3b)%3b%22%20ondragstart%3d%22LanguageMenu.ondragstart(event)%3b%22%20href%3d%22%23vi%22%3eVietnamese%3c%2fa%3e%3c%2ftd%3e%20%3c%2ftr%3e%3ctr%3e%20%3ctd%3e%3ca%20tabindex%3d%22-1%22%20onclick%3d%22return%20LanguageMenu.onclick(%26%2339%3bel%26%2339%3b)%3b%22%20ondragstart%3d%22LanguageMenu.ondragstart(event)%3b%22%20href%3d%22%23el%22%3eGreek%3c%2fa%3e%3c%2ftd%3e%3ctd%3e%3ca%20tabindex%3d%22-1%22%20onclick%3d%22return%20LanguageMenu.onclick(%26%2339%3bno%26%2339%3b)%3b%22%20ondragstart%3d%22LanguageMenu.ondragstart(event)%3b%22%20href%3d%22%23no%22%3eNorwegian%3c%2fa%3e%3c%2ftd%3e%3ctd%3e%3ca%20tabindex%3d%22-1%22%20onclick%3d%22return%20LanguageMenu.onclick(%26%2339%3bcy%26%2339%3b)%3b%22%20ondragstart%3d%22LanguageMenu.ondragstart(event)%3b%22%20href%3d%22%23cy%22%3eWelsh%3c%2fa%3e%3c%2ftd%3e%20%3c%2ftr%3e%3ctr%3e%20%3ctd%3e%3ca%20tabindex%3d%22-1%22%20onclick%3d%22return%20LanguageMenu.onclick(%26%2339%3bht%26%2339%3b)%3b%22%20ondragstart%3d%22LanguageMenu.ondragstart(event)%3b%22%20href%3d%22%23ht%22%3eHaitian%20Creole%3c%2fa%3e%3c%2ftd%3e%3ctd%3e%3ca%20tabindex%3d%22-1%22%20onclick%3d%22return%20LanguageMenu.onclick(%26%2339%3bfa%26%2339%3b)%3b%22%20ondragstart%3d%22LanguageMenu.ondragstart(event)%3b%22%20href%3d%22%23fa%22%3ePersian%3c%2fa%3e%3c%2ftd%3e%3ctd%3e%3c%2ftd%3e%20%3c%2ftr%3e%20%3c%2ftable%3e%20%3cimg%20alt%3d%22%22%20style%3d%22height%3a7px%3bwidth%3a17px%3bborder-width%3a0px%3bleft%3a20px%3b%22%20%2f%3e%20%3c%2fdiv%3e%3c%2fdiv%3e%3c%2fdiv%3e%3c%2fdiv%3e%20%3cscript%20type%3d%22text%2fjavascript%22%3e%20var%20LanguageMenu%3b%20var%20LanguageMenu_keys%3d%5b%22ar%22%2c%22bg%22%2c%22ca%22%2c%22zh-CHS%22%2c%22zh-CHT%22%2c%22cs%22%2c%22da%22%2c%22nl%22%2c%22en%22%2c%22et%22%2c%22fi%22%2c%22fr%22%2c%22de%22%2c%22el%22%2c%22ht%22%2c%22he%22%2c%22hi%22%2c%22mww%22%2c%22hu%22%2c%22id%22%2c%22it%22%2c%22ja%22%2c%22tlh%22%2c%22ko%22%2c%22lv%22%2c%22lt%22%2c%22ms%22%2c%22mt%22%2c%22no%22%2c%22fa%22%2c%22pl%22%2c%22pt%22%2c%22ro%22%2c%22ru%22%2c%22sk%22%2c%22sl%22%2c%22es%22%2c%22sv%22%2c%22th%22%2c%22tr%22%2c%22uk%22%2c%22ur%22%2c%22vi%22%2c%22cy%22%5d%3b%20var%20LanguageMenu_values%3d%5b%22Arabic%22%2c%22Bulgarian%22%2c%22Catalan%22%2c%22Chinese%20Simplified%22%2c%22Chinese%20Traditional%22%2c%22Czech%22%2c%22Danish%22%2c%22Dutch%22%2c%22English%22%2c%22Estonian%22%2c%22Finnish%22%2c%22French%22%2c%22German%22%2c%22Greek%22%2c%22Haitian%20Creole%22%2c%22Hebrew%22%2c%22Hindi%22%2c%22Hmong%20Daw%22%2c%22Hungarian%22%2c%22Indonesian%22%2c%22Italian%22%2c%22Japanese%22%2c%22Klingon%22%2c%22Korean%22%2c%22Latvian%22%2c%22Lithuanian%22%2c%22Malay%22%2c%22Maltese%22%2c%22Norwegian%22%2c%22Persian%22%2c%22Polish%22%2c%22Portuguese%22%2c%22Romanian%22%2c%22Russian%22%2c%22Slovak%22%2c%22Slovenian%22%2c%22Spanish%22%2c%22Swedish%22%2c%22Thai%22%2c%22Turkish%22%2c%22Ukrainian%22%2c%22Urdu%22%2c%22Vietnamese%22%2c%22Welsh%22%5d%3b%20var%20LanguageMenu_callback%3dfunction()%7b%20%7d%3b%20var%20LanguageMenu_popupid%3d%27__LanguageMenu_popup%27%3b%20%3c%2fscript%3e%20%3c%2fdiv%3e%20%3cdiv%20id%3d%22CTFLinksPanel%22%3e%20%3cspan%20id%3d%22ExternalLinksPanel%22%3e%3ca%20id%3d%22HelpLink%22%20title%3d%22Help%22%20target%3d%22_blank%22%3e%20%3cimg%20id%3d%22HelpImg%22%20%2f%3e%3c%2fa%3e%20%3ca%20id%3d%22EmbedLink%22%20href%3d%22javascript%3aMicrosoft.Translator.FloaterShowEmbed()%22%20title%3d%22Get%20this%20widget%20for%20your%20own%20site%22%3e%20%3cimg%20id%3d%22EmbedImg%22%20%2f%3e%3c%2fa%3e%20%3ca%20id%3d%22ShareLink%22%20title%3d%22Share%20translated%20page%20with%20friends%22%20href%3d%22javascript%3aMicrosoft.Translator.FloaterShowSharePanel()%22%3e%20%3cimg%20id%3d%22ShareImg%22%20%2f%3e%3c%2fa%3e%20%3c%2fspan%3e%20%3c%2fdiv%3e%20%3cdiv%20id%3d%22FloaterProgressBar%22%3e%20%3cspan%20id%3d%22ProgressFill%22%20%3e%3c%2fspan%3e%20%3c%2fdiv%3e%20%3c%2fdiv%3e%20%3cdiv%20id%3d%22WidgetFloaterCollapsed%22%20style%3d%22display%3a%20none%22%3e%20%3cspan%3eTRANSLATE%20with%20%3c%2fspan%3e%3cimg%20id%3d%22CollapsedLogoImg%22%20%2f%3e%3c%2fdiv%3e%20%3cdiv%20id%3d%22FloaterSharePanel%22%20style%3d%22display%3a%20none%22%20%3e%20%3cdiv%20id%3d%22ShareTextDiv%22%3e%20%3cspan%20id%3d%22ShareTextSpan%22%3e%20COPY%20THE%20URL%20BELOW%20%3c%2fspan%3e%20%3c%2fdiv%3e%20%3cdiv%20id%3d%22ShareTextboxDiv%22%3e%20%3cinput%20name%3d%22ShareTextbox%22%20type%3d%22text%22%20id%3d%22ShareTextbox%22%20readonly%3d%22readonly%22%20%2f%3e%20%3c!--a%20id%3d%22TwitterLink%22%20title%3d%22Share%20on%20Twitter%22%3e%20%3cimg%20id%3d%22TwitterImg%22%20%2f%3e%3c%2fa%3e%20%3ca--%20id%3d%22FacebookLink%22%20title%3d%22Share%20on%20Facebook%22%3e%20%3cimg%20id%3d%22FacebookImg%22%20%2f%3e%3c%2fa--%3e%20%3ca%20id%3d%22EmailLink%22%20title%3d%22Email%20this%20translation%22%3e%20%3cimg%20id%3d%22EmailImg%22%20%2f%3e%3c%2fa%3e%20%3c%2fdiv%3e%20%3cdiv%20id%3d%22ShareFooter%22%3e%20%3cspan%20id%3d%22ShareHelpSpan%22%3e%3ca%20id%3d%22ShareHelpLink%22%3e%20%3cimg%20id%3d%22ShareHelpImg%22%20%2f%3e%3c%2fa%3e%3c%2fspan%3e%20%3cspan%20id%3d%22ShareBackSpan%22%3e%3ca%20id%3d%22ShareBack%22%20href%3d%22javascript%3aMicrosoft.Translator.FloaterOnShareBackClick()%22%20title%3d%22Back%20To%20Translation%22%3e%20Back%3c%2fa%3e%3c%2fspan%3e%20%3c%2fdiv%3e%20%3cinput%20name%3d%22EmailSubject%22%20type%3d%22hidden%22%20id%3d%22EmailSubject%22%20value%3d%22Check%20out%20this%20page%20in%20%7b0%7d%20translated%20from%20%7b1%7d%22%20%2f%3e%20%3cinput%20name%3d%22EmailBody%22%20type%3d%22hidden%22%20id%3d%22EmailBody%22%20value%3d%22Translated%3a%20%7b0%7d%250d%250aOriginal%3a%20%7b1%7d%250d%250a%250d%250aAutomatic%20translation%20powered%20by%20Microsoft%c2%ae%20Translator%250d%250ahttp%3a%2f%2fwww.bing.com%2ftranslator%3fref%3dMSTWidget%22%20%2f%3e%20%3cinput%20type%3d%22hidden%22%20id%3d%22ShareHelpText%22%20value%3d%22This%20link%20allows%20visitors%20to%20launch%20this%20page%20and%20automatically%20translate%20it%20to%20%7b0%7d.%22%2f%3e%20%3c%2fdiv%3e%20%3cdiv%20id%3d%22FloaterEmbed%22%20style%3d%22display%3a%20none%22%3e%20%3cdiv%20id%3d%22EmbedTextDiv%22%3e%20%3cspan%20id%3d%22EmbedTextSpan%22%3eEMBED%20THE%20SNIPPET%20BELOW%20IN%20YOUR%20SITE%3c%2fspan%3e%20%3ca%20id%3d%22EmbedHelpLink%22%20title%3d%22Copy%20this%20code%20and%20place%20it%20into%20your%20HTML.%22%3e%20%3cimg%20id%3d%22EmbedHelpImg%22%2f%3e%3c%2fa%3e%20%3c%2fdiv%3e%20%3cdiv%20id%3d%22EmbedTextboxDiv%22%3e%20%3cinput%20name%3d%22EmbedSnippetTextBox%22%20type%3d%22text%22%20id%3d%22EmbedSnippetTextBox%22%20readonly%3d%22readonly%22%20value%3d%22%26lt%3bdiv%20id%3d%26%2339%3bMicrosoftTranslatorWidget%26%2339%3b%20class%3d%26%2339%3bDark%26%2339%3b%20style%3d%26%2339%3bcolor%3awhite%3bbackground-color%3a%23555555%26%2339%3b%3e%26lt%3b%2fdiv%3e%26lt%3bscript%20type%3d%26%2339%3btext%2fjavascript%26%2339%3b%3esetTimeout(function()%7bvar%20s%3ddocument.createElement(%26%2339%3bscript%26%2339%3b)%3bs.type%3d%26%2339%3btext%2fjavascript%26%2339%3b%3bs.charset%3d%26%2339%3bUTF-8%26%2339%3b%3bs.src%3d((location%20%26amp%3b%26amp%3b%20location.href%20%26amp%3b%26amp%3b%20location.href.indexOf(%26%2339%3bhttps%26%2339%3b)%20%3d%3d%200)%3f%26%2339%3bhttps%3a%2f%2fssl.microsofttranslator.com%26%2339%3b%3a%26%2339%3bhttp%3a%2f%2fwww.microsofttranslator.com%26%2339%3b)%2b%26%2339%3b%2fajax%2fv3%2fWidgetV3.ashx%3fsiteData%3dueOIGRSKkd965FeEGM5JtQ**%26amp%3bctf%3dtrue%26amp%3bui%3dtrue%26amp%3bsettings%3dmanual%26amp%3bfrom%3den%26%2339%3b%3bvar%20p%3ddocument.getElementsByTagName(%26%2339%3bhead%26%2339%3b)%5b0%5d%7c%7cdocument.documentElement%3bp.insertBefore(s%2cp.firstChild)%3b%20%7d%2c0)%3b%26lt%3b%2fscript%3e%22%20%2f%3e%20%3c%2fdiv%3e%20%3cdiv%20id%3d%22EmbedNoticeDiv%22%3e%3cspan%20id%3d%22EmbedNoticeSpan%22%3eEnable%20collaborative%20features%20and%20customize%20widget%3a%20%3ca%20href%3d%22http%3a%2f%2fwww.bing.com%2fwidget%2ftranslator%22%20target%3d%22_blank%22%3eBing%20Webmaster%20Portal%3c%2fa%3e%3c%2fspan%3e%3c%2fdiv%3e%20%3cdiv%20id%3d%22EmbedFooterDiv%22%3e%3cspan%20id%3d%22EmbedBackSpan%22%3e%3ca%20href%3d%22javascript%3aMicrosoft.Translator.FloaterOnEmbedBackClick()%22%20title%3d%22Back%20To%20Translation%22%3eBack%3c%2fa%3e%3c%2fspan%3e%3c%2fdiv%3e%20%3c%2fdiv%3e%20%3cscript%20type%3d%22text%2fjavascript%22%3e%20var%20intervalId%20%3d%20setInterval(function%20()%20%7b%20if%20(MtPopUpList)%20%7b%20LanguageMenu%20%3d%20new%20MtPopUpList()%3b%20var%20langMenu%20%3d%20document.getElementById(LanguageMenu_popupid)%3b%20var%20origLangDiv%20%3d%20document.createElement(%22div%22)%3b%20origLangDiv.id%20%3d%20%22OriginalLanguageDiv%22%3b%20origLangDiv.innerHTML%20%3d%20%22%3cspan%20id%3d%27OriginalTextSpan%27%3eORIGINAL%3a%20%3c%2fspan%3e%3cspan%20id%3d%27OriginalLanguageSpan%27%3e%3c%2fspan%3e%22%3b%20langMenu.appendChild(origLangDiv)%3b%20LanguageMenu.Init(%27LanguageMenu%27%2c%20LanguageMenu_keys%2c%20LanguageMenu_values%2c%20LanguageMenu_callback%2c%20LanguageMenu_popupid)%3b%20window%5b%22LanguageMenu%22%5d%20%3d%20LanguageMenu%3b%20clearInterval(intervalId)%3b%20%7d%20%7d%2c%201)%3b%20%3c%2fscript%3e%20%3c%2fdiv%3e%20"
        )
      );

      let code = "";
      const scripts = body.getElementsByTagName("script");
      //console.log(scripts);
      for (let i = numScripts; i < scripts.length; i++) {
        if (scripts[i].innerHTML.length !== 0) {
          code += scripts[i].innerHTML;
        }
      }
      //eval(code);
    } catch (e) {
      console.error(e);
    }

    window.Microsoft.Translator.FloaterInitialize("en", "true", "");
  }

  loadAllScripts(onloadCallback);

  /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  //The codes above are local copy of translate scripts;

  function onTranslateProgress(value) {
    const msg = Math.round(value) + "%";
    showMessageBox(msg, "OnProgress");
  }

  function onTranslateError(error) {
    //Kept only for debugging;
    //alert('Translate Error: ' + error);
  }

  function onTranslateComplete() {
    let msg = BFI_DONEMSG;

    if (
      window.Microsoft.Translator.Widget.GetAutoDetectedLanguage().toUpperCase() ===
      BFI_TOLANG.toUpperCase()
    ) {
      msg = BFI_SAMELANGMSG;
    }

    showMessageBox(msg, "OnFinished");
  }

  function showMessageBox(msg, msgType) {
    if (
      msgType === "OnProgress" &&
      !jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "fp-translate").hasClass(
        _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "in-progress"
      )
    ) {
      // old stuff: .css('width', $('.' + ke.getPrefix() + 'fp-translate').width() + parseInt($('.' + ke.getPrefix() + 'fp-translate').css('padding-left')) * 2)
      jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "spinner").fadeIn(100);
      jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "fp-translate")
        .addClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "in-progress")
        .html("&nbsp;");
      jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "fp-options").slideUp(125);
      jquery__WEBPACK_IMPORTED_MODULE_0___default()(
        "." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "mate-fp-bar ." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "ui_selector"
      ).slideUp(75);
      jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "change-language").fadeOut(75, () => {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "stop-fp")
          .fadeIn(75)
          .css("display", "inline-block");
      });
      jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "toggle-iphone-settings").fadeOut(75, () => {});
    } else if (msgType === "OnFinished") {
      jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "current-page-lang").html(
        _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("FullPage_WeTranslatedIt")
          .replace(
            "{{language}}",
            _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale(
              "Kernel_Lang_" + _src_ext_util_langUtil__WEBPACK_IMPORTED_MODULE_3__.getLangNameByKey(BFI_TOLANG)
            )
          )
      );
      jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "stop-fp").fadeOut(75, () => {
        const beaut_source_lang = _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale(
          "Kernel_Lang_" + _src_ext_util_langUtil__WEBPACK_IMPORTED_MODULE_3__.getLangNameByKey(last_detected_page_lang)
        );

        jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "spinner").fadeOut(100);
        jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "fp-translate")
          .removeClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "in-progress")
          .addClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "show-original")
          .html(
            _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("FullPage_SwitchBackTo")
              .replace("{{language}}", beaut_source_lang)
          );
      });

      if (
        jquery__WEBPACK_IMPORTED_MODULE_0___default()("#" + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "always-translate").prop("checked") === true &&
        !auto_hide_on_auto_translation_performed_once
      ) {
        // indicate that auto-translation is there in a noticeable way
        // and then hide it not to obstruct the window
        // Ns after the translation is done
        //
        // upd, august 13th: don't hide on iPhone
        if (!iPhone) {
          setTimeout(hideFPBar, 1500);
          auto_hide_on_auto_translation_performed_once = true;
        }
      }
    }
  }

  /**
   * Load an external resource to the DOM to evaluate more scripts.
   */
  function loadScript(scriptName, onload) {
    // RDB

    const script = document.createElement("script");
    script.setAttribute("type", "text/javascript");
    script.setAttribute("src", scriptName);

    if (onload) {
      script.addEventListener("load", onload, false);
    }

    document.body.appendChild(script);
  }

  // above is the translator widget wrapper;
  function onTranslateTimer() {
    const transferDOM = document.getElementById("BFI_DATA");

    if (!transferDOM || !transferDOM.value || transferDOM.value === "") {
      //setTimeout(onTranslateTimer, 100);
    } else if (transferDOM.value === "restore_original") {
      window.Microsoft.Translator.Widget.RestoreOriginal();
      transferDOM.value = "";
    } else if (transferDOM.value.indexOf(",") > -1) {
      const msg = transferDOM.value.split(",");

      BFI_TOLANG = msg[0];
      BFI_DONEMSG = msg[1];
      BFI_SAMELANGMSG = msg[2];
      // BFI_LOADINGMSG = msg[3];
      BFI_CANCEL = msg[4];
      // assigned at the very beginning
      // BFI_APPID = msg[5];

      // message transfer done.
      // clear data dom;
      //document.body.removeChild(transferDOM);

      // reset value instead of removing from DOM
      transferDOM.value = "";

      // start loading;
      onTranslateProgress(0);

      // the loaded script is filling latest BFI_APPID;

      // 1 indicates app id is successfully loaded;
      onTranslateProgress(1);

      window.Microsoft.Translator.Widget.Translate(
        null,
        BFI_TOLANG,
        onTranslateProgress,
        onTranslateError,
        onTranslateComplete,
        null,
        3600000
      );
    }

    setTimeout(onTranslateTimer, 100);
  }

  // start to monitor transfer data;
  setTimeout(onTranslateTimer, 100);
}

function injectScript(fn) {
  //var script = document.createElement('script');
  //script.appendChild(document.createTextNode('(' + fn + ')();'));
  //document.body.appendChild(script);
  fn();
}

/**
 * Bing adds branding to the page when the translator has begun. This will
 * use Mutation Observers to listen on the newly added DOM and
 * remove it from display.
 */
function brandingRemoval() {
  // return;
  const MutationObserver =
    window.MutationObserver ||
    window.WebKitMutationObserver ||
    windows.MozMutationObserver;
  const observer = new MutationObserver(function onMutationObserver(mutations) {
    mutations.forEach(function (mutationNode) {
      if (mutationNode.addedNodes) {
        for (let n = 0; n < mutationNode.addedNodes.length; n++) {
          const node = mutationNode.addedNodes[n];
          if (node.id === "WidgetFloaterPanels") {
            node.style.display = "none";
            node.style.visibility = "hidden";
          }
        }
      }
    });
  });
  observer.observe(document.body, { childList: true, subtree: false });
}

let transferDom;
/**
 * Create shared DOM to transfer between two worlds
 */
function embedTransferDom() {
  // return;
  transferDom = document.createElement("textarea");
  transferDom.id = "BFI_DATA";
  transferDom.style.width = "1px";
  transferDom.style.height = "1px";
  transferDom.style.display = "none";
  document.body.appendChild(transferDom);
}

/**
 * Fires an event to the Browser context for cross context messaging.
 */
function dispatch(msg) {
  transferDom = document.getElementById("BFI_DATA");
  transferDom.value = msg;

  // also dispatch it to all iframes
  // they have their own TransferDOMs
  // it's more robust than to use one in the parent frame because of weird solutions that clear out the textarea
  // could have led to race conditions
  try {
    const iframes = document.querySelectorAll("iframe");
    for (let i = 0; i < iframes.length; ++i) {
      const iframeTransferDom =
        iframes[i].contentWindow.document.getElementById("BFI_DATA");
      if (iframeTransferDom !== null) {
        iframeTransferDom.value = msg;
      }
    }
  } catch (e) {
    // TODO: added a catch here just to prevent stuff from breaking, but we probably still need to access the iframes
    console.error(e);
  }
}

// Initialize the extension communications shared DOM states.
jquery__WEBPACK_IMPORTED_MODULE_0___default()(() => {
  let ignore_this_page = false;
  for (let i = 0; i < WEBSITES_TO_IGNORE.length; ++i) {
    if (
      document.location.hostname.match(new RegExp(WEBSITES_TO_IGNORE[i])) !==
      null
    ) {
      ignore_this_page = true;
      break;
    }
  }

  if (ignore_this_page) {
    // console.log('do not inject communication dom or something');
    return;
  }

  embedTransferDom();
  brandingRemoval();
  injectScript(fpTranslate);
});

function checkCommunication() {
  const data = document.getElementById("BFI_DATA");

  if (!data || !data.value) {
    // do nothing
  } else if (data.value === "init_mate") {
    data.value = "restore_original";

    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".TnITTtw-fullpage-bar").animate(
      {
        bottom: -100,
      },
      150,
      function () {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).remove();

        init();
      }
    );
  }

  setTimeout(checkCommunication, 100);
}

setTimeout(checkCommunication, 100);

const WEBSITES_TO_IGNORE = [
  "paddle.com",
  "(.*).youtube.com",
  "www.google.(.*)",
  "(.*).facebook.com",
  "localhost",
  "(.*).google.com",
  "github.com",
  "127.0.0.1",
  "outlook.live.com",
  "twitter.com",
  "www.twitch.tv",
  "www.instagram.com",
  "web.whatsapp.com",
  "www.netflix.com",
  "www.baidu.com",
  "outlook.office.com",
  "www.xvideos.com",
  "vk.com",
  "www.amazon.com",
  "(.*)pornhub.com",
  "www.figma.com",
  "teams.microsoft.com",
  "nhentai.net",
  "outlook.office365.com",
  "scholar.google.com",
  "www.notion.so",
  "www.pinterest.com",
  "192.168.1.1",
  "mail.protonmail.com",
  "www.linkedin.com",
  "www.reddit.com",
  "app.memrise.com",
  "yandex.ru",
  "www.pornhub.com",
  "gitlab.com",
  "bitbucket.org",
  "chaturbate.com",
  "(.*).bilibili.com",
  "www.canva.com",
  "www.speedtest.net",
  "weibo.com",
  "(.*).qq.com",
  "tradingview.com",
  "www.tiktok.com",
  "web.telegram.org",
];

const BING_LANGS = {
  bs: "bs-Latn",
  sr: "sr-Cyrl",
  "zh-TW": "zh-CHT",
  "zh-CN": "zh-CHS",
  iw: "he",
};

function getBingCompatibleLang(lang) {
  return BING_LANGS[lang] || lang;
}

function getLocale(msg) {
  return msg;
}

function translateFullpage(to) {
  dispatch(
    getBingCompatibleLang(to) +
      ",Translated to " +
      getLocale(to) +
      "," +
      "Already in " +
      getLocale(to) +
      "," +
      getLocale("Translating...") +
      "," +
      "cancel" +
      "," +
      "000000000A9F426B41914349A3EC94D7073FF941"
  );
  //shutExtensionDown(true);
  //sendAmplitudeEvent('actext_translate_fullpage');
}

const SKIPPED_HTML_TAGS = {
  style: true,
  svg: true,
  script: true,
  noscript: true,
  figure: true,
  path: true,
  img: true,
  canvas: true,
  rect: true,
  iframe: true,
  tspan: true,
  use: true,
};

function detectPageLanguage(callback) {
  // mate note
  // safari workaround bc it doesn't have chrome.i18n

  if (isIOS()) {
    browser.runtime
      .sendMessage({
        action: "detect_tab_language",
      })
      .then((response) => {
        let lang = response.language;
        if (lang === "zh") {
          lang = "zh-CN";
        }
        // console.log('page lang:', lang);
        callback(lang);
      });
  } else {
    console.time("page lang detection");

    let page_text = "";
    jquery__WEBPACK_IMPORTED_MODULE_0___default()("body *").each(function () {
      if (
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).is(":visible") &&
        (jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).attr("class") || "").indexOf(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix()) === -1 &&
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).children().length === 0 &&
        !(this.tagName.toLowerCase() in SKIPPED_HTML_TAGS)
      ) {
        page_text += "\n" + jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).text();
      }
    });

    chrome.i18n.detectLanguage(page_text, (data) => {
      console.timeEnd("page lang detection");
      let lang = data.languages[0].language;
      if (lang === "zh") {
        lang = "zh-CN";
      }
      callback(lang);

      // console.log(lang + ':', data.languages[0].percentage + '% probability');
      // console.log(data.languages);
    });
  }
}

let last_detected_page_lang = "";
let auto_hide_on_auto_translation_performed_once = false;

// `forced_show` is for when we need to show it regardless of exceptions
// via context menu for example
// override all exceptions then and just show it
function tryShowingMateBar(forced_show, forced_auto_translate) {
  // iframes, fuck off
  try {
    if (window.location.href !== window.parent.location.href) {
      return;
    }
  } catch (e) {
    console.log(`Blocked ${window.location.href} iframe`);
    return;
  }

  // if it's collapsed & someone tries to re-open it via context menu
  // most likely they could not find that little floating button
  // don't disappoint them with a non-working CM button
  if (forced_show && jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "mate-fp-bar").length > 0) {
    showFPBarAgain();
    return;
  }

  //
  let ignore_this_page = false;
  for (let i = 0; i < WEBSITES_TO_IGNORE.length; ++i) {
    if (
      document.location.hostname.match(new RegExp(WEBSITES_TO_IGNORE[i])) !==
      null
    ) {
      ignore_this_page = true;
      break;
    }
  }

  // if they want to, they surely can translate it though: via context menu's `forced_show`
  if (!forced_show && ignore_this_page) {
    return;
  }

  _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_2__["default"].chainRequestBackgroundOption(
    [
      { fn: "getVal", args: ["fp_to_lang"] },
      { fn: "getDecodedVal", args: ["fp_always_translate"] },
      { fn: "getDecodedVal", args: ["fp_never_translate_langs"] },
      { fn: "getDecodedVal", args: ["fp_never_translate_sites"] },
      { fn: "isTrueOption", args: ["dark_mode"] },
      { fn: "isTrueOption", args: ["fullpage"] }, // auto show the banner?
    ],
    function (responses) {
      const to_lang = responses[0].response;
      const always_translate = responses[1].response;
      const never_translate_langs = responses[2].response;
      const never_translate_sites = responses[3].response;
      const dark_mode = responses[4].response;
      const is_auto_show_enabled = responses[5].response;

      if (
        forced_show ||
        forced_auto_translate ||
        (is_auto_show_enabled &&
          !(document.location.hostname in never_translate_sites))
      ) {
        detectPageLanguage((page_lang) => {
          // check if it's supported at all
          if (!_src_ext_util_langUtil__WEBPACK_IMPORTED_MODULE_3__.getLangNameByKey(page_lang)) {
            return;
          }

          // Override page language for when user tries to re-open FP via context menu
          // If auto-translation is enabled, it will try to detect page's language when it's already been translated
          // Take previously detected language, thus
          if (forced_show && last_detected_page_lang) {
            page_lang = last_detected_page_lang;
          }

          //console.log('Preferred lang vs page lang:', to_lang, page_lang);

          if (
            forced_show ||
            forced_auto_translate ||
            !(page_lang in never_translate_langs)
          ) {
            last_detected_page_lang = page_lang;

            if (forced_show || forced_auto_translate || to_lang !== page_lang) {
              // mate bar w=352, h=167
              const pop_up_to_window_ratio =
                (352 * 167) / (jquery__WEBPACK_IMPORTED_MODULE_0___default()(window).width() * jquery__WEBPACK_IMPORTED_MODULE_0___default()(window).height());
              const auto_translate =
                page_lang in always_translate &&
                to_lang in always_translate[page_lang] &&
                !forced_show;
              let instant_hide = false;

              // don't show the full-sized bar sometimes:
              // 1. if the window is too small
              // 2. if user didn't translate anything on the index page,
              // it's unlikely we should keep bothering them after they click links and go deeper
              // https://gikken.slack.com/archives/G586J07L3/p1626081123004700
              if (
                !auto_translate &&
                (pop_up_to_window_ratio > 0.12 ||
                  (localStorage["friends_with_mate"] === "true" &&
                    localStorage["mate_worked"] === undefined))
              ) {
                instant_hide = true;
              }

              //console.log('pop up to window ratio:', pop_up_to_window_ratio);

              showMateBar(page_lang, to_lang, dark_mode, instant_hide);

              if (document.location.hostname in never_translate_sites) {
                jquery__WEBPACK_IMPORTED_MODULE_0___default()("#" + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "never-translate-site").prop(
                  "checked",
                  true
                );
              }

              if (page_lang in never_translate_langs) {
                jquery__WEBPACK_IMPORTED_MODULE_0___default()("#" + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "never-translate-lang").prop(
                  "checked",
                  true
                );
              }

              _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_2__["default"].requestProStatus((is_pro) => {
                // if user starts free trial, they can enable auto-translation
                // if trial ends, the option still remains enabled
                // and they can keep using auto-translate for free past their free trial
                // to prevent that, we need to check on their Pro status
                // it's not that relevant for extensions that are still not sub-based, but still works

                // automatic translation for certain language pairs
                // if user opens it from context menu (`forced_show` === true), don't auto-translate
                if (auto_translate && is_pro) {
                  jquery__WEBPACK_IMPORTED_MODULE_0___default()("#" + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "always-translate").prop(
                    "checked",
                    true
                  );
                  translateFullpage(to_lang);

                  // prevent from idle auto-hide bc if it's translated automatically, it hides itself
                  stop_triggers = true;

                  localStorage["mate_worked"] = true;

                  chrome.runtime
                    .sendMessage({
                      action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.processCall(
                        "app",
                        "commands",
                        "sendAnalyticsEvent"
                      ),
                      cat: "translation",
                      event: "fullpage",
                      subevent: "automatic",
                    })
                    .then();

                  chrome.runtime
                    .sendMessage({
                      action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.processCall(
                        "app",
                        "commands",
                        "sendAnalyticsEvent"
                      ),
                      cat: "full-page",
                      event: "automatic-translate",
                      subevent: page_lang + " -> " + to_lang,
                    })
                    .then();
                } else if (forced_auto_translate) {
                  translateFullpage(to_lang);
                }
              });
            }
          }
        });
      }
    }
  );
}

const MATE_FP_BAR_HTML =
  '\
<div class="' +
  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
  'fp-collapsed-button"></div>\
<div class="' +
  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
  'mate-fp-bar" translate="no">\
    <div class="' +
  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
  'hide-fp-bar"></div>\
    <div class="' +
  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
  'current-page-lang"><%=current_page_lang%></div>\
    <div class="' +
  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
  'cta-button-layout">\
        <div class="' +
  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
  'spinner">\
            <div class="' +
  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
  'bounce1"></div>\
            <div class="' +
  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
  'bounce2"></div>\
            <div class="' +
  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
  'bounce3"></div>\
        </div>\
        <div class="' +
  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
  "mw-button " +
  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
  "fp-translate " +
  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
  'high-cta"><%=translate_to%></div>\
    </div>\
    <div class="' +
  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
  "change-language " +
  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
  'select" data-for-serial="3"></div>\
    <div class="' +
  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
  'stop-fp"></div>\
    <div class="' +
  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
  'toggle-iphone-settings"></div>\
    <div class="' +
  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
  'ui_selector">\
        <div class="' +
  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
  'options-arrow"></div>\
        <div class="' +
  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
  "options " +
  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
  "opt-3 " +
  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
  'standalone" data-serial="3">\
            <div class="' +
  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
  'dd-search">\
                <input class="' +
  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
  'dd-input" type="text" data-dir="to" placeholder="<%=lang_search%>">\
            </div>\
            <div id="selVisibleScroll-3">\
                <div id="selEntireScroll-3">\
                    <div class="' +
  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
  'inner-options-layout">\
                        <ul class="' +
  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
  'list"></ul>\
                    </div>\
                </div>\
                <div id="sel-scrollbar-3">\
                    <div id="sel-track-3">\
                        <div id="sel-dragBar-3"></div>\
                    </div>\
                </div>\
            </div>\
        </div>\
    </div>\
    <div class="' +
  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
  'fp-options">\
        <input type="checkbox" id="' +
  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
  'always-translate"><label for="' +
  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
  'always-translate" class="' +
  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
  'always-translate-label"><span class="' +
  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
  'always-translate-inner-label"><%=always_translate%></span><span class="' +
  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
  'pro-label">PRO</span></label>\
        <br>\
        <input type="checkbox" id="' +
  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
  'never-translate-lang"><label for="' +
  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
  'never-translate-lang" class="' +
  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
  'never-translate-lang-label"><%=never_translate_lang%></label>\
        <br>\
        <input type="checkbox" id="' +
  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
  'never-translate-site"><label for="' +
  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
  'never-translate-site" class="' +
  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
  'never-translate-site-label"><%=never_translate_site%></label>\
    </div>\
</div>';

const maxZ = Math.max.apply(
  null,
  jquery__WEBPACK_IMPORTED_MODULE_0___default().map(jquery__WEBPACK_IMPORTED_MODULE_0___default()("body *"), function (e, n) {
    if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(e).css("position") !== "static")
      return parseInt(jquery__WEBPACK_IMPORTED_MODULE_0___default()(e).css("z-index")) || 1;
  })
);
const iPhone = /iPhone/.test(navigator.userAgent) && !window.MSStream;

let isIOS;

if (typeof isIOS !== "function") {
  isIOS = function () {
    return iPhone || isIpad();
  };
}

let isIpad;

if (typeof isIpad !== "function") {
  isIpad = function () {
    const ua = window.navigator.userAgent;

    if (ua.indexOf("iPad") > -1) {
      return true;
    }

    if (ua.indexOf("Macintosh") > -1) {
      try {
        document.createEvent("TouchEvent");
        return true;
      } catch (e) {}
    }

    return false;
  };
}

function showMateBar(page_lang, target_lang, dark_mode, instant_hide) {
  // remove previous bars if there were any
  // for example when user reinstalls the extension
  // `mate_bar_shown` flag would be false, yet HTML would be still there
  jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "mate-fp-bar").remove();

  const beaut_source = _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale(
    "Kernel_Lang_" + _src_ext_util_langUtil__WEBPACK_IMPORTED_MODULE_3__.getLangNameByKey(page_lang)
  );
  const beaut_target = _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale(
    "Kernel_Lang_" + _src_ext_util_langUtil__WEBPACK_IMPORTED_MODULE_3__.getLangNameByKey(target_lang)
  );

  let bar_inserting_method = "append";

  if (iPhone) {
    bar_inserting_method = "prepend";
  }

  jquery__WEBPACK_IMPORTED_MODULE_0___default()("body")[bar_inserting_method](
    _ext_tpl__WEBPACK_IMPORTED_MODULE_5__.compile(MATE_FP_BAR_HTML, {
      current_page_lang: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("FullPage_CurrentPageLang")
        .replace("{{page_lang_beautiful}}", beaut_source),
      translate_to: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("FullPage_TranslateTo")
        .replace("{{target_lang_beautiful}}", beaut_target),
      change_lang: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("FullPage_ChangeLanguage"),
      lang_search: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Kernel_SearchPlaceholder"),
      always_translate: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("FullPage_AlwaysTranslate")
        .replace("{{page_lang_beautiful}}", beaut_source)
        .replace("{{target_lang_beautiful}}", beaut_target),
      never_translate_lang: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("FullPage_NeverTranslate")
        .replace("{{page_lang_beautiful}}", beaut_source),
      never_translate_site: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("FullPage_NeverTranslate")
        .replace("{{page_lang_beautiful}}", document.location.hostname),
    })
  );

  if (iPhone) {
    jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "mate-fp-bar").addClass(
      _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "iphone-version"
    );
  }

  //    alert(isIOS())

  if (isIOS()) {
    jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "fp-options").remove();
  }

  // sometimes we know that we should show the full-sized banner
  // for example in windows that are too small
  if (instant_hide) {
    hideFPBar(1);
  } else {
    localStorage["friends_with_mate"] = true;
  }

  jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "mate-fp-bar").css("z-index", maxZ + 1);

  if (dark_mode) {
    jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "mate-fp-bar").addClass(
      _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "dark-mode"
    );
  }

  jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "toggle-iphone-settings").on(
    "click",
    toggleiPhoneSettings
  );
  jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "hide-fp-bar").on("click", hideFPBar);
  jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "fp-collapsed-button").on("click", showFPBarAgain);
  jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "fp-translate").on("click", function () {
    if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).hasClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "in-progress")) {
      return;
    }

    if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).hasClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "show-original")) {
      stopFP();

      chrome.runtime
        .sendMessage({
          action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.processCall("app", "commands", "sendAnalyticsEvent"),
          cat: "full-page",
          event: "show-original",
          subevent: last_detected_page_lang,
        })
        .then();
    } else {
      _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_2__["default"].requestBackgroundOption(
        "getVal",
        ["fp_to_lang"],
        (to_lang) => {
          translateFullpage(to_lang);

          localStorage["mate_worked"] = true;

          chrome.runtime
            .sendMessage({
              action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.processCall("app", "commands", "sendAnalyticsEvent"),
              cat: "translation",
              event: "fullpage",
              subevent: "manual",
            })
            .then();

          chrome.runtime
            .sendMessage({
              action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.processCall("app", "commands", "sendAnalyticsEvent"),
              cat: "full-page",
              event: "manual-translate",
              subevent: last_detected_page_lang + " -> " + to_lang,
            })
            .then();
        }
      );
    }
  });
  jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "stop-fp").on("click", stopFP);
  jquery__WEBPACK_IMPORTED_MODULE_0___default()("#" + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "always-translate").change(
    alwaysTranslateOptionClicked
  );
  jquery__WEBPACK_IMPORTED_MODULE_0___default()("#" + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "never-translate-lang").change(
    neverTranslateLangOptionClicked
  );
  jquery__WEBPACK_IMPORTED_MODULE_0___default()("#" + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "never-translate-site").change(
    neverTranslateSiteOptionClicked
  );

  (0,_initContentDropdowns__WEBPACK_IMPORTED_MODULE_4__.initDropdowns)();
  initAutoHideTriggers();

  jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "pro-label").remove();
  jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "always-translate-inner-label").css(
    "max-width",
    "297px"
  );

  // storageUtils.requestProStatus((is_pro) => {
  //   if (is_pro) {
  //     $("." + ke.getPrefix() + "pro-label").remove();
  //     $("." + ke.getPrefix() + "always-translate-inner-label").css(
  //       "max-width",
  //       "297px"
  //     );
  //   } else {
  //     const openProUpgradePrompt = () => {
  //       let sub_upgrade_plan = "";
  //       // if (ke.IS_FIREFOX) {
  //       sub_upgrade_plan = "annual,";
  //       // }

  //       chrome.runtime
  //         .sendMessage({
  //           action: ke.processCall("app", "opt", "newTab"),
  //           url: chrome.runtime.getURL(
  //             "options.html#start_purchase," +
  //               sub_upgrade_plan +
  //               "automatic-full-page"
  //           ),
  //         })
  //         .then();

  //       // replace last_detected_page_lang with user's country here
  //       storageUtils.requestBackgroundOption(
  //         "getVal",
  //         ["user_country"],
  //         (user_contry) => {
  //           chrome.runtime
  //             .sendMessage({
  //               action: ke.processCall("app", "commands", "sendAnalyticsEvent"),
  //               cat: "full-page",
  //               event: "upgrade-to-pro-for-auto-translation",
  //               subevent: user_contry, //last_detected_page_lang
  //             })
  //             .then();
  //         }
  //       );
  //     };

  //     $("#" + ke.getPrefix() + "always-translate")
  //       .attr("readonly", "readonly")
  //       .on("click", openProUpgradePrompt);
  //     $("#" + ke.getPrefix() + "always-translate + label").addClass(
  //       ke.getPrefix() + "not-pro"
  //     );
  //     $(
  //       "#" +
  //         ke.getPrefix() +
  //         "always-translate, #" +
  //         ke.getPrefix() +
  //         "always-translate + label"
  //     ); //.on('click', openProUpgradePrompt);
  //   }
  // });

  // most likely there's something going on with styles if FP pop-up's height gets fucked up
  if (jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "mate-fp-bar").height() >= 140) {
    chrome.runtime
      .sendMessage({
        action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.processCall("app", "commands", "sendAnalyticsEvent"),
        cat: "full-page",
        event: "conflicting-styles",
        subevent: document.location.hostname,
      })
      .then();
  }
}

function toggleiPhoneSettings() {
  jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "ios-options").slideToggle(125);
}

// Not to be too annoying, the bar shouldn't sit all-expanded all the time.
// So, we'll put the following triggers in place to auto-hide it:
//   * timer, if cursor not in FP window (3s)
//   * click somewhere on the page
//   * scroll more than 100px
let is_mouse_above_fp_bar = false;
let stop_triggers = false;

function initAutoHideTriggers() {
  if (iPhone) {
    return;
  }

  jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "mate-fp-bar")
    .on("mouseover", () => {
      is_mouse_above_fp_bar = true;
    })
    .on("mouseout", () => {
      is_mouse_above_fp_bar = false;
    });

  // timer, if cursor not in FP window (3s)
  setTimeout(() => {
    if (!is_mouse_above_fp_bar && !stop_triggers) {
      // console.log('trying to hide the bar after 3s');
      hideFPBar();
    }
  }, 3000);

  // click somewhere on the page, that's not FP bar, of course
  jquery__WEBPACK_IMPORTED_MODULE_0___default()("body").on("click", function (event) {
    if (
      !stop_triggers &&
      typeof event.target.className === "string" &&
      event.target.className.indexOf(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix()) === -1
    ) {
      hideFPBar();
    } else if (
      typeof event.target.className === "string" &&
      event.target.className.indexOf(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix()) > -1
    ) {
      stop_triggers = true;
    }
  });

  // scroll more than 100px
  jquery__WEBPACK_IMPORTED_MODULE_0___default()(window).on("scroll", () => {
    if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(window).scrollTop() > 100 && !stop_triggers) {
      hideFPBar();
      stop_triggers = true;
    }
  });
}

function onFPLangSelectorValueChanged(serial, v) {
  const beaut_source = _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale(
    "Kernel_Lang_" + _src_ext_util_langUtil__WEBPACK_IMPORTED_MODULE_3__.getLangNameByKey(last_detected_page_lang)
  );
  const beaut_target = _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale(
    "Kernel_Lang_" + _src_ext_util_langUtil__WEBPACK_IMPORTED_MODULE_3__.getLangNameByKey(v)
  );

  jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "fp-translate").html(
    _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("FullPage_TranslateTo")
      .replace("{{target_lang_beautiful}}", beaut_target)
  );
  jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "always-translate-inner-label").html(
    _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("FullPage_AlwaysTranslate")
      .replace("{{page_lang_beautiful}}", beaut_source)
      .replace("{{target_lang_beautiful}}", beaut_target)
  );

  // since we change the target language, the old Always Translate selection becomes irrelevant – refresh it
  _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_2__["default"].requestBackgroundOption(
    "getDecodedVal",
    ["fp_always_translate"],
    (always_translate) => {
      const is_enabled =
        last_detected_page_lang in always_translate &&
        v in always_translate[last_detected_page_lang];
      jquery__WEBPACK_IMPORTED_MODULE_0___default()("#" + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "always-translate").prop("checked", is_enabled);
    }
  );

  chrome.runtime
    .sendMessage({
      action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.processCall("app", "commands", "sendAnalyticsEvent"),
      cat: "full-page",
      event: "change-language",
      subevent: v,
    })
    .then();
}

let prev_fp_bar_height = 0;

// hide it (temporarily) to free up the viewport
function hideFPBar(timeout) {
  if (iPhone) {
    jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "mate-fp-bar").slideUp(125);
  } else {
    // can't double hide
    if (!jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "mate-fp-bar").is(":visible")) {
      // console.log('not gonna hide it twice');
      return;
    }

    // 135 is its normal height
    // sometimes it may return 0 – when it's an instant hide and the bar hasn't been expanded properly
    // we could wait a few milliseconds to read the correct value
    // but then it blickers, so better hard-code its normal value for smooth experience
    prev_fp_bar_height =
      jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "mate-fp-bar").height() || 135;

    jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "mate-fp-bar *").each(function () {
      if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).is(":visible")) {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).fadeOut(timeout || 175);
      } else {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).data("was-hidden", true);
      }
    });

    jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "mate-fp-bar").animate(
      {
        width: 0,
        height: 0,
        opacity: 0,
      },
      timeout || 175,
      function () {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).hide();
      }
    );

    jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "fp-collapsed-button").fadeIn(timeout || 125);
  }

  if (this instanceof HTMLElement) {
    chrome.runtime
      .sendMessage({
        action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.processCall("app", "commands", "sendAnalyticsEvent"),
        cat: "full-page",
        event: "manual-hide",
        subevent: "",
      })
      .then();
  }
}

function showFPBarAgain() {
  // console.log(prev_fp_bar_height);

  jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "fp-collapsed-button").fadeOut(125);

  jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "mate-fp-bar")
    .show()
    .animate(
      {
        width: 320,
        height: prev_fp_bar_height,
        opacity: 1.0,
      },
      175,
      function () {
        // switch back button expands the options which causes problems if the height is hard-coded
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).css("height", "auto");
      }
    );

  jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "mate-fp-bar *").each(function () {
    if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).data("was-hidden") !== true) {
      jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).fadeIn(175);
    }
  });
}

// shuw it down entirely, e.g. when user doesn't want to translate on a certain hostname or between certain languages
function shutdownFP() {
  document.getElementById("BFI_DATA").value = "init_mate";

  jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "mate-fp-bar").animate(
    {
      opacity: 0.0,
      top: -300,
    },
    175,
    function () {
      jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).remove();
    }
  );
}

function stopFP() {
  document.getElementById("BFI_DATA").value = "init_mate";

  _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_2__["default"].requestBackgroundOption(
    "getVal",
    ["fp_to_lang"],
    function (to_lang) {
      const beaut_source = _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale(
        "Kernel_Lang_" + _src_ext_util_langUtil__WEBPACK_IMPORTED_MODULE_3__.getLangNameByKey(last_detected_page_lang)
      );
      const beaut_target = _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale(
        "Kernel_Lang_" + _src_ext_util_langUtil__WEBPACK_IMPORTED_MODULE_3__.getLangNameByKey(to_lang)
      );

      jquery__WEBPACK_IMPORTED_MODULE_0___default()(
        "." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "mate-fp-bar ." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "ui_selector"
      ).slideDown(75);
      jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "current-page-lang").html(
        _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("FullPage_CurrentPageLang")
          .replace("{{page_lang_beautiful}}", beaut_source)
      );
      jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "fp-translate")
        .removeClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "show-original")
        .removeClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "in-progress")
        .removeClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "show-original")
        .html(
          _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("FullPage_TranslateTo")
            .replace("{{target_lang_beautiful}}", beaut_target)
        );

      jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "spinner").fadeOut(100);

      if (
        jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "mate-fp-bar").hasClass(
          _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "iphone-version"
        )
      ) {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "toggle-iphone-settings")
          .fadeIn(75)
          .css("display", "inline-block");
      } else {
        if (isIOS()) {
          jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "ios-options").slideDown(125);
        } else {
          jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "fp-options").slideDown(125);
        }
      }

      // because button width changing animation takes 250ms via .css
      setTimeout(() => {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "stop-fp").fadeOut(75, () => {
          jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "change-language")
            .fadeIn(75)
            .css("display", "inline-block");
        });
      }, 250);
    }
  );
}

function alwaysTranslateOptionClicked() {
  const is_read_only = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).attr("readonly") === undefined ? false : true;

  if (is_read_only) {
    this.checked = !this.checked;
    return;
  }

  const always_option_value = this.checked;

  _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_2__["default"].chainRequestBackgroundOption(
    [
      { fn: "getDecodedVal", args: ["fp_always_translate"] },
      { fn: "getVal", args: ["fp_to_lang"] },
    ],
    function (responses) {
      const always_translate = responses[0].response;
      const to_lang = responses[1].response;

      always_translate[last_detected_page_lang] =
        always_translate[last_detected_page_lang] || {};

      if (always_option_value) {
        always_translate[last_detected_page_lang][to_lang] =
          always_option_value;
      } else {
        delete always_translate[last_detected_page_lang][to_lang];
      }

      _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_2__["default"].requestBackgroundOption(
        "encodeAndSet",
        ["fp_always_translate", always_translate],
        function () {
          if (always_option_value) {
            translateFullpage(to_lang);

            chrome.runtime
              .sendMessage({
                action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.processCall("app", "commands", "sendAnalyticsEvent"),
                cat: "full-page",
                event: "always-translate",
                subevent: last_detected_page_lang + " -> " + to_lang,
              })
              .then();
          }
        }
      );
    }
  );
}

function neverTranslateLangOptionClicked() {
  // Switched from `if (this.checked)` because there should also be a way to remove a language from exceptions
  const never_translate_option = this.checked;

  _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_2__["default"].requestBackgroundOption(
    "getDecodedVal",
    ["fp_never_translate_langs"],
    function (never_translate_langs) {
      if (never_translate_option) {
        never_translate_langs[last_detected_page_lang] = true;
      } else {
        delete never_translate_langs[last_detected_page_lang];
      }

      _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_2__["default"].requestBackgroundOption(
        "encodeAndSet",
        ["fp_never_translate_langs", never_translate_langs],
        function () {
          if (never_translate_option) {
            shutdownFP();

            chrome.runtime
              .sendMessage({
                action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.processCall("app", "commands", "sendAnalyticsEvent"),
                cat: "full-page",
                event: "never-translate-lang",
                subevent: last_detected_page_lang,
              })
              .then();
          }
        }
      );
    }
  );
}

function neverTranslateSiteOptionClicked() {
  // Switched from `if (this.checked)` because there should also be a way to remove a site from exceptions
  const never_translate_option = this.checked;

  _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_2__["default"].requestBackgroundOption(
    "getDecodedVal",
    ["fp_never_translate_sites"],
    function (never_translate_sites) {
      if (never_translate_option) {
        never_translate_sites[document.location.hostname] = true;
      } else {
        delete never_translate_sites[document.location.hostname];
      }
      _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_2__["default"].requestBackgroundOption(
        "encodeAndSet",
        ["fp_never_translate_sites", never_translate_sites],
        function () {
          if (never_translate_option) {
            shutdownFP();

            chrome.runtime
              .sendMessage({
                action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.processCall("app", "commands", "sendAnalyticsEvent"),
                cat: "full-page",
                event: "never-translate-site",
                subevent: document.location.hostname,
              })
              .then();
          }
        }
      );
    }
  );
}


/***/ }),

/***/ "./src/pages/content/handlers.js":
/*!***************************************!*\
  !*** ./src/pages/content/handlers.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _src_ext_const_netflix_langs_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../src/ext/const/netflix_langs.js */ "./src/ext/const/netflix_langs.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../src/ext/kumquat_polyfill */ "./src/ext/kumquat_polyfill.js");
/* harmony import */ var _src_ext_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../src/ext/dom */ "./src/ext/dom.js");
/* harmony import */ var _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../src/ext/util/storageUtil */ "./src/ext/util/storageUtil.js");
/* harmony import */ var _src_ext_event__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../src/ext/event */ "./src/ext/event.js");
/* harmony import */ var _src_particles_scrollbars_sModel__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../src/particles/scrollbars/sModel */ "./src/particles/scrollbars/sModel.js");
/* harmony import */ var _src_particles_lang_selectors_lsModel__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../src/particles/lang_selectors/lsModel */ "./src/particles/lang_selectors/lsModel.js");
/* harmony import */ var _src_particles_3dots_button_3dotsModel__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../src/particles/3dots_button/3dotsModel */ "./src/particles/3dots_button/3dotsModel.js");
/* harmony import */ var _src_ext_string__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../src/ext/string */ "./src/ext/string.js");
/* harmony import */ var _ext_util_selectorsUtil__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../ext/util/selectorsUtil */ "./src/ext/util/selectorsUtil.js");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var _particles_translate_ctt_tcModel__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../particles/translate_ctt/tcModel */ "./src/particles/translate_ctt/tcModel.js");
/* harmony import */ var _ui_components_tooltip_helpSelected__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../ui_components/tooltip/helpSelected */ "./src/ui_components/tooltip/helpSelected.js");
/* harmony import */ var _ui_components_tooltip_simple__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../ui_components/tooltip/simple */ "./src/ui_components/tooltip/simple.js");
/* harmony import */ var _shared__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./shared */ "./src/pages/content/shared.js");
/* harmony import */ var _fpTranslator__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./fpTranslator */ "./src/pages/content/fpTranslator.js");





















const handlers = {
  passInlineTranslation: 0,

  scanForProperCombination: function (e, callback, dblclick) {

    // console.log("scanForProperShortcut", eventUtils.keysDown);

    chrome.runtime.sendMessage(
      {
        action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.processCall("app", "option", "getKeyComboOptionActiveness"),
        identificator: "tooltip",
        dblclick: dblclick,
      },
      function (activeness_data) {
        if (activeness_data.is_active) {
          chrome.runtime.sendMessage(
            {
              action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.processCall("app", "option", "isKeyCombo"),
              identificator: "tooltip",
              keys_down: _src_ext_event__WEBPACK_IMPORTED_MODULE_5__.keysDown,
              dblclick: activeness_data.old_data.dblclick,
            },
            function (combo_data) {
              if (combo_data.old_data.dblclick || combo_data.is_active) {
                callback(
                  combo_data.combo,
                  combo_data.from,
                  combo_data.to,
                  combo_data.old_data.event
                );
                _src_ext_event__WEBPACK_IMPORTED_MODULE_5__.clearKeysDown();
              }
            }
          );
        }
      }
    );

    return true;
  },

  hasFocusedInputs: function (doc) {
    doc = doc || document;
    let has_focus_elements = false;

    jquery__WEBPACK_IMPORTED_MODULE_1___default()(doc.body)
      .find("*:focus")
      .each(function () {
        if (jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).is("input,textarea") || this.contentEditable === true) {
          has_focus_elements = true;
        }
      });

    return has_focus_elements;
  },

  skipSelectTranslation: false,

  onDoubleClick: function (event, doc, iframe) {
    if ((event.target.className || "").indexOf(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getPrefix()) > -1) {
      return;
    }

    chrome.runtime.sendMessage(
      {
        action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.processCall(
          "app",
          "option",
          "getDoubleClickOptionActiveness"
        ),
        event: _src_ext_event__WEBPACK_IMPORTED_MODULE_5__.getNecessaryInfo(event),
        identificator: "tooltip",
      },
      function (activeness_data) {
        // console.log({ activeness_data });
        if (
          !activeness_data.is_active ||
          handlers.hasFocusedInputs(doc) ||
          lodash__WEBPACK_IMPORTED_MODULE_11___default().isEmpty(_particles_translate_ctt_tcModel__WEBPACK_IMPORTED_MODULE_12__["default"].getSelectedText())
        ) {
          return;
        }

        handlers.skipSelectTranslation = true;

        chrome.runtime.sendMessage(
          {
            action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.processCall("app", "option", "getMainLanguagePair"),
            identificator: "tooltip",
          },
          function (l_data) {
            // console.log({ l_data });
            if (
              handlers.hasFocusedInputs(doc) ||
              lodash__WEBPACK_IMPORTED_MODULE_11___default().isEmpty(_particles_translate_ctt_tcModel__WEBPACK_IMPORTED_MODULE_12__["default"].getSelectedText())
            ) {
              return;
            }

            handlers.lastTranslationCallArgs.doc = doc;
            handlers.lastTranslationCallArgs.iframe = iframe;

            _particles_translate_ctt_tcModel__WEBPACK_IMPORTED_MODULE_12__["default"].showTranslation(
              undefined,
              l_data.from_lang,
              l_data.to_lang,
              doc,
              iframe,
              "double-click"
            );
          }
        );
      }
    );
  },

  hideSelectionButton: function () {
    jquery__WEBPACK_IMPORTED_MODULE_1___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getPrefix() + "translate-selection-button").fadeOut(
      150,
      function () {
        jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).remove();
      }
    );
  },

  onSelection: function (event, doc, iframe) {
    if (
      lodash__WEBPACK_IMPORTED_MODULE_11___default().isEmpty(_particles_translate_ctt_tcModel__WEBPACK_IMPORTED_MODULE_12__["default"].getSelectedText()) ||
      ((typeof event.target.className === "string"
        ? event.target.className
        : ""
      ).indexOf(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getPrefix()) > -1 &&
        (typeof event.target.className === "string"
          ? event.target.className
          : ""
        ).indexOf("mate-subtitle-wrap") === -1)
    ) {
      //
      // hide button
      handlers.hideSelectionButton();

      //
      // don't execute code below
      return;
    }

    chrome.runtime.sendMessage(
      {
        action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.processCall(
          "app",
          "option",
          "getTranslateOnSelectActiveness"
        ),
        event: _src_ext_event__WEBPACK_IMPORTED_MODULE_5__.getNecessaryInfo(event),
        identificator: "tooltip",
      },
      function (activeness_data) {
        if (
          !activeness_data.is_active ||
          handlers.hasFocusedInputs(doc) ||
          lodash__WEBPACK_IMPORTED_MODULE_11___default().isEmpty(_particles_translate_ctt_tcModel__WEBPACK_IMPORTED_MODULE_12__["default"].getSelectedText())
        ) {
          return;
        }

        chrome.runtime.sendMessage(
          {
            action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.processCall("app", "option", "getMainLanguagePair"),
            identificator: "tooltip",
          },
          function (l_data) {
            if (
              handlers.hasFocusedInputs(doc) ||
              lodash__WEBPACK_IMPORTED_MODULE_11___default().isEmpty(_particles_translate_ctt_tcModel__WEBPACK_IMPORTED_MODULE_12__["default"].getSelectedText())
            ) {
              return;
            }

            if (handlers.skipSelectTranslation) {
              handlers.skipSelectTranslation = false;
              return;
            }

            const selection = _particles_translate_ctt_tcModel__WEBPACK_IMPORTED_MODULE_12__["default"].getSelection();
            const params =
              _ui_components_tooltip_helpSelected__WEBPACK_IMPORTED_MODULE_13__["default"]._getSelectionParameters(selection);

            handlers.lastTranslationCallArgs.text = selection.toString();
            handlers.lastTranslationCallArgs.selectionBB = params;

            jquery__WEBPACK_IMPORTED_MODULE_1___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getPrefix() + "translate-selection-button").remove();

            if (document.location.href.indexOf("netflix.com/watch") > -1) {
              //
              // on netflix, just translate it right away
              //
              handlers.netflix.pause();
              handlers.translateSelection(
                null,
                l_data.from_lang,
                l_data.to_lang
              );
            } else {
              //
              // otherwise show the button
              //
              const height = 24;
              const width = height;
              const x =
                params.left + params.width / 2 + window.pageXOffset - width / 2;
              let y;

              if (
                params.top + params.height + 10 + height >
                window.innerHeight
              ) {
                y = params.top - 10 - height + window.pageYOffset; // floating button is above
              } else {
                y = params.top + params.height + 10 + window.pageYOffset; // floating button is below
              }

              jquery__WEBPACK_IMPORTED_MODULE_1___default()("body").append(
                jquery__WEBPACK_IMPORTED_MODULE_1___default()(
                  '<div class="' +
                    _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getPrefix() +
                    'translate-selection-button"></div>'
                )
                  .css({
                    top: y,
                    left: x,
                  })
                  .data("l-from", l_data.from_lang)
                  .data("l-to", l_data.to_lang)
                  .on("click", handlers.translateSelection)
              );

              // Auto-hide the floating button if not clicked after 2 seconds
              setTimeout(function () {
                jquery__WEBPACK_IMPORTED_MODULE_1___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getPrefix() + "translate-selection-button").fadeOut(
                  250,
                  function () {
                    jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).remove();
                  }
                );
              }, 2000);
            }
          }
        );
      }
    );
  },

  upgradeForArticle: function () {
    let plan = "";
    // if (ke.isSubscriptionBased) {
    plan = "annual,";
    // }
    chrome.runtime
      .sendMessage({
        action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.processCall("app", "opt", "newTab"),
        url: chrome.runtime.getURL(
          "options.html#start_purchase," + plan + "tooltip-articles"
        ),
      })
      .then();

    chrome.runtime
      .sendMessage({
        action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.processCall("app", "commands", "sendAnalyticsEvent"),
        cat: "tooltip",
        event: "upgrade-for-articles",
      })
      .then();
  },

  upgradeForIpa: function () {
    let plan = "";
    // if (ke.isSubscriptionBased) {
    plan = "annual,";
    // }
    chrome.runtime
      .sendMessage({
        action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.processCall("app", "opt", "newTab"),
        url: chrome.runtime.getURL(
          "options.html#start_purchase," + plan + "tooltip-ipa-translit"
        ),
      })
      .then();

    chrome.runtime
      .sendMessage({
        action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.processCall("app", "commands", "sendAnalyticsEvent"),
        cat: "tooltip",
        event: "upgrade-for-ipa",
      })
      .then();
  },

  translateSelection: function (event, __from, __to) {
    if (event) {
      event.stopPropagation();
      event.preventDefault();
    }

    const from = __from || jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).data("l-from");
    const to = __to || jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).data("l-to");

    _particles_translate_ctt_tcModel__WEBPACK_IMPORTED_MODULE_12__["default"].showTranslation(
      undefined,
      from,
      to,
      null,
      null,
      "selection"
    );
  },

  lastTranslationCallArgs: {
    from: null,
    to: null,
    text: null,
    doc: undefined,
    iframe: undefined,
    selection: null,
    selectionBB: null,
  },

  onKeyCombinationClick: function (e, doc, iframe) {

    if (_src_ext_event__WEBPACK_IMPORTED_MODULE_5__.isDown("esc", _src_ext_event__WEBPACK_IMPORTED_MODULE_5__.IN_STR)) {
      _ui_components_tooltip_simple__WEBPACK_IMPORTED_MODULE_14__["default"].close(true);
      jquery__WEBPACK_IMPORTED_MODULE_1___default()(".TnITTtw-translate-loading").remove();
      return;
    }

    if (handlers.hasFocusedInputs(doc)) {
      return;
    }

    return handlers.scanForProperCombination(
      e,
      function (combo, from, to) {
        // console.log("scanForProperCombination callback:", combo, from, to);
        
        if (handlers.passInlineTranslation) {
          return --handlers.passInlineTranslation;
        }

        // prevent showing a new tooltip with no selection
        // if something was translated before
        // and previous selection was saved in lastTranslationCallArgs
        // and is being reused now
        if (!_particles_translate_ctt_tcModel__WEBPACK_IMPORTED_MODULE_12__["default"].getSelectedText(doc)) {
          return;
        }

        //handlers.lastTranslationCallArgs.from = from;
        //handlers.lastTranslationCallArgs.to = to;
        handlers.lastTranslationCallArgs.doc = doc;
        handlers.lastTranslationCallArgs.iframe = iframe;

        _particles_translate_ctt_tcModel__WEBPACK_IMPORTED_MODULE_12__["default"].showTranslation(
          undefined,
          from,
          to,
          doc,
          iframe,
          "shortcut"
        );
      },
      false
    );
  },

  getListenValue: function (s, event) {
    const $where = !event.target
      ? event
      : jquery__WEBPACK_IMPORTED_MODULE_1___default()(_ext_util_selectorsUtil__WEBPACK_IMPORTED_MODULE_10__.getTooltipWrapRecursively(event.target));

    if (s === "orig") {
      var i = _src_ext_string__WEBPACK_IMPORTED_MODULE_9__["default"].removeHtml(
        $where
          .find(
            "." +
              _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getPrefix() +
              "original-wrap ." +
              _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getPrefix() +
              "mv-text-part"
          )
          .html()
      );

      if (!i) {
        return _src_ext_string__WEBPACK_IMPORTED_MODULE_9__["default"].removeHtml(
          $where
            .find(
              "." +
                _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getPrefix() +
                "original-wrap ." +
                _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getPrefix() +
                "tpart"
            )
            .html()
        );
      } else {
        return i;
      }
    } else if (s === "trans") {
      var i = _src_ext_string__WEBPACK_IMPORTED_MODULE_9__["default"].removeHtml(
        $where
          .find(
            "." +
              _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getPrefix() +
              "main-variant ." +
              _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getPrefix() +
              "mv-text-part"
          )
          .html()
      );

      if (!i) {
        return _src_ext_string__WEBPACK_IMPORTED_MODULE_9__["default"].removeHtml(
          $where
            .find(
              "." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getPrefix() + "trans-wrap ." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getPrefix() + "tpart"
            )
            .html()
        );
      } else {
        return i;
      }
    }

    return "";
  },

  //
  // Click on flags in the tooltip
  // Open tooltip settings to change languages
  //
  reverseTranslation: function (event) {
    /*chrome.runtime.sendMessage({
                action: ke.processCall('app', 'opt', 'newTab'),
                url: chrome.runtime.getURL('options.html#3,tooltip')
            });

            chrome.runtime.sendMessage({
                action: ke.processCall('app', 'commands', 'sendAnalyticsEvent'),
                cat: 'tooltip',
                event: 'change-langs'
            });*/

    // Last time we had a proper swap was in v6.X.X, before v7
    if (
      handlers.lastTranslationCallArgs.from != null &&
      handlers.lastTranslationCallArgs.to != null &&
      handlers.lastTranslationCallArgs.text != null
    ) {
      _particles_translate_ctt_tcModel__WEBPACK_IMPORTED_MODULE_12__["default"].showTranslation(
        null,
        handlers.lastTranslationCallArgs.to,
        handlers.lastTranslationCallArgs.from,
        handlers.lastTranslationCallArgs.doc,
        handlers.lastTranslationCallArgs.iframe,
        "reverse"
      );

      chrome.runtime
        .sendMessage({
          action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.processCall("app", "commands", "sendAnalyticsEvent"),
          cat: "tooltip",
          event: "reverse-translate",
        })
        .then();
    }
  },

  unpin: function (event) {
    // storageUtils.requestProStatus((isPro) => {
      // if (!isPro) {
      //   let plan = "";
      //   // if (ke.isSubscriptionBased) {
      //   plan = "annual,";
      //   // }
      //   chrome.runtime
      //     .sendMessage({
      //       action: ke.processCall("app", "opt", "newTab"),
      //       url: chrome.runtime.getURL(
      //         "options.html#start_purchase," + plan + "tooltip-unpin"
      //       ),
      //     })
      //     .then();

      //   chrome.runtime
      //     .sendMessage({
      //       action: ke.processCall("app", "commands", "sendAnalyticsEvent"),
      //       cat: "tooltip",
      //       event: "upgrade-to-pro-unpin",
      //     })
      //     .then();
      // } else {
        const $tooltip = jquery__WEBPACK_IMPORTED_MODULE_1___default()(
          _ext_util_selectorsUtil__WEBPACK_IMPORTED_MODULE_10__.getTooltipWrapRecursively(event.target)
        );

        $tooltip.addClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getPrefix() + "unpinned");
        $tooltip
          .find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getPrefix() + "help-selected-wrap")
          .removeClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getPrefix() + "with-netflix-buttons");
        $tooltip
          .find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getPrefix() + "help-selected-wrap")
          .removeClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getPrefix() + "with-info-warn");

        $tooltip.find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getPrefix() + "arr0w").remove();

        //
        //
        // Update the contents of tooltip

        const time = 175;
        $tooltip
          .find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getPrefix() + "utils")
          .slideUp(time, "easeInOutQuint");
        setTimeout(function () {
          $tooltip
            .find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getPrefix() + "unpinned-utils")
            .css("display", "block");
          $tooltip
            .find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getPrefix() + "original-wrap")
            .slideDown(time, "easeInOutQuint", function () {
              const ttid = $tooltip.data("ttid");

              jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).css("display", "block");

              _src_particles_scrollbars_sModel__WEBPACK_IMPORTED_MODULE_6__["default"].setupHelpSelectedScroll(ttid);
            });
        }, time - 75);

        //
        //
        // Dragging

        let startPosXInTt = 0,
          startPosYInTt = 0;

        const tt_move = function (event) {
          $tooltip.css({
            left: event.clientX - startPosXInTt,
            top: event.clientY - startPosYInTt,
          });
        };

        $tooltip
          .find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getPrefix() + "unpinned-utils")
          .on("mousedown", function (event) {
            if (event.which === 1) {
              startPosXInTt = event.clientX - parseInt($tooltip.css("left"));
              startPosYInTt = event.clientY - parseInt($tooltip.css("top"));

              jquery__WEBPACK_IMPORTED_MODULE_1___default()(window).on("mousemove", tt_move);
            }
          });
        jquery__WEBPACK_IMPORTED_MODULE_1___default()(window).on("mouseup", function () {
          jquery__WEBPACK_IMPORTED_MODULE_1___default()(window).off("mousemove", tt_move);
        });

        //
        //
        // Closing

        jquery__WEBPACK_IMPORTED_MODULE_1___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getPrefix() + "close-unpinned").on(
          "click",
          function (event) {
            const $to_close_tooltip = jquery__WEBPACK_IMPORTED_MODULE_1___default()(
              _ext_util_selectorsUtil__WEBPACK_IMPORTED_MODULE_10__.getTooltipWrapRecursively(event.target)
            );
            $to_close_tooltip.fadeOut(125, "easeInOutQuint", function () {
              jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).remove();
            });
          }
        );

        chrome.runtime
          .sendMessage({
            action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.processCall("app", "commands", "sendAnalyticsEvent"),
            cat: "tooltip",
            event: "unpin",
          })
          .then();
      // }
    // });
  },

  settings: function () {
    chrome.runtime
      .sendMessage({
        action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.processCall("app", "opt", "newTab"),
        url: chrome.runtime.getURL("options.html#3,tooltip"),
      })
      .then();

    chrome.runtime
      .sendMessage({
        action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.processCall("app", "commands", "sendAnalyticsEvent"),
        cat: "tooltip",
        event: "settings",
      })
      .then();

    _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_4__["default"].requestBackgroundOption("setVal", [
      "new_settings_counter",
      10,
    ]);
  },

  useLocalizedInfoWarn: function () {
    chrome.runtime
      .sendMessage({
        action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.processCall("app", "commands", "sendAnalyticsEvent"),
        cat: "tooltip",
        event: "use-sw-warn",
      })
      .then();
  },

  closeInlineOption: function (event) {
    event.stopPropagation();

    const ttid = +jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).data("ttid");
    const option = jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).parent().data("option");

    jquery__WEBPACK_IMPORTED_MODULE_1___default()(this)
      .parent()
      .slideUp(125, "easeInOutQuint", function () {
        jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).remove();
        jquery__WEBPACK_IMPORTED_MODULE_1___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getPrefix() + "hsw-" + ttid).removeClass(
          _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getPrefix() + "with-info-warn"
        );
        _src_particles_scrollbars_sModel__WEBPACK_IMPORTED_MODULE_6__["default"].setupHelpSelectedScroll(ttid, 0);
      });

    chrome.runtime
      .sendMessage({
        action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.processCall("app", "commands", "sendAnalyticsEvent"),
        cat: "tooltip",
        event: "inline-option-close",
        subevent: option,
      })
      .then();
  },

  disableInlineOption: function () {
    const option = jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).data("option");

    chrome.runtime
      .sendMessage({
        action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.processCall("app", "option", "disableOption"),
        option: option,
      })
      .then();

    chrome.runtime
      .sendMessage({
        action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.processCall("app", "commands", "sendAnalyticsEvent"),
        cat: "tooltip",
        event: "inline-option-disable",
        subevent: option,
      })
      .then();

    jquery__WEBPACK_IMPORTED_MODULE_1___default()(this)
      .addClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getPrefix() + "disabled")
      .find("span")
      .html(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getLocale("Tooltip_InlineOptionDisabled"));
  },

  zendesk_observer: null,

  checkZendeskTickets: function () {
    handlers.zendesk_observer = new MutationObserver(function (mutations) {
      if (
        /zendesk.com\/agent\/tickets\/([0-9]+)/.test(document.location.href)
      ) {
        _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_4__["default"].requestBackgroundOption("setVal", ["zendesk_user", true]);

        if (handlers.zendesk_observer) {
          handlers.zendesk_observer.disconnect();
        }
      }
    });

    handlers.zendesk_observer.observe(document.querySelector("body"), {
      childList: true,
      subtree: true,
    });
  },

  onPageLangDropdownValueChanged: (serial, v) => {
    // console.log('content selector value changed:', serial, v);
    // move it to `handlers`

    if (serial === 3) {
      _src_particles_lang_selectors_lsModel__WEBPACK_IMPORTED_MODULE_7__["default"].onFullPageLangDropdownChange(
        serial,
        v,
        null,
        false,
        () => {
          (0,_fpTranslator__WEBPACK_IMPORTED_MODULE_16__.onFPLangSelectorValueChanged)(serial, v);
        }
      );
    } else {
      _src_particles_lang_selectors_lsModel__WEBPACK_IMPORTED_MODULE_7__["default"].onLangDropdownChange(serial, v, null, false, () => {
        if (serial === 1) {
          _particles_translate_ctt_tcModel__WEBPACK_IMPORTED_MODULE_12__["default"].showTranslation(
            null,
            v,
            handlers.lastTranslationCallArgs.to,
            handlers.lastTranslationCallArgs.doc,
            handlers.lastTranslationCallArgs.iframe,
            "lang-changed"
          );
          //$tt.find('.' + ke.getPrefix() + 'from-flag').attr('src', ke.pathToExt + 'res/images/flags/' + v + '@2x.png');
        } else if (serial === 2) {
          // also re-translate, of course
          //$tt.find('.' + ke.getPrefix() + 'to-flag').attr('src', ke.pathToExt + 'res/images/flags/' + v + '@2x.png');
          _particles_translate_ctt_tcModel__WEBPACK_IMPORTED_MODULE_12__["default"].showTranslation(
            null,
            handlers.lastTranslationCallArgs.from,
            v,
            handlers.lastTranslationCallArgs.doc,
            handlers.lastTranslationCallArgs.iframe,
            "lang-changed"
          );
        }
      });
    }
  },

  onPageLangDropdownOpened: (serial, ot) => {
    // console.log("onPageLangDropdownOpened", serial, ot);
    if (serial === 3) {
      _src_particles_scrollbars_sModel__WEBPACK_IMPORTED_MODULE_6__["default"].setupFPDropdownScroll(ot);
    } else {
      _src_particles_lang_selectors_lsModel__WEBPACK_IMPORTED_MODULE_7__["default"].onOpen(serial, ot);
    }
  },

  netflix: {
    prevSubtitles: "",

    handleNavigation: function () {
      const unload = function () {
        clearInterval(temp.subtitle_update_int);
        temp.wordlist_id = null;
        flags.netflix_player_loaded = false;
        temp.landing_href = document.location.href;
      };

      if (
        document.location.href !== temp.landing_href &&
        document.location.href.indexOf("https://www.netflix.com/watch/") > -1
      ) {
        //console.log('load');

        // load the subtitle translator
        // first unload is it's the next episode e.g.
        unload();

        temp.landing_href = document.location.href;
        (0,_shared__WEBPACK_IMPORTED_MODULE_15__.initNetflixSubtitleTranslator)();
      } else if (
        temp.landing_href.indexOf("https://www.netflix.com/watch/") > -1 &&
        document.location.href.indexOf("https://www.netflix.com/watch/") === -1
      ) {
        //console.log('unload');

        // unload the translator
        unload();
      }
    },

    parseAndShowSubtitle: function ($pieces) {
      $pieces.hide();

      let full_text_subtitle = "";

      $pieces.each(function () {
        full_text_subtitle += " " + jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).text();
      });

      full_text_subtitle = full_text_subtitle.replace(/  /g, " ");

      // update subtitles position only if it's changed
      if (
        temp.bottom_controls_height !== temp.prev_bottom_controls_height ||
        handlers.netflix.prevSubtitles !== full_text_subtitle
      ) {
        temp.prev_bottom_controls_height = temp.bottom_controls_height;

        jquery__WEBPACK_IMPORTED_MODULE_1___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getPrefix() + "mate-subtitle-wrap").css(
          "bottom",
          parseInt(temp.bottom_controls_height) + 16
        );
      }

      if (handlers.netflix.prevSubtitles === full_text_subtitle) {
        // not updating the contents when they're the same
        return;
      }

      handlers.netflix.prevSubtitles = full_text_subtitle;

      handlers.netflix.showClickableSubtitle(full_text_subtitle);
    },

    play: function () {
      if (jquery__WEBPACK_IMPORTED_MODULE_1___default()('div[data-uia="player"]').hasClass("inactive")) {
        jquery__WEBPACK_IMPORTED_MODULE_1___default()('div[data-uia="player"]').trigger("click"); // show the player
      }
      jquery__WEBPACK_IMPORTED_MODULE_1___default()('button[data-uia="control-play-pause-play"]').trigger("click");
    },

    pause: function () {
      if (jquery__WEBPACK_IMPORTED_MODULE_1___default()('div[data-uia="player"]').hasClass("inactive")) {
        jquery__WEBPACK_IMPORTED_MODULE_1___default()('div[data-uia="player"]').trigger("click"); // show the player
      }
      jquery__WEBPACK_IMPORTED_MODULE_1___default()('button[data-uia="control-play-pause-pause"]').trigger("click");
    },

    getEpisodeName: function () {
      const episode_name = temp.netflix_episode_name
        ? " – " + temp.netflix_episode_name || 0
        : "";
      const episode_code = temp.netflix_episode_code
        ? " (" + temp.netflix_episode_code + ")"
        : "";

      return temp.netflix_title + episode_name + episode_code;
    },

    save: function (event) {
      const $that = jquery__WEBPACK_IMPORTED_MODULE_1___default()(this);

      _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_4__["default"].requestProStatus((is_pro) => {
        if (!is_pro) {
          let plan = "";
          // if (ke.isSubscriptionBased) {
          plan = "annual,";
          // }
          chrome.runtime
            .sendMessage({
              action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.processCall("app", "opt", "newTab"),
              url: chrome.runtime.getURL(
                "options.html#start_purchase," +
                  plan +
                  "netflix-phrasebook-saving"
              ),
            })
            .then();

          chrome.runtime
            .sendMessage({
              action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.processCall("app", "commands", "sendAnalyticsEvent"),
              cat: "tooltip",
              event: "netflix",
              subevent: "upgrade-for-saving-to-pb",
            })
            .then();
        } else {
          chrome.runtime.sendMessage(
            {
              action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.processCall("app", "phrasebook", "addPhrase"),
              wl_name: handlers.netflix.getEpisodeName(),
              phrase: _src_particles_3dots_button_3dotsModel__WEBPACK_IMPORTED_MODULE_8__["default"].getOriginalWord(event),
              from: temp.netflix_subtitles_lang,
              to: temp.to_lang,
              usageExample: handlers.netflix.capturedSubtitle,
            },
            function (data) {
              temp.wordlist_id = data.parent_wordlist_key;

              $that
                .addClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getPrefix() + "netflix-saved-state")
                .html("SAVED!");

              handlers.netflix.play();

              chrome.runtime
                .sendMessage({
                  action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.processCall(
                    "app",
                    "commands",
                    "sendAnalyticsEvent"
                  ),
                  cat: "pb",
                  event: "phrase-add",
                  subevent: "from-netflix",
                })
                .then();

              chrome.runtime
                .sendMessage({
                  action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.processCall(
                    "app",
                    "commands",
                    "sendAnalyticsEvent"
                  ),
                  cat: "tooltip",
                  event: "netflix",
                  subevent: "save",
                })
                .then();
            }
          );
        }
      });
    },

    continue: function () {
      _ui_components_tooltip_simple__WEBPACK_IMPORTED_MODULE_14__["default"].close(true);
      handlers.netflix.play();

      chrome.runtime
        .sendMessage({
          action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.processCall("app", "commands", "sendAnalyticsEvent"),
          cat: "tooltip",
          event: "netflix",
          subevent: "continue",
        })
        .then();
    },

    fetchWordlistId: function () {
      chrome.runtime.sendMessage(
        {
          action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.processCall("app", "phrasebook", "getWordlistIdByName"),
          wl_name: handlers.netflix.getEpisodeName(),
          from: temp.netflix_subtitles_lang,
          to: temp.to_lang,
        },
        function (id) {
          temp.wordlist_id = id;
        }
      );
    },

    viewSavedWords: function () {
      if (temp.wordlist_id) {
        chrome.runtime
          .sendMessage({
            action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.processCall("app", "opt", "newTab"),
            url: chrome.runtime.getURL(
              "phrasebook.html#wl-" + temp.wordlist_id
            ),
          })
          .then();
      }
    },

    setNewParsedSubtitleLang: function (new_lang) {
      new_lang = new_lang.replace(/ \[.*\]/, "");

      const netflix_locale = document
        .querySelector("html")
        .getAttribute("lang")
        .split("-")
        .shift();
      const langs = _src_ext_const_netflix_langs_js__WEBPACK_IMPORTED_MODULE_0__["default"][netflix_locale] || _src_ext_const_netflix_langs_js__WEBPACK_IMPORTED_MODULE_0__["default"].en;
      const split_langs = new_lang.split(" ");

      //
      // European Spanish is just Spanish for us, e.g.
      //

      if (split_langs.length > 1) {
        let temp_lang;

        //
        // Check the full language name, too
        // E.g., Traditional Chinese or Simplified Chinese
        //
        split_langs.push(new_lang);

        split_langs.forEach(function (lang) {
          const lang_code = langs[_src_ext_string__WEBPACK_IMPORTED_MODULE_9__["default"].getTitleCase(lang)];

          if (lang_code && lang_code !== "auto") {
            temp_lang = lang_code;
          }
        });

        if (!temp_lang) {
          // couldn't find any meaninful language code
          temp.netflix_subtitles_lang = "auto";
        } else {
          temp.netflix_subtitles_lang = temp_lang;
        }
      } else {
        temp.netflix_subtitles_lang =
          langs[_src_ext_string__WEBPACK_IMPORTED_MODULE_9__["default"].getTitleCase(split_langs[0])] || "auto";
      }

      //console.log('set lang:', temp.netflix_subtitles_lang);
    },

    onSubtitlesLangChange: function () {
      const $that = jquery__WEBPACK_IMPORTED_MODULE_1___default()(this);

      const u = setInterval(function () {
        const $subtitles_langs = $that
          .next()
          .find(".track-list-subtitles .track");

        if ($subtitles_langs.length > 0) {
          clearInterval(u);

          $subtitles_langs.on("click", function () {
            const new_lang = jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).text();

            setTimeout(function () {
              handlers.netflix.setNewParsedSubtitleLang(new_lang);
              handlers.netflix.fetchWordlistId();
            }, 250);
          });
        }
      }, 250);
    },

    showClickableSubtitle: function (text) {
      _ui_components_tooltip_simple__WEBPACK_IMPORTED_MODULE_14__["default"].close(true);

      jquery__WEBPACK_IMPORTED_MODULE_1___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getPrefix() + "mate-subtitle-wrap").fadeOut(150, function () {
        jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).remove();
      });

      if (!text) {
        return;
      }

      const words_html = text
        .replace(/&nbsp;/g, " ")
        .replace(
          _src_ext_string__WEBPACK_IMPORTED_MODULE_9__["default"].hackRegex(/((?!br\b)\b(\p{L}|\')+)/g),
          '<span class="' +
            _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getPrefix() +
            'clickable-mate-subtitle">$1</span>'
        );

      jquery__WEBPACK_IMPORTED_MODULE_1___default()("<div>")
        .addClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getPrefix() + "mate-subtitle-wrap")
        .css("font-size", temp.netflix_subtitles_fontsize)
        .css("bottom", (parseInt(temp.bottom_controls_height) || 0) + 16)
        .html(words_html)
        .appendTo(".watch-video--player-view")
        .find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getPrefix() + "clickable-mate-subtitle")
        .on("click", handlers.netflix.translate);
    },

    translate: function () {
      handlers.netflix.capturedSubtitle = handlers.netflix.prevSubtitles
        .replace(/<br>/g, " ")
        .replace(/&nbsp;/g, " ");

      const word = jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).html();
      handlers.netflix.pause();

      const pos = _src_ext_dom__WEBPACK_IMPORTED_MODULE_3__["default"].getPosition(this);
      const w = jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).width();
      const h = jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).height();

      chrome.runtime.sendMessage(
        {
          action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.processCall("app", "option", "getMainLanguagePair"),
          identificator: "tooltip",
        },
        function (l_data) {
          handlers.lastTranslationCallArgs.doc = null;
          handlers.lastTranslationCallArgs.iframe = null;

          handlers.lastTranslationCallArgs.text = word;
          handlers.lastTranslationCallArgs.selectionBB = {
            left: pos[0],
            top: pos[1],
            width: w,
            height: h,
          };

          temp.to_lang = l_data.to_lang;

          _particles_translate_ctt_tcModel__WEBPACK_IMPORTED_MODULE_12__["default"].showTranslation(
            undefined,
            temp.netflix_subtitles_lang,
            l_data.to_lang,
            null,
            null,
            "netf"
          );
        }
      );
    },
  },

  _processEventHandlers: {
    app: {
      audio: {},

      trans: {
        getSelectedText: function (data, sendResponse) {
          sendResponse(_particles_translate_ctt_tcModel__WEBPACK_IMPORTED_MODULE_12__["default"].getSelectedText());
        },

        displayAsTooltip: function (data, sendResponse) {
          if (lodash__WEBPACK_IMPORTED_MODULE_11___default().isEmpty(temp.windows)) {
            _particles_translate_ctt_tcModel__WEBPACK_IMPORTED_MODULE_12__["default"].showTranslation(
              data.message,
              data.from,
              data.to,
              null,
              null,
              "context-menu"
            );
          } else {
            try {
              temp.windows.forEach((v, k) => {
                if (!v || !v.getSelection() || !v.getSelection().toString()) {
                  return;
                }

                _particles_translate_ctt_tcModel__WEBPACK_IMPORTED_MODULE_12__["default"].showTranslation(
                  data.message,
                  data.from,
                  data.to,
                  temp.windows[k],
                  temp.iframes[k],
                  "context-menu"
                );
              });
            } catch (e) {}
          }
        },

        fullPage: function (data, sendResponse) {
          (0,_fpTranslator__WEBPACK_IMPORTED_MODULE_16__.tryShowingMateBar)(true); // true – forced show, i.e. override possible "never show" options
          sendResponse(undefined);
        },
      },
    },
  },

  compileString: function (str, data) {
    data = data || {};
    str = handlers.parseHtml(str);

    for (const key in data) {
      str = str
        .replace(new RegExp("<%=" + key + "%>", "g"), data[key])
        .replace(new RegExp("<%= " + key + " %>", "g"), data[key]);
    }

    return str;
  },

  parseHtml: function (h) {
    return h.replace(/&lt;/gi, "<").replace(/&gt;/gi, ">");
  },

  fullPageActions: {
    toggle: function () {
      if (jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).hasClass("show-orig")) {
        this.fullPageActions.restore();
        jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).html(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getLocale("FullPageTranslate"));
      } else {
        this.fullPageActions.translate();
        jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).html(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getLocale("FullPageShowOriginal"));
      }

      jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).toggleClass("show-orig");
    },

    getIFrameDocument: function () {
      const iframe = document.getElementById(":0.container");

      if (!iframe) {
        return null;
      }

      return iframe.contentDocument;
    },

    translate: function () {
      const doc = handlers.fullPageActions.getIFrameDocument();

      if (doc) {
        doc.getElementById(":0.confirm").click();
      }
    },

    restore: function () {
      const doc = handlers.fullPageActions.getIFrameDocument();

      if (doc) {
        doc.getElementById(":0.restore").click();
      }
    },
  },
  removeGoogleWidget: function () {
    handlers.fullPageActions.restore();

    jquery__WEBPACK_IMPORTED_MODULE_1___default()('script[src*="//translate.google.com/"]').remove();
    jquery__WEBPACK_IMPORTED_MODULE_1___default()('*[class~="skiptranslate"]').remove();
    jquery__WEBPACK_IMPORTED_MODULE_1___default()(".goog-te-spinner-pos").remove();

    jquery__WEBPACK_IMPORTED_MODULE_1___default()("body").css({
      position: "inherit",
      "min-height": "auto",
      top: "auto",
    });
  },
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (handlers);


/***/ }),

/***/ "./src/pages/content/initContentDropdowns.js":
/*!***************************************************!*\
  !*** ./src/pages/content/initContentDropdowns.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "initDropdowns": () => (/* binding */ initDropdowns)
/* harmony export */ });
/* harmony import */ var _src_ui_components_dropdown__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../src/ui_components/dropdown */ "./src/ui_components/dropdown.js");
/* harmony import */ var _handlers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./handlers */ "./src/pages/content/handlers.js");
/* harmony import */ var _render__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./render */ "./src/pages/content/render.js");
/* harmony import */ var _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../src/ext/kumquat_polyfill */ "./src/ext/kumquat_polyfill.js");





// uses window.temp & window.flags 
// defined in the public scope in ./content.js

// can only init it once, actually
// should cover frequent re-inits for both tooltips & FP
function initDropdowns(tooltip_detected_from_lang) {
    temp.tooltip_detected_from_lang = tooltip_detected_from_lang;
  
    // console.log("initDropdowns", tooltip_detected_from_lang);

    _src_ui_components_dropdown__WEBPACK_IMPORTED_MODULE_0__.init(
      _handlers__WEBPACK_IMPORTED_MODULE_1__["default"].onPageLangDropdownValueChanged,
      [_handlers__WEBPACK_IMPORTED_MODULE_1__["default"].onPageLangDropdownOpened, _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.EF],
      _render__WEBPACK_IMPORTED_MODULE_2__["default"].organize.fillOnPageLangDropdown,
      "",
      function () {
        //$('.rm-recent').off().on('click', langSelectorModel.removeRecentLanguage);
      }
    );
  }
  

/***/ }),

/***/ "./src/pages/content/render.js":
/*!*************************************!*\
  !*** ./src/pages/content/render.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../src/ext/kumquat_polyfill */ "./src/ext/kumquat_polyfill.js");
/* harmony import */ var _src_ext_const_lang__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../src/ext/const/lang */ "./src/ext/const/lang.js");
/* harmony import */ var _particles_lang_selectors_lsView__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../particles/lang_selectors/lsView */ "./src/particles/lang_selectors/lsView.js");
/* harmony import */ var _handlers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./handlers */ "./src/pages/content/handlers.js");
/* harmony import */ var _particles_listen_lModel__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../particles/listen/lModel */ "./src/particles/listen/lModel.js");







const render = {
    organize: {
      fillOnPageLangDropdown: function (type, _, callback) {
        if (type === 3) {
          // store languages in our format
          // convert it to MS's format on the fly, immediately before translating
          const fp_lang_list = {};
          for (const lang in _src_ext_const_lang__WEBPACK_IMPORTED_MODULE_2__.supportedLangs) {
            if (
              window.Microsoft.Translator.Widget.languageCodes.indexOf(
                (0,_src_ext_const_lang__WEBPACK_IMPORTED_MODULE_2__.getBingCompatibleLang)(_src_ext_const_lang__WEBPACK_IMPORTED_MODULE_2__.supportedLangs[lang])
              ) > -1
            ) {
              fp_lang_list[lang] = _src_ext_const_lang__WEBPACK_IMPORTED_MODULE_2__.supportedLangs[lang];
            }
          }
  
          _particles_lang_selectors_lsView__WEBPACK_IMPORTED_MODULE_3__["default"].fillFPDropdown(
            type,
            type,
            null,
            fp_lang_list,
            callback
          );
        } else {
          let data = null;
          if (temp.tooltip_detected_from_lang) {
            data = {
              from: temp.tooltip_detected_from_lang,
            };
          }
          _particles_lang_selectors_lsView__WEBPACK_IMPORTED_MODULE_3__["default"].fillDropdown(
            type,
            type,
            data,
            _src_ext_const_lang__WEBPACK_IMPORTED_MODULE_2__.supportedLangs,
            callback
          );
        }
      },
    },
  
    events: {
      listen: function () {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "listen-original")
          .off()
          .on("click", _particles_listen_lModel__WEBPACK_IMPORTED_MODULE_5__["default"].playTooltip);
        jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "listen-butt0n")
          .off()
          .on("click", _particles_listen_lModel__WEBPACK_IMPORTED_MODULE_5__["default"].playTooltip);
      },
  
      showUpgradeForIpaAndArticles: function () {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "mv-translit")
          .off()
          .on("click", _handlers__WEBPACK_IMPORTED_MODULE_4__["default"].upgradeForIpa);
        jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "article")
          .off()
          .on("click", _handlers__WEBPACK_IMPORTED_MODULE_4__["default"].upgradeForArticle);
      },
  
      listenSynonym: function () {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "listen-v-item")
          .off()
          .on("click", _particles_listen_lModel__WEBPACK_IMPORTED_MODULE_5__["default"].playTooltipSynonym);
      },
  
      reverseTranslation: function () {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "show-reversed")
          .off()
          .on("click", _handlers__WEBPACK_IMPORTED_MODULE_4__["default"].reverseTranslation);
      },
  
      unpin: function () {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "unpin")
          .off()
          .on("click", _handlers__WEBPACK_IMPORTED_MODULE_4__["default"].unpin);
      },
  
      settings: function () {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "settings")
          .off()
          .on("click", _handlers__WEBPACK_IMPORTED_MODULE_4__["default"].settings);
      },
  
      localizedSiteInfoWarnActions: function (ttid) {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "iw-" + ttid)
          .find("a")
          .off()
          .on("click", _handlers__WEBPACK_IMPORTED_MODULE_4__["default"].useLocalizedInfoWarn);
        jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "close-loc-option")
          .off()
          .on("click", _handlers__WEBPACK_IMPORTED_MODULE_4__["default"].closeInlineOption);
      },
  
      doubleClickOptionActions: function (ttid) {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "ddopt-" + ttid)
          .off()
          .on("click", _handlers__WEBPACK_IMPORTED_MODULE_4__["default"].disableInlineOption);
        jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "close-dd-option")
          .off()
          .on("click", _handlers__WEBPACK_IMPORTED_MODULE_4__["default"].closeInlineOption);
      },
  
      selectionOptionActions: function (ttid) {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "selopt-" + ttid)
          .off()
          .on("click", _handlers__WEBPACK_IMPORTED_MODULE_4__["default"].disableInlineOption);
        jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "close-sel-option")
          .off()
          .on("click", _handlers__WEBPACK_IMPORTED_MODULE_4__["default"].closeInlineOption);
      },
    },
};

window.events = render.events;

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (render);

/***/ }),

/***/ "./src/pages/content/shared.js":
/*!*************************************!*\
  !*** ./src/pages/content/shared.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "callbacksInitialization": () => (/* binding */ callbacksInitialization),
/* harmony export */   "flags": () => (/* binding */ flags),
/* harmony export */   "initNetflixSubtitleTranslator": () => (/* binding */ initNetflixSubtitleTranslator),
/* harmony export */   "temp": () => (/* binding */ temp)
/* harmony export */ });
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _handlers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./handlers */ "./src/pages/content/handlers.js");
/* harmony import */ var _ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../ext/kumquat_polyfill */ "./src/ext/kumquat_polyfill.js");




const callbacksInitialization = {};

const flags = {
  isCurrentTranslationMulti: false,
  tt_transUtterancePermission: false,
  isPlayingTooltipTrans: false,
  netflix_player_loaded: false,
  dark_mode: false,
  show_netflix: true,
  pro: false,
};

const temp = {
  iframes: [],
  windows: [],
  documents: [],
  currentDetectedLang: "",
  to_lang: "",
  netflix_title: "",
  netflix_subtitles_lang: "auto",
  netflix_subtitles_fontsize: "28px",
  bottom_controls_height: "104px",
  landing_href: "",
  subtitle_update_int: null,
  scale: 0.75,
  wordlist_id: null,
  tooltip_detected_from_lang: null,
};

function initNetflixSubtitleTranslator() {
  if (
    flags.show_netflix &&
    document.location.href.indexOf("https://www.netflix.com/watch/") > -1 &&
    !flags.netflix_player_loaded
  ) {
    jquery__WEBPACK_IMPORTED_MODULE_0___default()("body").append(
      "<style>.player-timedtext-text-container span { opacity: 0.0 !important; }</style>"
    );

    var p = setInterval(function () {
      const $subtitle_btn = jquery__WEBPACK_IMPORTED_MODULE_0___default()('button[data-uia="control-audio-subtitle"]');

      if ($subtitle_btn.length > 0 && flags.netflix_player_loaded) {
        clearInterval(p);

        var t = setInterval(function () {
          // try to open the subtitle language settings
          jquery__WEBPACK_IMPORTED_MODULE_0___default()('button[data-uia="control-audio-subtitle"]').click();

          const $active_subtitles_lang = jquery__WEBPACK_IMPORTED_MODULE_0___default()(
            'li[data-uia^="subtitle-item-selected-"]'
          );

          if ($active_subtitles_lang.length > 0) {
            clearInterval(t);

            _handlers__WEBPACK_IMPORTED_MODULE_1__["default"].netflix.setNewParsedSubtitleLang(
              $active_subtitles_lang.text()
            );
            _handlers__WEBPACK_IMPORTED_MODULE_1__["default"].netflix.fetchWordlistId();

            // close subtitle settings
            // $('button[data-uia="control-audio-subtitle"]').click();
            jquery__WEBPACK_IMPORTED_MODULE_0___default()('div[data-uia="player"]').trigger("click");

            $subtitle_btn.on(
              "click mouseover",
              _handlers__WEBPACK_IMPORTED_MODULE_1__["default"].netflix.onSubtitlesLangChange
            );
          }
        }, 1000);
      }
    }, 1000);

    var i = setInterval(function () {
      const $subtitle_wrap = jquery__WEBPACK_IMPORTED_MODULE_0___default()(".watch-video .player-timedtext");

      if ($subtitle_wrap.length > 0) {
        clearInterval(i);

        jquery__WEBPACK_IMPORTED_MODULE_0___default()("body").addClass(_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getPrefix() + "with-mate-subtitles");

        temp.netflix_title = jquery__WEBPACK_IMPORTED_MODULE_0___default()('div[data-uia="video-title"] h4').text();
        temp.netflix_episode_code = jquery__WEBPACK_IMPORTED_MODULE_0___default()(
          'div[data-uia="video-title"] span:eq(0)'
        ).text();
        temp.netflix_episode_name = jquery__WEBPACK_IMPORTED_MODULE_0___default()(
          'div[data-uia="video-title"] span:eq(1)'
        ).text();

        flags.netflix_player_loaded = true;

        temp.subtitle_update_int = setInterval(function () {
          const $pieces = $subtitle_wrap.find(
            ".player-timedtext-text-container span:first"
          );

          // it's correct
          temp.bottom_controls_height =
            jquery__WEBPACK_IMPORTED_MODULE_0___default()(".watch-video--bottom-controls-container").css("height") || 0;

          if ($pieces.length > 0) {
            temp.netflix_subtitles_fontsize = $pieces
              .find(">:first-child")
              .css("font-size");
            _handlers__WEBPACK_IMPORTED_MODULE_1__["default"].netflix.parseAndShowSubtitle($pieces);
          } else {
            _handlers__WEBPACK_IMPORTED_MODULE_1__["default"].netflix.showClickableSubtitle(""); // hide titles
          }
        }, 100);
      }
    }, 1000);
  }
}


/***/ }),

/***/ "./src/pages/history/events.js":
/*!*************************************!*\
  !*** ./src/pages/history/events.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _particles_hist_list_hlModel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./particles/hist_list/hlModel */ "./src/pages/history/particles/hist_list/hlModel.js");
/* harmony import */ var _handlers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./handlers */ "./src/pages/history/handlers.js");
/* harmony import */ var _particles_hist_opt_delete_hodModel__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./particles/hist_opt_delete/hodModel */ "./src/pages/history/particles/hist_opt_delete/hodModel.js");
/* harmony import */ var _particles_hist_search_hsModel__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./particles/hist_search/hsModel */ "./src/pages/history/particles/hist_search/hsModel.js");






const events = {
  onItemMouseOver: function () {
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".history-item-wrap")
      .off()
      .on("mouseover", _particles_hist_list_hlModel__WEBPACK_IMPORTED_MODULE_1__["default"].onItemMouseOver);
  },

  onItemMouseOut: function () {
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".history-item-wrap")
      .off()
      .on("mouseout", _particles_hist_list_hlModel__WEBPACK_IMPORTED_MODULE_1__["default"].onItemMouseOut);
  },

  onItemClick: function () {
    // console.log('initializing the list:', $(".history-item-wrap").length);
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".history-item-wrap")
      .off("click")
      .on("click", _particles_hist_list_hlModel__WEBPACK_IMPORTED_MODULE_1__["default"].onItemClick);
  },

  onDeleteClick: function () {
    //$('.ab-delete', '.history-item-wrap').off().on('click', ke.particles.hist_list.model.onItemDeleteClick);
  },

  enableDeleteMode: function () {
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".more-button").off().on("click", _handlers__WEBPACK_IMPORTED_MODULE_2__["default"].enableDeleteMode);
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".cancel").off().on("click", _handlers__WEBPACK_IMPORTED_MODULE_2__["default"].cancelOptionSelection);
  },

  toggleMouseOverOption: function () {
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".option-item").off().on({
      mousedown: _handlers__WEBPACK_IMPORTED_MODULE_2__["default"].onMouseDownOverOption,
      mouseup: _handlers__WEBPACK_IMPORTED_MODULE_2__["default"].onMouseUpOverOption,
    });
  },

  onDeleteSelectionClick: function () {
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".delete-selection")
      .off()
      .on("click", _particles_hist_opt_delete_hodModel__WEBPACK_IMPORTED_MODULE_3__["default"].onDeleteSelectionClick);
  },

  onDeleteSelectionActions: function () {
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".select-all").off().on("click", _particles_hist_opt_delete_hodModel__WEBPACK_IMPORTED_MODULE_3__["default"].selectAll);
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".deselect-all")
      .off()
      .on("click", _particles_hist_opt_delete_hodModel__WEBPACK_IMPORTED_MODULE_3__["default"].deselectAll);
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".delete-selected")
      .off()
      .on("click", _particles_hist_opt_delete_hodModel__WEBPACK_IMPORTED_MODULE_3__["default"].deleteSelected);
    _handlers__WEBPACK_IMPORTED_MODULE_2__["default"].addCancelCallback(
      jquery__WEBPACK_IMPORTED_MODULE_0___default()(".selection-cancel").get(),
      _handlers__WEBPACK_IMPORTED_MODULE_2__["default"].onSelCancel
    );
  },

  onClearHistoryClick: function () {
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".clear-history")
      .off()
      .on("click", _particles_hist_opt_delete_hodModel__WEBPACK_IMPORTED_MODULE_3__["default"].onClearHistoryClick);
  },

  onClearTickClick: function () {
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".clear-input-tick")
      .off()
      .on("click", _particles_hist_search_hsModel__WEBPACK_IMPORTED_MODULE_4__["default"].onClearTickClick);
  },

  onSearchKeyRelease: function () {
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".search-input")
      .off()
      .on("keyup", _particles_hist_search_hsModel__WEBPACK_IMPORTED_MODULE_4__["default"].onSearchKeyRelease);
  },

  onPageScroll: function () {
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(window).on('scroll', _particles_hist_list_hlModel__WEBPACK_IMPORTED_MODULE_1__["default"].onPageScroll);
  },

  onTickerClick: function () {
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".selection-ticker")
      .off()
      .on("click", function (event) {
        _particles_hist_opt_delete_hodModel__WEBPACK_IMPORTED_MODULE_3__["default"].onTickerClick(event, "ticker");
      });
  },

  onDownFastSelection: function () {
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(document).on({
      mousedown: _handlers__WEBPACK_IMPORTED_MODULE_2__["default"].registerMouseDown,
      mouseup: _handlers__WEBPACK_IMPORTED_MODULE_2__["default"].registerMouseUp,
      mousemove: _particles_hist_opt_delete_hodModel__WEBPACK_IMPORTED_MODULE_3__["default"].registerMouseMoving,
      keydown: _handlers__WEBPACK_IMPORTED_MODULE_2__["default"].registerKeyDown,
      keyup: _handlers__WEBPACK_IMPORTED_MODULE_2__["default"].registerKeyUp,
    });
  },

  onQuickAccessBarActions: function () {
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".up-shortcut").off().on("click", _particles_hist_list_hlModel__WEBPACK_IMPORTED_MODULE_1__["default"].scrollTop);
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".qa-cancel")
      .off()
      .on("click", _particles_hist_opt_delete_hodModel__WEBPACK_IMPORTED_MODULE_3__["default"].onDeleteSelectionClick);
  },

  onScrollingOnGoUpButton: function () {
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".up-shortcut").on("click", _handlers__WEBPACK_IMPORTED_MODULE_2__["default"].scrollOnGoUpButton);
  },

  onWindowResize: function () {
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(window).on('resize', _handlers__WEBPACK_IMPORTED_MODULE_2__["default"].onWindowResize);
  },

  onExport: function () {
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".export-button").on("click", _particles_hist_list_hlModel__WEBPACK_IMPORTED_MODULE_1__["default"].downloadHistoryAsCSV);
  },
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (events);


/***/ }),

/***/ "./src/pages/history/handlers.js":
/*!***************************************!*\
  !*** ./src/pages/history/handlers.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _particles_hist_opt_delete_hodModel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./particles/hist_opt_delete/hodModel */ "./src/pages/history/particles/hist_opt_delete/hodModel.js");
/* harmony import */ var _shared__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./shared */ "./src/pages/history/shared.js");
/* harmony import */ var _ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../ext/kumquat_polyfill */ "./src/ext/kumquat_polyfill.js");
/* harmony import */ var _particles_sync_syncUiModel__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../particles/sync/syncUiModel */ "./src/particles/sync/syncUiModel.js");
/* harmony import */ var _ui_components_loading__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../ui_components/loading */ "./src/ui_components/loading.js");
/* harmony import */ var _particles_scrollbars_sModel__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../particles/scrollbars/sModel */ "./src/particles/scrollbars/sModel.js");








function setPageScrollSize() {
  jquery__WEBPACK_IMPORTED_MODULE_0___default()("#page-vis-scroll").css("height", _shared__WEBPACK_IMPORTED_MODULE_2__.temp.window_height);
  jquery__WEBPACK_IMPORTED_MODULE_0___default()("#page-track").css("height", _shared__WEBPACK_IMPORTED_MODULE_2__.temp.window_height - 8);
  jquery__WEBPACK_IMPORTED_MODULE_0___default()("#page-scrollbar").css("height", _shared__WEBPACK_IMPORTED_MODULE_2__.temp.window_height);

  _particles_scrollbars_sModel__WEBPACK_IMPORTED_MODULE_6__["default"].setupHistoryPageScroll();
}

const handlers = {
  _processEventHandlers: {
    app: {
      audio: {},
    },
  },

  onMouseDownOverOption: function () {
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).prev().addClass("option-before-active");
  },

  onMouseUpOverOption: function () {
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).prev().removeClass("option-before-active");
  },

  enableDeleteMode: function () {
    // organize.ctrlOptionsVisibility();
    _particles_hist_opt_delete_hodModel__WEBPACK_IMPORTED_MODULE_1__["default"].onDeleteSelectionClick();
  },

  registerMouseDown: function () {
    _shared__WEBPACK_IMPORTED_MODULE_2__.flags.isMouseDown = true;
  },

  registerMouseUp: function () {
    _shared__WEBPACK_IMPORTED_MODULE_2__.flags.isMouseDown = false;
  },

  registerKeyDown: function (e) {
    if (e.shiftKey) {
      _shared__WEBPACK_IMPORTED_MODULE_2__.flags.isShiftDown = true;
    }
  },

  registerKeyUp: function (e) {
    // shift up, e.shiftKey doesn't work for some reason...
    if (e.keyCode === 16) {
      _shared__WEBPACK_IMPORTED_MODULE_2__.flags.isShiftDown = false;
    }
  },

  onSelCancel: function () {
    // TODO: ctrlOptionsVisibility had return; as the first line. Safe to remove this code?
    // organize.ctrlOptionsVisibility(function () {
    //   ke.particles.hist_opt_delete.model.toggleSlidingWrap();
    //   ke.app.temp.selected = [];
    //   $(".active-st").removeClass("active-st");
    //   $(".to-delete-label").html("0");
    // });

    // Close quick access bar
    _shared__WEBPACK_IMPORTED_MODULE_2__.flags.quick_access_shown = false;
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".quick-access-bar").animate(
      {
        top: -59,
        opacity: 0,
      },
      _ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getAnimSpeed("slide_down") * 2.25,
      _ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getAnimType("slide_down")
    );
  },

  scrollOnGoUpButton: function (event) {
    event.preventDefault();

    jquery__WEBPACK_IMPORTED_MODULE_0___default()("body").animate(
      {
        scrollTop: 0,
      },
      275,
      function () {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(window).trigger("scroll");
      }
    );
  },

  cancelCallbacks: {},

  cancelClicks: {},

  addCancelCallback: function (e, c) {
    this.cancelCallbacks[e] = c;
  },

  cancelOptionSelection: function (e, forced) {
    // Avoiding NaN
    handlers.cancelClicks[this] = handlers.cancelClicks[this] || 0;
    handlers.cancelCallbacks[this] = handlers.cancelCallbacks[this] || _ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.EF;

    handlers.cancelCallbacks[this]();
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(this)
      .parent()
      .slideUp(_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getAnimSpeed("slide_up"), _ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getAnimType("slide_up"))
      .parent()
      .removeClass("option-active");
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(this)
      .parent()
      .find(".admit-cancel")
      .slideUp(_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getAnimSpeed("slide_down"), _ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getAnimType("slide_down"));

    jquery__WEBPACK_IMPORTED_MODULE_0___default()("body").removeClass("delete-mode");

    e.stopPropagation();
  },

  onWindowResize: function () {
    _shared__WEBPACK_IMPORTED_MODULE_2__.temp.window_height = window.innerHeight;
    setPageScrollSize();

    if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(window).width() >= 1060) {
      jquery__WEBPACK_IMPORTED_MODULE_0___default()(".up-shortcut").show();
    } else {
      jquery__WEBPACK_IMPORTED_MODULE_0___default()(".up-shortcut").hide();
    }
  },

  sync: function (callback) {
    _particles_sync_syncUiModel__WEBPACK_IMPORTED_MODULE_4__["default"].sendSyncRequest(
      "syncHistory",
      function (is_success, add_rm_changes) {
        if (is_success && add_rm_changes) {
          _ui_components_loading__WEBPACK_IMPORTED_MODULE_5__.show();

          setTimeout(function () {
            callback();
          }, 250);
        }
      },
      _ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getLocale("Pro_SyncFeature"),
      jquery__WEBPACK_IMPORTED_MODULE_0___default()(".sync-button")
    );
  },
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (handlers);


/***/ }),

/***/ "./src/pages/history/particles/hist_list/hlModel.js":
/*!**********************************************************!*\
  !*** ./src/pages/history/particles/hist_list/hlModel.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_ext_util_selectorsUtil__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../src/ext/util/selectorsUtil */ "./src/ext/util/selectorsUtil.js");
/* harmony import */ var _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../src/ext/util/storageUtil */ "./src/ext/util/storageUtil.js");
/* harmony import */ var _src_ext_util_langUtil__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../src/ext/util/langUtil */ "./src/ext/util/langUtil.js");
/* harmony import */ var _src_ext_arr__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../src/ext/arr */ "./src/ext/arr.js");
/* harmony import */ var _src_lib_ga__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../src/lib/ga */ "./src/lib/ga.js");
/* harmony import */ var _src_lib_analytics__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../src/lib/analytics */ "./src/lib/analytics.js");
/* harmony import */ var _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../src/ext/kumquat_polyfill */ "./src/ext/kumquat_polyfill.js");
/* harmony import */ var _src_particles_listen_lModel__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../src/particles/listen/lModel */ "./src/particles/listen/lModel.js");
/* harmony import */ var _src_particles_3dots_button_3dotsModel__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../src/particles/3dots_button/3dotsModel */ "./src/particles/3dots_button/3dotsModel.js");
/* harmony import */ var _src_particles_3dots_button_3dotsView__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../src/particles/3dots_button/3dotsView */ "./src/particles/3dots_button/3dotsView.js");
/* harmony import */ var _hist_opt_delete_hodModel__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../hist_opt_delete/hodModel */ "./src/pages/history/particles/hist_opt_delete/hodModel.js");
/* harmony import */ var _hlView__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./hlView */ "./src/pages/history/particles/hist_list/hlView.js");
/* harmony import */ var _src_ui_components_pro_alert__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../src/ui_components/pro_alert */ "./src/ui_components/pro_alert.js");
/* harmony import */ var _src_ext_time__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../../src/ext/time */ "./src/ext/time.js");
/* harmony import */ var _src_ext_file__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../../src/ext/file */ "./src/ext/file.js");
/* harmony import */ var _shared__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../shared */ "./src/pages/history/shared.js");















// import { flags, temp, canPerformActions, initHistoryList } from "../../shared";







let prev_scroll_y = 0;

const historyListModel = {
  onItemMouseOver: function (e) {
    if (canPerformActions()) {
      //var id = ke.ext.util.selectorsUtil.getHistoryItemId(e.target);
      //$('.i-' + id).addClass('hovered');
    }
  },

  onItemMouseOut: function (e) {
    //var id = ke.ext.util.selectorsUtil.getHistoryItemId(e.target);
    //$('.i-' + id).removeClass('hovered');
  },

  prevScrollPos: 0,

  closeItemView: function () {
    jquery__WEBPACK_IMPORTED_MODULE_0___default()("body").removeClass("view-mode");

    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".expanded").hide();
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".list-view").show();

    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".back-button").hide();
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".list-view-buttons").show();

    jquery__WEBPACK_IMPORTED_MODULE_0___default()(window).scrollTop(historyListModel.prevScrollPos);
  },

  canPerformActions: function () {
    return !_shared__WEBPACK_IMPORTED_MODULE_16__.flags.isTickerWrapActive;
  },

  onItemClick: function (e, forced) {
    const id = _src_ext_util_selectorsUtil__WEBPACK_IMPORTED_MODULE_1__.getHistoryItemId(e.target);

    if (historyListModel.canPerformActions() || forced) {
      const s = ".i-" + id;

      historyListModel.prevScrollPos = jquery__WEBPACK_IMPORTED_MODULE_0___default()(window).scrollTop();
      jquery__WEBPACK_IMPORTED_MODULE_0___default()(window).scrollTop(0);

      jquery__WEBPACK_IMPORTED_MODULE_0___default()("body").addClass("view-mode");

      jquery__WEBPACK_IMPORTED_MODULE_0___default()(".list-view").hide();
      jquery__WEBPACK_IMPORTED_MODULE_0___default()(".expanded").html(jquery__WEBPACK_IMPORTED_MODULE_0___default()(s).html());
      jquery__WEBPACK_IMPORTED_MODULE_0___default()(".expanded").find(".selection-sliding-wrap").remove();
      jquery__WEBPACK_IMPORTED_MODULE_0___default()(".expanded").show();

      const from = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).data("from");
      const to = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).data("to");
      const $context = jquery__WEBPACK_IMPORTED_MODULE_0___default()(".expanded");

      _src_particles_listen_lModel__WEBPACK_IMPORTED_MODULE_8__["default"].ctrlHistoryOrigVisibility(null, from, $context);
      _src_particles_listen_lModel__WEBPACK_IMPORTED_MODULE_8__["default"].ctrlHistoryTransVisibility(null, to, $context);
      _src_particles_listen_lModel__WEBPACK_IMPORTED_MODULE_8__["default"].ctrlSynonymVis(null, to, $context);

      $context
        .find(".listen-selector")
        .on("click", _src_particles_listen_lModel__WEBPACK_IMPORTED_MODULE_8__["default"].playHistoryItem);
      $context
        .find(".listen-v-item")
        .on("click", _src_particles_listen_lModel__WEBPACK_IMPORTED_MODULE_8__["default"].playHistorySynonym);

      $context.find(".copy-button").on("click", _src_particles_3dots_button_3dotsModel__WEBPACK_IMPORTED_MODULE_9__["default"].copyMain);
      $context
        .find(".small-copy-button")
        .on("click", _src_particles_3dots_button_3dotsModel__WEBPACK_IMPORTED_MODULE_9__["default"].copySynonym);

      _src_particles_3dots_button_3dotsView__WEBPACK_IMPORTED_MODULE_10__["default"].fillContextMenuOnlyWithWordlists(
        $context.find(".add-to-pb-button"),
        from,
        to,
        id
      );

      _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_2__["default"].requestBackgroundOption(
        "isTrueOption",
        ["show_translit"],
        function (is_true) {
          if (
            is_true &&
            $context.find(".translit-row .translit-main").html() !== ""
          ) {
            $context.find(".translit-row").show();
          } else {
            $context.find(".translit-row").hide();
          }
        }
      );

      jquery__WEBPACK_IMPORTED_MODULE_0___default()(".list-view-buttons").hide();
      jquery__WEBPACK_IMPORTED_MODULE_0___default()(".back-button").show();
    } else if (_shared__WEBPACK_IMPORTED_MODULE_16__.flags.isTickerWrapActive) {
      _hist_opt_delete_hodModel__WEBPACK_IMPORTED_MODULE_11__["default"].onTickerClick.call(
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(".i-" + id)
          .find(".selection-ticker")
          .get(0),
        e,
        "item"
      );
    }
  },

  toggleListenWrap: function (id, forced) {
    let req = ".i-" + id;
    if (typeof id === "undefined") {
      req = ".history-list";
    }

    const is_active =
      jquery__WEBPACK_IMPORTED_MODULE_0___default()(req).find(".listen-sliding-wrap").hasClass("active-lsw") || forced;
    const sw = jquery__WEBPACK_IMPORTED_MODULE_0___default()(req).find(".listen-sliding-wrap").toggleClass("active-lsw");

    // Used only once on scroll loading
    sw.removeClass("invisible-sw");

    if (is_active) {
      sw.animate(
        {
          width: 0,
          opacity: 0,
        },
        _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_7__.ke.getAnimSpeed("slide_up") * 1.755,
        _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_7__.ke.getAnimType("slide_up"),
        function () {
          jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).fadeOut(1);
        }
      );
    } else {
      sw.animate(
        {
          width: 41,
          opacity: 1,
        },
        _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_7__.ke.getAnimSpeed("slide_up") * 1.255,
        _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_7__.ke.getAnimType("fast_slide_up"),
        function () {
          jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).fadeIn(1, _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_7__.ke.getAnimType("fade_out"));
        }
      );
    }
  },

  removeItemFromListById: function (id, callback) {
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".i-" + id)
      .prev()
      .removeClass("before-expanded");
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".i-" + id)
      .find(".main-variant-wrap")
      .slideUp(
        _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_7__.ke.getAnimSpeed("slide_up"),
        _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_7__.ke.getAnimType("slide_up"),
        function () {
          jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).parent().parent().remove();
          callback();
        }
      )
      .fadeOut(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_7__.ke.getAnimSpeed("fade_out"), _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_7__.ke.getAnimType("fade_out"));

    _src_ext_arr__WEBPACK_IMPORTED_MODULE_4__["default"]["delete"](temp.all_items, id);

    if (temp.all_items.length === 0) {
      historyListModel.fadeOutList();
    }
  },

  scrollTop: function () {
    jquery__WEBPACK_IMPORTED_MODULE_0___default()("html, body").animate({ scrollTop: 0 }, "fast");
  },

  onPageScroll: function () {
    const y = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).scrollTop();
    const max_y = jquery__WEBPACK_IMPORTED_MODULE_0___default()(document.body).prop("scrollHeight");

    if (y + window.innerHeight + 250 >= max_y) {
      historyListModel.showMoreItems(y);
    }

    let up_scroll = 15 - y;
    if (up_scroll < 0) {
      up_scroll = 0;
    }

    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".up-shortcut")
      .css({
        marginTop: up_scroll,
      })
      [(up_scroll === 0 ? "add" : "remove") + "Class"]("sticked-top");

    // When start showing the shortcut / starting at which offset at y axis
    const threshold = 50;

    if (y === 0) {
      jquery__WEBPACK_IMPORTED_MODULE_0___default()(".up-shortcut").fadeOut(
        _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_7__.ke.getAnimSpeed("fade_out") * 1.789,
        _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_7__.ke.getAnimType("fade_out")
      );
    } else if (
      (prev_scroll_y < threshold && y >= threshold) ||
      (y < threshold && prev_scroll_y >= threshold)
    ) {
      jquery__WEBPACK_IMPORTED_MODULE_0___default()(".up-shortcut")[y < threshold ? "fadeOut" : "fadeIn"](
        _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_7__.ke.getAnimSpeed("fade_out") * 1.789,
        _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_7__.ke.getAnimType("fade_out")
      );
    }

    historyListModel.onScrollingStateChange(y);
    prev_scroll_y = y;
  },

  onScrollingStateChange: function (y) {
    const start_pos = 65;
    //var scroll = scroll || ke.particles.scrollbars.model.getScrollInstance('page-scrollbar');
    let top, opacity;

    if (y >= start_pos && _shared__WEBPACK_IMPORTED_MODULE_16__.flags.isTickerWrapActive) {
      top = 0;
      opacity = 1;

      if (_shared__WEBPACK_IMPORTED_MODULE_16__.flags.quick_access_shown) return;
      else _shared__WEBPACK_IMPORTED_MODULE_16__.flags.quick_access_shown = true;
    } else if (
      !_shared__WEBPACK_IMPORTED_MODULE_16__.flags.isTickerWrapActive ||
      (_shared__WEBPACK_IMPORTED_MODULE_16__.flags.isTickerWrapActive && y < start_pos)
    ) {
      top = -59;
      opacity = 0;

      if (!_shared__WEBPACK_IMPORTED_MODULE_16__.flags.quick_access_shown) return;
      else _shared__WEBPACK_IMPORTED_MODULE_16__.flags.quick_access_shown = false;
    }

    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".quick-access-bar").animate(
      {
        top: top,
        opacity: opacity,
      },
      _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_7__.ke.getAnimSpeed("slide_down") * 2.25,
      _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_7__.ke.getAnimType("slide_down")
    );
  },

  showMoreItems: function (scrollTo) {
    const last_time = temp.item_times[temp.item_times.length - 1];

    if (!_shared__WEBPACK_IMPORTED_MODULE_16__.flags.is_searching && last_time) {
      _hlView__WEBPACK_IMPORTED_MODULE_12__["default"].populateHistoryList(
        function () {
          initHistoryList(true);
        },
        [_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_7__.ke.idb.UPPER_BOUND, "time", last_time],
        false
      );
    }
  },

  getListenValue: function (s) {
    const $where = jquery__WEBPACK_IMPORTED_MODULE_0___default()(".expanded");
    let text = "";

    if (s === "orig") {
      text = $where.find(".input-particle .text-part").text();
    } else if (s === "trans") {
      text = $where.find(".main-output-particle .tpart").text();

      if (!text) {
        text = $where.find(".main-output-particle .text-part").text();
      }
    }

    return text;
  },

  // Returns whether ec shown or not
  toggleListEndCap: function (locale) {
    const $ec = jquery__WEBPACK_IMPORTED_MODULE_0___default()(".ec-wrap");
    const $mb = jquery__WEBPACK_IMPORTED_MODULE_0___default()(".more-button");
    const $cw = jquery__WEBPACK_IMPORTED_MODULE_0___default()(".content-wrap");
    const $sl = jquery__WEBPACK_IMPORTED_MODULE_0___default()(".search-layout");

    if (temp.all_items.length > 0) {
      $sl.show();
      $cw.show();
      $mb.show();
      $ec.hide();

      return false;
    } else {
      $sl.hide();
      $cw.hide();
      $mb.hide();

      $ec.find(".ec-text").html(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_7__.ke.getLocale("History_Content_List_OnEmpty"));
      $ec.show();

      return true;
    }
  },

  fadeOutList: function () {
    this.toggleListEndCap("History_Content_List_OnEmpty");
  },

  // Ordinary clear of the list, without any effects
  clear: function () {
    temp.expanded = [];
    temp.selected = [];
    _shared__WEBPACK_IMPORTED_MODULE_16__.flags.all_loaded_cap_exists = false;

    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".history-list").empty();
  },

  downloadHistoryAsCSV: async function () {
    const $that = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this);

    if (!(await _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_7__.ke.isProUser())) {
      _src_ui_components_pro_alert__WEBPACK_IMPORTED_MODULE_13__["default"].show(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_7__.ke.getLocale("Pro_ExportFeature"), "history-export");
    } else {
      _src_lib_analytics__WEBPACK_IMPORTED_MODULE_6__["default"].fireEvent("history_export");
      // if (typeof ga != "undefined")
      //   ga("send", "event", "history", "export-history");

      $that.addClass("downloading");

      _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_7__.ke.idb["enum"](
        "it",
        "history",
        Number.MAX_VALUE,
        null,
        false,
        function (items) {
          const raw_rows = [
            [
              _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_7__.ke.getLocale("Csv_TimeDate"),
              _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_7__.ke.getLocale("Csv_FromLang"),
              _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_7__.ke.getLocale("Csv_IntoLang"),
              _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_7__.ke.getLocale("Csv_Input"),
              _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_7__.ke.getLocale("Csv_Translation"),
              _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_7__.ke.getLocale("Csv_Transliteration"),
              _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_7__.ke.getLocale("Csv_Synonyms"),
              _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_7__.ke.getLocale("Csv_WhereTranslated"),
            ],
          ];

          items.forEach(function (v) {
            const synonyms = [];
            const sources = [];

            v.it_resp[7].forEach(function (__) {
              __.forEach(function (sv) {
                synonyms.push(sv[0]);
              });
            });

            for (const key in v.sources) {
              sources.push(key);
            }

            raw_rows.push([
              '"' + _src_ext_time__WEBPACK_IMPORTED_MODULE_14__["default"].beautify(v.time) + '"',
              _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_7__.ke.getLocale(
                "Kernel_Lang_" + _src_ext_util_langUtil__WEBPACK_IMPORTED_MODULE_3__.getLangNameByKey(v.it_resp[5])
              ),
              _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_7__.ke.getLocale("Kernel_Lang_" + _src_ext_util_langUtil__WEBPACK_IMPORTED_MODULE_3__.getLangNameByKey(v.l_to)),
              '"' + v.input + '"',
              '"' + v.it_resp[3] + '"',
              '"' + v.it_resp[4] + '"',
              '"' + synonyms.join(", ") + '"',
              '"' + sources.join("\n") + '"',
            ]);
          });

          _src_ext_file__WEBPACK_IMPORTED_MODULE_15__["default"].downloadAsCSV(raw_rows, function () {
            $that.removeClass("downloading");
          });
        }
      );
    }
  },
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (historyListModel);


/***/ }),

/***/ "./src/pages/history/particles/hist_list/hlView.js":
/*!*********************************************************!*\
  !*** ./src/pages/history/particles/hist_list/hlView.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../src/ext/kumquat_polyfill */ "./src/ext/kumquat_polyfill.js");
/* harmony import */ var _src_ext_string__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../src/ext/string */ "./src/ext/string.js");
/* harmony import */ var _src_ext_tpl__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../src/ext/tpl */ "./src/ext/tpl.js");
/* harmony import */ var _src_ext_api__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../src/ext/api */ "./src/ext/api.js");
/* harmony import */ var _src_ext_util_langUtil__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../src/ext/util/langUtil */ "./src/ext/util/langUtil.js");
/* harmony import */ var _hlModel__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./hlModel */ "./src/pages/history/particles/hist_list/hlModel.js");
/* harmony import */ var _templates_historyListItem__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../templates/historyListItem */ "./src/pages/history/templates/historyListItem.js");
/* harmony import */ var _ext_time__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../ext/time */ "./src/ext/time.js");
/* harmony import */ var _ext_translate__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../ext/translate */ "./src/ext/translate.js");






// import { flags, temp } from "../../shared";







const historyListView = {
  populateHistoryList: function (
    callback,
    bounds,
    descending_order,
    no_retoggle
  ) {
    _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.idb.search(
      "it",
      "history",
      {
        pending_removal: false,
      },
      async function (items, idb_error) {
        if (!items && idb_error) {
          return;
        }

        historyListView.toggleEmptyHistoryCap();

        if (items.length > 0) {
          for (let i = 0; i < items.length; i++) {
            const item = items[i];
            await historyListView.drawHistoryItem(item, undefined, descending_order);
          }
        }
        callback(no_retoggle || false, items.length);
      },
      _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.idb.COMP_AND,
      bounds,
      50,
      descending_order,
      "time"
    );
  },

  drawHistoryItem: async function (item, hl, descending_order) {
    // console.log(item);

    if (~jquery__WEBPACK_IMPORTED_MODULE_0___default().inArray(item.time, temp.item_times)) {
      return;
    } else {
      temp.item_times[descending_order ? "unshift" : "push"](item.time);
    }

    let input = item.input;
    const json = item.it_resp;
    const output = await _ext_translate__WEBPACK_IMPORTED_MODULE_9__["default"].parseReceivedTranslation(json, true, "", false);
    const emptyVariants = output[0] ? "" : " " + "collapsed";
    const time = _ext_time__WEBPACK_IMPORTED_MODULE_8__["default"].beautify(item.time);

    // console.log( output );

    output[2] = output[2] || "";

    if (!output[0]) {
      output[2] = "";
      //output[1] = json[3];
    }

    if (typeof hl !== "undefined") {
      input = _src_ext_string__WEBPACK_IMPORTED_MODULE_2__["default"].highlight(input, hl);
      output[1] = _src_ext_string__WEBPACK_IMPORTED_MODULE_2__["default"].highlight(output[1], hl);
    }

    let add_info = "";
    if (item.sources) {
      const sources = item.sources;

      for (let source in sources) {
        let source_copy;

        if (source === "popup") {
          source_copy = _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("History_InPopup");
        } else if (source === "adev") {
          source_copy = _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("History_AnotherDevice");
        } else {
          source_copy =
            '<a class="source-link" href="' +
            source +
            '" target="_blank">' +
            decodeURI(source) +
            "</a>";
        }

        add_info +=
          '<div class="source-item"><div class="source">' +
          source_copy +
          '</div><div class="time-small">' +
          _ext_time__WEBPACK_IMPORTED_MODULE_8__["default"].beautify(sources[source]) +
          "</div></div>";
      }
    } else {
      add_info = '<div class="time">' + time + "</div>";
    }

    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".history-list")[descending_order ? "prepend" : "append"](
      _src_ext_tpl__WEBPACK_IMPORTED_MODULE_3__.compile((0,_templates_historyListItem__WEBPACK_IMPORTED_MODULE_7__["default"])(), {
        id: item.id,
        input: input,
        main_output: output[1],
        collapse_variants: emptyVariants,
        variants: _src_ext_tpl__WEBPACK_IMPORTED_MODULE_3__.compile(output[2], {
          from: item.l_from,
          to: item.l_to,
        }),
        sliding_wrap_visibility: !flags.isTickerWrapActive
          ? "invisible-sw"
          : "",
        listen_wrap_visibility:
          jquery__WEBPACK_IMPORTED_MODULE_0___default().inArray(item.id, temp.expanded) === -1 ? "invisible-sw" : "",
        selected: ~jquery__WEBPACK_IMPORTED_MODULE_0___default().inArray(item.id, temp.selected) ? "active-st" : "",
        from_lang: item.l_from,
        to_lang: item.l_to,
        translit_original: _src_ext_api__WEBPACK_IMPORTED_MODULE_4__.getSourceTranslitFromJson(json),
        translit_translation: _src_ext_api__WEBPACK_IMPORTED_MODULE_4__.getTargetTranslitFromJson(json),
        gender_original: json[8] ? json[8] : "",
        gender_translation: json[9] ? json[9] : "",
        time: time,
        sources: add_info,
        lang_from: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale(
          "Kernel_Lang_" + _src_ext_util_langUtil__WEBPACK_IMPORTED_MODULE_5__.getLangNameByKey(item.l_from)
        ),
        lang_to: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale(
          "Kernel_Lang_" + _src_ext_util_langUtil__WEBPACK_IMPORTED_MODULE_5__.getLangNameByKey(item.l_to)
        ),
      })
    );
  },

  toggleEmptyHistoryCap: function () {
    return _hlModel__WEBPACK_IMPORTED_MODULE_6__["default"].toggleListEndCap("History_Content_List_OnEmpty");
  },
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (historyListView);


/***/ }),

/***/ "./src/pages/history/particles/hist_opt_delete/hodModel.js":
/*!*****************************************************************!*\
  !*** ./src/pages/history/particles/hist_opt_delete/hodModel.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../src/ext/kumquat_polyfill */ "./src/ext/kumquat_polyfill.js");
/* harmony import */ var _hist_list_hlModel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../hist_list/hlModel */ "./src/pages/history/particles/hist_list/hlModel.js");
/* harmony import */ var _ext_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../ext/dom */ "./src/ext/dom.js");
/* harmony import */ var _hist_list_hlView__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../hist_list/hlView */ "./src/pages/history/particles/hist_list/hlView.js");
/* harmony import */ var _src_ext_cache__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../src/ext/cache */ "./src/ext/cache.js");
/* harmony import */ var _ext_arr__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../ext/arr */ "./src/ext/arr.js");
/* harmony import */ var _events__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../events */ "./src/pages/history/events.js");





// import { flags, temp } from "../../shared";





const i18n_deleteHeadline = _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("History_Options_Delete_AllHeadline");
const i18n_deleteProposal = _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("History_Options_Delete_AllProposal");
const i18n_deletePositive = _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("History_Options_Delete_AllPos");
const i18n_deleteNegative = _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("History_Options_Delete_AllNeg");

let currentOverElement;
let previousTickerClicked;

let firstToggleCall = true;

const isTicked = function (e) {
  return jquery__WEBPACK_IMPORTED_MODULE_0___default()(e).hasClass("active-st");
};

const tick = function (element, event) {
  if (!isTicked(element)) {
    historyOptsDeleteModel.onTickerClick.call(element, event);
  }
};

const untick = function (element, event) {
  if (isTicked(element)) {
    historyOptsDeleteModel.onTickerClick.call(element, event);
  }
};

const historyOptsDeleteModel = {
  onClearHistoryClick: function () {
    // TODO: can't find the definition of ke.ui.tooltip.confirm.ask
    _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.ui.tooltip.confirm.ask(
      [
        i18n_deleteHeadline,
        i18n_deleteProposal,
        i18n_deletePositive,
        i18n_deleteNegative,
      ],
      function (f) {
        if (f) {
          _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.idb.clear("it", "history", function () {
            _hist_list_hlModel__WEBPACK_IMPORTED_MODULE_2__["default"].fadeOutList();
          });
        }
      }
    );
  },

  onDeleteSelectionClick: function () {
    jquery__WEBPACK_IMPORTED_MODULE_0___default()("body").toggleClass("delete-mode");
    historyOptsDeleteModel.toggleSlidingWrap();
  },

  onTickerClick: function (e, exact_tick) {
    currentOverElement = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).find(".box").get();
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).toggleClass("active-st");

    let id = +jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).data("id");
    let added = false;

    if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).hasClass("active-st")) {
      _ext_arr__WEBPACK_IMPORTED_MODULE_6__["default"].pushUnique(temp.selected, id);
      added = true;
    } else {
      _ext_arr__WEBPACK_IMPORTED_MODULE_6__["default"]["delete"](temp.selected, id);
    }

    if (e !== null && e.stopPropagation) e.stopPropagation();

    if (previousTickerClicked !== null && flags.isShiftDown) {
      const that = this;
      let elements = [];

      let forthDirection =
        +jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).data("id") < +jquery__WEBPACK_IMPORTED_MODULE_0___default()(previousTickerClicked).data("id");
      let canAdd = false;

      jquery__WEBPACK_IMPORTED_MODULE_0___default()(".selection-ticker").each(function () {
        if (!forthDirection) {
          if (this.isEqualNode(that)) {
            canAdd = true;
            return;
          } else if (this.isEqualNode(previousTickerClicked)) {
            canAdd = false;
          }
        } else {
          if (this.isEqualNode(previousTickerClicked)) {
            canAdd = true;
            return;
          } else if (this.isEqualNode(that)) {
            canAdd = false;
          }
        }

        if (canAdd) {
          elements.push(this);
        }
      });

      jquery__WEBPACK_IMPORTED_MODULE_0___default().each(elements, function () {
        tick(this, e);
      });
    }

    previousTickerClicked = added ? this : null;

    historyOptsDeleteModel.updateAmountBadge();
  },

  toggleSlidingWrap: function () {
    flags.isTickerWrapActive = !flags.isTickerWrapActive;

    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".history-list").toggleClass("i-hoverable");

    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".selection-sliding-wrap").each(function () {
      if (_ext_dom__WEBPACK_IMPORTED_MODULE_3__["default"].isVisible(this)) {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).animate(
          { width: 0 + (flags.isTickerWrapActive ? 28 + 24 : 0) },
          _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getAnimSpeed("fast_slide_up") /
            (firstToggleCall ? _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getAnimSpeed("fast_slide_up") : 1),
          _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getAnimType("fast_slide_up"),
          function () {
            jquery__WEBPACK_IMPORTED_MODULE_0___default()(this)["fade" + (flags.isTickerWrapActive ? "In" : "Out")](
              _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getAnimSpeed("fade_out"),
              _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getAnimType("fade_out"),
              function () {}
            );
          }
        );
      } else {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).css({
          width: 0 + (flags.isTickerWrapActive ? 28 + 24 : 0),
          display: "none",
        });
      }
    });

    if (flags.isTickerWrapActive) {
      _events__WEBPACK_IMPORTED_MODULE_7__["default"].onDownFastSelection();
      jquery__WEBPACK_IMPORTED_MODULE_0___default()(".selection-sliding-wrap").removeClass("invisible-sw");
    }

    firstToggleCall = false;
  },

  //
  // Not available temporarily
  registerMouseMoving: function (e) {
    if (
      jquery__WEBPACK_IMPORTED_MODULE_0___default()(e.target).hasClass("box") &&
      !flags.isShiftDown &&
      flags.isMouseDown &&
      !e.target.isEqualNode(currentOverElement)
    ) {
      currentOverElement = e.target;
      //tick($(e.target).parent(2).get(), e);
    }
  },

  selectAll: function () {
    console.time("select");
    temp.selected = _ext_arr__WEBPACK_IMPORTED_MODULE_6__["default"].clone(temp.all_items);
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".selection-ticker").each(function () {
      tick(this, null);
    });
    console.timeEnd("select");
  },

  deselectAll: function () {
    console.time("deselect");
    temp.selected = [];
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".selection-ticker").each(function () {
      untick(this, null);
    });
    console.timeEnd("deselect");
  },

  deleteSelected: function () {
    _src_ext_cache__WEBPACK_IMPORTED_MODULE_5__.deleteFewByIdOnClient(temp.selected, function (success) {
      if (success) {
        temp.selected.forEach(function (v) {
          _hist_list_hlModel__WEBPACK_IMPORTED_MODULE_2__["default"].removeItemFromListById(
            v,
            _hist_list_hlView__WEBPACK_IMPORTED_MODULE_4__["default"].toggleEmptyHistoryCap
          );
        });

        temp.selected = [];
        historyOptsDeleteModel.updateAmountBadge();
        //ke.particles.hist_list.view.toggleEmptyHistoryCap();
        historyOptsDeleteModel.onDeleteSelectionClick();
      }
    });
  },

  updateAmountBadge: function () {
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".to-delete-label").html(temp.selected.length);
  },

  // Using `event` instead of `e` starting from now?
  qaCancel: function (event) {
    //ke.app.handlers.cancelOptionSelection.call($('.selection-cancel').get(), event, true);

    _hist_list_hlModel__WEBPACK_IMPORTED_MODULE_2__["default"].onScrollingStateChange();
  },
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (historyOptsDeleteModel);


/***/ }),

/***/ "./src/pages/history/particles/hist_search/hsModel.js":
/*!************************************************************!*\
  !*** ./src/pages/history/particles/hist_search/hsModel.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../src/ext/kumquat_polyfill */ "./src/ext/kumquat_polyfill.js");
/* harmony import */ var _src_ext_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../src/ext/string */ "./src/ext/string.js");
/* harmony import */ var _src_lib_analytics__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../src/lib/analytics */ "./src/lib/analytics.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _lib_ga__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../lib/ga */ "./src/lib/ga.js");
/* harmony import */ var _src_pages_history_particles_hist_list_hlView__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../src/pages/history/particles/hist_list/hlView */ "./src/pages/history/particles/hist_list/hlView.js");
/* harmony import */ var _src_pages_history_particles_hist_list_hlModel__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../src/pages/history/particles/hist_list/hlModel */ "./src/pages/history/particles/hist_list/hlModel.js");
/* harmony import */ var _src_pages_history_particles_hist_opt_delete_hodModel__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../src/pages/history/particles/hist_opt_delete/hodModel */ "./src/pages/history/particles/hist_opt_delete/hodModel.js");
/* harmony import */ var _src_pages_history_particles_hist_search_hsView__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../src/pages/history/particles/hist_search/hsView */ "./src/pages/history/particles/hist_search/hsView.js");













// import { initHistoryList } from "../../shared";

let SEARCH_TIMEOUT;
let PREV_VAL;

const historySearchModel = {
  toggleClearTick: function () {
    const val = jquery__WEBPACK_IMPORTED_MODULE_3___default()(".search-input").val();
    jquery__WEBPACK_IMPORTED_MODULE_3___default()(".clear-input-tick")[lodash__WEBPACK_IMPORTED_MODULE_4___default().isEmpty(val) ? "hide" : "show"]();
  },

  onClearTickClick: function () {
    jquery__WEBPACK_IMPORTED_MODULE_3___default()(".search-input").val("");
    historySearchModel.toggleClearTick();
    historySearchModel.execSearch();
  },

  onSearchKeyRelease: function () {
    historySearchModel.toggleClearTick();

    SEARCH_TIMEOUT = setTimeout(function () {
      clearTimeout(SEARCH_TIMEOUT);
      historySearchModel.execSearch();
    }, 725);
  },

  execSearch: function () {
    flags.is_searching = true;
    temp.item_times = [];
    temp.selected = [];

    _src_pages_history_particles_hist_opt_delete_hodModel__WEBPACK_IMPORTED_MODULE_8__["default"].updateAmountBadge();

    const val = jquery__WEBPACK_IMPORTED_MODULE_3___default()(".search-input").val();

    if (val === PREV_VAL) {
      return;
    } else {
      PREV_VAL = val;
    }

    if (lodash__WEBPACK_IMPORTED_MODULE_4___default().isEmpty(val)) {
      flags.is_searching = false;
      _src_pages_history_particles_hist_list_hlModel__WEBPACK_IMPORTED_MODULE_7__["default"].clear();
      jquery__WEBPACK_IMPORTED_MODULE_3___default()(".history-list").show();
      _src_pages_history_particles_hist_list_hlView__WEBPACK_IMPORTED_MODULE_6__["default"].populateHistoryList(
        function () {
          initHistoryList(true);
          //historyListModel.collapseAll();
          if (!_src_pages_history_particles_hist_list_hlView__WEBPACK_IMPORTED_MODULE_6__["default"].toggleEmptyHistoryCap()) {
            _src_pages_history_particles_hist_search_hsView__WEBPACK_IMPORTED_MODULE_9__["default"].toggleNotFoundCap();
          }
        },
        null,
        false
      );

      return;
    }

    // if (typeof ga != "undefined") ga("send", "event", "history", "search");
    _src_lib_analytics__WEBPACK_IMPORTED_MODULE_2__["default"].fireEvent("history_search");

    if (temp.all_items.length > 250) {
      _src_lib_analytics__WEBPACK_IMPORTED_MODULE_2__["default"].fireEvent("history_search_too_large");
      // if (typeof ga != "undefined")
      //   ga("send", "event", "history", "search-too-large");
      // return;
    }

    _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.idb.search(
      "it",
      "history",
      {
        input: val,
        it_resp: function (it_resp) {
          const main = it_resp[3].indexOf(val) > -1;
          let synonyms = false;

          o: for (let i = 0; i < it_resp[6].length; ++i) {
            for (let j = 0; j < it_resp[6][i]; ++j) {
              if (it_resp[6][i][j][0].indexOf(val) > -1) {
                synonyms = true;
                break o;
              }
            }
          }

          return main || synonyms;
        },
      },
      function (items) {
        const len = items.length;

        if (len > 0) {
          _src_pages_history_particles_hist_list_hlModel__WEBPACK_IMPORTED_MODULE_7__["default"].clear();
          for (let i = 0; i < len; ++i) {
            _src_pages_history_particles_hist_list_hlView__WEBPACK_IMPORTED_MODULE_6__["default"].drawHistoryItem(items[i], val);
          }

          jquery__WEBPACK_IMPORTED_MODULE_3___default()(".v-item div").each(function () {
            if (
              !jquery__WEBPACK_IMPORTED_MODULE_3___default()(this).hasClass("translit-pos") &&
              !jquery__WEBPACK_IMPORTED_MODULE_3___default()(this).hasClass("translit-main")
            ) {
              jquery__WEBPACK_IMPORTED_MODULE_3___default()(this).html(_src_ext_string__WEBPACK_IMPORTED_MODULE_1__["default"].highlight(jquery__WEBPACK_IMPORTED_MODULE_3___default()(this).text(), val));
            }
          });
        } else {
          _src_pages_history_particles_hist_list_hlModel__WEBPACK_IMPORTED_MODULE_7__["default"].clear();
          _src_pages_history_particles_hist_search_hsView__WEBPACK_IMPORTED_MODULE_9__["default"].toggleNotFoundCap();
        }

        setTimeout(function () {
          initHistoryList(true);
        }, 15);
      },
      _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.idb.COMP_AND,
      null,
      100,
      false,
      "time"
    );
  },
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (historySearchModel);


/***/ }),

/***/ "./src/pages/history/particles/hist_search/hsView.js":
/*!***********************************************************!*\
  !*** ./src/pages/history/particles/hist_search/hsView.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _hist_list_hlModel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../hist_list/hlModel */ "./src/pages/history/particles/hist_list/hlModel.js");


const historySearchView = {
  toggleNotFoundCap: function () {
    _hist_list_hlModel__WEBPACK_IMPORTED_MODULE_0__["default"].toggleListEndCap("History_Content_List_OnFindFailure");
  },
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (historySearchView);


/***/ }),

/***/ "./src/pages/history/shared.js":
/*!*************************************!*\
  !*** ./src/pages/history/shared.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "$chars_used": () => (/* binding */ $chars_used),
/* harmony export */   "$email_layout": () => (/* binding */ $email_layout),
/* harmony export */   "$input": () => (/* binding */ $input),
/* harmony export */   "$main_wrap": () => (/* binding */ $main_wrap),
/* harmony export */   "$no_results": () => (/* binding */ $no_results),
/* harmony export */   "$stt_button": () => (/* binding */ $stt_button),
/* harmony export */   "callbacksInitialization": () => (/* binding */ callbacksInitialization),
/* harmony export */   "canPerformActions": () => (/* binding */ canPerformActions),
/* harmony export */   "flags": () => (/* binding */ flags),
/* harmony export */   "getCountry": () => (/* binding */ getCountry),
/* harmony export */   "initHistoryList": () => (/* binding */ initHistoryList),
/* harmony export */   "prevInput": () => (/* binding */ prevInput),
/* harmony export */   "siriWave": () => (/* binding */ siriWave),
/* harmony export */   "temp": () => (/* binding */ temp),
/* harmony export */   "translation_link": () => (/* binding */ translation_link),
/* harmony export */   "tts_link": () => (/* binding */ tts_link)
/* harmony export */ });
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _particles_hist_opt_delete_hodModel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./particles/hist_opt_delete/hodModel */ "./src/pages/history/particles/hist_opt_delete/hodModel.js");
/* harmony import */ var _handlers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./handlers */ "./src/pages/history/handlers.js");
/* harmony import */ var _events__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./events */ "./src/pages/history/events.js");






const temp = {
  window_height: 0,

  all_items: [],
  expanded: [],
  item_ids: [],
  item_times: [],
  selected: [],

  pro_block_test: null,
};

const flags = {
  is_searching: false,
  quick_access_shown: false,
  delete_mode: false,
  all_loaded_cap_exists: false,
  isPlayingTrans: false,
  isPlayingOriginal: false,
  isTickerWrapActive: true,
  isMouseDown: false,
  isShiftDown: false,
  pro: false,
};

const canPerformActions = function () {
  return !flags.isTickerWrapActive;
};

const prevInput = "";
const $chars_used = jquery__WEBPACK_IMPORTED_MODULE_0___default()(".used-chars");
const $input = jquery__WEBPACK_IMPORTED_MODULE_0___default()(".translation-input");
const $main_wrap = jquery__WEBPACK_IMPORTED_MODULE_0___default()("#main-wrap");
const siriWave = null;
const $stt_button = jquery__WEBPACK_IMPORTED_MODULE_0___default()(".toggle-stt");
const $email_layout = jquery__WEBPACK_IMPORTED_MODULE_0___default()(".email-layout");
const $no_results = jquery__WEBPACK_IMPORTED_MODULE_0___default()(".no-results-cap");

// It will initialized directly from binding functions
const callbacksInitialization = {};

const tts_link = (function () {
  const isHttps = window.location.protocol === "https:";
  return (
    (isHttps ? "https" : "http") +
    "://translate.google.com/translate_tts?ie=UTF-8&q={{text}}&tl={{lang}}&total={{textparts}}&idx=0&textlen={{textlen}}&client=dict-chrome-ex&prev=input&ttsspeed={{dictation_speed}}"
  );
})();

const translation_link = "";

const getCountry = function () {
  return "com";
};

function initHistoryList(noRetoggle) {
  jquery__WEBPACK_IMPORTED_MODULE_0___default()(".listen-layout").remove();

  _events__WEBPACK_IMPORTED_MODULE_3__["default"].onItemMouseOver();
  _events__WEBPACK_IMPORTED_MODULE_3__["default"].onItemMouseOut();
  _events__WEBPACK_IMPORTED_MODULE_3__["default"].onItemClick();
  _events__WEBPACK_IMPORTED_MODULE_3__["default"].onDeleteClick();
  _events__WEBPACK_IMPORTED_MODULE_3__["default"].onTickerClick();

  if (!noRetoggle) {
    _particles_hist_opt_delete_hodModel__WEBPACK_IMPORTED_MODULE_1__["default"].toggleSlidingWrap(flags, _events__WEBPACK_IMPORTED_MODULE_3__["default"]);
  }

  _events__WEBPACK_IMPORTED_MODULE_3__["default"].onWindowResize();
  _handlers__WEBPACK_IMPORTED_MODULE_2__["default"].onWindowResize();
}


/***/ }),

/***/ "./src/pages/history/templates/historyListItem.js":
/*!********************************************************!*\
  !*** ./src/pages/history/templates/historyListItem.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const historyListItem = () => {
  return '\
        <div class="history-item-wrap i-<%=id%>" data-id="<%=id%>" data-from="<%=from_lang%>" data-to="<%=to_lang%>">\
          <div class="inner-item-layout">\
            \
            <div class="main-variant-wrap">\
              <div class="selection-sliding-wrap <%=sliding_wrap_visibility%>">\
                <div class="selection-ticker st-<%=id%> <%=selected%>" data-id="<%=id%>">\
                  <div class="box-wrap">\
                    <div class="box b-<%=id%>"></div>\
                  </div>\
                </div>\
              </div>\
              <div class="the-translation">\
                <div class="particle input-particle" data-langfrom="<%=from_lang%>">\
                    <div class="lang lang-from"><%=lang_from%></div>\
                    <div class="text-part"><%=gender_original%><%=input%></div>\
                    <div class="original-ipa ipa"><%=translit_original%></div>\
                    <div class="buttons">\
                      <div class="add-to-pb-button"></div>\
                      <div class="copy-button copy-original"></div>\
                      <div class="listen-selector listen-butt0n lo-<%=id%> listen-original"></div>\
                    </div>\
                </div>\
                <div class="particle main-output-particle" data-langto="<%=to_lang%>">\
                    <div class="lang lang-to"><%=lang_to%></div>\
                    <div class="text-part"><%=gender_translation%><%=main_output%></div>\
                    <div class="translation-ipa ipa"><%=translit_translation%></div>\
                    <div class="buttons">\
                      <div class="copy-button copy-translation"></div>\
                      <div class="listen-selector listen-butt0n lo-<%=id%> listen-translation"></div>\
                    </div>\
                </div>\
              </div>\
              \
              <div class="action-buttons">\
                <div class="ab ab-delete"></div>\
              </div>\
            </div>\
            \
            <div class="variants-wrap<%=collapse_variants%>"><%=variants%></div>\
            \
            <div class="additional-info-wrap">\
              <div class="times-and-sources"><%=sources%></div>\
            </div>\
            \
          </div>\
        </div>\
      ';
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (historyListItem);


/***/ }),

/***/ "./src/pages/pdf_tooltip/handlers.js":
/*!*******************************************!*\
  !*** ./src/pages/pdf_tooltip/handlers.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _src_templates_translationTooltipTemplate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../src/templates/translationTooltipTemplate.js */ "./src/templates/translationTooltipTemplate.js");
/* harmony import */ var _src_particles_translate_ctt_tcModel_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../src/particles/translate_ctt/tcModel.js */ "./src/particles/translate_ctt/tcModel.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../src/ext/kumquat_polyfill */ "./src/ext/kumquat_polyfill.js");
/* harmony import */ var _src_ext_tpl__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../src/ext/tpl */ "./src/ext/tpl.js");
/* harmony import */ var _shared__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./shared */ "./src/pages/pdf_tooltip/shared.js");










const handlers = {
  getListenValue: function (s) {
    if (s === 'orig') {
      return _src_particles_translate_ctt_tcModel_js__WEBPACK_IMPORTED_MODULE_1__["default"].getCurrentSelectedText();
    } else if (s === 'trans') {
      if (_shared__WEBPACK_IMPORTED_MODULE_5__.flags.isCurrentTranslationMulti) {
        return jquery__WEBPACK_IMPORTED_MODULE_2___default()(
          '.' +
            _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getPrefix() +
            'main-variant .' +
            _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getPrefix() +
            'mv-text-part'
        ).text();
      } else {
        return jquery__WEBPACK_IMPORTED_MODULE_2___default()(
          '.' +
            _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getPrefix() +
            'padded-single-translation .' +
            _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getPrefix() +
            'tpart'
        ).text();
      }
    }

    return '';
  },

  onResize: function () {
    window.resizeTo(337, 300);
  },

  reverseTranslation: function (event) {
    chrome.runtime.sendMessage({
      action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.processCall('app', 'opt', 'newTab'),
      url: chrome.runtime.getURL('options.html#3,tooltip'),
    });

    chrome.runtime.sendMessage({
      action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.processCall('app', 'commands', 'sendAnalyticsEvent'),
      cat: 'pdf',
      event: 'change-langs',
    });

    window.close();
  },
  showTranslation: function (is_offline, data) {
    if (is_offline) {
      jquery__WEBPACK_IMPORTED_MODULE_2___default()('.' + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getPrefix() + 'offline')['show']();
      return;
    }

    // console.log('data', data);

    jquery__WEBPACK_IMPORTED_MODULE_2___default()('body')
      .html(
        _src_ext_tpl__WEBPACK_IMPORTED_MODULE_4__.compile(_src_templates_translationTooltipTemplate_js__WEBPACK_IMPORTED_MODULE_0__["default"], {
          prefix: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getPrefix(),
          content: data.code,
          ttid: data.old_data.id,
          // l_human: ke.getLocale('Human_OrderButton'),
          // l_open: ke.getLocale('Kernel_OpenGt'),
          // l_reversed: ke.getLocale('Kernel_Reverse'),
          // l_original: ke.getLocale('Kernel_Original'),
          // l_highlight: ke.getLocale('Kernel_Highlight')
          lang_search: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getLocale('Kernel_SearchPlaceholder'),
          l_human: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getLocale('Human_OrderButton'),
          l_original: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getLocale('Kernel_Original'),
          l_open: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getLocale('Kernel_OpenGt'),
          l_reversed: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getLocale('Kernel_Reverse'),
          l_unpin: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getLocale('Kernel_Unpin'),
          l_highlight: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getLocale('Kernel_Highlight'),
          l_loading: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getLocale('Kernel_Loading'),
          l_offline: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getLocale('Window_Offline'),
          title_highlight_button: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getLocale('Tooltip_Highlight'),
          title_open_link: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getLocale('Tootip_OpenLink'),
          title_listen_original: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getLocale('Tooltip_ListenOriginal'),
          title_show_reversed: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getLocale('Tooltip_ShowReversed'),
          title_unpin: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getLocale('Tooltip_Unpin'),
          ti_localized: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getLocale('There_Is_Localised_Site'),
          ti_localized_desc: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getLocale('There_Is_Localised_Site_Desc'),
          title_settings: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getLocale('Kernel_SettingsTitle'),
          dd_localized: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getLocale('Tooltip_DisableDoubleClick'),
          dd_localized_desc: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getLocale('Tooltip_DisableDoubleClickDesc'),
          sel_localized: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getLocale('Tooltip_DisableSelection'),
          sel_localized_desc: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getLocale('Tooltip_DisableSelectionDesc'),
          upgrade_to_pro: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getLocale('Window_ProBannerAds')
            .replace('.', '')
            .replace('。', ''),
          netflix_save: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getLocale('Pb_SaveButton'),
          netflix_continue: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getLocale('Login_Continue'),
        })
      )
      .addClass(`${_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getPrefix()}tooltip-main-wrap force-visible`);

    // $('.' + ke.getPrefix() + 'unpin').remove();
    jquery__WEBPACK_IMPORTED_MODULE_2___default()('.' + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getPrefix() + 'utils').remove();
    jquery__WEBPACK_IMPORTED_MODULE_2___default()('.' + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getPrefix() + 'hsw-' + data.old_data.id).addClass(
      _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getPrefix() + 'tooltip-' + data.old_data.id
    );
    jquery__WEBPACK_IMPORTED_MODULE_2___default()('.' + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getPrefix() + 'listen-original').attr(
      'data-from',
      data.from === 'auto' ? data.detected_lang : data.from
    );

    _src_particles_translate_ctt_tcModel_js__WEBPACK_IMPORTED_MODULE_1__["default"].display(is_offline, data, true);
  },

  settings: function () {
    chrome.runtime.sendMessage({
      action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.processCall('app', 'opt', 'newTab'),
      url: chrome.runtime.getURL('options.html#3,pdf'),
    });

    chrome.runtime.sendMessage({
      action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.processCall('app', 'commands', 'sendAnalyticsEvent'),
      cat: 'pdf',
      event: 'settings',
    });
  },
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (handlers);


/***/ }),

/***/ "./src/pages/pdf_tooltip/shared.js":
/*!*****************************************!*\
  !*** ./src/pages/pdf_tooltip/shared.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "callbacksInitialization": () => (/* binding */ callbacksInitialization),
/* harmony export */   "flags": () => (/* binding */ flags),
/* harmony export */   "lastTranslationCallArgs": () => (/* binding */ lastTranslationCallArgs),
/* harmony export */   "temp": () => (/* binding */ temp)
/* harmony export */ });
const callbacksInitialization = {};

const flags = {
  isCurrentTranslationMulti: false,
  isTranslating: false,
};

const temp = {
  currentDetectedLang: "",
  scale: 1.0,
};

const lastTranslationCallArgs = {};


/***/ }),

/***/ "./src/pages/tour/shared.js":
/*!**********************************!*\
  !*** ./src/pages/tour/shared.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "showProLayout": () => (/* binding */ showProLayout)
/* harmony export */ });
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);


function showProLayout() {
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".pro-upgrade-pitch").hide();
    // $(".cbm-4 .buttons-layout").hide();
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".pro-upgrade-message").removeClass("no-display");
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".pro-upgrade-message .pro-layout").show();
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".cbm-4").css("justify-content", "center");
}

/***/ }),

/***/ "./src/pages/window/shared.js":
/*!************************************!*\
  !*** ./src/pages/window/shared.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "$chars_used": () => (/* binding */ $chars_used),
/* harmony export */   "$contentWrap": () => (/* binding */ $contentWrap),
/* harmony export */   "$email_layout": () => (/* binding */ $email_layout),
/* harmony export */   "$input": () => (/* binding */ $input),
/* harmony export */   "$main_wrap": () => (/* binding */ $main_wrap),
/* harmony export */   "$no_results": () => (/* binding */ $no_results),
/* harmony export */   "$stt_button": () => (/* binding */ $stt_button),
/* harmony export */   "SHORTCUTS": () => (/* binding */ SHORTCUTS),
/* harmony export */   "callbacksInitialization": () => (/* binding */ callbacksInitialization),
/* harmony export */   "flags": () => (/* binding */ flags),
/* harmony export */   "getCountry": () => (/* binding */ getCountry),
/* harmony export */   "getCurrentFromLang": () => (/* binding */ getCurrentFromLang),
/* harmony export */   "initSiriWave": () => (/* binding */ initSiriWave),
/* harmony export */   "prevInput": () => (/* binding */ prevInput),
/* harmony export */   "siriWave": () => (/* binding */ siriWave),
/* harmony export */   "temp": () => (/* binding */ temp),
/* harmony export */   "translation_link": () => (/* binding */ translation_link),
/* harmony export */   "tts_link": () => (/* binding */ tts_link)
/* harmony export */ });
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _ext_util_langUtil__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../ext/util/langUtil */ "./src/ext/util/langUtil.js");
/* harmony import */ var _lib_siriwave__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../lib/siriwave */ "./src/lib/siriwave.js");




const temp = {
  currentDetectedLang: "",
  valueBeforeAutocorrection: "",
  account_token: "",
  current_ad: {},

  // compatibility with buggy FF
  prev_window_size: {
    w: null,
    h: null,
  },

  pro_block_test: null,
};

const SHORTCUTS = {
  SEL_FROM: "ctrl+alt",
  SEL_TO: "ctrl+space",
  CLEAR: "alt+c",
  SWAP: "alt+s",
  LISTEN_RAW: "alt+q",
  LISTEN_TRANS: "alt+a",
};

// Will be extended on init
const flags = {
  isPrevTranslationMulti: false,
  isCurrentTranslationMulti: false,
  rawUtterancePermission: false,
  transUterrancePermission: false,

  isTranslating: false,
  isPlayingRaw: false,
  isPlayingTrans: false,
  shortcutsProceeding: false,
  isAutocorrected: false,

  clearFadedOut: false,

  forceShowKeysSettingTooltip: false,

  shownTSL: false,
  isNarrow: false,

  shouldHideSttButtonAfterEnd: false,

  pro: false,
};

async function getCurrentFromLang() {
  return (await _ext_util_langUtil__WEBPACK_IMPORTED_MODULE_1__.getFromLang()) === "auto"
    ? temp.currentDetectedLang
    : _ext_util_langUtil__WEBPACK_IMPORTED_MODULE_1__.getFromLang();
}

let prevInput = "";
const $chars_used = jquery__WEBPACK_IMPORTED_MODULE_0___default()(".used-chars");
const $input = jquery__WEBPACK_IMPORTED_MODULE_0___default()(".translation-input");
const $main_wrap = jquery__WEBPACK_IMPORTED_MODULE_0___default()("#main-wrap");
let siriWave = null;

const $contentWrap = jquery__WEBPACK_IMPORTED_MODULE_0___default()("#main-wrap .content-wrap");

const $stt_button = jquery__WEBPACK_IMPORTED_MODULE_0___default()(".toggle-stt");
const $email_layout = jquery__WEBPACK_IMPORTED_MODULE_0___default()(".email-layout");
const $no_results = jquery__WEBPACK_IMPORTED_MODULE_0___default()(".no-results-cap");

// It will initialized directly from binding functions
const callbacksInitialization = {};

const tts_link = (function () {
  const isHttps = window.location.protocol === "https:";
  return (
    (isHttps ? "https" : "http") +
    "://translate.google.com/translate_tts?ie=UTF-8&q={{text}}&tl={{lang}}&total={{textparts}}&idx=0&textlen={{textlen}}&client=dict-chrome-ex&prev=input&ttsspeed={{dictation_speed}}"
  );
})();
let translation_link = "";

const getCountry = function () {
  return "com";
};

function initSiriWave() {
  siriWave = new _lib_siriwave__WEBPACK_IMPORTED_MODULE_2__["default"]({
    container: jquery__WEBPACK_IMPORTED_MODULE_0___default()(".stt-layout").get(0),
    width: 249,
    height: 19,
    speed: 0.1,
    color: "#01E9AF",
    amplitude: 0,
  });
}


/***/ }),

/***/ "./src/pages/window/ui_views/empty_trans_states.js":
/*!*********************************************************!*\
  !*** ./src/pages/window/ui_views/empty_trans_states.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../src/ext/kumquat_polyfill */ "./src/ext/kumquat_polyfill.js");
/* harmony import */ var _src_particles_scrollbars_sModel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../src/particles/scrollbars/sModel */ "./src/particles/scrollbars/sModel.js");
/* harmony import */ var _shared__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../shared */ "./src/pages/window/shared.js");






const S_CONTENT = ".right-part-content-wrap";
const S_TRANS = ".translation-layout";
const S_CAP = ".translation-empty-cap";

const empty_trans_states = {
  displayEmptiness: function () {
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(S_CAP).show();

    //if (!flags.instant) $('.translate-button').fadeOut(300, 'easeOutCubic');
    //$('.listen-raw-button').fadeOut(300, 'easeOutCubic');

    jquery__WEBPACK_IMPORTED_MODULE_0___default()(S_CONTENT).fadeOut(
      _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getAnimSpeed("fast_fade_out") / 1.75,
      _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getAnimType("fast_fade_out"),
      function () {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(S_TRANS).empty();

        _src_particles_scrollbars_sModel__WEBPACK_IMPORTED_MODULE_2__["default"].setupTranslationScroll();
      }
    );

    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".clear-input").fadeOut(
      _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getAnimSpeed("fade_out"),
      _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getAnimType("fade_out")
    );

    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".original-article").slideUp(125);
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".translation-input").removeClass("with-article");

    _shared__WEBPACK_IMPORTED_MODULE_3__.flags.clearFadedOut = true;
  },

  displayWorkaround: function () {
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(S_CAP).hide();

    //if (!flags.instant) $('.translate-button').fadeIn(300, 'easeOutCubic');
    //$('.listen-raw-button').fadeIn(300, 'easeOutCubic');

    jquery__WEBPACK_IMPORTED_MODULE_0___default()(S_CONTENT).fadeIn(
      _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getAnimSpeed("fade_out"),
      _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getAnimType("fade_out")
    );
  },
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (empty_trans_states);


/***/ }),

/***/ "./src/particles/3dots_button/3dotsModel.js":
/*!**************************************************!*\
  !*** ./src/particles/3dots_button/3dotsModel.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../src/ext/kumquat_polyfill */ "./src/ext/kumquat_polyfill.js");
/* harmony import */ var _src_particles_listen_lModel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../src/particles/listen/lModel */ "./src/particles/listen/lModel.js");
/* harmony import */ var _src_ui_components_notifications__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../src/ui_components/notifications */ "./src/ui_components/notifications.js");
/* harmony import */ var _src_particles_3dots_button_3dotsView__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../src/particles/3dots_button/3dotsView */ "./src/particles/3dots_button/3dotsView.js");
/* harmony import */ var _src_ext_tpl__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../src/ext/tpl */ "./src/ext/tpl.js");
/* harmony import */ var _src_ext_clipboard__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../src/ext/clipboard */ "./src/ext/clipboard.js");
/* harmony import */ var _src_pages_history_particles_hist_list_hlModel__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../src/pages/history/particles/hist_list/hlModel */ "./src/pages/history/particles/hist_list/hlModel.js");










/**
 * Created by chernikovalexey on 07/11/17.
 */

const threeDotsModel = {
  getClassIntAttr: function (className, attr) {
    const classes = className.split(" ");

    for (let i = 0, len = classes.length; i < len; ++i) {
      const _a = classes[i].split("-");
      if (_a[0] === attr) {
        return +_a[1];
      }
    }

    return -1;
  },

  getOriginalWord: function (event) {
    if (_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.section === "content" || _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.section === "pdf_tooltip") {
      const tid = threeDotsModel.getClassIntAttr(
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.target).attr("class"),
        "t"
      );
      return _src_particles_listen_lModel__WEBPACK_IMPORTED_MODULE_2__["default"]._getTransValue(
        "tooltip",
        "orig",
        jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "tooltip-" + tid)
      );
    } else if (_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.section === "window") {
      return jquery__WEBPACK_IMPORTED_MODULE_0___default()(".translation-input").val();
    } else if (_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.section === "phrasebook") {
      // TODO: handlers coming from where?
      return handlers.getPlaybackContents("orig", jquery__WEBPACK_IMPORTED_MODULE_0___default()(".expanded"));
    } else if (_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.section === "history") {
      return _src_pages_history_particles_hist_list_hlModel__WEBPACK_IMPORTED_MODULE_7__["default"].getListenValue("orig", jquery__WEBPACK_IMPORTED_MODULE_0___default()(".expanded"));
    }

    return "";
  },

  getTranslatedWord: function (event) {
    if (_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.section === "content" || _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.section === "pdf_tooltip") {
      const tid = threeDotsModel.getClassIntAttr(
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.target).attr("class"),
        "t"
      );
      return _src_particles_listen_lModel__WEBPACK_IMPORTED_MODULE_2__["default"]._getTransValue(
        "tooltip",
        "trans",
        jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "tooltip-" + tid)
      );
    } else if (_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.section === "window") {
      return _src_particles_listen_lModel__WEBPACK_IMPORTED_MODULE_2__["default"]._getTransValue("window");
    } else if (_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.section === "phrasebook") {
      return handlers.getPlaybackContents("trans");
    } else if (_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.section === "history") {
      return _src_pages_history_particles_hist_list_hlModel__WEBPACK_IMPORTED_MODULE_7__["default"].getListenValue("trans");
    }

    return "";
  },

  createWordlist: function (a, event) {
    chrome.runtime.sendMessage({
      action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.processCall("app", "opt", "newTab"),
      url: _src_ext_tpl__WEBPACK_IMPORTED_MODULE_5__.compile(
        chrome.runtime.getURL(
          "phrasebook.html#wl_create?from=<%=from%>&to=<%=to%>&text=<%=text%>&word=<%=word%>"
        ),
        {
          from: _src_particles_3dots_button_3dotsView__WEBPACK_IMPORTED_MODULE_4__["default"].current_from_lang,
          to: _src_particles_3dots_button_3dotsView__WEBPACK_IMPORTED_MODULE_4__["default"].current_to_lang,
          word: threeDotsModel.getOriginalWord(event),
        }
      ),
    });

    chrome.runtime.sendMessage({
      action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.processCall("app", "commands", "sendAnalyticsEvent"),
      cat: "three-dot",
      event: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.section,
      subevent: "create-wordlist",
    });
  },

  addToWordlist: function (a, event) {
    const wl_id = threeDotsModel.getClassIntAttr(
      jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.target).attr("class"),
      "wl"
    );
    const from = _src_particles_3dots_button_3dotsView__WEBPACK_IMPORTED_MODULE_4__["default"].current_from_lang;
    const to = _src_particles_3dots_button_3dotsView__WEBPACK_IMPORTED_MODULE_4__["default"].current_to_lang;
    const phrase = threeDotsModel.getOriginalWord(event);
    const wl_name = jquery__WEBPACK_IMPORTED_MODULE_0___default()(event.target).html();

    chrome.runtime.sendMessage(
      {
        action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.processCall("app", "phrasebook", "addPhrase"),
        wl_id: wl_id,
        phrase: phrase,
        from: from,
        to: to,
      },
      function () {}
    );

    _src_ui_components_notifications__WEBPACK_IMPORTED_MODULE_3__["default"].show(
      _src_ext_tpl__WEBPACK_IMPORTED_MODULE_5__.compile(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("DotsButton_Added"), {
        wl: wl_name,
      })
    );

    chrome.runtime.sendMessage({
      action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.processCall("app", "commands", "sendAnalyticsEvent"),
      cat: "three-dot",
      event: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.section,
      subevent: "add-wordlist",
    });
  },

  copyOriginal: async function (a, event) {
    await _src_ext_clipboard__WEBPACK_IMPORTED_MODULE_6__["default"].copyToClipboard(threeDotsModel.getOriginalWord(event));

    _src_ui_components_notifications__WEBPACK_IMPORTED_MODULE_3__["default"].show(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("DotsButton_OrigCopied"));

    chrome.runtime.sendMessage({
      action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.processCall("app", "commands", "sendAnalyticsEvent"),
      cat: "three-dot",
      event: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.section,
      subevent: "copy-orig",
    });
  },

  copyTranslation: async function (a, event) {
    await _src_ext_clipboard__WEBPACK_IMPORTED_MODULE_6__["default"].copyToClipboard(threeDotsModel.getTranslatedWord(event));

    _src_ui_components_notifications__WEBPACK_IMPORTED_MODULE_3__["default"].show(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("DotsButton_Copied"));

    chrome.runtime.sendMessage({
      action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.processCall("app", "commands", "sendAnalyticsEvent"),
      cat: "three-dot",
      event: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.section,
      subevent: "copy-trans",
    });
  },

  copyMain: async function (event) {
    const $this = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this);

    if ($this.hasClass("copied")) {
      return;
    }

    $this.addClass("copied");
    setTimeout(function () {
      $this.removeClass("copied");
    }, 2500);

    if ($this.hasClass("copy-translation")) {
      await threeDotsModel.copyTranslation.call(this, null, event);
    } else if ($this.hasClass("copy-original")) {
      await threeDotsModel.copyOriginal.call(this, null, event);
    }
  },

  copySynonym: async function () {
    const prefix =
      _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.section === "content" || _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.section === "pdf_tooltip"
        ? _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix()
        : "";

    const $this = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this);
    const _class = prefix + "copied";

    if ($this.hasClass(_class)) {
      return;
    }

    const $el = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this)
      .parent()
      .find("." + prefix + "main-of-item");

    $this.addClass(_class);
    setTimeout(function () {
      $this.removeClass(_class);
    }, 2500);

    await _src_ext_clipboard__WEBPACK_IMPORTED_MODULE_6__["default"].copyToClipboard($el.html());

    if (_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.section !== "content" && _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.section !== "pdf_tooltip") {
      _src_ui_components_notifications__WEBPACK_IMPORTED_MODULE_3__["default"].show(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Common_Copied"));
    }

    chrome.runtime.sendMessage({
      action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.processCall("app", "commands", "sendAnalyticsEvent"),
      cat: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.section,
      event: "copy-synonym",
    });
  },
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (threeDotsModel);


/***/ }),

/***/ "./src/particles/3dots_button/3dotsView.js":
/*!*************************************************!*\
  !*** ./src/particles/3dots_button/3dotsView.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../src/ext/kumquat_polyfill */ "./src/ext/kumquat_polyfill.js");
/* harmony import */ var _src_ext_util_langUtil__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../src/ext/util/langUtil */ "./src/ext/util/langUtil.js");
/* harmony import */ var _src_particles_3dots_button_3dotsModel__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../src/particles/3dots_button/3dotsModel */ "./src/particles/3dots_button/3dotsModel.js");
/* harmony import */ var _src_lib_contextMenu__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../src/lib/contextMenu */ "./src/lib/contextMenu.js");







/**
 * Created by chernikovalexey on 07/11/17.
 */

const threeDotsView = {
  current_from_lang: null,
  current_to_lang: null,

  // For pop-up and content scripts
  fillContextMenu: function ($button, from, to, tid) {
    this.current_from_lang = from;
    this.current_to_lang = to;

    chrome.runtime.sendMessage(
      {
        action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.processCall("app", "phrasebook", "getWordlistsByLang"),
        from: from,
        to: to,
      },
      function (wordlists) {
        const sub_menu_items = [];

        if (!wordlists || wordlists.length === 0) {
          const from_name = _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale(
            "Kernel_Lang_" +
              _src_ext_util_langUtil__WEBPACK_IMPORTED_MODULE_2__.getLangNameByKey(threeDotsView.current_from_lang)
          );
          const to_name = _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale(
            "Kernel_Lang_" +
              _src_ext_util_langUtil__WEBPACK_IMPORTED_MODULE_2__.getLangNameByKey(threeDotsView.current_to_lang)
          );

          sub_menu_items.push({
            name:
              _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("TD_NoWordlists") +
              from_name +
              " → " +
              to_name +
              "...",
            disable: true,
          });
        } else {
          wordlists.forEach(function (wordlist) {
            sub_menu_items.push({
              name: wordlist.name,
              className: "wl-" + wordlist.id + " t-" + tid,
              fun: _src_particles_3dots_button_3dotsModel__WEBPACK_IMPORTED_MODULE_3__["default"].addToWordlist,
            });
          });
        }

        sub_menu_items.push({
          name: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("TD_Create"),
          className: "t-" + tid,
          fun: _src_particles_3dots_button_3dotsModel__WEBPACK_IMPORTED_MODULE_3__["default"].createWordlist,
        });

        const menu = [
          {
            name: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("TD_AddPB"),
            subMenu: sub_menu_items,
          },
          {
            name: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("TD_Copy"),
            className: "t-" + tid,
            fun: _src_particles_3dots_button_3dotsModel__WEBPACK_IMPORTED_MODULE_3__["default"].copyTranslation,
          },
        ];

        const options = {};

        if (_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.section === "content") {
          //options.containment = '.TnITTtw-tooltip-' + tid;
          //options.top = 10;
          //options.left = 300 - 60 * 3;
          options.onOpen = function (data) {
            const maxZ = Math.max.apply(
              null,
              jquery__WEBPACK_IMPORTED_MODULE_0___default().map(jquery__WEBPACK_IMPORTED_MODULE_0___default()("body *"), function (e, n) {
                if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(e).css("position") != "static")
                  return parseInt(jquery__WEBPACK_IMPORTED_MODULE_0___default()(e).css("z-index")) || 1;
              })
            );

            data.menu.css("z-index", maxZ + 1);

            if (
              window.flags.dark_mode ||
              document.location.href.indexOf("https://www.netflix.com/watch") >
                -1
            ) {
              data.menu.addClass("TnITTtw-dark-mode");
            }
          };
        }

        $button.contextMenu(menu, options);
      }
    );
  },

  // For history only
  fillContextMenuOnlyWithWordlists: function ($button, from, to, tid) {
    this.current_from_lang = from;
    this.current_to_lang = to;

    chrome.runtime.sendMessage(
      {
        action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.processCall("app", "phrasebook", "getWordlistsByLang"),
        from: from,
        to: to,
      },
      function (wordlists) {
        const menu_items = [];

        if (!wordlists || wordlists.length === 0) {
          const from_name = _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale(
            "Kernel_Lang_" + _src_ext_util_langUtil__WEBPACK_IMPORTED_MODULE_2__.getLangNameByKey(from)
          );
          const to_name = _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale(
            "Kernel_Lang_" + _src_ext_util_langUtil__WEBPACK_IMPORTED_MODULE_2__.getLangNameByKey(to)
          );

          menu_items.push({
            name:
              _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("TD_NoWordlists") +
              from_name +
              " -> " +
              to_name +
              "...",
            disable: true,
          });
        } else {
          wordlists.forEach(function (wordlist) {
            menu_items.push({
              name: wordlist.name,
              className: "wl-" + wordlist.id + " t-" + tid,
              fun: _src_particles_3dots_button_3dotsModel__WEBPACK_IMPORTED_MODULE_3__["default"].addToWordlist,
            });
          });
        }

        menu_items.push({
          name: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("TD_Create"),
          className: "t-" + tid,
          fun: _src_particles_3dots_button_3dotsModel__WEBPACK_IMPORTED_MODULE_3__["default"].createWordlist,
        });

        $button.contextMenu(menu_items);
      }
    );
  },
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (threeDotsView);


/***/ }),

/***/ "./src/particles/lang_selectors/lsModel.js":
/*!*************************************************!*\
  !*** ./src/particles/lang_selectors/lsModel.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _src_particles_translate_tModel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../src/particles/translate/tModel */ "./src/particles/translate/tModel.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../src/ext/kumquat_polyfill */ "./src/ext/kumquat_polyfill.js");
/* harmony import */ var _ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../ext/util/storageUtil */ "./src/ext/util/storageUtil.js");
/* harmony import */ var _particles_scrollbars_sModel__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../particles/scrollbars/sModel */ "./src/particles/scrollbars/sModel.js");
/* harmony import */ var _ui_components_dropdown__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../ui_components/dropdown */ "./src/ui_components/dropdown.js");
/* harmony import */ var _pages_window_shared__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../pages/window/shared */ "./src/pages/window/shared.js");







// import { initDropdown } from "../../pages/window/window";


const langSelectorModel = {
  onOpen: function (serial, ot) {
    if (serial === 1) {
      _particles_scrollbars_sModel__WEBPACK_IMPORTED_MODULE_4__["default"].setupFromWindowDropdownScroll(ot);
    } else if (serial === 2) {
      _particles_scrollbars_sModel__WEBPACK_IMPORTED_MODULE_4__["default"].setupToWindowDropdownScroll(ot);
    }
  },

  onFullPageLangDropdownChange: function (
    serial,
    v,
    prev_val,
    skipTranslation,
    callback
  ) {
    _ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].requestBackgroundOption("setVal", ["fp_to_lang", v], () => {
      // no need to update the context menu as FP language is separate from CM/toolbar/tooltip ones
      // -=-=-=-

      if (typeof callback === "function") {
        callback();
      }
    });
  },

  onLangDropdownChange: function (
    serial,
    v,
    prev_val,
    skipTranslation,
    callback
  ) {
    // TODO: something is wrong here somewhere, dropdown doesn't update it's selected value
    _ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].chainRequestBackgroundOption(
      [
        { fn: "getVal", args: ["from_lang"] },
        { fn: "getVal", args: ["to_lang"] },
      ],
      function (r) {
        const from = r[0].response;
        const to = r[1].response;

        let opposite_lang;
        let args = null;

        if (serial === 1) {
          opposite_lang = to;
          args = ["from_lang", v];

          if (_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.section !== "content") {
            _src_particles_translate_tModel__WEBPACK_IMPORTED_MODULE_0__["default"].toggleControls();
          }
        } else if (serial === 2) {
          opposite_lang = from;
          args = ["to_lang", v];

          if (_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.section !== "content") {
            _pages_window_shared__WEBPACK_IMPORTED_MODULE_6__.temp.toLang = v;
          }
        }

        _ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].chainRequestBackgroundOption(
          [
            { fn: "getArrayValLen", args: ["recently_used_lang"] },
            {
              fn: "spliceBySearch",
              args: ["recently_used_lang", opposite_lang],
            },
            { fn: "addArrayVal", args: ["recently_used_lang", v] },
            { fn: "setVal", args: args },
          ],
          function (responses) {
            if (skipTranslation !== true && _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.section !== "content") {
              _src_particles_translate_tModel__WEBPACK_IMPORTED_MODULE_0__["default"].translateSimple(undefined, true);
            }

            const ru_len = responses[0].response;
            if (ru_len >= 8) {
              for (let i = ru_len; i > 8; --i) {
                _ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].requestBackgroundOption("popArrayVal", [
                  "recently_used_lang",
                ]);
              }
            }

            const spliced = responses[1].response;

            if (spliced.length > 0) {
              _ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].requestBackgroundOption("addArrayVal", [
                "recently_used_lang",
                spliced,
              ]);
            }

            // still need to re-generate that html even if it's a content page
            // we're using the same language pair all over the app
            // so those changes need to be reflected also in the toolbar window

            if (_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.section !== "content") {
              initDropdown();
            }

            chrome.runtime
              .sendMessage({
                action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.processCall("app", "option", "updateContextMenu"),
              })
              .then();

            if (typeof callback === "function") {
              callback();
            }
          }
        );
      }
    );
  },

  removeRecentLanguage: function (event) {
    const lang = jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).prev().attr("val");

    _ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].requestBackgroundOption("spliceBySearch", [
      "recently_used_lang",
      lang,
    ]);

    event.stopPropagation();

    jquery__WEBPACK_IMPORTED_MODULE_1___default()(this)
      .parent()
      .slideUp(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getAnimSpeed("slide_up"), _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getAnimType("slide_up"));
    jquery__WEBPACK_IMPORTED_MODULE_1___default()(".lang-" + lang).removeClass("hidden");

    _ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].requestBackgroundOption(
      "isEmptyArray",
      ["recently_used_lang"],
      function (is_empty) {
        if (is_empty) {
          jquery__WEBPACK_IMPORTED_MODULE_1___default()(".group").slideUp(
            _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getAnimSpeed("slide_up"),
            _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getAnimType("slide_up"),
            function () {
              if (_ui_components_dropdown__WEBPACK_IMPORTED_MODULE_5__.data.openedOptionsSerial === 1) {
                _particles_scrollbars_sModel__WEBPACK_IMPORTED_MODULE_4__["default"].setupFromWindowDropdownScroll();
              } else if (_ui_components_dropdown__WEBPACK_IMPORTED_MODULE_5__.data.openedOptionsSerial === 2) {
                _particles_scrollbars_sModel__WEBPACK_IMPORTED_MODULE_4__["default"].setupToWindowDropdownScroll();
              }
            }
          );
        }
      }
    );
  },
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (langSelectorModel);


/***/ }),

/***/ "./src/particles/lang_selectors/lsView.js":
/*!************************************************!*\
  !*** ./src/particles/lang_selectors/lsView.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../src/ext/kumquat_polyfill */ "./src/ext/kumquat_polyfill.js");
/* harmony import */ var _ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../ext/util/storageUtil */ "./src/ext/util/storageUtil.js");
/* harmony import */ var _src_ext_const_lang__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../src/ext/const/lang */ "./src/ext/const/lang.js");
/* harmony import */ var _src_ext_util_langUtil__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../src/ext/util/langUtil */ "./src/ext/util/langUtil.js");
/* harmony import */ var _ext_const_appConstants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../ext/const/appConstants */ "./src/ext/const/appConstants.js");







const i18n_removeFromRecent = _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Kernel_RemoveFromRecent");

const langSelectorView = {
  TYPES: {
    FROM: 1,
    TO: 2,
  },

  fillDropdown: function (type, num, data, lang_list, callback) {
    langSelectorView.getDropdownHtml(
      type,
      num,
      data,
      callback,
      false,
      lang_list
    );
  },

  // sorry, DRY
  fillFPDropdown: function (type, num, data, lang_list, callback) {
    lang_list = lang_list || _src_ext_const_lang__WEBPACK_IMPORTED_MODULE_3__.supportedLangs;

    _ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_2__["default"].requestBackgroundOption(
      "getVal",
      ["fp_to_lang"],
      (to_lang) => {
        // console.log("to lang", to_lang);
        const getLiClass = function (val) {
          return val === to_lang
            ? _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "option_selected"
            : _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "option";
        };

        let listTempItem, _key;
        const df = document.createDocumentFragment();
        const orderedLangList = [];
        const excludes = data ? data.excludes || [] : [];

        for (const key in lang_list) {
          if (lang_list[key] === "auto") {
            continue;
          }

          listTempItem = {
            key: key,
            value: lang_list[key],
            i18n: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Kernel_Lang_" + key),
          };

          orderedLangList.push(listTempItem);
        }

        orderedLangList
          .sort(function (a, b) {
            if (a.i18n < b.i18n) {
              return -1;
            } else if (a.i18n > b.i18n) {
              return 1;
            }

            return 0;
          })
          .reverse();

        let total_length = orderedLangList.length;
        let current;

        orderedLangList.forEach(function (v) {
          if (v.value === to_lang) {
            current = v.value;
          }

          jquery__WEBPACK_IMPORTED_MODULE_0___default()(df).prepend(
            jquery__WEBPACK_IMPORTED_MODULE_0___default()("<li>")
              .addClass("lang-" + v.value)
              .addClass(getLiClass(v.value))
              .addClass(
                excludes.includes(v.value)
                  ? _ext_const_appConstants__WEBPACK_IMPORTED_MODULE_5__["default"].ROOT_PREFIX + "hidden"
                  : ""
              )
              .attr({
                index: total_length,
              })
              .html(
                jquery__WEBPACK_IMPORTED_MODULE_0___default()("<span>")
                  .attr({
                    id: "lang-" + v.value,
                    val: v.value,
                  })
                  .addClass("lang-" + v.value)
                  .html(v.i18n)
                  .get(0)
              )
              .get(0)
          );

          --total_length;
        });

        callback({
          num: num,
          code: jquery__WEBPACK_IMPORTED_MODULE_0___default()("<div>").append(df).html(),
          select: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale(
            "Kernel_Lang_" + _src_ext_util_langUtil__WEBPACK_IMPORTED_MODULE_4__.getLangNameByKey(current)
          ),
        });
      }
    );
  },

  getDropdownHtml: function (
    type,
    num,
    data,
    callback,
    is_background,
    lang_list
  ) {
    lang_list = lang_list || _src_ext_const_lang__WEBPACK_IMPORTED_MODULE_3__.supportedLangs;

    // console.log("lang list", lang_list);

    const customized = !!data;

    _ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_2__["default"].chainRequestBackgroundOption(
      [
        { fn: "getVal", args: ["from_lang"] },
        { fn: "getVal", args: ["to_lang"] },
      ],
      (responses) => {
        data = data || {};
        if (!data.from) data.from = responses[0].response;
        if (!data.to) data.to = responses[1].response;

        // console.log(customized);

        const isCurrent = function (lang) {
          return (
            (type === 1 && lang === data.from) ||
            (type === 2 && lang === data.to)
          );
        };

        const getLiClass = function (val) {
          return isCurrent(val)
            ? _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "option_selected"
            : _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "option";
        };

        let listTempItem, _key;
        const df = document.createDocumentFragment();
        const orderedLangList = [];
        const recentlyUsedList = [];
        const excludes = data ? data.excludes || [] : [];

        _ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_2__["default"].requestBackgroundOption(
          "getDecodedVal",
          ["recently_used_lang"],
          function (recentlyUsedRaw) {
            for (const key in lang_list) {
              if (lang_list[key] === "auto") {
                continue;
              }

              listTempItem = {
                key: key,
                value: lang_list[key],
                i18n: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Kernel_Lang_" + key),
              };

              orderedLangList.push(listTempItem);
            }

            if (!customized || (customized && data.is_main)) {
              recentlyUsedRaw.forEach(function (v) {
                _key = _src_ext_util_langUtil__WEBPACK_IMPORTED_MODULE_4__.getLangNameByKey(v);
                listTempItem = {
                  key: _key,
                  value: v,
                  i18n: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Kernel_Lang_" + _key),
                };

                recentlyUsedList.push(listTempItem);
                excludes.push(listTempItem.value);
              });
            }

            orderedLangList
              .sort(function (a, b) {
                if (a.i18n < b.i18n) {
                  return -1;
                } else if (a.i18n > b.i18n) {
                  return 1;
                }

                return 0;
              })
              .reverse();

            if (!excludes.includes("auto")) {
              orderedLangList.push({
                key: "Auto",
                value: "auto",
                i18n: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Kernel_Lang_Auto"),
              });
            }

            let total_length = orderedLangList.length + recentlyUsedList.length;
            let current;

            // console.log("orderedLangList", orderedLangList);
            // console.log(from)

            orderedLangList.forEach(async function (obj) {
              if (obj.value === "auto" && num === 2) {
                return;
              }

              // console.log(obj.value, isCurrent(obj.value))
              if (isCurrent(obj.value)) {
                current = obj.value;
              }

              jquery__WEBPACK_IMPORTED_MODULE_0___default()(df).prepend(
                jquery__WEBPACK_IMPORTED_MODULE_0___default()("<li>")
                  .addClass("lang-" + obj.value)
                  .addClass(getLiClass(obj.value))
                  .addClass(
                    excludes.includes(obj.value)
                      ? _ext_const_appConstants__WEBPACK_IMPORTED_MODULE_5__["default"].ROOT_PREFIX + "hidden"
                      : ""
                  )
                  .attr({
                    index: total_length,
                  })
                  .html(
                    jquery__WEBPACK_IMPORTED_MODULE_0___default()("<span>")
                      .attr({
                        id: "lang-" + obj.value,
                        val: obj.value,
                      })
                      .addClass("lang-" + obj.value)
                      .html(obj.i18n)
                      .get(0)
                  )
                  .get(0)
              );

              --total_length;
            });

            if (recentlyUsedList.length > 0) {
              total_length += 2;

              jquery__WEBPACK_IMPORTED_MODULE_0___default()(df).prepend(
                jquery__WEBPACK_IMPORTED_MODULE_0___default()("<li>")
                  .addClass("group")
                  .attr("index", --total_length)
                  .html(
                    jquery__WEBPACK_IMPORTED_MODULE_0___default()("<span>")
                      .addClass("group-title")
                      .html(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Window_Content_AllLang"))
                      .get()
                  )
                  .get()
              );

              recentlyUsedList.reverse().forEach(async function (v) {
                if (v.value === "auto" && num === 2) {
                  return;
                }

                if (isCurrent(v.value)) {
                  current = v.value;
                }

                jquery__WEBPACK_IMPORTED_MODULE_0___default()(df).prepend(
                  jquery__WEBPACK_IMPORTED_MODULE_0___default()("<li>")
                    .addClass("lang-" + v.value)
                    .addClass(getLiClass(v.value))
                    .attr("index", total_length)
                    .append(
                      jquery__WEBPACK_IMPORTED_MODULE_0___default()("<span>")
                        .addClass("group-element")
                        .attr({
                          id: "lang-" + v.value,
                          val: v.value,
                        })
                        .html(v.i18n)
                        .get(0)
                    )
                    .append(
                      jquery__WEBPACK_IMPORTED_MODULE_0___default()("<div>")
                        .addClass("rm-recent")
                        .attr("title", i18n_removeFromRecent)
                        .get()
                    )
                    .get()
                );

                --total_length;
              });

              jquery__WEBPACK_IMPORTED_MODULE_0___default()(df).prepend(
                jquery__WEBPACK_IMPORTED_MODULE_0___default()("<li>")
                  .addClass("group")
                  .attr("index", --total_length)
                  .html(
                    jquery__WEBPACK_IMPORTED_MODULE_0___default()("<span>")
                      .addClass("group-title")
                      .html(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Window_Content_RecentlyUsedLang"))
                      .get()
                  )
                  .get()
              );
            }

            const serializer = new XMLSerializer();

            const result = {
              num: num,
              code: serializer.serializeToString(df),
              select: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale(
                "Kernel_Lang_" + _src_ext_util_langUtil__WEBPACK_IMPORTED_MODULE_4__.getLangNameByKey(current)
              ),
            };

            // console.log("result in lsView:", result);

            callback(result);
          },
          is_background
        );
      }
    );
  },
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (langSelectorView);


/***/ }),

/***/ "./src/particles/listen/lModel.js":
/*!****************************************!*\
  !*** ./src/particles/listen/lModel.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _src_ext_audio_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../src/ext/audio.js */ "./src/ext/audio.js");
/* harmony import */ var _src_ext_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../src/ext/string */ "./src/ext/string.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../src/ext/kumquat_polyfill */ "./src/ext/kumquat_polyfill.js");
/* harmony import */ var _src_ext_util_langUtil__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../src/ext/util/langUtil */ "./src/ext/util/langUtil.js");
/* harmony import */ var _src_ext_util_selectorsUtil__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../src/ext/util/selectorsUtil */ "./src/ext/util/selectorsUtil.js");









// import historyListModel from "/src/pages/history/particles/hist_list/hlModel";
// import { flags, getCurrentFromLang, temp } from "/src/pages/window/shared";
// import § from "/src/pages/window/handlers";

const listenModel = {
  getCurrentFromLang: async function () {
    return (await _src_ext_util_langUtil__WEBPACK_IMPORTED_MODULE_4__.getFromLang()) === "auto"
      ? window.temp.currentDetectedLang
      : _src_ext_util_langUtil__WEBPACK_IMPORTED_MODULE_4__.getFromLang();
  },
  _getTransValue: function (source, s2, e) {
    if (source === "window") {
      if (window.flags.isCurrentTranslationMulti) {
        return _src_ext_string__WEBPACK_IMPORTED_MODULE_1__["default"].removeHtml(
          jquery__WEBPACK_IMPORTED_MODULE_2___default()(".translation-layout .main-variant .mv-text-part").html()
        );
      } else {
        return _src_ext_string__WEBPACK_IMPORTED_MODULE_1__["default"].removeHtml(jquery__WEBPACK_IMPORTED_MODULE_2___default()(".trans-wrap").find(".tpart").html());
      }
    } else if (source === "history") {
      return historyListModel.getListenValue(s2);
    } else if (source === "tooltip") {
      // TODO: this is definitely not gonna work this way
      return window.handlers.getListenValue(s2, e);
    }
  },

  target_id: 0,
  targets: {},

  _playPrototype: async function ($button, dir, input, vis_fns, dl, ctx) {
    // TODO: this does nothing
    if (_.isEmpty(input) || $button.is('[class$="listen-disabled"]')) {
      return;
    }

    const lang =
      dl ||
      (dir.substr(0, 5) === "lang:"
        ? dir.substr(5)
        : await _src_ext_util_langUtil__WEBPACK_IMPORTED_MODULE_4__["get" + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.capitalize(dir) + "Lang"]());

    const audio_callback = async function (data) {
      if (!data) {
        return;
      }

      $button.removeClass("stop-audio");

      data.old_data.vis_fns.forEach(function (vis_fn) {
        listenModel[vis_fn](
          false,
          dl || lang,
          listenModel.targets[data.old_data.target_id]
        );
      });

      delete listenModel.targets[data.old_data.target_id];
    };

    if ($button.hasClass("stop-audio")) {
      _src_ext_audio_js__WEBPACK_IMPORTED_MODULE_0__["default"].stop();
    } else {
      $button.addClass("stop-audio");

      vis_fns.forEach(function (vis_fn) {
        listenModel[vis_fn](true, lang, ctx);
      });

      const target_id = ++listenModel.target_id;
      $button.data("tid", target_id);
      listenModel.targets[target_id] = ctx;

      _src_ext_audio_js__WEBPACK_IMPORTED_MODULE_0__["default"].playText(input.trim(), lang, audio_callback, {
        vis_fns: vis_fns,
        target_id: target_id,
      });
    }
  },

  ctrlRawVisibility: async function (playing) {
    const is_empty = _.isEmpty(jquery__WEBPACK_IMPORTED_MODULE_2___default()(".translation-input").val());

    if (is_empty || !_src_ext_audio_js__WEBPACK_IMPORTED_MODULE_0__["default"].isUtterable(await listenModel.getCurrentFromLang())) {
      jquery__WEBPACK_IMPORTED_MODULE_2___default()(".listen-raw-butt0n").slideUp(75);
    } else {
      jquery__WEBPACK_IMPORTED_MODULE_2___default()(".listen-raw-butt0n").slideDown(75, function () {
        if (playing) {
          jquery__WEBPACK_IMPORTED_MODULE_2___default()(this).addClass("listen-disabled");
        } else {
          jquery__WEBPACK_IMPORTED_MODULE_2___default()(this).removeClass("listen-disabled");
        }
      });
    }
  },

  ctrlTransVisibility: function (playing, lang) {
    if (!_src_ext_audio_js__WEBPACK_IMPORTED_MODULE_0__["default"].isUtterable(window.temp.toLang)) {
      jquery__WEBPACK_IMPORTED_MODULE_2___default()(".translation-layout").addClass("no-tts");
    } else {
      jquery__WEBPACK_IMPORTED_MODULE_2___default()(".translation-layout").removeClass("no-tts");
    }

    if (playing) {
      jquery__WEBPACK_IMPORTED_MODULE_2___default()(".listen-translation").addClass("listen-disabled");
    } else {
      jquery__WEBPACK_IMPORTED_MODULE_2___default()(".listen-translation").removeClass("listen-disabled");
    }

    window.flags.transUtterancePermission = !playing;
  },

  ctrlSynonymVis: function (playing, lang, event) {
    if (!event) {
      event = jquery__WEBPACK_IMPORTED_MODULE_2___default()("body");
    }

    const $context = event.target
      ? jquery__WEBPACK_IMPORTED_MODULE_2___default()(event.target).parent().parent().parent().parent()
      : event;

    const allowed = !playing;
    const prefix =
      _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.section === "content" || _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.section === "pdf_tooltip"
        ? _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getPrefix()
        : "";

    if (!_src_ext_audio_js__WEBPACK_IMPORTED_MODULE_0__["default"].isUtterable(window.temp.toLang || lang)) {
      $context.addClass(prefix + "no-tts");
    } else {
      $context.removeClass(prefix + "no-tts");
    }

    jquery__WEBPACK_IMPORTED_MODULE_2___default()("." + prefix + "listen-v-item").each(function () {
      const $this = jquery__WEBPACK_IMPORTED_MODULE_2___default()(this);
      if (!$this.hasClass("stop-audio")) {
        $this[(allowed ? "remove" : "add") + "Class"](
          prefix + "listen-disabled"
        );
      }
    });

    window.flags.transUtterancePermission = allowed;
  },

  ctrlTooltipOrigVisibility: function (playing, lang, e) {
    let $context;

    if (e && e.target) {
      $context = jquery__WEBPACK_IMPORTED_MODULE_2___default()(_src_ext_util_selectorsUtil__WEBPACK_IMPORTED_MODULE_5__.getTooltipWrapRecursively(e.target));
    } else if (e && e.innerHTML) {
      $context = jquery__WEBPACK_IMPORTED_MODULE_2___default()(e);
    } else if (e) {
      $context = e;
    } else {
      return;
    }

    const from_lang = $context
      .find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getPrefix() + "listen-original")
      .data("from");

    if (!_src_ext_audio_js__WEBPACK_IMPORTED_MODULE_0__["default"].isUtterable(from_lang)) {
      $context.addClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getPrefix() + "no-orig-tts");
    } else {
      $context.removeClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getPrefix() + "no-orig-tts");
    }

    const allowed =
      !playing && !_.isEmpty(listenModel._getTransValue("tooltip", "orig", e));

    $context
      .find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getPrefix() + "listen-original")
      [(allowed ? "remove" : "add") + "Class"](
        _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getPrefix() + "listen-disabled"
      );
    window.flags.tt_transUtterancePermission = allowed;
  },

  ctrlTooltipTransVisibility: function (playing, lang, e) {
    let $context;

    if (e && e.target) {
      $context = jquery__WEBPACK_IMPORTED_MODULE_2___default()(_src_ext_util_selectorsUtil__WEBPACK_IMPORTED_MODULE_5__.getTooltipWrapRecursively(e.target));
    } else if (e && e.innerHTML) {
      $context = jquery__WEBPACK_IMPORTED_MODULE_2___default()(e);
    } else if (e) {
      $context = e;
    } else {
      return;
    }

    const to_lang = $context
      .find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getPrefix() + "listen-translation")
      .data("to");

    if (!_src_ext_audio_js__WEBPACK_IMPORTED_MODULE_0__["default"].isUtterable(to_lang)) {
      $context.addClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getPrefix() + "no-trans-tts");
    } else {
      $context.removeClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getPrefix() + "no-trans-tts");
    }

    const allowed =
      !playing && !_.isEmpty(listenModel._getTransValue("tooltip", "trans", e));

    $context
      .find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getPrefix() + "listen-translation")
      [(allowed ? "remove" : "add") + "Class"](
        _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getPrefix() + "listen-disabled"
      );
    window.flags.tt_transUtterancePermission = allowed;
  },

  ctrlHistoryOrigVisibility: function (is_playing, lang, $context) {
    if (!$context) {
      return;
    }

    if (!_src_ext_audio_js__WEBPACK_IMPORTED_MODULE_0__["default"].isUtterable(lang)) {
      $context.addClass("no-orig-tts");
    } else {
      $context.removeClass("no-orig-tts");
    }

    jquery__WEBPACK_IMPORTED_MODULE_2___default()(".listen-original")[(is_playing ? "add" : "remove") + "Class"](
      "listen-disabled"
    );
  },

  ctrlHistoryTransVisibility: function (is_playing, lang, $context) {
    if (!$context) {
      return;
    }

    if (!_src_ext_audio_js__WEBPACK_IMPORTED_MODULE_0__["default"].isUtterable(lang)) {
      $context.addClass("no-trans-tts");
    } else {
      $context.removeClass("no-trans-tts");
    }

    jquery__WEBPACK_IMPORTED_MODULE_2___default()(".listen-translation")[(is_playing ? "add" : "remove") + "Class"](
      "listen-disabled"
    );
  },

  playRaw: async function (event) {
    await listenModel._playPrototype(
      jquery__WEBPACK_IMPORTED_MODULE_2___default()(this),
      "from",
      jquery__WEBPACK_IMPORTED_MODULE_2___default()(".translation-input").val(),
      ["ctrlTransVisibility", "ctrlSynonymVis"],
      window.temp.currentDetectedLang,
      event
    );

    await chrome.runtime.sendMessage({
      action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.processCall("app", "commands", "sendAnalyticsEvent"),
      cat: "window",
      event: "listen-original",
    });
  },

  playTranslation: async function (event) {
    await listenModel._playPrototype(
      jquery__WEBPACK_IMPORTED_MODULE_2___default()(this),
      "to",
      listenModel._getTransValue("window"),
      ["ctrlRawVisibility", "ctrlSynonymVis"],
      null,
      event
    );

    await chrome.runtime.sendMessage({
      action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.processCall("app", "commands", "sendAnalyticsEvent"),
      cat: "window",
      event: "listen-translation",
    });
  },

  playTooltip: async function (e) {
    e.stopPropagation();

    if (jquery__WEBPACK_IMPORTED_MODULE_2___default()(this).hasClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getPrefix() + "listen-original")) {
      await listenModel.playTooltipOriginal.call(this, e, jquery__WEBPACK_IMPORTED_MODULE_2___default()(this).data("from"));
    } else {
      await listenModel.playTooltipTranslation.call(
        this,
        e,
        jquery__WEBPACK_IMPORTED_MODULE_2___default()(this).data("to")
      );
    }
  },

  playTooltipOriginal: async function (event, lang) {
    await listenModel._playPrototype(
      jquery__WEBPACK_IMPORTED_MODULE_2___default()(this),
      "lang:" + lang,
      listenModel._getTransValue("tooltip", "orig", event),
      ["ctrlTooltipTransVisibility", "ctrlSynonymVis"],
      window.temp.currentDetectedLang,
      event
    );

    await chrome.runtime.sendMessage({
      action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.processCall("app", "commands", "sendAnalyticsEvent"),
      cat: "tooltip",
      event: "listen-original",
    });
  },

  playTooltipTranslation: async function (event, lang) {
    await listenModel._playPrototype(
      jquery__WEBPACK_IMPORTED_MODULE_2___default()(this),
      "lang:" + lang,
      listenModel._getTransValue("tooltip", "trans", event),
      ["ctrlTooltipOrigVisibility", "ctrlSynonymVis"],
      null,
      event
    );

    await chrome.runtime.sendMessage({
      action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.processCall("app", "commands", "sendAnalyticsEvent"),
      cat: "tooltip",
      event: "listen-translation",
    });
  },

  playHistoryItem: async function (event) {
    event.stopPropagation();

    const $item = jquery__WEBPACK_IMPORTED_MODULE_2___default()(".expanded");

    if (jquery__WEBPACK_IMPORTED_MODULE_2___default()(this).hasClass("listen-original")) {
      await listenModel.playHistoryOriginal.call(this, event, $item);
    } else {
      await listenModel.playHistoryTranslation.call(this, event, $item);
    }
  },

  playHistoryOriginal: async function (e, $context) {
    await listenModel._playPrototype(
      jquery__WEBPACK_IMPORTED_MODULE_2___default()(this),
      "lang:" + _src_ext_util_selectorsUtil__WEBPACK_IMPORTED_MODULE_5__.getHistoryOriginalLang(e),
      listenModel._getTransValue("history", "orig", e),
      ["ctrlHistoryTransVisibility", "ctrlSynonymVis"],
      null,
      $context
    );

    await chrome.runtime.sendMessage({
      action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.processCall("app", "commands", "sendAnalyticsEvent"),
      cat: "history",
      event: "listen-original",
    });
  },

  playHistoryTranslation: async function (e, $context) {
    await listenModel._playPrototype(
      jquery__WEBPACK_IMPORTED_MODULE_2___default()(this),
      "lang:" + _src_ext_util_selectorsUtil__WEBPACK_IMPORTED_MODULE_5__.getHistoryToLang(e),
      listenModel._getTransValue("history", "trans", e),
      ["ctrlHistoryOrigVisibility", "ctrlSynonymVis"],
      null,
      $context
    );

    await chrome.runtime.sendMessage({
      action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.processCall("app", "commands", "sendAnalyticsEvent"),
      cat: "history",
      event: "listen-translation",
    });
  },

  playSynonym: async function (event) {
    const val = _src_ext_string__WEBPACK_IMPORTED_MODULE_1__["default"].removeHtml(
      jquery__WEBPACK_IMPORTED_MODULE_2___default()(this).parent().find(".main-of-item").html()
    );

    await listenModel._playPrototype(
      jquery__WEBPACK_IMPORTED_MODULE_2___default()(this),
      "lang:" + jquery__WEBPACK_IMPORTED_MODULE_2___default()(this).data("langto"),
      val,
      ["ctrlSynonymVis", "ctrlRawVisibility", "ctrlTransVisibility"],
      null,
      event
    );

    await chrome.runtime.sendMessage({
      action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.processCall("app", "commands", "sendAnalyticsEvent"),
      cat: "window",
      event: "listen-synonym",
    });
  },

  playHistorySynonym: async function (event) {
    const val = jquery__WEBPACK_IMPORTED_MODULE_2___default()(this).next().find(".main-of-item").html();
    const $context = jquery__WEBPACK_IMPORTED_MODULE_2___default()(".i-" + _src_ext_util_selectorsUtil__WEBPACK_IMPORTED_MODULE_5__.getHistoryItemId(event.target));

    await listenModel._playPrototype(
      jquery__WEBPACK_IMPORTED_MODULE_2___default()(this),
      "lang:" + jquery__WEBPACK_IMPORTED_MODULE_2___default()(this).data("langto"),
      val,
      [
        "ctrlSynonymVis",
        "ctrlHistoryOrigVisibility",
        "ctrlHistoryTransVisibility",
      ],
      null,
      $context
    );

    await chrome.runtime.sendMessage({
      action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.processCall("app", "commands", "sendAnalyticsEvent"),
      cat: "history",
      event: "listen-synonym",
    });
  },

  playTooltipSynonym: async function (event) {
    const val = _src_ext_string__WEBPACK_IMPORTED_MODULE_1__["default"].removeHtml(
      jquery__WEBPACK_IMPORTED_MODULE_2___default()(this)
        .parent()
        .find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.getPrefix() + "main-of-item")
        .html()
    );

    await listenModel._playPrototype(
      jquery__WEBPACK_IMPORTED_MODULE_2___default()(this),
      "lang:" + jquery__WEBPACK_IMPORTED_MODULE_2___default()(this).data("langto"),
      val,
      [
        "ctrlSynonymVis",
        "ctrlTooltipOrigVisibility",
        "ctrlTooltipTransVisibility",
      ],
      null,
      event
    );

    await chrome.runtime.sendMessage({
      action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.processCall("app", "commands", "sendAnalyticsEvent"),
      cat: "tooltip",
      event: "listen-synonym",
    });
  },

  //
  // v4.0: PHRASEBOOK

  playPhrasebookOriginal: async function (phrase, lang, $context) {
    await listenModel._playPrototype(
      jquery__WEBPACK_IMPORTED_MODULE_2___default()(this),
      "lang:" + lang,
      phrase,
      ["ctrlHistoryTransVisibility", "ctrlSynonymVis"],
      null,
      $context
    );

    await chrome.runtime.sendMessage({
      action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.processCall("app", "commands", "sendAnalyticsEvent"),
      cat: "phrasebook",
      event: "listen-original",
    });
  },

  playPhrasebookTrans: async function (phrase, lang, $context) {
    await listenModel._playPrototype(
      jquery__WEBPACK_IMPORTED_MODULE_2___default()(this),
      "lang:" + lang,
      phrase,
      ["ctrlHistoryOrigVisibility", "ctrlSynonymVis"],
      null,
      $context
    );

    await chrome.runtime.sendMessage({
      action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.processCall("app", "commands", "sendAnalyticsEvent"),
      cat: "phrasebook",
      event: "listen-translation",
    });
  },

  playPhrasebookSynonym: async function (phrase, lang, $context) {
    await listenModel._playPrototype(
      jquery__WEBPACK_IMPORTED_MODULE_2___default()(this),
      "lang:" + lang,
      phrase,
      [
        "ctrlHistoryOrigVisibility",
        "ctrlHistoryTransVisibility",
        "ctrlSynonymVis",
      ],
      null,
      $context
    );

    await chrome.runtime.sendMessage({
      action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_3__.ke.processCall("app", "commands", "sendAnalyticsEvent"),
      cat: "phrasebook",
      event: "listen-synonym",
    });
  },
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (listenModel);


/***/ }),

/***/ "./src/particles/pro_block/proModel.js":
/*!*********************************************!*\
  !*** ./src/particles/pro_block/proModel.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../src/ext/kumquat_polyfill */ "./src/ext/kumquat_polyfill.js");
/* harmony import */ var _src_ui_components_login__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../src/ui_components/login */ "./src/ui_components/login.js");
/* harmony import */ var _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../src/ext/util/storageUtil */ "./src/ext/util/storageUtil.js");
/* harmony import */ var _proView__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./proView */ "./src/particles/pro_block/proView.js");
/* harmony import */ var _src_particles_sett_tabber_tabView_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../src/particles/sett_tabber/tabView.js */ "./src/particles/sett_tabber/tabView.js");
/* harmony import */ var _src_ui_components_pro_alert__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../src/ui_components/pro_alert */ "./src/ui_components/pro_alert.js");
/* harmony import */ var _src_particles_pro_block_publicProModelMethods__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../src/particles/pro_block/publicProModelMethods */ "./src/particles/pro_block/publicProModelMethods.js");
/* harmony import */ var _src_lib_confetti__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../src/lib/confetti */ "./src/lib/confetti.js");
/* harmony import */ var _src_lib_confetti__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_src_lib_confetti__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _pages_tour_shared__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../pages/tour/shared */ "./src/pages/tour/shared.js");
/* harmony import */ var _src_lib_analytics__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../src/lib/analytics */ "./src/lib/analytics.js");














const ProStatusManager = {
  callback: null,

  subscribe: function () {
    // contentes of that function can be moved here, in fact
    // legacy post A/B test code - just removed ifs for now
    ProStatusManager.subscribeWithNewTabCheckout.call(this);
  },

  subscribeWithNewTabCheckout: function () {
    if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).data("disabled") === true) {
      return;
    }

    let source = window.temp.source || _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.section;
    let billing_period = "annual";

    if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(".plan.selected").hasClass("monthly")) {
      billing_period = "monthly";
    }

    // init spinner
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".spinner").fadeIn(125);
    let prev_button_value = jquery__WEBPACK_IMPORTED_MODULE_0___default()(".pro-subscribe").html();
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).data("disabled", true);
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".pro-subscribe").html("&nbsp;");

    ProStatusManager.generateSubscriptionLinks(billing_period, (link) => {
      // removing spinner was actually a very stupid idea
      // once they subscribed, it may take a few seconds until Mate validates the payment
      // in the background via Paddle's API
      // it seems like people were sometimes clicking the button again in the meantime
      // $(".spinner").fadeOut(125);
      // $(this).data("disabled", false);
      // $(".pro-subscribe").html(prev_button_value);

      if (link) {
        chrome.tabs.create({
          url: link,
        });
      } else {
        alert(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Sub_CouldNotGetPayLink"));
      }
    });

    // if (typeof ga != "undefined")
    //   ga("send", "event", "options", "pro-checkout-shown", source);

    _src_lib_analytics__WEBPACK_IMPORTED_MODULE_10__["default"].fireEvent("pro_checkout_shown", {
      source: source,
    });
  },

  finishCheckoutCallback: async function (email) {
    const source = window.temp.source || _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.section;

    // console.log("finishing the checkout for", email);

    if (_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.section === "options") {
      _src_particles_sett_tabber_tabView_js__WEBPACK_IMPORTED_MODULE_5__["default"].displayCurrentTab(1);
    }

    // there will be a bunch of AJAX requests, so a spinner is needed
    // checking if user is already registered, pulling the latest sub data, etc.
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".pro-data-loading-layout").show();

    if (_src_ui_components_pro_alert__WEBPACK_IMPORTED_MODULE_6__["default"].opened) {
      _src_ui_components_pro_alert__WEBPACK_IMPORTED_MODULE_6__["default"].close();
    }

    // const postAccountCheckCallback = async () => {
    // initiate showing the pro survey once trial changes to active at some point
    // await storageUtils.setIntValue('sub_pro_survey', 0);

    // save what feature the user subscribed for, for further split test tracking
    await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].setVal("sub_source", source);

    // prevent from cancelling trial & getting a new one
    // await storageUtils.setVal('sub_been_subscribed_once', true);

    // show confetti and success message if it's onboarding
    // all other stuff like next billing, management, etc is in settings
    if (_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.section === "tour") {
      (0,_pages_tour_shared__WEBPACK_IMPORTED_MODULE_9__.showProLayout)();
      setTimeout(ProStatusManager.popConfetti, 1500);
    } else {
      ProStatusManager.getLatestSubscriptionData((response) => {
        _proView__WEBPACK_IMPORTED_MODULE_4__["default"].showSubscriptionStatus(response);
        _proView__WEBPACK_IMPORTED_MODULE_4__["default"].showSyncState();

        setTimeout(ProStatusManager.popConfetti, 1500);
      });
    }

    // await storageUtils.setIntValue('sub_trial_starting_date', Date.now());

    // analytics stuff
    // ke.ext.mate_events.send('trial_started');

    // if (typeof ga != "undefined") ga('send', 'event', 'pro', 'subscribed', source);

    // Analytics.fireEvent('pro_subscribed', {
    //   source: source,
    // });
    // };

    // if (!(await storageUtils.getVal('account_token'))) {
    //   let signed_in_before = false;
    //   const checkUserCallback = async () => {
    //     await storageUtils.encodeAndSet('temp_sub_data', {
    //       email: email,
    //       signed_in_before: signed_in_before,
    //     });
    //     await postAccountCheckCallback();
    //   };

    //   $.ajax({
    //     url: 'https://' + (await ke.syncServer()) + '/check_user',
    //     type: 'GET',
    //     dataType: 'json',
    //     data: {
    //       lang: ke.browserLang,
    //       email: email,
    //       require_password: true
    //     },
    //     success: async function (r) {
    //       if (r.registered) {
    //         signed_in_before = true;
    //       }

    //       // console.log('post checkout user check', r);

    //       await checkUserCallback();
    //     },
    //     error: checkUserCallback
    //   });
    // } else {
    //   await postAccountCheckCallback();
    // }
  },

  generateSubscriptionLinks: async function (plan, callback) {
    let passthrough = {
      ext_id: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.staticExtId,
      plan: plan,
      prev_sub: await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].isTrueOption("sub_been_subscribed_once"),
      pt_email: await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].getVal("account_email"),
      pt_country: await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].getVal("country"),
      pt_lang: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.browserLang,
      pt_browser_name: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.browserName,
      pt_ext_version: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getExtVer(),
      pt_referrer: /*ke.app.temp.source ||*/ _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.section,
      pt_os: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.isMac ? "mac" : _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.isWindows ? "windows" : "other",
      pt_cohort: "", // can be random - usually something we're testing with A/B
    };

    if (!(await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].getVal("account_token"))) {
      let signup_code = _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.generateUserId(8, 1);
      await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].setVal("temp_signup_code", signup_code);
      passthrough.pt_signup_code = signup_code;
    }

    const req = await fetch(
      `https://${await _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.syncServer()}/generate_pay_links_for_browsers?${_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.serialize(
        passthrough
      )}`
    );

    if (req.ok) {
      const d = await req.json();
      callback(d.link || null);
    } else {
      callback(null);
    }
  },

  finishCreatingAccount: async function () {
    // console.log("finish creating called");

    console.log(
      "temp_sub_data",
      await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].getDecodedVal("temp_sub_data")
    );

    _src_ui_components_login__WEBPACK_IMPORTED_MODULE_2__["default"].show({
      is_finish_signup: true,
      email: (await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].getDecodedVal("temp_sub_data")).email,
    });
  },

  showLogin: async function () {
    const is_restore = false;
    const { email } = await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].getDecodedVal("temp_sub_data");

    _src_ui_components_login__WEBPACK_IMPORTED_MODULE_2__["default"].show({ is_restore, email });

    // if (typeof ga != "undefined")
    //   ga("send", "event", "options", "login-clicked");

    _src_lib_analytics__WEBPACK_IMPORTED_MODULE_10__["default"].fireEvent("options_login_clicked");
  },

  restore: function () {
    _src_ui_components_login__WEBPACK_IMPORTED_MODULE_2__["default"].show({ is_restore: true });

    // if (typeof ga != "undefined")
    //   ga("send", "event", "options", "restore-clicked");

    _src_lib_analytics__WEBPACK_IMPORTED_MODULE_10__["default"].fireEvent("options_restore_clicked");
  },

  signOut: async function () {
    await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].requestBackgroundOption(
      "getVal",
      ["account_token"],
      async (token) => {
        // console.log("account_token", token);
        // Saving token that we need to revoke because it will get deleted
        await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].requestBackgroundOption("setVal", [
          "revoke_account_token",
          token,
        ]);

        // console.log("revoking token");

        // Revoking token
        chrome.runtime.sendMessage({
          action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.processCall("app", "opt", "revokeToken"),
        });

        await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].requestBackgroundOption("setVal", [
          "account_email",
          "",
        ]);
        await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].requestBackgroundOption(
          "setVal",
          ["account_token", ""],
          () => {
            _proView__WEBPACK_IMPORTED_MODULE_4__["default"].showProState();
            _proView__WEBPACK_IMPORTED_MODULE_4__["default"].showSyncState();
          }
        );
        await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].requestBackgroundOption("setVal", [
          "account_name",
          "",
        ]);
        await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].requestBackgroundOption("setVal", [
          "sub_data",
          "{}",
        ]);

        // if (typeof ga != "undefined") ga("send", "event", "login", "sign-out");

        _src_lib_analytics__WEBPACK_IMPORTED_MODULE_10__["default"].fireEvent("login_sign_out");
      }
    );
  },

  getLatestSubscriptionData: async function (callback) {
    let token = await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].getVal("account_token");

    if (!token) {
      callback("no_account");
      return;
    }

    const req = await fetch(
      `https://sync.matetranslate.com/subscription?token=${token}`
    );

    if (req.ok) {
      const d = await req.json();

      // console.log(d);

      (0,_src_particles_pro_block_publicProModelMethods__WEBPACK_IMPORTED_MODULE_7__.sendChargedEventIfNeeded)(d);
      await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].encodeAndSet("sub_data", d);

      callback("ok");
    } else {
      callback("server_error");
    }
  },

  changeBillingPeriod: function () {
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".plan.selected").removeClass("selected");
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).addClass("selected");
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".price-due").html(jquery__WEBPACK_IMPORTED_MODULE_0___default()(".plan.selected .price").html());
  },

  screwSubscription: function () {
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".combo-change-window").hide();
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".combo-change-window.screw-the-subscription").show();
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(window).scrollTop(0);
    jquery__WEBPACK_IMPORTED_MODULE_0___default()("body").addClass("stop-scrolling");
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".survey-layout").fadeIn(100).css("display", "flex");
  },

  dismissSurvey: function () {
    if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(".combo-change-window:visible").hasClass("cancelled")) {
      document.location.href = jquery__WEBPACK_IMPORTED_MODULE_0___default()(".cancel-subscription").attr("href");
    }

    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".survey-layout:visible").fadeOut(100);
    jquery__WEBPACK_IMPORTED_MODULE_0___default()("body").removeClass("stop-scrolling");
  },

  restoreSubscription: function () {
    _src_ui_components_login__WEBPACK_IMPORTED_MODULE_2__["default"].show({ is_restore: true });
  },

  requestStudentDiscount: function () {
    chrome.tabs.create({
      url:
        "https://gikken.co/mate-translate/students/?ref=" +
        _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.browserName +
        "SubscriptionBlock",
    });

    // if (typeof ga !== "undefined")
    //   ga("send", "event", "pro", "request-student-discount");

    _src_lib_analytics__WEBPACK_IMPORTED_MODULE_10__["default"].fireEvent("pro_request_student_discount");
  },

  // no trial anymore if they've already been subscribed before
  resubscribe: async function () {
    await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].setIntValue("sub_trial_days", 0);

    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".pro-subscribe").html(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Sub_SubscribeNow"));
    jquery__WEBPACK_IMPORTED_MODULE_0___default()("._48h-notification").remove();

    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".pro-layout").slideUp(100, () => {
      jquery__WEBPACK_IMPORTED_MODULE_0___default()(".no-pro-layout").slideDown(100);
      jquery__WEBPACK_IMPORTED_MODULE_0___default()(".pro-data-loading-layout").fadeOut(100);
    });
  },

  retryPullingSubDataAgain: function () {
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".error-layout").fadeOut(100);
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".pro-data-loading-layout").fadeIn(100);
    ProStatusManager.getLatestSubscriptionData(
      _proView__WEBPACK_IMPORTED_MODULE_4__["default"].showSubscriptionStatus
    );
  },

  cancelSub: function (event) {
    event.preventDefault();

    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".combo-change-window").hide();
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".combo-change-window.cancelled").show();
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(window).scrollTop(0);
    jquery__WEBPACK_IMPORTED_MODULE_0___default()("body").addClass("stop-scrolling");
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(".survey-layout").fadeIn(100).css("display", "flex");
  },

  popConfetti: function () {
    var count = 400;
    var defaults = {
      origin: { y: 0.7 },
    };

    function fire(particleRatio, opts) {
      confetti(
        Object.assign({}, defaults, opts, {
          particleCount: Math.floor(count * particleRatio),
        })
      );
    }

    fire(0.25, {
      spread: 26,
      startVelocity: 55,
    });
    fire(0.2, {
      spread: 60,
    });
    fire(0.35, {
      spread: 100,
      decay: 0.91,
      scalar: 0.8,
    });
    fire(0.1, {
      spread: 120,
      startVelocity: 25,
      decay: 0.92,
      scalar: 1.2,
    });
    fire(0.1, {
      spread: 120,
      startVelocity: 45,
    });
  },

  onComingSoonClicked: function () {
    alert(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Sub_CrossPlatformProComingSoon"));
  },

  _resetSub: async function () {
    await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].setVal("chr_pro_flag", "false");
    await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].setVal("account_token", "");
    await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].setVal("account_email", "");
    await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].setVal("sub_data", "{}");
    await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].setVal("temp_sub_data", "{}");
    await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].setVal("sub_been_subscribed_once", false);
    await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].setVal("sub_48h_notif", true);
    await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].setVal("sub_trial_days", 7);
    await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].setIntValue("sub_pro_survey", -1);
    await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].setVal("already_submitted_screw_sub_survey", false);
  },
};

window._resetSub = ProStatusManager._resetSub;

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ProStatusManager);


/***/ }),

/***/ "./src/particles/pro_block/proView.js":
/*!********************************************!*\
  !*** ./src/particles/pro_block/proView.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../src/ext/kumquat_polyfill */ "./src/ext/kumquat_polyfill.js");
/* harmony import */ var _src_particles_pro_block_proModel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../src/particles/pro_block/proModel */ "./src/particles/pro_block/proModel.js");
/* harmony import */ var _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../src/ext/util/storageUtil */ "./src/ext/util/storageUtil.js");
/* harmony import */ var _src_ext_string__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../src/ext/string */ "./src/ext/string.js");







const ProStatusView = {
    init: function (callback) {
      if (!_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.IS_CHROME) {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(".stt-feature").remove();
      }

      jquery__WEBPACK_IMPORTED_MODULE_0___default()(".whats-coming-soon").on(
        "click",
        _src_particles_pro_block_proModel__WEBPACK_IMPORTED_MODULE_2__["default"].onComingSoonClicked
      );
      jquery__WEBPACK_IMPORTED_MODULE_0___default()(".login-button").on("click", _src_particles_pro_block_proModel__WEBPACK_IMPORTED_MODULE_2__["default"].showLogin);
      jquery__WEBPACK_IMPORTED_MODULE_0___default()(".signout").on("click", _src_particles_pro_block_proModel__WEBPACK_IMPORTED_MODULE_2__["default"].signOut);

      jquery__WEBPACK_IMPORTED_MODULE_0___default()(".pull-sub-data-again").on(
        "click",
        _src_particles_pro_block_proModel__WEBPACK_IMPORTED_MODULE_2__["default"].retryPullingSubDataAgain
      );

      this.setupSurveys();
      this.showSyncState();
      this.showProState();

      if (typeof callback === "function") {
        callback();
      }
    },

    setupSurveys: async function () {
      let params = [
        await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].getVal("account_email"),
        1,
        7,
        await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].getVal("user_country"),
        await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].getVal("all_trans_count"),
        new Date(+(await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].getVal("install_date"))),
      ];

      jquery__WEBPACK_IMPORTED_MODULE_0___default()(".survey-layout iframe").each(function () {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).attr("src", jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).attr("src") + ";" + params.join(";"));
      });

      let cancelled_params = [
        await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].isTrueOption("sub_48h_notif"),
        await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].getDecodedVal("sub_data").status,
      ];

      if (
        await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].getDecodedVal("sub_data").status === "trialing"
      ) {
        let current_trial_day =
          (Date.now() -
            await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].getIntValue("sub_trial_starting_date")) /
          (1000 * 60 * 60 * 24);
        cancelled_params.push(current_trial_day); // which trial day is it now
      }

      jquery__WEBPACK_IMPORTED_MODULE_0___default()(".survey-layout.cancelled").attr(
        "src",
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(".survey-layout.cancelled").attr("src") +
          ";" +
          cancelled_params.join(";")
      );
      jquery__WEBPACK_IMPORTED_MODULE_0___default()(".survey-layout .dismiss").on(
        "click",
        _src_particles_pro_block_proModel__WEBPACK_IMPORTED_MODULE_2__["default"].dismissSurvey
      );
    },

    tryShowingProSurvey: async function (sub_data) {
      if (
        sub_data.status === "active" &&
        await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].getIntValue("sub_pro_survey") === 0 &&
        Math.random() < 0.5
      ) {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(".combo-change-window").hide();
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(".combo-change-window.just-subscribed").show();
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(window).scrollTop(0);
        jquery__WEBPACK_IMPORTED_MODULE_0___default()("body").addClass("stop-scrolling");
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(".survey-layout").fadeIn(100).css("display", "flex");

        await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].setIntValue("sub_pro_survey", 1);
      }
    },

    showProState: async function () {
      //console.log('showing pro state', ke.isLegacyProUser);

      if (await _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.isLegacyProUser()) {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(".no-pro-layout").hide();
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(".pro-layout").hide();
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(".no-pro-layout-old").hide();

          jquery__WEBPACK_IMPORTED_MODULE_0___default()(".pro-block-design").hide();
          jquery__WEBPACK_IMPORTED_MODULE_0___default()(".pro-layout.legacy").show();
      } else {
        _src_particles_pro_block_proModel__WEBPACK_IMPORTED_MODULE_2__["default"].getLatestSubscriptionData(
          this.showSubscriptionStatus
        );
      }
    },

    showSubscriptionStatus: async function (response) {
      let data = await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].getDecodedVal("sub_data");
      let temp_sub_data =
        await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].getDecodedVal("temp_sub_data");

      // console.log("got sub status:", response);
      // console.log(data);

      ProStatusView.tryShowingProSurvey(data);

      const priceMonthlyRaw = (await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].getVal("sub_price_monthly")).split(" ");
      const priceAnnualRaw = (await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].getVal("sub_price_annual")).split(" ");

      // string.getFormattedPrice(priceMonthlyRaw[0], priceMonthlyRaw[1]);

      jquery__WEBPACK_IMPORTED_MODULE_0___default()(".plan.monthly .price").html(
        _src_ext_string__WEBPACK_IMPORTED_MODULE_4__["default"].getFormattedPrice(priceMonthlyRaw[0], priceMonthlyRaw[1])
          + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Sub_Month")
          // + " + tax"
      );
      jquery__WEBPACK_IMPORTED_MODULE_0___default()(".plan.annual .price").html(
        _src_ext_string__WEBPACK_IMPORTED_MODULE_4__["default"].getFormattedPrice(priceAnnualRaw[0], priceAnnualRaw[1])
          + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Sub_Year") 
          // + " + tax"
      );

      // 29,99 won't convert to float, only 29.99
      let annual_price = (await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].getVal("sub_price_annual"))
        .replace(",", ".")
        .match(/\d+(,|.)\d+/)[0];
      let monthly_price = (await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].getVal("sub_price_monthly"))
        .replace(",", ".")
        .match(/\d+(,|.)\d+/)[0];
      let savings = Math.floor((1 - annual_price / (monthly_price * 12)) * 100);
      jquery__WEBPACK_IMPORTED_MODULE_0___default()(".plan.annual .savings").html(
        _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Sub_Savings").replace("{{savings}}", savings)
      );

      jquery__WEBPACK_IMPORTED_MODULE_0___default()(".price-due").html(jquery__WEBPACK_IMPORTED_MODULE_0___default()(".plan.selected .price").html());

      let trial_days = 7;
      jquery__WEBPACK_IMPORTED_MODULE_0___default()(".trial-days").html(trial_days);

      if (!(await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].isTrueOption("sub_48h_notif"))) {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()("._48h-notification").remove();
      }

      jquery__WEBPACK_IMPORTED_MODULE_0___default()(".plan").on("click", _src_particles_pro_block_proModel__WEBPACK_IMPORTED_MODULE_2__["default"].changeBillingPeriod);
      jquery__WEBPACK_IMPORTED_MODULE_0___default()(".pro-subscribe").on("click", _src_particles_pro_block_proModel__WEBPACK_IMPORTED_MODULE_2__["default"].subscribe);
      jquery__WEBPACK_IMPORTED_MODULE_0___default()(".screw-subscription").on(
        "click",
        _src_particles_pro_block_proModel__WEBPACK_IMPORTED_MODULE_2__["default"].screwSubscription
      );
      jquery__WEBPACK_IMPORTED_MODULE_0___default()(".student-discount").on(
        "click",
        _src_particles_pro_block_proModel__WEBPACK_IMPORTED_MODULE_2__["default"].requestStudentDiscount
      );

      if (await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].getVal("account_token")) {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(".purchased-pro-before").remove();
      } else {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(".purchased-pro-before").on(
          "click",
          _src_particles_pro_block_proModel__WEBPACK_IMPORTED_MODULE_2__["default"].restoreSubscription
        );
      }

      if (
        await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].isTrueOption(
          "already_submitted_screw_sub_survey"
        )
      ) {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(".screw-subscription").remove();
      }

      //
      // Now, status-specific actions
      //

      if (response === "server_error") {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(".pro-layout.with-account").hide();
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(".no-pro-layout").show();
        //$('.error-free-pro-layout').hide();
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(".no-pro-layout-old").hide();
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(".pro-data-loading-layout").fadeOut(100);
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(".error-layout").css("display", "flex");
      } else if (response === "no_account" && temp_sub_data.email) {
        // go and finish creating it, mate

        // console.log("finish creating your account");

        jquery__WEBPACK_IMPORTED_MODULE_0___default()(".pro-block-design").hide();
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(".no-pro-layout").hide();
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(".pro-layout.with-account").hide();
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(".pro-layout.no-account").show();
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(".no-pro-layout-old").hide();

        if (temp_sub_data.signed_in_before) {
          jquery__WEBPACK_IMPORTED_MODULE_0___default()(".pro-layout.no-account .next-billing").html(
            _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Sub_PleaseSignBackIn")
              .replace("{{email}}", temp_sub_data.email)
          );
          jquery__WEBPACK_IMPORTED_MODULE_0___default()(".finish-creating-button").hide();
          jquery__WEBPACK_IMPORTED_MODULE_0___default()(".login-button").show();
        } else {
          jquery__WEBPACK_IMPORTED_MODULE_0___default()(".pro-layout.no-account .next-billing").html(
            _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Sub_PleaseCreateAccount")
              .replace("{{email}}", temp_sub_data.email)
          );
          jquery__WEBPACK_IMPORTED_MODULE_0___default()(".login-button").hide();
          jquery__WEBPACK_IMPORTED_MODULE_0___default()(".finish-creating-button").show();
        }

        jquery__WEBPACK_IMPORTED_MODULE_0___default()(".finish-creating-button").on(
          "click",
          _src_particles_pro_block_proModel__WEBPACK_IMPORTED_MODULE_2__["default"].finishCreatingAccount
        );
      } else if (!data.isSubscriptionVerified) {

          // console.log("no sub – upgrade block");

          jquery__WEBPACK_IMPORTED_MODULE_0___default()(".pro-layout").hide();
          jquery__WEBPACK_IMPORTED_MODULE_0___default()(".no-pro-layout").show();
          jquery__WEBPACK_IMPORTED_MODULE_0___default()(".no-pro-layout-old").hide();
          jquery__WEBPACK_IMPORTED_MODULE_0___default()(".pro-data-loading-layout").fadeOut(100);
      } else if (data.isSubscriptionVerified) {
        // show sub info

        // console.log("sub verified");

        jquery__WEBPACK_IMPORTED_MODULE_0___default()(".no-pro-layout").fadeOut(100);
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(".pro-block-design").hide();
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(".pro-pitch").hide();
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(".pro-layout.no-account").hide();
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(".no-pro-layout-old").hide();
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(".pro-layout.with-account").show();

        jquery__WEBPACK_IMPORTED_MODULE_0___default()(".sub-email").html(data.email);

        let next_amount_billed = data.unit_price + " " + data.currency;
        let next_billing_date = new Date(data.next_bill_date)
          .toString()
          .split(" ")
          .splice(1, 3)
          .join(" ");

        jquery__WEBPACK_IMPORTED_MODULE_0___default()(".change-payment-method").attr("href", data.update_url);
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(".cancel-subscription")
          .attr("href", data.cancel_url)
          .on("click", _src_particles_pro_block_proModel__WEBPACK_IMPORTED_MODULE_2__["default"].cancelSub);
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(".resubscribe").hide();

        // past_due, paused aren't covered. will see if we need to?
        if (data.status === "trialing") {
          jquery__WEBPACK_IMPORTED_MODULE_0___default()(".next-billing").html(
            _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Sub_WhenTrialing")
              .replace("{{next_amount_billed}}", next_amount_billed)
              .replace("{{next_billing_date}}", next_billing_date)
          );
        } else if (data.isCancelled) {
          // status == deleted
          // cancelled but still has access
          let sub_ends_on = new Date(data.endsOn)
            .toString()
            .split(" ")
            .splice(1, 3)
            .join(" ");
          jquery__WEBPACK_IMPORTED_MODULE_0___default()(".next-billing").html(
            _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Sub_WhenCancelled")
              .replace("{{sub_ends_on}}", sub_ends_on)
          );

          jquery__WEBPACK_IMPORTED_MODULE_0___default()(".change-payment-method").hide();
          jquery__WEBPACK_IMPORTED_MODULE_0___default()(".cancel-subscription").hide();
          jquery__WEBPACK_IMPORTED_MODULE_0___default()(".resubscribe")
            .show()
            .on("click", _src_particles_pro_block_proModel__WEBPACK_IMPORTED_MODULE_2__["default"].resubscribe);
        } else {
          // active sub
          jquery__WEBPACK_IMPORTED_MODULE_0___default()(".next-billing").html(
            _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Sub_NextBilling")
              .replace("{{next_amount_billed}}", next_amount_billed)
              .replace("{{next_billing_date}}", next_billing_date)
          );
        }
      }
    },

    showSyncState: async function () {
      await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].chainRequestBackgroundOption(
        [
          { fn: "getVal", args: ["account_token"] },
          { fn: "isTrueOption", args: ["chr_pro_flag"] },
          { fn: "getVal", args: ["account_email"] },
        ],
        async function (r) {
          var token = r[0].response;
          var is_pro = r[1].response;
          var email = r[2].response;

          if (!token) {
            jquery__WEBPACK_IMPORTED_MODULE_0___default()(".signed-in-layout").hide();
            jquery__WEBPACK_IMPORTED_MODULE_0___default()(".signed-out-layout").show();
            jquery__WEBPACK_IMPORTED_MODULE_0___default()(".sync-block .pro-pitch").show();
          } else {
            jquery__WEBPACK_IMPORTED_MODULE_0___default()(".login-email").html(email);
            jquery__WEBPACK_IMPORTED_MODULE_0___default()(".signed-out-layout").hide();
            jquery__WEBPACK_IMPORTED_MODULE_0___default()(".signed-in-layout").show();
            jquery__WEBPACK_IMPORTED_MODULE_0___default()(".sync-block .pro-pitch").hide();

            if (await _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.isProUser()) {
              jquery__WEBPACK_IMPORTED_MODULE_0___default()(".sync-option-disabled").hide();
            } else {
              jquery__WEBPACK_IMPORTED_MODULE_0___default()(".sync-option-disabled").show();
            }
          }
        }
      );
    },
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ProStatusView);

/***/ }),

/***/ "./src/particles/pro_block/publicProModelMethods.js":
/*!**********************************************************!*\
  !*** ./src/particles/pro_block/publicProModelMethods.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "sendChargedEventIfNeeded": () => (/* binding */ sendChargedEventIfNeeded)
/* harmony export */ });
/* harmony import */ var _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../src/ext/util/storageUtil */ "./src/ext/util/storageUtil.js");


async function sendChargedEventIfNeeded(new_sub_data) {
  let prev_sub_data = await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_0__["default"].getDecodedVal("sub_data");

  if (
    prev_sub_data &&
    prev_sub_data.status === "trialing" &&
    new_sub_data.status === "active"
  ) {
    await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_0__["default"].setVal("sub_pro_survey", 0);

    // ke.ext.mate_events.send("charged_money");
  }
}


/***/ }),

/***/ "./src/particles/scrollbars/sModel.js":
/*!********************************************!*\
  !*** ./src/particles/scrollbars/sModel.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _src_ui_components_tooltip_help_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../src/ui_components/tooltip/help.js */ "./src/ui_components/tooltip/help.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../src/ext/kumquat_polyfill */ "./src/ext/kumquat_polyfill.js");
/* harmony import */ var _ui_components_tooltip_helpSelected__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../ui_components/tooltip/helpSelected */ "./src/ui_components/tooltip/helpSelected.js");
/* harmony import */ var smooth_scrollbar__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! smooth-scrollbar */ "./node_modules/smooth-scrollbar/index.js");
/* harmony import */ var smooth_scrollbar_plugins_overscroll__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! smooth-scrollbar/plugins/overscroll */ "./node_modules/smooth-scrollbar/plugins/overscroll/index.js");










smooth_scrollbar__WEBPACK_IMPORTED_MODULE_4__["default"].use(smooth_scrollbar_plugins_overscroll__WEBPACK_IMPORTED_MODULE_5__["default"]);

const setupScroll = function (he, h, vis, ent, db, t, trs, ot, speed) {
  // console.log(`init scrollbar #${vis}`);

  //
  // Scrollbar API:
  // https://github.com/idiotWu/smooth-scrollbar/blob/2c46e05e06cf86d0b4731563d8758af7f84ad52e/docs/api.md#scrollbarscrollto
  //
  // Overscroll plugin: 
  // https://github.com/idiotWu/smooth-scrollbar/blob/develop/docs/overscroll.md
  //

  const el = document.querySelector(`#${vis}`);

  if (el === null) {
    return;
  }

  const scrollbar = smooth_scrollbar__WEBPACK_IMPORTED_MODULE_4__["default"].init(el, {
    damping: 1.0,
    plugins: {
      overscroll: {
        effect: 'bounce',
        maxOverscroll: 150,
        damping: 1.0,
      }
    }
  });

  scrollbarsModel.addScrollInstance(trs, scrollbar);
  
  scrollbar.scrollTo(0, ot, speed);

  return false;
};

const scrollbars = {};

const scrollbarsModel = {
  addScrollInstance: function (scrollbar_name, instance) {
    scrollbars[scrollbar_name] = instance;
  },

  getScrollInstance: function (scrollbar_name) {
    return scrollbars[scrollbar_name] || null;
  },

  scrollTo: function (scrollbar_name, pos_y, callback) {
    const scrollInstance = scrollbarsModel.getScrollInstance(scrollbar_name);

    if (scrollInstance) {
      scrollInstance.scrollTo(
        this.getScrollInstance(scrollbar_name).id,
        1,
        pos_y,
        _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getAnimSpeed("slide_down")
      );
      setTimeout(callback, _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getAnimSpeed("slide_down") + 25); // weird
    }
  },

  setupTranslationScroll: function () {
    return setupScroll(
      ".translation-layout",
      298,
      "trVisibleScroll",
      "trEntireScroll",
      "dragBar",
      "track",
      "tr-scrollbar"
    );
  },

  setupHistoryPageScroll: function (scrolling) {
    //setupScroll('body', 598, 'page-vis-scroll', 'page-entire-scroll', 'page-drag', 'page-track', 'page-scrollbar', scrolling, 0);
    //events.onPageScroll();
  },

  setupHelpSelectedScroll: function (ttid, shift) {
    ttid = ttid || _ui_components_tooltip_helpSelected__WEBPACK_IMPORTED_MODULE_3__["default"].tooltipId;

    const prefix = _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getPrefix();

    // console.log('init help selected scroll', ttid, temp);

    return setupScroll(
      "." + prefix + "content-layout-" + ttid,
      238 * temp.scale - (shift || 0),
      prefix + "trVisibleLayout-" + ttid,
      prefix + "trEntireLayout-" + ttid,
      prefix + "dragBar-" + ttid,
      prefix + "track-" + ttid,
      prefix + "tr-scrollbar-" + ttid
    );
  },

  setupFromWindowDropdownScroll: function (ot) {
    return setupScroll(
      ".opt-1 .list",
      250,
      "selVisibleScroll-1",
      "selEntireScroll-1",
      "sel-dragBar-1",
      "sel-track-1",
      "sel-scrollbar-1",
      ot,
      165
    );
  },

  setupToWindowDropdownScroll: function (ot) {
    return setupScroll(
      ".opt-2 .list",
      250,
      "selVisibleScroll-2",
      "selEntireScroll-2",
      "sel-dragBar-2",
      "sel-track-2",
      "sel-scrollbar-2",
      ot,
      165
    );
  },

  setupFPDropdownScroll: function (ot) {
    return setupScroll(
      ".opt-3 .list",
      250,
      "selVisibleScroll-3",
      "selEntireScroll-3",
      "sel-dragBar-3",
      "sel-track-3",
      "sel-scrollbar-3",
      ot,
      165
    );
  },

  setupComboOptionsDropdownScroll: function (i, ot) {
    return setupScroll(
      ".opt-" + i,
      100,
      "selVisibleScroll-" + i,
      "selEntireScroll-" + i,
      "sel-db-" + i,
      "sel-tr-" + i,
      "sel-scr-" + i,
      ot,
      165
    );
  },
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (scrollbarsModel);


/***/ }),

/***/ "./src/particles/sett_tabber/tabView.js":
/*!**********************************************!*\
  !*** ./src/particles/sett_tabber/tabView.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);


const tabView = {
  displayCurrentTab: function (tab) {
    const $prev = jquery__WEBPACK_IMPORTED_MODULE_0___default()(".active-tab");
    const prev_id = +$prev.data("id");
    const $new = jquery__WEBPACK_IMPORTED_MODULE_0___default()(".tab-" + tab);

    $prev.removeClass("active-tab");
    $new.addClass("active-tab");

    if (prev_id && prev_id != tab) {
      jquery__WEBPACK_IMPORTED_MODULE_0___default()(".tc-" + prev_id).fadeOut(100, "easeInOutQuart", function () {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(".tc-" + tab).fadeIn(100);
      });
    } else if (!prev_id) {
      jquery__WEBPACK_IMPORTED_MODULE_0___default()(".tab-contents:visible").each(function () {
        if (!jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).hasClass("tc-" + tab)) {
          jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).hide();
        }
      });
    }
  },
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (tabView);


/***/ }),

/***/ "./src/particles/sync/syncUiModel.js":
/*!*******************************************!*\
  !*** ./src/particles/sync/syncUiModel.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../src/ext/kumquat_polyfill */ "./src/ext/kumquat_polyfill.js");
/* harmony import */ var _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../src/ext/util/storageUtil */ "./src/ext/util/storageUtil.js");
/* harmony import */ var _src_ui_components_pro_alert__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../src/ui_components/pro_alert */ "./src/ui_components/pro_alert.js");
/* harmony import */ var _src_lib_ga__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../src/lib/ga */ "./src/lib/ga.js");
/* harmony import */ var _ui_components_login__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../ui_components/login */ "./src/ui_components/login.js");








/**
 * Created by chernikovalexey on 02/11/17.
 */

const syncUiModel = {
  sendSyncRequest: function (method, callback, message, $btn) {
    if ($btn.hasClass("synced") || $btn.hasClass("syncing")) {
      return;
    }

    if (typeof _src_lib_ga__WEBPACK_IMPORTED_MODULE_4__.ga != "undefined") (0,_src_lib_ga__WEBPACK_IMPORTED_MODULE_4__.ga)("send", "event", "sync", "start");

    _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_2__["default"].chainRequestBackgroundOption(
      [
        { fn: "isTrueOption", args: ["chr_pro_flag"] },
        { fn: "getVal", args: ["account_token"] },
      ],
      async function (r) {
        const is_pro = r[0].response;
        const token = r[1].response;

        if (!(await _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.isProUser())) {
          _src_ui_components_pro_alert__WEBPACK_IMPORTED_MODULE_3__["default"].show(message, "sync");

          if (typeof _src_lib_ga__WEBPACK_IMPORTED_MODULE_4__.ga != "undefined")
            (0,_src_lib_ga__WEBPACK_IMPORTED_MODULE_4__.ga)("send", "event", "sync", "pro-shown");
        } else {
          if (!token) {
            _ui_components_login__WEBPACK_IMPORTED_MODULE_5__["default"].show({ is_sync: true });

            return;
          }

          $btn.addClass("syncing");

          chrome.runtime.sendMessage(
            {
              action: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.processCall("app", "sync", method),
            },
            function (r) {
              if (!r.error) {
                $btn.removeClass("syncing").addClass("synced");

                setTimeout(function () {
                  $btn.removeClass("synced");
                }, 5000);

                callback(true, r.add_rm_changes);
              } else {
                $btn.removeClass("syncing");

                alert(r.message);
                callback(false);
              }
            }
          );
        }
      }
    );
  },
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (syncUiModel);


/***/ }),

/***/ "./src/particles/tr_input/trModel.js":
/*!*******************************************!*\
  !*** ./src/particles/tr_input/trModel.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../src/ext/kumquat_polyfill */ "./src/ext/kumquat_polyfill.js");
/* harmony import */ var _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../src/ext/util/storageUtil */ "./src/ext/util/storageUtil.js");





const trModel = {
  onTextareaFocus: function () {
    jquery__WEBPACK_IMPORTED_MODULE_0___default()('.left-part').addClass('textarea-with-focus-lp');
    jquery__WEBPACK_IMPORTED_MODULE_0___default()('.action-bar').addClass('textarea-with-focus');
  },

  onTextareaBlur: function () {
    jquery__WEBPACK_IMPORTED_MODULE_0___default()('.left-part').removeClass('textarea-with-focus-lp');
    jquery__WEBPACK_IMPORTED_MODULE_0___default()('.action-bar').removeClass('textarea-with-focus');
  },

  saveValueOnKeyup: function () {
    _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_2__["default"].requestBackgroundOption('setVal', [
      'saved_val',
      jquery__WEBPACK_IMPORTED_MODULE_0___default()('.translation-input').val(),
    ]);
    return true;
  },
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (trModel);


/***/ }),

/***/ "./src/particles/translate/tModel.js":
/*!*******************************************!*\
  !*** ./src/particles/translate/tModel.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _src_particles_tr_input_trModel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../src/particles/tr_input/trModel */ "./src/particles/tr_input/trModel.js");
/* harmony import */ var _src_pages_window_ui_views_empty_trans_states__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../src/pages/window/ui_views/empty_trans_states */ "./src/pages/window/ui_views/empty_trans_states.js");
/* harmony import */ var _src_ext_util_langUtil__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../src/ext/util/langUtil */ "./src/ext/util/langUtil.js");
/* harmony import */ var _src_particles_3dots_button_3dotsView__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../src/particles/3dots_button/3dotsView */ "./src/particles/3dots_button/3dotsView.js");
/* harmony import */ var _src_ext_tpl__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../src/ext/tpl */ "./src/ext/tpl.js");
/* harmony import */ var _src_ext_api__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../src/ext/api */ "./src/ext/api.js");
/* harmony import */ var _src_ext_clipboard_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../src/ext/clipboard.js */ "./src/ext/clipboard.js");
/* harmony import */ var _src_lib_analytics__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../src/lib/analytics */ "./src/lib/analytics.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../src/ext/kumquat_polyfill */ "./src/ext/kumquat_polyfill.js");
/* harmony import */ var _src_ext_dom__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../src/ext/dom */ "./src/ext/dom.js");
/* harmony import */ var _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../src/ext/util/storageUtil */ "./src/ext/util/storageUtil.js");
/* harmony import */ var _src_ui_components_dropdown__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../src/ui_components/dropdown */ "./src/ui_components/dropdown.js");
/* harmony import */ var _src_ext_event__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../src/ext/event */ "./src/ext/event.js");
/* harmony import */ var _src_particles_listen_lModel__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../../src/particles/listen/lModel */ "./src/particles/listen/lModel.js");
/* harmony import */ var _src_particles_scrollbars_sModel__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../../src/particles/scrollbars/sModel */ "./src/particles/scrollbars/sModel.js");
/* harmony import */ var _src_ui_components_pro_alert__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../../../src/ui_components/pro_alert */ "./src/ui_components/pro_alert.js");
/* harmony import */ var _src_ui_components_notifications_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../../../src/ui_components/notifications.js */ "./src/ui_components/notifications.js");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_18__);
/* harmony import */ var _pages_window_shared__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../pages/window/shared */ "./src/pages/window/shared.js");
/* harmony import */ var _lib_ga__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../../lib/ga */ "./src/lib/ga.js");
/* harmony import */ var _src_ext_input__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../../../../src/ext/input */ "./src/ext/input.js");
/* harmony import */ var _ext_translate__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../../ext/translate */ "./src/ext/translate.js");






















// import { events } from "../../pages/window/window";
// import handlers from "../../pages/window/handlers";



let translateInputTimeout;
let prevInput = "";

const $ac_layout = jquery__WEBPACK_IMPORTED_MODULE_8___default()(".autocorrection-layout");
const $ac_word = $ac_layout.find(".ac-word");
const $input = jquery__WEBPACK_IMPORTED_MODULE_8___default()(".translation-input");

const MIN_DELAY_BETWEEN_TR = 1000;

const translateModel = {
  ctrlInstantVisibility: function (a) {
    jquery__WEBPACK_IMPORTED_MODULE_8___default()(".translate-button")[a]();
    jquery__WEBPACK_IMPORTED_MODULE_8___default()(".action-bar").addClass("centerized-ab");
  },

  showLoading: function () {
    jquery__WEBPACK_IMPORTED_MODULE_8___default()(".translate-button").hide();
    jquery__WEBPACK_IMPORTED_MODULE_8___default()(".loading").show();
  },

  hideLoading: function () {
    jquery__WEBPACK_IMPORTED_MODULE_8___default()(".loading").hide();
    jquery__WEBPACK_IMPORTED_MODULE_8___default()(".translate-button").show();
  },

  getTranslation: async function (c, forced, val, retranslation) {
    if (flags.isTranslating) {
      return;
    }

    if (!retranslation) {
      await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_11__["default"].encodeAndSet("caret_positions", {
        start: $input.get(0).selectionStart,
        end: $input.get(0).selectionEnd,
      });
    }

    const currentInput = (val || $input.val()).trim();

    if (currentInput.length > _src_ext_api__WEBPACK_IMPORTED_MODULE_5__.MAX_TEXT_LEN) {
      return;
    }

    if (lodash__WEBPACK_IMPORTED_MODULE_18___default().isEmpty(currentInput)) {
      prevInput = currentInput;
      _src_pages_window_ui_views_empty_trans_states__WEBPACK_IMPORTED_MODULE_1__["default"].displayEmptiness();
      return;
    } else if (currentInput === prevInput && !forced) {
      return;
    } else {
      prevInput = currentInput;
      _src_pages_window_ui_views_empty_trans_states__WEBPACK_IMPORTED_MODULE_1__["default"].displayWorkaround();
    }

    flags.isTranslating = true;

    if (!retranslation) {
      translateModel.showLoading();
    }

    _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_11__["default"].chainRequestBackgroundOption(
      [
        { fn: "isTrueOption", args: ["autocorrection"] },
        { fn: "isTrueOption", args: ["autoswap"] },
      ],
      function (r) {
        const autocorrection = r[0].response;
        const autoswap = r[1].response;

        _ext_translate__WEBPACK_IMPORTED_MODULE_22__["default"].getTranslation(
          {
            identificator: "window",
            text: currentInput,
            source: "popup",
          },
          async function (data) {
            // console.log(data);
            if (!data || data.no_results) {
              _pages_window_shared__WEBPACK_IMPORTED_MODULE_19__.$no_results.show();
              translateModel.hideLoading();

              return;
            }

            _pages_window_shared__WEBPACK_IMPORTED_MODULE_19__.$no_results.hide();

            //
            // lang autoswap

            if (data.reversed) {
              _src_ui_components_dropdown__WEBPACK_IMPORTED_MODULE_12__.data.callback(1, data.to, null, true);
              _src_ui_components_dropdown__WEBPACK_IMPORTED_MODULE_12__.data.callback(2, data.from, null, false);
            }

            //
            // autoswap end

            flags.isTranslating = false;
            translateModel.hideLoading();

            jquery__WEBPACK_IMPORTED_MODULE_8___default()(".offline-cap").hide();

            if (data.offline) {
              jquery__WEBPACK_IMPORTED_MODULE_8___default()(".offline-cap").show();
              _src_particles_listen_lModel__WEBPACK_IMPORTED_MODULE_14__["default"].ctrlRawVisibility(false, _src_ext_util_langUtil__WEBPACK_IMPORTED_MODULE_2__.getToLang());
            } else if (data.error) {
              c({
                network_error: true,
              });
            } else if (!retranslation && data.correction && autocorrection) {
              flags.isAutocorrected = true;
              temp.valueBeforeAutocorrection = data.old_data.text;

              $input.val(data.correction);
              _src_particles_tr_input_trModel__WEBPACK_IMPORTED_MODULE_0__["default"].saveValueOnKeyup();

              translateModel.getTranslation(c, false, data.correction, true);

              // if (typeof ga != "undefined")
              //   ga("send", "event", "autocorrection", "clicked");

              _src_lib_analytics__WEBPACK_IMPORTED_MODULE_7__["default"].fireEvent("window_autocorrection_clicked");
            } else {
              if (!retranslation) {
                flags.isAutocorrected = false;
              }

              data.code = _src_ext_tpl__WEBPACK_IMPORTED_MODULE_4__.compile(data.code, {
                from: await _src_ext_util_langUtil__WEBPACK_IMPORTED_MODULE_2__.getFromLang(),
                to: await _src_ext_util_langUtil__WEBPACK_IMPORTED_MODULE_2__.getToLang(),
              });

              c(data);
            }
          }
        );
      }
    );
  },

  routeTranslation: async function (d) {
    if (d.network_error) {
      _src_pages_window_ui_views_empty_trans_states__WEBPACK_IMPORTED_MODULE_1__["default"].displayEmptiness();
      _src_particles_listen_lModel__WEBPACK_IMPORTED_MODULE_14__["default"].ctrlRawVisibility(undefined, "");
      _src_particles_listen_lModel__WEBPACK_IMPORTED_MODULE_14__["default"].ctrlTransVisibility();
      return;
    }

    flags.isPrevTranslationMulti = flags.isCurrentTranslationMulti;
    flags.isCurrentTranslationMulti = d.isMulti;
    temp.currentDetectedLang = d.detected_lang || "";
    temp.currentFromLang = d.from;
    _src_particles_listen_lModel__WEBPACK_IMPORTED_MODULE_14__["default"].ctrlRawVisibility(undefined, d.detected_lang);
    translateModel.displayTranslation(d.code, d);

    if (!flags.instant || flags.isAutocorrected) {
      const caret_positions = await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_11__["default"].getDecodedVal("caret_positions");
      jquery__WEBPACK_IMPORTED_MODULE_8___default()(".translation-input").createSelection(
        caret_positions.start,
        caret_positions.end
      );
    }
  },

  displayTranslation: function (code, d) {
    const toggleLayout = function () {
      jquery__WEBPACK_IMPORTED_MODULE_8___default()(".translation-layout").fadeOut(125, "easeInOutCirc", function () {
        jquery__WEBPACK_IMPORTED_MODULE_8___default()(".translation-layout")
          .html(code)
          .fadeIn(125, "easeInOutCirc", async function () {
            _src_particles_listen_lModel__WEBPACK_IMPORTED_MODULE_14__["default"].ctrlTransVisibility(false, d.to);
            _src_particles_listen_lModel__WEBPACK_IMPORTED_MODULE_14__["default"].ctrlSynonymVis(false, d.to);
            events.listenTranslation();
            events.listenSynonym();
            events.useSynonym();
            events.showArticleUpgrade();
            events.showIpaUpgrade();

            _src_particles_3dots_button_3dotsView__WEBPACK_IMPORTED_MODULE_3__["default"].fillContextMenu(
              jquery__WEBPACK_IMPORTED_MODULE_8___default()(".more-butt0n"),
              d.from == "auto" ? d.detected_lang : d.from,
              d.to
            );

            if (d.from_unmodified === "auto") {
              jquery__WEBPACK_IMPORTED_MODULE_8___default()(".from-lang .select")
                .html("")
                .append(
                  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_9__.ke.getLocale(
                    "Kernel_Lang_" + _src_ext_util_langUtil__WEBPACK_IMPORTED_MODULE_2__.getLangNameByKey(d.detected_lang)
                  )
                );
            }

            if (!flags.isNarrow && flags.isAutocorrected) {
              $ac_word.html(temp.valueBeforeAutocorrection);
              $ac_layout.show();
            } else {
              $ac_layout.hide();
            }

            if (!d.isMulti && d.json[3].length < 35) {
              jquery__WEBPACK_IMPORTED_MODULE_8___default()(".padded-single-translation").addClass(
                "short-padded-single-translation"
              );
            }

            // show gender
            if (d.json[8] && await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_11__["default"].isTrueOption("show_articles")) {
              if (await _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_9__.ke.isProUser()) {
                jquery__WEBPACK_IMPORTED_MODULE_8___default()(".original-article")
                  .html(d.json[8])
                  .slideDown(125, handlers.adjustOriginalIpa);
                jquery__WEBPACK_IMPORTED_MODULE_8___default()(".translation-input").addClass("with-article");
              } else {
                jquery__WEBPACK_IMPORTED_MODULE_8___default()(".original-article")
                  .addClass("blurred-out")
                  .html("xyz")
                  .slideDown(125, handlers.adjustOriginalIpa);
                jquery__WEBPACK_IMPORTED_MODULE_8___default()(".translation-input").addClass("with-article");
              }
            } else {
              jquery__WEBPACK_IMPORTED_MODULE_8___default()(".original-article").slideUp(125, handlers.adjustOriginalIpa);
              jquery__WEBPACK_IMPORTED_MODULE_8___default()(".translation-input").removeClass("with-article");
            }

            // show ipa/translit for original
            let orig_translit = _src_ext_api__WEBPACK_IMPORTED_MODULE_5__.getSourceTranslitFromJson(d.json);

            if (await _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_9__.ke.isProUser()) {
              jquery__WEBPACK_IMPORTED_MODULE_8___default()(".original-ipa").removeClass("blurred-out").html(orig_translit);
            } else {
              orig_translit = d.json[1];

              jquery__WEBPACK_IMPORTED_MODULE_8___default()(".mv-translit").addClass("blurred-out");

              jquery__WEBPACK_IMPORTED_MODULE_8___default()(".original-ipa").addClass("blurred-out").html(orig_translit);
            }

            if (orig_translit && await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_11__["default"].isTrueOption("show_ipa")) {
              jquery__WEBPACK_IMPORTED_MODULE_8___default()(".original-ipa").show();
            } else {
              jquery__WEBPACK_IMPORTED_MODULE_8___default()(".original-ipa").hide();
            }

            if (!(await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_11__["default"].isTrueOption("show_ipa"))) {
              jquery__WEBPACK_IMPORTED_MODULE_8___default()(".mv-translit").hide();
            }

            if (_src_ext_util_langUtil__WEBPACK_IMPORTED_MODULE_2__.isHieroglyphical(d.to)) {
              jquery__WEBPACK_IMPORTED_MODULE_8___default()(".translation-layout").addClass("non-bold-contents");
            } else {
              jquery__WEBPACK_IMPORTED_MODULE_8___default()(".translation-layout").removeClass("non-bold-contents");
            }

            if (!(await _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_9__.ke.isProUser()) && jquery__WEBPACK_IMPORTED_MODULE_8___default()(".v-item")[1] && jquery__WEBPACK_IMPORTED_MODULE_8___default()(".variants-by-pos")[0]) {
              const synonyms_paywall_height =
                jquery__WEBPACK_IMPORTED_MODULE_8___default()(".variants-by-pos").height() -
                parseInt(jquery__WEBPACK_IMPORTED_MODULE_8___default()(".synonyms-paywall").css("top"));
              const synonyms_paywall_top =
                _src_ext_dom__WEBPACK_IMPORTED_MODULE_10__["default"].getPosition(jquery__WEBPACK_IMPORTED_MODULE_8___default()(".v-item")[1])[1] -
                _src_ext_dom__WEBPACK_IMPORTED_MODULE_10__["default"].getPosition(jquery__WEBPACK_IMPORTED_MODULE_8___default()(".variants-by-pos")[0])[1];
              jquery__WEBPACK_IMPORTED_MODULE_8___default()(".synonyms-paywall").css({
                top: synonyms_paywall_top + "px",
                height: synonyms_paywall_height + "px",
                "padding-top": 234 - synonyms_paywall_top + "px", // 217 is a constant
              });
              jquery__WEBPACK_IMPORTED_MODULE_8___default()(".synonyms-paywall .upgrade-cta").on("click", () => {
                _src_ui_components_pro_alert__WEBPACK_IMPORTED_MODULE_16__["default"].show(
                  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_9__.ke.getLocale("Pro_SynonymsPaywall"),
                  "toolbar-synonyms"
                );
              });
            } else {
              jquery__WEBPACK_IMPORTED_MODULE_8___default()(".synonyms-paywall").remove();
            }

            let sel = ".main-variant-wrap";

            if (!d.isMulti) {
              sel = ".padded-single-translation";
            }

            jquery__WEBPACK_IMPORTED_MODULE_8___default()(sel).dblclick(function () {
              const text =
                jquery__WEBPACK_IMPORTED_MODULE_8___default()(this).find(".mv-text-part").text().trim() ||
                jquery__WEBPACK_IMPORTED_MODULE_8___default()(this).find(".tpart").text().trim();
              _src_ext_clipboard_js__WEBPACK_IMPORTED_MODULE_6__["default"].copyToClipboard(text);
              _src_ui_components_notifications_js__WEBPACK_IMPORTED_MODULE_17__["default"].show(
                _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_9__.ke.getLocale("Window_TranslationCopied"),
                2500
              );

              // if (typeof ga != "undefined")
              //   ga("send", "event", "window", "double-click-copy");

              _src_lib_analytics__WEBPACK_IMPORTED_MODULE_7__["default"].fireEvent("window_double_click_copy");
            });

            _src_particles_scrollbars_sModel__WEBPACK_IMPORTED_MODULE_15__["default"].setupTranslationScroll();
          });
      });
    };

    if (flags.isPrevTranslationMulti) {
      jquery__WEBPACK_IMPORTED_MODULE_8___default()(".v-closest-wrap")
        .slideUp(50, _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_9__.ke.getAnimType("slide_up"))
        .promise()
        .done(function () {
          jquery__WEBPACK_IMPORTED_MODULE_8___default()(".v-pos")
            .fadeOut(25, _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_9__.ke.getAnimType("fade_out"))
            .promise()
            .done(function () {
              jquery__WEBPACK_IMPORTED_MODULE_8___default()(".main-variant-wrap")
                .slideUp(75, _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_9__.ke.getAnimType("slide_up"))
                .promise()
                .done(function () {
                  toggleLayout();
                });
            });
        });
    } else {
      toggleLayout();
    }
  },

  // ===========================
  //

  translateSimple: async function (event, forced, val) {
    await translateModel.getTranslation(
      translateModel.routeTranslation,
      forced,
      val
    );
    translateModel.toggleControls(val);
  },

  toggleControls: function (val) {
    handlers.toggleRawControls(lodash__WEBPACK_IMPORTED_MODULE_18___default().isEmpty(val || $input.val()));
  },

  lastShortcutTranslationtime: Date.now(),

  checkTranslationShortcut: async function (event, type) {
    const now = Date.now();
    const is_enter = _src_ext_event__WEBPACK_IMPORTED_MODULE_13__.is(
      _src_ext_event__WEBPACK_IMPORTED_MODULE_13__.getKeyCodeCombinationFromName("enter", true),
      event
    );
    const nl =
      (_src_ext_event__WEBPACK_IMPORTED_MODULE_13__.isDown("shift") && is_enter) ||
      (_src_ext_event__WEBPACK_IMPORTED_MODULE_13__.isDown("ctrl") && is_enter) ||
      (_src_ext_event__WEBPACK_IMPORTED_MODULE_13__.isDown("alt") && is_enter) ||
      (_src_ext_event__WEBPACK_IMPORTED_MODULE_13__.isDown("cmd") && is_enter);

    if (type == 1 && nl) {
      if (
        now - translateModel.lastShortcutTranslationtime >=
        MIN_DELAY_BETWEEN_TR
      ) {
        translateModel.lastShortcutTranslationtime = now;
        await translateModel.getTranslation(translateModel.routeTranslation);
      }

      event.preventDefault();
    } else if (type == 2 && !nl && is_enter) {
      if (
        now - translateModel.lastShortcutTranslationtime >=
        MIN_DELAY_BETWEEN_TR
      ) {
        translateModel.lastShortcutTranslationtime = now;
        await translateModel.getTranslation(translateModel.routeTranslation);
      }

      event.preventDefault();
    } else if (type == 2 && nl) {
      const val = $input.val();
      $input.val(val + "\n");
    }
  },

  translateOnKeyCombinations: async function (event) {
    if (_src_ext_event__WEBPACK_IMPORTED_MODULE_13__.isDown((_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_9__.ke.isMac ? "cmd" : "ctrl") + "+enter")) {
      event.stopPropagation();
      event.preventDefault();
      await translateModel.getTranslation(translateModel.routeTranslation);
    }
  },

  translateOnKeyup: function () {
    clearTimeout(translateInputTimeout);

    translateModel.toggleControls();

    translateInputTimeout = setTimeout(async function () {
      translateInputTimeout = null;
      await translateModel.getTranslation(translateModel.routeTranslation);
    }, 725);

    return true;
  },
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (translateModel);


/***/ }),

/***/ "./src/particles/translate_ctt/tcModel.js":
/*!************************************************!*\
  !*** ./src/particles/translate_ctt/tcModel.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../src/ext/kumquat_polyfill */ "./src/ext/kumquat_polyfill.js");
/* harmony import */ var _src_ext_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../src/ext/dom */ "./src/ext/dom.js");
/* harmony import */ var _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../src/ext/util/storageUtil */ "./src/ext/util/storageUtil.js");
/* harmony import */ var _src_particles_listen_lModel__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../src/particles/listen/lModel */ "./src/particles/listen/lModel.js");
/* harmony import */ var _src_ext_util_langUtil__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../src/ext/util/langUtil */ "./src/ext/util/langUtil.js");
/* harmony import */ var _src_particles_3dots_button_3dotsModel__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../src/particles/3dots_button/3dotsModel */ "./src/particles/3dots_button/3dotsModel.js");
/* harmony import */ var _src_particles_3dots_button_3dotsView__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../src/particles/3dots_button/3dotsView */ "./src/particles/3dots_button/3dotsView.js");
/* harmony import */ var _src_ext_tpl__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../src/ext/tpl */ "./src/ext/tpl.js");
/* harmony import */ var _src_ext_api__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../src/ext/api */ "./src/ext/api.js");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var _ext_translate__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../ext/translate */ "./src/ext/translate.js");
/* harmony import */ var _ui_components_tooltip_helpSelected__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../ui_components/tooltip/helpSelected */ "./src/ui_components/tooltip/helpSelected.js");
/* harmony import */ var _scrollbars_sModel__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../scrollbars/sModel */ "./src/particles/scrollbars/sModel.js");
/* harmony import */ var _pages_content_initContentDropdowns__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../pages/content/initContentDropdowns */ "./src/pages/content/initContentDropdowns.js");






// import scrollbarsModel from "/src/particles/scrollbars/sModel";







// import { initDropdowns } from "../../pages/content/content";




const INLINE_OPT_MAX_SHOWS = 2;

const tooltipTranslationModel = {
  currentSelectedText: "",

  getCurrentSelectedText: function () {
    return tooltipTranslationModel.currentSelectedText;
  },

  setCurrentSelectedText: function (text) {
    tooltipTranslationModel.currentSelectedText = text;
  },

  getSelection: function (win) {
    win = win || window;

    let selection = null;
    if (win.getSelection) {
      selection = win.getSelection();
    } else if (document.getSelection) {
      selection = document.getSelection();
    }

    return selection;
  },

  getSelectedText: function (win) {
    const sel = this.getSelection(win);
    if (sel) {
      return sel.toString().trim();
    }

    return "";
  },

  getTranslation: function (t, c, from, to, id, type) {
    if (lodash__WEBPACK_IMPORTED_MODULE_10___default().isEmpty(t) || flags.isTranslating) {
      return;
    }

    // cut off the rest if the text is too long
    t = t.substr(0, _src_ext_api__WEBPACK_IMPORTED_MODULE_9__.MAX_TEXT_LEN);

    flags.isTranslating = true;

    _ext_translate__WEBPACK_IMPORTED_MODULE_11__["default"].getTranslation(
      {
        identificator: "tooltip",
        type: type,
        text: t,
        from: from,
        to: to,
        prefix: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix(),
        id: id,
        source: document.location.href,
      },
      function (data) {
        flags.isCurrentTranslationMulti = data.isMulti;
        flags.isTranslating = false;

        if (data.offline) {
          c(true, data);
        } else {

          // console.log("tcModel / getTranslation / data", data);

          data.code = _src_ext_tpl__WEBPACK_IMPORTED_MODULE_8__.compile(data.code, {
            from: data.from === "auto" ? data.detected_lang : data.from,
            to: data.to,
          });

          c(false, data);

          temp.currentDetectedLang = data.detected_lang || "";
        }
      }
    );
  },

  display: function (is_offline, data, manual_show) {
    if (_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.section === "pdf_tooltip") {
      data.old_data.id = "null";
    }

    const $tt = jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "tooltip-" + data.old_data.id);
    let with_info_wrap = false;

    _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].requestProStatus((isPro) => {
      _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].chainRequestBackgroundOption(
        [
          { fn: "getIntValue", args: ["double_click_inline_shows"] },
          { fn: "getIntValue", args: ["selection_inline_shows"] },
          { fn: "getIntValue", args: ["new_settings_counter"] },
          { fn: "isTrueOption", args: ["show_ipa"] },
          { fn: "isTrueOption", args: ["show_articles"] },
          { fn: "isTrueOption", args: ["chr_pro_flag"] },
        ],
        function (r) {
          const dd_shows = r[0].response;
          const sel_shows = r[1].response;
          const sett_shows = r[2].response;
          const ipa = r[3].response;
          const articles = r[4].response;
          const pro = r[5].response;

          if (!isPro) {
            events.showUpgradeForIpaAndArticles();
          }

          // console.log({ data, dd_shows });

          if (
            data.old_data.type === "double-click" &&
            dd_shows < INLINE_OPT_MAX_SHOWS
          ) {
            $tt
              .find(
                "." +
                  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
                  "ddopt-" +
                  data.old_data.id +
                  "." +
                  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
                  "hide"
              )
              .removeClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "hide");
            with_info_wrap = true;

            // increment inline option shows
            _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].requestBackgroundOption("setVal", [
              "double_click_inline_shows",
              dd_shows + 1,
            ]);
          } else {
            $tt
              .find(
                "." +
                  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
                  "ddopt-" +
                  data.old_data.id +
                  ":not(." +
                  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
                  "hide)"
              )
              .addClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "hide");
          }

          if (
            data.old_data.type === "selection" &&
            sel_shows < INLINE_OPT_MAX_SHOWS
          ) {
            $tt
              .find(
                "." +
                  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
                  "selopt-" +
                  data.old_data.id +
                  "." +
                  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
                  "hide"
              )
              .removeClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "hide");
            with_info_wrap = true;

            // increment inline option shows
            _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].requestBackgroundOption("setVal", [
              "selection_inline_shows",
              sel_shows + 1,
            ]);
          } else {
            $tt
              .find(
                "." +
                  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
                  "selopt-" +
                  data.old_data.id +
                  ":not(." +
                  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
                  "hide)"
              )
              .addClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "hide");
          }

          if (data.json[1].length <= _src_ext_api__WEBPACK_IMPORTED_MODULE_9__.MAX_IPA_LEN) {
            jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "original-wrap").show();
          }

          if (
            $tt.find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "synonyms-paywall")[0] &&
            $tt.find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "v-item")[1] &&
            $tt.find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "variants-by-pos")[0]
          ) {
            // const synonyms_paywall_height =
            //   $tt.find("." + ke.getPrefix() + "variants-by-pos").height() -
            //   parseInt(
            //     $tt.find("." + ke.getPrefix() + "synonyms-paywall").css("top")
            //   );
            // const synonyms_paywall_top =
            //   dom.getPosition($tt.find("." + ke.getPrefix() + "v-item")[1])[1] -
            //   dom.getPosition(
            //     $tt.find("." + ke.getPrefix() + "variants-by-pos")[0]
            //   )[1] -
            //   3;
            // $tt.find("." + ke.getPrefix() + "synonyms-paywall").css({
            //   top: synonyms_paywall_top + "px",
            //   height: synonyms_paywall_height + "px",
            //   "padding-top": 103 - synonyms_paywall_top + "px", // 217 is a constant
            // });
            // $tt
            //   .find(
            //     "." +
            //       ke.getPrefix() +
            //       "synonyms-paywall ." +
            //       ke.getPrefix() +
            //       "upgrade-cta"
            //   )
            //   .on("click", () => {
            //     let plan = "";
            //     // if (ke.isSubscriptionBased) {
            //     plan = "annual,";
            //     // }

            //     chrome.runtime
            //       .sendMessage({
            //         action: ke.processCall("app", "opt", "newTab"),
            //         url: chrome.runtime.getURL(
            //           "options.html#start_purchase," + plan + "tooltip-synonyms"
            //         ),
            //       })
            //       .then();

            //     chrome.runtime
            //       .sendMessage({
            //         action: ke.processCall(
            //           "app",
            //           "commands",
            //           "sendAnalyticsEvent"
            //         ),
            //         cat: "tooltip",
            //         event: "upgrade-to-pro-synonyms",
            //       })
            //       .then();
            //   });
          } else {
            $tt.find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "synonyms-paywall").remove();

            // show pro promo to free users
            // but not always so they see the tooltip without ads too
            // also avoid showing two pro promos at the same time not clatter things up
            // if (!isPro && Math.random() < 0.5 && !with_info_wrap) {
            //   $tt
            //     .find(
            //       "." +
            //         ke.getPrefix() +
            //         "pp-" +
            //         data.old_data.id +
            //         "." +
            //         ke.getPrefix() +
            //         "hide"
            //     )
            //     .removeClass(ke.getPrefix() + "hide")
            //     .on("click", () => {
            //       let plan = "";
            //       // if (ke.isSubscriptionBased) {
            //       plan = "annual,";
            //       // }

            //       chrome.runtime
            //         .sendMessage({
            //           action: ke.processCall("app", "opt", "newTab"),
            //           url: chrome.runtime.getURL(
            //             "options.html#start_purchase," +
            //               plan +
            //               "tooltip-routine-promo"
            //           ),
            //         })
            //         .then();
            //     });
            //   with_info_wrap = true;
            // }
          }

          if (!ipa) {
            $tt.find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "mv-translit").remove();
          }

          if (with_info_wrap) {
            $tt
              .find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "help-selected-wrap")
              .addClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "with-info-warn");
          } else {
            $tt
              .find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "help-selected-wrap")
              .removeClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "with-info-warn");
          }
        }
      );
    });

    if (!manual_show) {
      _ui_components_tooltip_helpSelected__WEBPACK_IMPORTED_MODULE_12__["default"].toggleLoadingInTooltip(data.old_data.id, false);

      if (is_offline) {
        _ui_components_tooltip_helpSelected__WEBPACK_IMPORTED_MODULE_12__["default"].toggleOfflineInTooltip(data.old_data.id, true);
        return;
      }

      _ui_components_tooltip_helpSelected__WEBPACK_IMPORTED_MODULE_12__["default"].setTooltipContents(data.old_data.id, data.code);
    }

    const tt_y_crop = 0;

    if ($tt.find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "top-arr0w").is(":visible")) {
      $tt
        .find("#" + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "tr-scrollbar")
        .addClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "top-scroll");
    }

    $tt
      .find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "from-flag")
      .attr("src", _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.pathToExt + "images/flags/" + data.from + "@2x.png");
    $tt
      .find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "to-flag")
      .attr("src", _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.pathToExt + "images/flags/" + data.to + "@2x.png");

    //
    // init inline lang selectors
    //

    //handlers.lastTranslationCallArgs.from = data.from; // update it in case it was `auto`
    (0,_pages_content_initContentDropdowns__WEBPACK_IMPORTED_MODULE_14__.initDropdowns)(data.from);
    $tt
      .find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "swap-arrow")
      // .off()
      .on("click", handlers.reverseTranslation);

    //
    // -=-=-=-=-
    //

    if (!data.isMulti && data.json[3].length < 35) {
      $tt
        .find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "padded-single-translation")
        .addClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "short-padded-single-translation");
    }

    if (_src_ext_util_langUtil__WEBPACK_IMPORTED_MODULE_5__.isHieroglyphical(data.to)) {
      $tt
        .find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "content-layout")
        .addClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "non-bold-contents");
    } else {
      $tt
        .find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "content-layout")
        .removeClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "non-bold-contents");
    }

    _src_particles_listen_lModel__WEBPACK_IMPORTED_MODULE_4__["default"].ctrlTooltipOrigVisibility(false, data.from, $tt);
    _src_particles_listen_lModel__WEBPACK_IMPORTED_MODULE_4__["default"].ctrlTooltipTransVisibility(false, data.to, $tt);
    _src_particles_listen_lModel__WEBPACK_IMPORTED_MODULE_4__["default"].ctrlSynonymVis(false, data.to, $tt);

    window.events.listen();
    window.events.listenSynonym();
    //events.reverseTranslation();
    window.events.settings();

    // check for that unpinned window translator in pdf files
    if (window.events.unpin) {
      window.events.unpin();
    }

    $tt
      .find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "small-copy-button")
      .on("click", _src_particles_3dots_button_3dotsModel__WEBPACK_IMPORTED_MODULE_6__["default"].copySynonym);

    if (flags.netflix_player_loaded) {
      $tt
        .find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "help-selected-wrap")
        .addClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "with-netflix-buttons");
      $tt.find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "netflix-buttons").show();

      $tt
        .find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "netflix-save")
        .on("click", handlers.netflix.save);
      $tt
        .find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "netflix-continue")
        .on("click", handlers.netflix.continue);

      if (temp.wordlist_id) {
        $tt
          .find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "netflix-words")
          .on("click", handlers.netflix.viewSavedWords);
      } else {
        $tt
          .find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "netflix-buttons")
          .css("display", "flex")
          .css("align-items", "center");
        $tt.find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "netflix-words").remove();
      }
    }

    if (data.old_data.type === "double-click") {
      events.doubleClickOptionActions(data.old_data.id);
    }

    if (data.old_data.type === "selection") {
      events.selectionOptionActions(data.old_data.id);
    }

    _ui_components_tooltip_helpSelected__WEBPACK_IMPORTED_MODULE_12__["default"].fadeInTooltip(data.old_data.id, function () {
      _src_particles_3dots_button_3dotsView__WEBPACK_IMPORTED_MODULE_7__["default"].fillContextMenu(
        jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "more-butt0n"),
        data.from,
        data.to,
        data.old_data.id
      );
    });

    // check for pdf_tooltip.js
    // b/c there's no `hideSelectionButton` in its handlers object
    // so it bails out with an unsafe-eval error 
    if (handlers.hideSelectionButton) {
      setTimeout(handlers.hideSelectionButton, 250);
    }
  },

  showTranslation: function (text, from, to, win, iframe, type) {
    const that = this;

    // console.log({ fn: "showTranslation", arguments });

    _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_3__["default"].chainRequestBackgroundOption(
      [
        { fn: "isTrueOption", args: ["dark_mode"] },
        { fn: "getIntValue", args: ["tooltip_scale"] },
      ],
      function (r) {
        flags.dark_mode = r[0].response;

        // console.log('tooltip scale:', r[1].response);

        let id;

        const selection = that.getSelection(win);
        let selected_text = selection.toString();

        if (selected_text) {
          handlers.lastTranslationCallArgs.selectionBB = selection
            .getRangeAt(0)
            .getBoundingClientRect();
          handlers.lastTranslationCallArgs.text = selected_text;

          id = _ui_components_tooltip_helpSelected__WEBPACK_IMPORTED_MODULE_12__["default"].showTooltip(selection, win, iframe, r[1].response);
          _ui_components_tooltip_helpSelected__WEBPACK_IMPORTED_MODULE_12__["default"].toggleLoadingInTooltip(id, true);
        } else if (
          handlers.lastTranslationCallArgs.selectionBB &&
          handlers.lastTranslationCallArgs.text
        ) {
          //handlers.lastTranslationCallArgs.from = from;
          //handlers.lastTranslationCallArgs.to = to;

          id = _ui_components_tooltip_helpSelected__WEBPACK_IMPORTED_MODULE_12__["default"].showTooltip(
            handlers.lastTranslationCallArgs.selectionBB,
            win,
            iframe,
            r[1].response
          );
          _ui_components_tooltip_helpSelected__WEBPACK_IMPORTED_MODULE_12__["default"].toggleLoadingInTooltip(id, true);

          selected_text = handlers.lastTranslationCallArgs.text;
        } else {
          return;
        }

        tooltipTranslationModel.getTranslation(
          selected_text,
          function (is_offline, data) {
            // console.log({ data });
            // setting it here, so `from` is never `auto`
            // it's useless, we always need proper languages for reverse, etc.
            handlers.lastTranslationCallArgs.from = data.from;
            handlers.lastTranslationCallArgs.to = data.to;

            jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "tooltip-" + id)
              .find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "listen-original")
              .attr(
                "data-from",
                data.from === "auto" ? data.detected_lang : data.from
              );

            jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "tooltip-" + id)
              .find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "listen-translation")
              .attr("data-to", data.to);

            tooltipTranslationModel.display(is_offline, data);
            // TODO: this enables scroll, but I guess it should happen somewhere else
            _scrollbars_sModel__WEBPACK_IMPORTED_MODULE_13__["default"].setupHelpSelectedScroll(id);
          },
          from,
          to,
          id,
          type
        );
      }
    );
  },
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (tooltipTranslationModel);


/***/ }),

/***/ "./src/templates/helpTooltip.js":
/*!**************************************!*\
  !*** ./src/templates/helpTooltip.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const helpTooltip =
  '\
        <div class="help-tt-wrap">\
          <div class="text-layout">\
            <div class="text-container"><%=content%></div>\
          </div>\
        </div>\
      ';

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (helpTooltip);


/***/ }),

/***/ "./src/templates/simpleTooltip.js":
/*!****************************************!*\
  !*** ./src/templates/simpleTooltip.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const simpleTooltip =
  '\
        <div class="<%=prefix%>tooltip-main-wrap <%=prefix%>tooltip-<%=ttid%> <%=prefix%>t" id="<%=prefix%>tooltip-wrap" data-ttid="<%=ttid%>">\
          <div class="<%=prefix%>t <%=prefix%>inside-layout">\
            <div class="<%=prefix%>t <%=prefix%>content"><%=content%></div>\
          </div>\
        </div>\
      ';

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (simpleTooltip);


/***/ }),

/***/ "./src/templates/translationTooltipTemplate.js":
/*!*****************************************************!*\
  !*** ./src/templates/translationTooltipTemplate.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const translationTooltipTemplate =
  '\
        <div class="<%=prefix%>t <%=prefix%>help-selected-wrap <%=prefix%>hsw-<%=ttid%>">\
          <div class="<%=prefix%>t <%=prefix%>help-inside-layout <%=prefix%>hil-<%=ttid%>">\
          <div class="<%=prefix%>unpinned-utils">\
                <div class="<%=prefix%>pro-img"></div>\
                <div class="<%=prefix%>close-unpinned"></div>\
            </div>\
            <div class="<%=prefix%>utils">\
                <div title="<%=title_listen_original%>" class="<%=prefix%>util-butt0n <%=prefix%>listen-original" data-from="<%=from%>"></div>\
                <div title="<%=title_settings%>" class="<%=prefix%>util-butt0n <%=prefix%>settings"></div>\
                <div title="<%=title_unpin%>" class="<%=prefix%>util-butt0n <%=prefix%>unpin"></div>\
                <div title="<%=title_show_reversed%>" class="<%=prefix%>show-reversed">\
                    <img class="<%=prefix%>flag <%=prefix%>select <%=prefix%>from-flag" data-for-serial="1">\
                    <div class="<%=prefix%>swap-arrow"></div>\
                    <img class="<%=prefix%>flag <%=prefix%>select <%=prefix%>to-flag" data-for-serial="2">\
                    <div class="<%=prefix%>ui_selector">\
                        <div class="<%=prefix%>options-arrow"></div>\
                        <div class="<%=prefix%>options <%=prefix%>opt-1 <%=prefix%>standalone" data-serial="1">\
                            <div class="<%=prefix%>dd-search">\
                                <input class="<%=prefix%>dd-input" type="text" data-dir="from" placeholder="<%=lang_search%>">\
                            </div>\
                            <div id="selVisibleScroll-1">\
                                <div id="selEntireScroll-1">\
                                    <div class="<%=prefix%>inner-options-layout">\
                                        <ul class="<%=prefix%>list"></ul>\
                                    </div>\
                                </div>\
                                <div id="sel-scrollbar-1">\
                                    <div id="sel-track-1">\
                                        <div id="sel-dragBar-1"></div>\
                                    </div>\
                                </div>\
                            </div>\
                        </div>\
                        <div class="<%=prefix%>options <%=prefix%>opt-2 <%=prefix%>standalone" data-serial="2">\
                            <div class="<%=prefix%>dd-search">\
                                <input class="<%=prefix%>dd-input" type="text" data-dir="to" placeholder="<%=lang_search%>">\
                            </div>\
                            <div id="selVisibleScroll-2">\
                                <div id="selEntireScroll-2">\
                                    <div class="<%=prefix%>inner-options-layout">\
                                        <ul class="<%=prefix%>list"></ul>\
                                    </div>\
                                </div>\
                                <div id="sel-scrollbar-2">\
                                    <div id="sel-track-2">\
                                        <div id="sel-dragBar-2"></div>\
                                    </div>\
                                </div>\
                            </div>\
                        </div>\
                    </div>\
                </div>\
            </div>\
            <div class="<%=prefix%>trVisibleLayout" id="<%=prefix%>trVisibleLayout-<%=ttid%>">\
              <div class="<%=prefix%>trEntireLayout" id="<%=prefix%>trEntireLayout-<%=ttid%>">\
                <div class="<%=prefix%>t <%=prefix%>content-layout <%=prefix%>content-layout-<%=ttid%>">\
                <%=content%></div>\
              </div>\
            </div>\
            \
            <div class="<%=prefix%>tr-scrollbar" id="<%=prefix%>tr-scrollbar-<%=ttid%>">\
             <div class="<%=prefix%>track" id="<%=prefix%>track-<%=ttid%>">\
              <div class="<%=prefix%>dragBar" id="<%=prefix%>dragBar-<%=ttid%>"></div>\
             </div>\
            </div>\
          </div>\
          \
          <div class="<%=prefix%>netflix-buttons <%=prefix%>nf-<%=ttid%>">\
                <div class="<%=prefix%>netflix-button <%=prefix%>netflix-save t-<%=ttid%>"><%=netflix_save%></div>\
                <div class="<%=prefix%>netflix-button <%=prefix%>netflix-continue"><%=netflix_continue%></div>\
                <div class="<%=prefix%>netflix-words">view saved words →</div>\
          </div>\
          \
          <div class="<%=prefix%>info-warn <%=prefix%>ddopt-<%=ttid%> <%=prefix%>hide" data-option="double_click">\
            <span title="<%=dd_localized_desc%>"><%=dd_localized%></span>\
            <div class="<%=prefix%>close-info-warn <%=prefix%>close-dd-option" data-ttid="<%=ttid%>"></div>\
          </div>\
          <div class="<%=prefix%>info-warn <%=prefix%>selopt-<%=ttid%> <%=prefix%>hide" data-option="selection">\
            <span title="<%=sel_localized_desc%>"><%=sel_localized%></span>\
            <div class="<%=prefix%>close-info-warn <%=prefix%>close-sel-option" data-ttid="<%=ttid%>"></div>\
          </div>\
          <div class="<%=prefix%>info-warn <%=prefix%>iw-<%=ttid%> <%=prefix%>hide" data-option="localized">\
            <a target="_blank" title="<%=ti_localized_desc%>"><%=ti_localized%></a>\
            <div class="<%=prefix%>close-info-warn <%=prefix%>close-loc-option" data-ttid="<%=ttid%>"></div>\
          </div>\
          <div class="<%=prefix%>info-warn <%=prefix%>pp-<%=ttid%> <%=prefix%>hide">\
            <span><%=upgrade_to_pro%></span>\
            <div class="<%=prefix%>close-info-warn <%=prefix%>close-pro-promo-option" data-ttid="<%=ttid%>"></div>\
          </div>\
          <div class="<%=prefix%>loading"><div class="<%=prefix%>mate-loading"></div></div>\
          <div class="<%=prefix%>offline"><span><%=l_offline%></span></div>\
        </div>\
      ';

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (translationTooltipTemplate);


/***/ }),

/***/ "./src/ui_components/dropdown.js":
/*!***************************************!*\
  !*** ./src/ui_components/dropdown.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "applySearch": () => (/* binding */ applySearch),
/* harmony export */   "applySelects": () => (/* binding */ applySelects),
/* harmony export */   "arrowsNavigation": () => (/* binding */ arrowsNavigation),
/* harmony export */   "cropCaption": () => (/* binding */ cropCaption),
/* harmony export */   "data": () => (/* binding */ data),
/* harmony export */   "dropdownClick": () => (/* binding */ dropdownClick),
/* harmony export */   "externalClick": () => (/* binding */ externalClick),
/* harmony export */   "getActiveOptionValue": () => (/* binding */ getActiveOptionValue),
/* harmony export */   "globalRecrop": () => (/* binding */ globalRecrop),
/* harmony export */   "init": () => (/* binding */ init),
/* harmony export */   "mouseMove": () => (/* binding */ mouseMove),
/* harmony export */   "onSearchBlur": () => (/* binding */ onSearchBlur),
/* harmony export */   "onSearchFocus": () => (/* binding */ onSearchFocus),
/* harmony export */   "onSearchKeyUp": () => (/* binding */ onSearchKeyUp),
/* harmony export */   "optionClick": () => (/* binding */ optionClick),
/* harmony export */   "optionHover": () => (/* binding */ optionHover),
/* harmony export */   "optionOut": () => (/* binding */ optionOut),
/* harmony export */   "selectFirst": () => (/* binding */ selectFirst)
/* harmony export */ });
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../src/ext/kumquat_polyfill */ "./src/ext/kumquat_polyfill.js");
/* harmony import */ var _src_ext_event__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../src/ext/event */ "./src/ext/event.js");
/* harmony import */ var _src_lib_jqEase__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../src/lib/jqEase */ "./src/lib/jqEase.js");
/* harmony import */ var _src_ext_string__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../src/ext/string */ "./src/ext/string.js");






const EF = function () {};

const MOUSE_MODE = 1;
const KEYS_MODE = 2;

let first = true;

const data = {
  isOpened: false,
  isFocused: true, // Due to integral auto-focus
  overOption: false,

  ind: 999,
  callback: EF,
  callbacksOnOpenClose: [EF, EF],

  ui_search: {},

  openedOptionsSerial: 0,
  searchAnimationInterval: null,

  mouseX: 0,
  mouseY: 0,
  changeMode: MOUSE_MODE,

  applied: 0,
};

function init(fn, callbacks, filler, opt, final_cb) {
  opt = opt || "";

  // it used to be $document.off() all events 
  // it was causing problem 
  // .display() in tcModel.js would be called to show a tooltip
  // and it'd nullify eventUtils.listen set in content.js 
  // that's the event listener that listens to shortcuts 
  // thus, one shortcut would trigger translation and remove all keydown/keyup listeners 
  jquery__WEBPACK_IMPORTED_MODULE_0___default()(document).off('click').on('click', externalClick);
  jquery__WEBPACK_IMPORTED_MODULE_0___default()(document).off('mousemove').on('mousemove', mouseMove);

  applySelects(filler, opt, function () {
    jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "options ." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "list li[index]")
      .off()
      .on({
        click: optionClick,
        mouseover: optionHover,
        mouseout: optionOut,
      });

    final_cb();
  });
  if (callbacks.length !== 0) {
    data.callbacksOnOpenClose = callbacks;
  }

  // don't forget to remove old listeners
  // often `initDropdowns` gets called way too many times
  jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "select")
    .off()
    .on("click", dropdownClick);

  data.callback = fn;
}

function applySelects(filler, opt, final_cb) {
  let selNumber;

  const isValidContext = function (s) {
    return typeof s === "string" && s.trim() !== "";
  };

  const e = jquery__WEBPACK_IMPORTED_MODULE_0___default()(
    typeof opt === "number"
      ? "." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "opt-" + opt
      : (isValidContext(opt) ? opt + " " : "") +
          "." +
          _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
          "options"
  );
  let len = e.length;

  let index = 0;
  e.each(function () {
    selNumber = +jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).data("serial");

    if (isNaN(selNumber)) {
      --len;
      return;
    }

    const that = this;
    filler(selNumber, null, function (filling) {
      // console.log('filling', filling);

      jquery__WEBPACK_IMPORTED_MODULE_0___default()(that)
        .css("z-index", --data.ind)
        .find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "list")
        .html(filling.code);

      if (first) {
        data.applied++;
      }

      if (filling.select.trim() !== "") {
        const sel = jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "opt-" + filling.num)
          .parent()
          .find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "select");
        sel
          .removeClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "just-added")
          .html(cropCaption(filling.select, sel[0]));
      }

      jquery__WEBPACK_IMPORTED_MODULE_0___default()(that)
        .find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "dd-input")
        .off()
        .on({
          keyup: onSearchKeyUp,
        })
        .attr(
          "data-width",
          parseInt(
            jquery__WEBPACK_IMPORTED_MODULE_0___default()(this)
              .find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "dd-input")
              .css("width")
          )
        );

      ++index;
      if (index === len) {
        final_cb && final_cb();
      }
    });
  }).hide();

  first = false;
}

function mouseMove(e) {
  if (e.pageX !== data.mouseX || e.pageY !== data.mouseY) {
    data.mouseX = e.pageX;
    data.mouseY = e.pageY;
    data.changeMode = MOUSE_MODE;
  }
}

function optionHover() {
  if (data.changeMode !== MOUSE_MODE) {
    return;
  }
  data.overOption = true;
  jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).addClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "whenHover");
}

function optionOut() {
  if (data.changeMode !== MOUSE_MODE) {
    return;
  }
  data.overOption = false;
  jquery__WEBPACK_IMPORTED_MODULE_0___default()(this)
    .parent()
    .find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "whenHover")
    .removeClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "whenHover");
}

function arrowsNavigation(e) {
  if (!data.isOpened) {
    return true; // Allow typing
  }

  data.changeMode = KEYS_MODE;

  const current_opt = jquery__WEBPACK_IMPORTED_MODULE_0___default()(
    "." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "opt-" + data.openedOptionsSerial
  );
  let over_item = current_opt.find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "whenHover");
  const selected_item = current_opt.find(
    "." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "option_selected"
  );

  if (jquery__WEBPACK_IMPORTED_MODULE_0___default().isEmptyObject(over_item[0])) {
    over_item = selected_item;
  }

  const getProperItem = function (item, func) {
    let next_item = item;
    while ((next_item = next_item[func]()) && !jquery__WEBPACK_IMPORTED_MODULE_0___default().isEmptyObject(next_item[0])) {
      if (
        !next_item.hasClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "search-li") &&
        !next_item.hasClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "group") &&
        next_item.is(":visible")
      ) {
        item = next_item;
        //                        console.log(item.text());
        break;
      }
    }
    return item;
  };

  if (_src_ext_event__WEBPACK_IMPORTED_MODULE_2__.is("enter", e)) {
    optionClick.call(over_item);
  } else {
    over_item.removeClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "whenHover");

    const init_item = over_item;
    let up = false;

    if (_src_ext_event__WEBPACK_IMPORTED_MODULE_2__.is("arrowdown", e)) {
      over_item = getProperItem(over_item, "next");
    } else if (_src_ext_event__WEBPACK_IMPORTED_MODULE_2__.is("arrowup", e)) {
      up = true;
      over_item = getProperItem(over_item, "prev");
    }

    over_item.addClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "whenHover");
  }
}

function externalClick(evt, forced) {
  const selectorParentDiv = evt !== null 
    ? jquery__WEBPACK_IMPORTED_MODULE_0___default()(evt.target).parents(`.${_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix()}ui_selector`)[0]
    : undefined;
  const reverseParentDiv = evt !== null 
    ? jquery__WEBPACK_IMPORTED_MODULE_0___default()(evt.target).parents(`.${_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix()}show-reversed`)[0]
    : undefined;
  const fullPageBanner = evt !== null
    ? jquery__WEBPACK_IMPORTED_MODULE_0___default()(evt.target).parents(`.${_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix()}mate-fp-bar`)[0]
    : undefined;

  const withinUISelector = typeof reverseParentDiv !== "undefined"
    || typeof selectorParentDiv !== "undefined"
    || fullPageBanner;

  // console.log('dropdown external click', { selectorParentDiv, reverseParentDiv, fullPageBanner, withinUISelector });
  
  if (!forced && withinUISelector) {
    return;
  }

  //console.log('close selector', evt.target);
  jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "select").removeClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "active");

  // reset the search
  jquery__WEBPACK_IMPORTED_MODULE_0___default()(
    "." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "ui_selector ." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "dd-search input"
  ).val("");
  applySearch("", () => {
    data.openedOptionsSerial = 0;
    data.callbacksOnOpenClose[1]();

    jquery__WEBPACK_IMPORTED_MODULE_0___default()(
      "." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "ui_selector ." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "options"
    ).slideUp(
      _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getAnimSpeed("fast_slide_up") / 2.5,
      _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getAnimType("slide_up")
    );
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(
      "." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "ui_selector ." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "options-arrow"
    ).hide();
    jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "select").removeClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "active");
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(
      "." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "options ." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "whenHover"
    ).removeClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "whenHover");

    data.isOpened = false;
  });
}

function dropdownClick() {
  const serial =
    +jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).data("for-serial") ||
    +jquery__WEBPACK_IMPORTED_MODULE_0___default()(this)
      .parent()
      .find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "options")
      .data("serial");

  // console.log("dropdown click", serial, $(this).parent());

  if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).hasClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "active")) {
    externalClick(null, true);
  } else {
    data.openedOptionsSerial = serial;

    jquery__WEBPACK_IMPORTED_MODULE_0___default()(
      "." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "ui_selector ." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "options"
    ).hide();
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(
      "." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "ui_selector ." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "options-arrow"
    ).hide();
    jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "select").removeClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "active");
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).addClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "active");

    const that = this;
    let parent_offset_x = 0;

    if (
      jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "select." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "active")
        .parent()
        .css("position") !== "static"
    ) {
      parent_offset_x = (
        jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "select." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "active")
          .parent()
          .offset() || { left: 0 }
      ).left;
    }

    const sel_width =
      jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "select." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "active").width() +
      parseInt(
        jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "select." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "active").css(
          "padding-left"
        )
      ) *
        2;
    const opt_width =
      jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "opt-" + serial).width() +
      parseInt(jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "opt-" + serial).css("padding-left")) *
        2;
    let x =
      jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "select." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "active").offset()
        .left -
      parent_offset_x -
      opt_width / 2 +
      sel_width / 2;

    // 16 is just an offset so selector doesn't stick to the end of the screen
    // `parent_offset_x` needs to be added back because we're looking at absolute coordinates here
    while (x + parent_offset_x + opt_width > jquery__WEBPACK_IMPORTED_MODULE_0___default()(window).width() - 16) {
      x -= 10;
    }

    if (
      jquery__WEBPACK_IMPORTED_MODULE_0___default()(this)
        .parent()
        .find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "opt-" + serial)
        .hasClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "standalone")
    ) {
      // 16 is arrow's width
      const arrow_x =
        jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "select." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "active").offset()
          .left -
        parent_offset_x +
        sel_width / 2 -
        parseInt(
          jquery__WEBPACK_IMPORTED_MODULE_0___default()(this)
            .parent()
            .find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "options-arrow")
            .css("width")
        ) /
          2;
      jquery__WEBPACK_IMPORTED_MODULE_0___default()(this)
        .parent()
        .find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "options-arrow")
        .show()
        .css({
          left: arrow_x + "px",
          "z-index": ++data.ind,
        });
    }

    const css = {
      left: x + "px",
    };

    jquery__WEBPACK_IMPORTED_MODULE_0___default()(this)
      .parent()
      .find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "opt-" + serial)
      .css(css)
      .slideDown(
        _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getAnimSpeed("fast_slide_down") * 1.5,
        _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getAnimType("slide_down"),
        function () {
          let element = jquery__WEBPACK_IMPORTED_MODULE_0___default()(that)
            .parent()
            .find(
              "." +
                _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
                "opt-" +
                serial +
                " ." +
                _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
                "option_selected"
            );
          // console.log("el for offsettop", element);
          const offsetTop = element[0].offsetTop - 34;

          data.isOpened = true;
          data.callbacksOnOpenClose[0](serial, offsetTop);
        }
      );
  }
}

// not used anymore
function cropCaption(text, sel) {
  return text;
}

function globalRecrop() {
  jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "select").each(function () {
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).html(cropCaption(jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).text(), this));
  });
}

function onSearchFocus() {
  jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).animate(
    {
      "background-position-x": 5,
      width: parseInt(jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).data("width")) + 2,
      paddingLeft: 20,
    },
    1,
    _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getAnimType("fast_slide_down")
  );
}

function onSearchBlur() {
  if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).val().trim() !== "") {
    const input_width = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).width();
    const input_pl = parseInt(jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).css("padding-left"));
    const placeholder_width = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).placeholderWidth();
    const paddingLeft =
      input_pl / 2 + input_width / 2 - placeholder_width / 2 + 6;

    jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).animate(
      {
        "background-position-x": paddingLeft - 6,
        width: input_width - paddingLeft / 2 - input_pl + 2,
        paddingLeft: paddingLeft + 6 + 3,
      },
      _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getAnimSpeed("fast_slide_down") / 2,
      _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getAnimType("fast_slide_down")
    );
  }
}

function onSearchKeyUp(evt) {
  if (typeof data.searchTimeout !== "null") {
    clearTimeout(data.searchTimeout);
  }

  if (_src_ext_event__WEBPACK_IMPORTED_MODULE_2__.is("ctrl", evt) || _src_ext_event__WEBPACK_IMPORTED_MODULE_2__.is("alt", evt)) {
    return true;
  }

  if (evt.keyCode === 13) {
    selectFirst();
  }

  const that = this;
  data.searchTimeout = setTimeout(function () {
    applySearch(jquery__WEBPACK_IMPORTED_MODULE_0___default()(that).val());
  }, 525);
}

function selectFirst() {
  const sel_lang = jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "opt-" + data.openedOptionsSerial)
    .find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "option:visible span")
    .attr("val");
  const $sel = jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "opt-" + data.openedOptionsSerial)
    .parent()
    .find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "select");

  // don't apply if no results

  if (sel_lang) {
    data.callback(data.openedOptionsSerial, sel_lang);

    dropdownClick.call($sel[0]);
  }
}

function applySearch(val, callback) {

  if (data.searchAnimationInterval) {
    clearInterval(data.searchAnimationInterval);
  }

  const serial = data.openedOptionsSerial;
  let contents;
  let all_elements = 0;
  let all_hidden_elements = 0;
  let group_hidden_elements = 0;
  let group_elements = 0;
  let animations = 0;

  const decrementAnimations = function () {
    --animations;
  };

  const toggleGroup = function (group, anim_dir) {
    //console.log(group, anim_dir);
    if (
      jquery__WEBPACK_IMPORTED_MODULE_0___default()(
        "." +
          _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
          "opt-" +
          serial +
          " ." +
          _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
          "group:eq(" +
          group +
          ")"
      ).length > 0
    ) {
      ++animations;
      jquery__WEBPACK_IMPORTED_MODULE_0___default()(
        "." +
          _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
          "opt-" +
          serial +
          " ." +
          _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
          "group:eq(" +
          group +
          ")"
      )["slide" + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.capitalize(anim_dir)](
        _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getAnimSpeed("slide_up"),
        _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getAnimType("slide_up"),
        decrementAnimations
      );
    }
  };

  val = val.toLowerCase();

  const last_el = jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "opt-" + serial + " li").last()[0];
  let current_group = -1;
  jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "opt-" + serial + " li").each(function () {
    if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).hasClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "search-li")) return;
    if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).hasClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "group")) {
      if (group_elements == group_hidden_elements) {
        toggleGroup(current_group, "up");
      }

      group_elements = 0;
      group_hidden_elements = 0;
      ++current_group;
      return;
    }

    ++all_elements;
    ++group_elements;
    contents = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).find("span:eq(0)").text();

    if (!~contents.toLowerCase().indexOf(val)) {
      ++group_hidden_elements;
      ++all_hidden_elements;
      ++animations;

      jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).slideUp(
        _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getAnimSpeed("slide_up"),
        _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getAnimType("slide_up"),
        decrementAnimations
      );
    } else {
      ++animations;

      if (val.trim() !== "") {
        contents = _src_ext_string__WEBPACK_IMPORTED_MODULE_4__["default"].highlight(contents, val);
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).find("span").html(contents);
      } else {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).find("span").html(contents);
      }

      jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).slideDown(
        _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getAnimSpeed("slide_down"),
        _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getAnimType("slide_down"),
        decrementAnimations
      );
    }

    if (this.isEqualNode(last_el) && group_elements == group_hidden_elements) {
      toggleGroup(current_group, "up");
    } else if (val.trim() === "" || group_elements != group_hidden_elements) {
      toggleGroup(current_group, "down");
    }
  });

  data.searchAnimationInterval = setInterval(function () {
    // TODO: this interval runs forever when you select an option
    // console.log(animations);
    if (animations == 0) {
      clearInterval(data.searchAnimationInterval);

      jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "opt-" + serial)
        .find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "search-failed-plaque")
        .remove();
      if (all_elements == all_hidden_elements) {
        jquery__WEBPACK_IMPORTED_MODULE_0___default()(
          "." +
            _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
            "opt-" +
            serial +
            " ." +
            _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() +
            "inner-options-layout"
        ).append(
          jquery__WEBPACK_IMPORTED_MODULE_0___default()("<div>")
            .addClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "search-failed-plaque")
            .html(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("CommonUi_NoResults"))
        );
      }

      data.callbacksOnOpenClose[0](serial);

      if (typeof callback === "function") {
        callback();
      }
    }
  }, 10);
}

function optionClick() {
  if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).hasClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "group")) {
    return;
  }

  const p = jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).parents("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "ui_selector");

  // console.log("optionClick", "." + ke.getPrefix() + "ui_selector",  p);

  let prev_val;
  let select = p.find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "select");

  if (select.length === 0) {
    select = p.parent().find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "select");
  }

  if (p.find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "option_selected").length > 0) {
    prev_val = p
      .find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "option_selected")
      .find("span")
      .attr("val");
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(this)
      .parent()
      .find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "option_selected")
      .removeClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "option_selected");
  }
  jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).addClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "option_selected");

  //console.log('option clicked', p.find('.' + ke.getPrefix() + 'option_selected')[0], $(this).parent().find('.' + ke.getPrefix() + 'option_selected').find('span').attr('val'));

  // select.removeClass(ke.getPrefix() + "active");
  dropdownClick.call(select[data.openedOptionsSerial - 1] || select[0]);

  // console.log("dropdown changed:", data.callback, data.openedOptionsSerial, $(this)
  //   .parent()
  //   .find("." + ke.getPrefix() + "option_selected")
  //   .find("span")
  //   .attr("val"));

  data.callback(
    data.openedOptionsSerial,
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(this)
      .parent()
      .find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "option_selected")
      .find("span")
      .attr("val"),
    prev_val
  );

  // select.removeClass(ke.getPrefix() + "active");
  //console.log('look here', p, select);

  // dropdownClick.call(select[0]);
}

function getActiveOptionValue(serial) {
  return jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "opt-" + serial)
    .find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "option_selected span")
    .attr("val");
}


/***/ }),

/***/ "./src/ui_components/loading.js":
/*!**************************************!*\
  !*** ./src/ui_components/loading.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "close": () => (/* binding */ close),
/* harmony export */   "show": () => (/* binding */ show),
/* harmony export */   "showIdbErrorLayout": () => (/* binding */ showIdbErrorLayout)
/* harmony export */ });
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);


function show(callback) {
  jquery__WEBPACK_IMPORTED_MODULE_0___default()(".loading-screen").fadeIn(150, callback || function () {});
  jquery__WEBPACK_IMPORTED_MODULE_0___default()("body").addClass("stop-scrolling");
}

function showIdbErrorLayout() {
  jquery__WEBPACK_IMPORTED_MODULE_0___default()(".idb-error-layout").fadeIn(150);
}

function close() {
  jquery__WEBPACK_IMPORTED_MODULE_0___default()(".loading-screen").fadeOut(250);
  jquery__WEBPACK_IMPORTED_MODULE_0___default()("body").removeClass("stop-scrolling");
}


/***/ }),

/***/ "./src/ui_components/login.js":
/*!************************************!*\
  !*** ./src/ui_components/login.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../src/ext/kumquat_polyfill */ "./src/ext/kumquat_polyfill.js");


/**
 * Created by chernikovalexey on 24/11/17.
 */



const INTERNAL_PAGES = {
  window: true,
  background: true,
};

const UILogin = {
  show: function (data) {
    let hash = '';

    if (data.is_restore) {
      hash = '#restore';
    } else if (data.is_sync) {
      hash = '#sync';
    } else if (data.is_gdpr) {
      hash = '#gdpr';
    } else if (data.is_finish_signup) {
      hash = '#finish-signup';
    }

    if (data.email) {
      hash += `?email=${data.email}`;
    }

    if (_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.IS_EDGE && _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.section in INTERNAL_PAGES) {
      chrome.windows.create({
        url: chrome.runtime.getURL('login.html' + hash),
        left: 10,
        top: 10,
        width: 550,
        height: 460,
        focused: true,
      });
    } else {
      window.open(
        chrome.runtime.getURL('login.html' + hash),
        '_blank',
        'width=550,height=440'
      );
    }
  },
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (UILogin);


/***/ }),

/***/ "./src/ui_components/notifications.js":
/*!********************************************!*\
  !*** ./src/ui_components/notifications.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _src_ext_tpl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../src/ext/tpl */ "./src/ext/tpl.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../src/ext/kumquat_polyfill */ "./src/ext/kumquat_polyfill.js");
/* harmony import */ var _src_lib_ga__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../src/lib/ga */ "./src/lib/ga.js");






const TIMEOUT = 1400;
const HTML = '<div class="notification"><%=text%></div>';
const HTML_CLICKABLE =
  '<div class="notif-text"><%=text%></div><div class="notif-arrow"></div>';

const notifications = {
  opened: false,

  show: function (text, timeout) {
    if (notifications.opened || _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.section === "content") {
      return;
    }

    timeout = timeout || TIMEOUT;
    notifications.opened = true;

    jquery__WEBPACK_IMPORTED_MODULE_1___default()("body").append(
      _src_ext_tpl__WEBPACK_IMPORTED_MODULE_0__.compile(HTML, {
        text: text,
      })
    );

    setTimeout(function () {
      jquery__WEBPACK_IMPORTED_MODULE_1___default()(".notification").fadeOut(150, function () {
        jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).remove();

        notifications.opened = false;
      });
    }, timeout);
  },

  showClickable: function (text, callback, timeout) {
    notifications.show(
      _src_ext_tpl__WEBPACK_IMPORTED_MODULE_0__.compile(HTML_CLICKABLE, {
        text: text,
      }),
      timeout
    );

    jquery__WEBPACK_IMPORTED_MODULE_1___default()(".notification")
      .addClass("clickable")
      .on("click", function () {
        if (callback.link) {
          chrome.tabs
            .create({
              url: callback.link,
            })
            .then();
        }

        if (callback.fn) {
          callback.fn();
        }

        if (typeof _src_lib_ga__WEBPACK_IMPORTED_MODULE_3__.ga != "undefined")
          (0,_src_lib_ga__WEBPACK_IMPORTED_MODULE_3__.ga)(
            "send",
            "event",
            "clickable-notif",
            callback.link || "unknown",
            "clicked"
          );
      });

    if (typeof _src_lib_ga__WEBPACK_IMPORTED_MODULE_3__.ga != "undefined")
      (0,_src_lib_ga__WEBPACK_IMPORTED_MODULE_3__.ga)(
        "send",
        "event",
        "clickable-notif",
        callback.link || "unknown",
        "shown"
      );
  },
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (notifications);


/***/ }),

/***/ "./src/ui_components/pro_alert.js":
/*!****************************************!*\
  !*** ./src/ui_components/pro_alert.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _src_lib_analytics__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../src/lib/analytics */ "./src/lib/analytics.js");
/* harmony import */ var _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../src/ext/kumquat_polyfill */ "./src/ext/kumquat_polyfill.js");
/* harmony import */ var _src_lib_ga__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../src/lib/ga */ "./src/lib/ga.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _src_ext_tpl__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../src/ext/tpl */ "./src/ext/tpl.js");
/* harmony import */ var _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../src/ext/util/storageUtil */ "./src/ext/util/storageUtil.js");
/* harmony import */ var _src_ext_const_subscriptions__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../src/ext/const/subscriptions */ "./src/ext/const/subscriptions.js");
/* harmony import */ var _src_particles_pro_block_proModel__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../src/particles/pro_block/proModel */ "./src/particles/pro_block/proModel.js");
/* harmony import */ var _src_ui_components_login__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../src/ui_components/login */ "./src/ui_components/login.js");
/**
 * Created by chernikovalexey on 02/11/17.
 */











const HTML = {
  old_cleaner:
    '\
            <div class="ccw-upgrade-layout pro-alert">\
                <div class="popup combo-change-window">\
                    <div class="ccw-top">\
                        <div class="ccw-logo"></div>\
                    </div>\
                    <div class="ccw-contents">\
                        <div class="ccw-more"><%=message%></div>\
                        <div class="features">\
                            <div class="feature">\
                                <span><%=split_test_2_feature_2%></span>\
                            </div>\
                            <div class="feature">\
                                <span><%=split_test_2_feature_3%></span>\
                            </div>\
                            <div class="feature">\
                                <span><%=split_test_2_feature_4%></span>\
                            </div>\
                            <div class="feature">\
                                <span><%=split_test_2_feature_5%></span>\
                            </div>\
                            <div class="feature rm-1">\
                                <span><%=split_test_2_feature_8%></span>\
                            </div>\
                        </div>\
                        <div class="one-off-elements">\
                            <button class="mw-button high-cta ccw-upgrade"><%=upgrade_button%></button>\
                            <button class="mw-button wba-s ccw-restore"><%=l_restore%></button>\
                            <button class="mw-button wba-s ccw-close"><%=l_not_now%></button>\
                        </div>\
                        <div class="sub-elements">\
                            <div class="plans">\
                                <div class="plan monthly">\
                                    <div class="checkbox"></div>\
                                    <div class="price-layout"><span class="price"><%=price_monthly%></span></div>\
                                </div>\
                                <div class="plan annual selected">\
                                    <div class="checkbox"></div>\
                                    <div class="price-layout">\
                                        <div class="price"><%=price_annual%></div>\
                                        <div class="savings"><%=savings%></div>\
                                    </div>\
                                </div>\
                            </div>\
                            <div class="cta-button-layout">\
                              <div class="spinner">\
                                  <div class="bounce1"></div>\
                                  <div class="bounce2"></div>\
                                  <div class="bounce3"></div>\
                              </div>\
                              <div class="mw-button high-cta pro-subscribe">\
                                  <div class="main-cta" id="Sub_TryFreeCTA"><%=subscribe_btn%></div>\
                                  <!--<div class="secondary-note"><%=due_after_trial%></div>-->\
                              </div>\
                            </div>\
                            <div class="secondary-sub-actions">\
                                <div class="sec-button more-settings"><%=more_settings%></div>\
                                <div class="sec-button ccw-close"><%=l_not_now%></div>\
                            </div>\
                        </div>\
                    </div>\
                </div>\
            </div>',
};

const UIProAlert = {
  opened: false,

  getTopPos: function ($alert, $mw) {
    var h = $mw.height() + parseInt($mw.css("padding-top")) * 2;

    return $alert.height() / 2 - h / 2;
  },

  show: function (message, short_id, add_html, not_dismissable) {
    _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_5__["default"].chainRequestBackgroundOption(
      [
        { fn: "getVal", args: ["pro_inapp_price"] },
        { fn: "getVal", args: ["account_token"] },
        { fn: "isTrueOption", args: ["chr_pro_flag"] },
      ],
      async function (r) {
        var price = r[0].response;
        var token = r[1].response;
        var is_pro = r[2].response;

        if (UIProAlert.opened || await _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.isProUser()) {
          return;
        }

        UIProAlert.opened = true;

        message = message || "";

        // savings, more_settings, _48h_notification, price_annual, price_monthly,
        // subscribe_btn, due_after_trial
        let trial_days = 7;

        let annual_price = (await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_5__["default"].getVal("sub_price_annual"))
          .replace(",", ".")
          .match(/\d+(,|.)\d+/)[0];
        let monthly_price = (await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_5__["default"].getVal("sub_price_monthly"))
          .replace(",", ".")
          .match(/\d+(,|.)\d+/)[0];
        let savings = Math.floor(
          (1 - annual_price / (monthly_price * 12)) * 100
        );

        const no_trial =
          trial_days === 0 ||
          await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_5__["default"].isTrueOption("sub_been_subscribed_once");
        let subscribe_btn = _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Sub_TryFreeCTA")
          .replace('<span class="trial-days"></span>', trial_days);

        // console.log({ no_trial, subscribe_btn });

        if (no_trial) {
          subscribe_btn = _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Sub_SubscribeNow");
        }

        if (
          await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_5__["default"].getVal("user_country") in
          _src_ext_const_subscriptions__WEBPACK_IMPORTED_MODULE_6__["default"].CUSTOM_CHECKOUT_LINKS
        ) {
          price =
            _src_ext_const_subscriptions__WEBPACK_IMPORTED_MODULE_6__["default"].CUSTOM_CHECKOUT_LINKS[
              await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_5__["default"].getVal("user_country")
            ].price;
        }

        // if (await storageUtils.getIntValue('one_off_tier') >= 2) {
        //     price = subscriptionConstants.one_off_prices['tier_' + await storageUtils.getIntValue('one_off_tier')][region][0];
        // }

        jquery__WEBPACK_IMPORTED_MODULE_3___default()("body").append(
          _src_ext_tpl__WEBPACK_IMPORTED_MODULE_4__.compile(HTML["old_cleaner"], {
            savings: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Sub_Savings")
              .replace("{{savings}}", savings),
            more_settings: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Sub_MoreInlineInfo"),
            _48h_notification: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Sub_48hNotificationLabel"),
            price_annual:
              await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_5__["default"].getVal("sub_price_annual") +
              _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Sub_Year"),
            price_monthly:
              await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_5__["default"].getVal("sub_price_monthly") +
              _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Sub_Month"),
            subscribe_btn: subscribe_btn,

            // . -> '' bc it's easier than going thru all strings
            // to match "{{message}}, and more:"
            message:
              "<b>" +
              message.substr(0, message.length - 1) +
              "</b>" +
              _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Pro_ComesAlong"),
            upgrade_button: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Window_Mw_UpgradeButton", price),

            l_more: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Pro_UnlockMore"),

            l_feature1: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Tour_ProFeature1"),
            l_feature1_tooltip: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Pro_PhrasebookFeature"),

            l_feature7: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Tour_ProFeature7"),

            l_feature2: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Tour_ProFeature2"),
            l_feature2_tooltip: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Pro_STTFeature"),

            l_feature3: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Tour_ProFeature3"),
            l_feature3_tooltip: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Pro_ShortcutsFeature"),

            l_feature4: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Tour_ProFeature4"),

            l_restore: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Settings_Restore"),
            l_not_now: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Window_Mw_NotChromeNotNow"),

            l_feature_ipa: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Pro_IPA"),
            l_feature_ipa_tooltip: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Pro_IPA_Desc"),

            l_feature_articles: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Pro_Articles"),
            l_feature_articles_tooltip: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Pro_Articles_Desc"),

            split_test_2_feature_1: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("ProSplitTests_2_F1"),
            split_test_2_feature_2: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("ProSplitTests_2_F2"),
            split_test_2_feature_3: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("ProSplitTests_2_F3"),
            split_test_2_feature_4: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("ProSplitTests_2_F4"),
            split_test_2_feature_5: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("ProSplitTests_2_F5"),
            split_test_2_feature_6: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("ProSplitTests_2_F6"),
            split_test_2_feature_8: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("ProSplitTests_2_F8"),

            split_test_3_pitch:
              "<b>" +
              message +
              "</b><br>" +
              _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("ProSplitTests_2_Pitch").split("<br>").pop(),
          })
        );

        var $alert = jquery__WEBPACK_IMPORTED_MODULE_3___default()(".pro-alert");
        var $mw = $alert.find(".combo-change-window");

        if (add_html) {
          $alert.append(add_html);
        }

        // if (ke.isSubscriptionBased) {
          $alert.find(".one-off-elements").hide();
        // } else {
          // $alert.find(".sub-elements").hide();
        // }

        if (!message) {
          $alert.find(".ccw-more").remove();
        }

        if (!_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.IS_CHROME) {
          $alert.find(".stt-feature").remove();
        }

        jquery__WEBPACK_IMPORTED_MODULE_3___default()("." + short_id + "-feature").remove();

        // 7.0.20 -- don't remove the feature which triggered this alert from the list
        //$alert.find('.' + short_id + '-feature').remove();

        $alert.css("top", jquery__WEBPACK_IMPORTED_MODULE_3___default()(document).scrollTop());
        jquery__WEBPACK_IMPORTED_MODULE_3___default()("body").addClass("stop-scrolling");

        // if (typeof ga != "undefined")
        //   ga("send", "event", "pro", "shown", short_id);

        _src_lib_analytics__WEBPACK_IMPORTED_MODULE_0__["default"].fireEvent("pro_shown", { short_id });

        $alert.find(".ccw-restore").attr("data-id", short_id);
        $alert.find(".ccw-close").attr("data-id", short_id);

        if (_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.section === "options") {
          $alert.find(".more-settings").remove();
        } else {
          $alert
            .find(".more-settings")
            .on("click", UIProAlert.openMoreSubscriptionInfo);
        }

        $alert.find(".plan").on("click", UIProAlert.changeBillingPeriod);

        if (token) {
          $alert.find(".ccw-restore").remove();
        } else {
          $alert.find(".ccw-restore").on("click", UIProAlert.restore);
        }

        // if (ke.isSubscriptionBased) {
          $alert
            .find(".pro-subscribe")
            .attr("data-id", short_id)
            .on("click", UIProAlert.subscribe);
        // } else {
        //   $alert
        //     .find(".ccw-upgrade")
        //     .attr("data-id", short_id)
        //     .on("click", UIProAlert.upgrade);
        // }

        setTimeout(() => {
          var top = UIProAlert.getTopPos($alert, $mw);
          var rm = 0;
          var iterations = 0;

          while (
            (top < 5 || $mw.height() > jquery__WEBPACK_IMPORTED_MODULE_3___default()(window).height()) &&
            ++iterations <= 10
          ) {
            if (rm === 0) {
              $alert.addClass("ccw-small");
            } else {
              $alert.find(".rm-" + rm).remove();
            }

            top = UIProAlert.getTopPos($alert, $mw);
            ++rm;
          }

          $mw.css("top", top);

          if (not_dismissable) {
            $alert.find(".ccw-close").remove();
            $alert.css("backdrop-filter", "blur(5px)");
            $alert.css("-webkit-backdrop-filter", "blur(5px)"); // firefox
          } else {
            $alert.find(".ccw-close").on("click", UIProAlert.close);
          }
        }, 50);
      }
    );
  },

  changeBillingPeriod: function () {
    jquery__WEBPACK_IMPORTED_MODULE_3___default()(".plan.selected").removeClass("selected");
    jquery__WEBPACK_IMPORTED_MODULE_3___default()(this).addClass("selected");
    jquery__WEBPACK_IMPORTED_MODULE_3___default()(".price-due").html(jquery__WEBPACK_IMPORTED_MODULE_3___default()(".plan.selected .price").html());
  },

  openMoreSubscriptionInfo: function () {
    let period = jquery__WEBPACK_IMPORTED_MODULE_3___default()(".plan.selected").hasClass("monthly") ? "monthly" : "annual";
    let id = jquery__WEBPACK_IMPORTED_MODULE_3___default()(this).parent().prev().attr("data-id");
    chrome.tabs.create({
      url: chrome.runtime.getURL(
        "options.html#sub_ref," + period + "," + id
      ),
    });
  },

  upgrade: function (event, short_id) {
    var id = jquery__WEBPACK_IMPORTED_MODULE_3___default()(this).data("id");

    if (_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.section === "options") {
      _src_particles_pro_block_proModel__WEBPACK_IMPORTED_MODULE_7__["default"].upgrade();
    } else {
      chrome.tabs.create({
        url: chrome.runtime.getURL(
          "options.html#start_purchase," + id
        ),
      });
    }

    // if (typeof ga != "undefined")
    //   ga("send", "event", "pro", "upgrade-clicked", id);

    _src_lib_analytics__WEBPACK_IMPORTED_MODULE_0__["default"].fireEvent("pro_upgrade_clicked", { id });
  },

  subscribe: function (event, short_id) {
    var id = jquery__WEBPACK_IMPORTED_MODULE_3___default()(this).data("id");

    if (_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.section === "options") {
      _src_particles_pro_block_proModel__WEBPACK_IMPORTED_MODULE_7__["default"].subscribe();
    } else {
      let period = jquery__WEBPACK_IMPORTED_MODULE_3___default()(".plan.selected").hasClass("monthly")
        ? "monthly"
        : "annual";
      chrome.tabs.create({
        url: chrome.runtime.getURL(
          "options.html#start_purchase," + period + "," + id
        ),
      });
    }

    // if (typeof ga != "undefined")
    //   ga("send", "event", "pro", "subscribe-clicked", id);

    _src_lib_analytics__WEBPACK_IMPORTED_MODULE_0__["default"].fireEvent("pro_subscribe_clicked", { id });
  },

  restore: function () {
    _src_ui_components_login__WEBPACK_IMPORTED_MODULE_8__["default"].show({ is_restore: true });

    var id = jquery__WEBPACK_IMPORTED_MODULE_3___default()(this).data("id");
    // if (typeof ga != "undefined")
    //   ga("send", "event", "pro", "restore-clicked", id);

    _src_lib_analytics__WEBPACK_IMPORTED_MODULE_0__["default"].fireEvent("pro_restore_clicked", { id });
  },

  close: function () {
    jquery__WEBPACK_IMPORTED_MODULE_3___default()(".ccw-upgrade-layout.pro-alert").remove();
    jquery__WEBPACK_IMPORTED_MODULE_3___default()("body").removeClass("stop-scrolling");

    var id = jquery__WEBPACK_IMPORTED_MODULE_3___default()(this).data("id");

    UIProAlert.opened = false;

    // if (typeof ga != "undefined")
    //   ga("send", "event", "pro", "alert-closed", id);

    _src_lib_analytics__WEBPACK_IMPORTED_MODULE_0__["default"].fireEvent("pro_alert_closed", { id });
  },
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (UIProAlert);


/***/ }),

/***/ "./src/ui_components/tooltip/help.js":
/*!*******************************************!*\
  !*** ./src/ui_components/tooltip/help.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _src_ui_components_tooltip_simple_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../src/ui_components/tooltip/simple.js */ "./src/ui_components/tooltip/simple.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../src/ext/kumquat_polyfill */ "./src/ext/kumquat_polyfill.js");
/* harmony import */ var _src_ext_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../src/ext/dom */ "./src/ext/dom.js");
/* harmony import */ var _src_ext_tpl__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../src/ext/tpl */ "./src/ext/tpl.js");
/* harmony import */ var _src_templates_helpTooltip_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../src/templates/helpTooltip.js */ "./src/templates/helpTooltip.js");









if (_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.section !== 'content') {
}

const Y_OFFSET = 10;
let arrowXOffset = 0;

function bodyScrollLeft() {
  return document.documentElement.scrollLeft || document.body.scrollLeft || 0;
}

function bodyScrollTop() {
  return document.documentElement.scrollTop || document.body.scrollTop || 0;
}

const help = {
  setXOffset: function (offset) {
    arrowXOffset = offset;
  },

  show: function (text, e) {
    const elementPosition = _src_ext_dom__WEBPACK_IMPORTED_MODULE_3__["default"].getPosition(e);
    const left = elementPosition[0];
    const top = elementPosition[1];
    const params = help.getOParamsInstance(e);

    _src_ui_components_tooltip_simple_js__WEBPACK_IMPORTED_MODULE_0__["default"].create(
      _src_ext_tpl__WEBPACK_IMPORTED_MODULE_4__.compile(_src_templates_helpTooltip_js__WEBPACK_IMPORTED_MODULE_5__["default"], {
        content: text,
      }),
      -100,
      -100,
      250,
      200,
      document
    );

    setTimeout(function () {
      help.attachArrows();

      const ap = help.computeArrowPosition(left, top, params);
      help.computeTooltipPosition(left, top, params, function (tp) {
        help.applyArrowPosition(ap);
        help.applyTooltipPosition(tp);
      });
    }, 25);
  },

  getOParamsInstance: function (g) {
    g.width = g.width || 0;
    g.height = g.height || 0;
    g.pl = g.pl || 0;
    g.pr = g.pr || 0;
    g.pt = g.pt || 0;
    g.pb = g.pb || 0;
    return g;
  },

  getAllParams: function (e) {
    return pl.extend(help.computeOParams(e), {
      left: _src_ext_dom__WEBPACK_IMPORTED_MODULE_3__["default"].getPosition(e)[0],
      top: _src_ext_dom__WEBPACK_IMPORTED_MODULE_3__["default"].getPosition(e)[1],
    });
  },

  computeOParams: function (e) {
    return help.getOParamsInstance({
      width: parseInt(jquery__WEBPACK_IMPORTED_MODULE_1___default()(e).css('width')),
      height: parseInt(jquery__WEBPACK_IMPORTED_MODULE_1___default()(e).css('height')),
      pl: parseInt(jquery__WEBPACK_IMPORTED_MODULE_1___default()(e).css('padding-left')),
      pr: parseInt(jquery__WEBPACK_IMPORTED_MODULE_1___default()(e).css('padding-right')),
      pt: parseInt(jquery__WEBPACK_IMPORTED_MODULE_1___default()(e).css('padding-top')),
      pb: parseInt(jquery__WEBPACK_IMPORTED_MODULE_1___default()(e).css('padding-bottom')),
    });
  },

  attachArrows: function (ttid) {
    jquery__WEBPACK_IMPORTED_MODULE_1___default()('.' + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getPrefix() + 'tooltip-' + ttid).prepend(
      jquery__WEBPACK_IMPORTED_MODULE_1___default()('<div>')
        .addClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getPrefix() + 't')
        .addClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getPrefix() + 'arr0w')
        .addClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getPrefix() + 'top-arr0w')
        .get()
    );

    jquery__WEBPACK_IMPORTED_MODULE_1___default()('.' + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getPrefix() + 'tooltip-' + ttid).append(
      jquery__WEBPACK_IMPORTED_MODULE_1___default()('<div>')
        .addClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getPrefix() + 't')
        .addClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getPrefix() + 'arr0w')
        .addClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getPrefix() + 'bottom-arr0w')
        .get()
    );
  },

  // returns [pos x, pos y, 'top' / 'bottom']
  computeTooltipPosition: function (el, ix, iy, oparams, scale, callback) {
    const pos = [0, 0];

    let tooltip_width = 0;
    let tooltip_height = 0;

    jquery__WEBPACK_IMPORTED_MODULE_1___default()(el.get()).measure(function () {
      tooltip_width = this.width();
      tooltip_height = this.height();

      const absolute_selection_left_scroll = ix + bodyScrollLeft();
      const absolute_selection_top_scroll = iy + bodyScrollTop();

      const selection_absolute_width = oparams.width + oparams.pl + oparams.pr;
      const selection_absolute_height =
        oparams.height + oparams.pt + oparams.pb;

      pos[0] =
        absolute_selection_left_scroll -
        tooltip_width / 2 +
        selection_absolute_width / 2;
      pos[1] =
        absolute_selection_top_scroll - tooltip_height - Y_OFFSET * scale;
      pos[2] = 'bottom'; // tooltip is above, arrow is on bottom

      // Horizontal alignment
      if (pos[0] - bodyScrollLeft() < 1) {
        // stick to the left side

        pos[0] = bodyScrollLeft() + 1 - (tooltip_width * (1 - scale)) / 2;
      } else if (pos[0] + tooltip_width > document.body.clientWidth) {
        // stick to the right side

        pos[0] =
          document.body.clientWidth -
          tooltip_width -
          1 +
          (tooltip_width * (1 - scale)) / 2;
      }

      // A vertical one
      if (pos[1] - bodyScrollTop() < 1) {
        pos[1] =
          absolute_selection_top_scroll +
          selection_absolute_height +
          Y_OFFSET * scale;

        // tooltip below the selection
        // if scale != 1
        pos[1] -= (tooltip_height * (1 - scale)) / 2;

        pos[2] = 'top'; // tooltip is below, arrow is on top
      } else {
        pos[1] += (tooltip_height * (1 - scale)) / 2;
      }

      callback(pos);
    });
  },

  applyArrowPosition: function ($el, tp, sel_ix, sel_iy, scale, oparams) {
    const tt_ix = tp[0];
    const cursor_type = tp[2];
    const cursor_width = 32;

    const absolute_selection_left_scroll = sel_ix + bodyScrollLeft();
    const selection_absolute_width = oparams.width + oparams.pl + oparams.pr;
    const sel_center =
      absolute_selection_left_scroll + selection_absolute_width / 2;

    const cursorLeftMargin = sel_center - tt_ix - (cursor_width * scale) / 2;

    $el
      .find('.' + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getPrefix() + 'help-selected-wrap')
      .addClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getPrefix() + 'has-' + cursor_type + '-arr0w');

    $el
      .find('.' + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_2__.ke.getPrefix() + cursor_type + '-arr0w')
      .css('margin-left', cursorLeftMargin)
      .show();
  },

  applyTooltipPosition: function (el, pos) {
    const $el = jquery__WEBPACK_IMPORTED_MODULE_1___default()(el.get());
    const real_y = pos[1] - 5;

    $el.css({
      left: pos[0],
      top: real_y,
    });
  },
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (help);


/***/ }),

/***/ "./src/ui_components/tooltip/helpSelected.js":
/*!***************************************************!*\
  !*** ./src/ui_components/tooltip/helpSelected.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../src/ext/kumquat_polyfill */ "./src/ext/kumquat_polyfill.js");
/* harmony import */ var _src_ext_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../src/ext/dom */ "./src/ext/dom.js");
/* harmony import */ var _src_ext_tpl__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../src/ext/tpl */ "./src/ext/tpl.js");
/* harmony import */ var _src_particles_translate_ctt_tcModel_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../src/particles/translate_ctt/tcModel.js */ "./src/particles/translate_ctt/tcModel.js");
/* harmony import */ var _src_templates_translationTooltipTemplate_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../src/templates/translationTooltipTemplate.js */ "./src/templates/translationTooltipTemplate.js");
/* harmony import */ var _src_ui_components_tooltip_help_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../src/ui_components/tooltip/help.js */ "./src/ui_components/tooltip/help.js");
/* harmony import */ var _src_ui_components_tooltip_simple__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../src/ui_components/tooltip/simple */ "./src/ui_components/tooltip/simple.js");




// import handlers from '/src/pages/content/handlers.js';





// import { flags, temp } from '../../pages/content/shared';

const UITranslationTooltip = {
  _getSelectionParameters: function (s) {
    return s.getRangeAt
      ? jquery__WEBPACK_IMPORTED_MODULE_0___default().extend(
          {
            scrollX: window.pageXOffset,
            scrollY: window.pageYOffset,
          },
          s.getRangeAt(0).getBoundingClientRect()
        )
      : {
          left: s.x || s.left,
          top: s.y || s.top,
          width: s.width,
          height: s.height,
        };
  },

  _createTooltip: function (c, doc, ttid) {
    _src_ui_components_tooltip_help_js__WEBPACK_IMPORTED_MODULE_6__["default"].setXOffset(3);
    return _src_ui_components_tooltip_simple__WEBPACK_IMPORTED_MODULE_7__["default"].create(
      _src_ext_tpl__WEBPACK_IMPORTED_MODULE_3__.compile(_src_templates_translationTooltipTemplate_js__WEBPACK_IMPORTED_MODULE_5__["default"], {
        content: c,
        prefix: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix(),
        ttid: ttid,
        lang_search: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Kernel_SearchPlaceholder"),
        l_human: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Human_OrderButton"),
        l_original: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Kernel_Original"),
        l_open: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Kernel_OpenGt"),
        l_reversed: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Kernel_Reverse"),
        l_unpin: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Kernel_Unpin"),
        l_highlight: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Kernel_Highlight"),
        l_loading: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Kernel_Loading"),
        l_offline: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Window_Offline"),
        title_highlight_button: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Tooltip_Highlight"),
        title_open_link: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Tootip_OpenLink"),
        title_listen_original: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Tooltip_ListenOriginal"),
        title_show_reversed: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Tooltip_ShowReversed"),
        title_unpin: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Tooltip_Unpin"),
        ti_localized: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("There_Is_Localised_Site"),
        ti_localized_desc: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("There_Is_Localised_Site_Desc"),
        title_settings: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Kernel_SettingsTitle"),
        dd_localized: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Tooltip_DisableDoubleClick"),
        dd_localized_desc: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Tooltip_DisableDoubleClickDesc"),
        sel_localized: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Tooltip_DisableSelection"),
        sel_localized_desc: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Tooltip_DisableSelectionDesc"),
        upgrade_to_pro: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Window_ProBannerAds")
          .replace(".", "")
          .replace("。", ""),
        netflix_save: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Pb_SaveButton"),
        netflix_continue: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Login_Continue"),
      }),
      ttid,
      0,
      0,
      450,
      325,
      doc,
      true
    );
  },

  _createLoadingTooltip: function (doc) {
    _src_ui_components_tooltip_help_js__WEBPACK_IMPORTED_MODULE_6__["default"].setXOffset(3);
    return _src_ui_components_tooltip_simple__WEBPACK_IMPORTED_MODULE_7__["default"].create(
      '<div class="' + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + 'loading">' + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("Kernel_Loading") + '</div>',
      0,
      0,
      0,
      450,
      325,
      doc,
      true
    );
  },

  _addToggleClasses: function () {
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(_src_ui_components_tooltip_simple__WEBPACK_IMPORTED_MODULE_7__["default"].Id + " *").addClass("TnITTtw-t");
  },

  tooltipId: 0,

  toggleLoadingInTooltip: function (ttid, is_loading) {
    //
    // remove previous loadings
    //
    jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "translate-loading").fadeOut(250, function () {
      jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).remove();
    });

    if (is_loading) {
      const selection = _src_particles_translate_ctt_tcModel_js__WEBPACK_IMPORTED_MODULE_4__["default"].getSelection();
      const params = selection.toString()
        ? UITranslationTooltip._getSelectionParameters(selection)
        : handlers.lastTranslationCallArgs.selectionBB;

      let $dest = jquery__WEBPACK_IMPORTED_MODULE_0___default()("body");
      let is_netflix = false;

      if (
        document.location.href.indexOf("https://www.netflix.com/watch") > -1
      ) {
        $dest = jquery__WEBPACK_IMPORTED_MODULE_0___default()(".watch-video--player-view");
        is_netflix = true;
      } else if ($dest.length === 0) {
        $dest = jquery__WEBPACK_IMPORTED_MODULE_0___default()("html");
      }

      const height = 70;
      const width = height;
      const x = params.left + params.width / 2 + window.pageXOffset - width / 2;
      let y;

      if (
        params.top + params.height + 10 + height > window.innerHeight ||
        is_netflix
      ) {
        y = params.top - 10 - height + window.pageYOffset; // loading is above
      } else {
        y = params.top + params.height + 10 + window.pageYOffset; // loading is below
      }

      $dest.append(
        jquery__WEBPACK_IMPORTED_MODULE_0___default()('<div class="' + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + 'translate-loading"></div>')
          .addClass(
            window.flags.dark_mode || is_netflix ? _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "dark-mode" : ""
          )
          .html('<div class="' + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + 'mate-loading"></div>')
          .css({
            top: y,
            left: x,
          })
      );
    }
  },

  toggleOfflineInTooltip: function (ttid, is_offline) {
    if (is_offline) {
      jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "tooltip-" + ttid)
        .find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "offline")
        .css("display", "flex");
    } else {
      jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "tooltip-" + ttid)
        .find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "offline")
        .fadeOut(250, function () {
          jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).remove();
        });
    }
  },

  fadeInTooltip: function (ttid, callback) {
    jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "tooltip-" + ttid).fadeIn(400, callback);
  },

  showTooltip: function (selection, doc, iframe, scale = 0.85) {
    const ttid = ++UITranslationTooltip.tooltipId;

    const sel_params = this._getSelectionParameters(selection);
    const tooltip = this._createTooltip("", doc, ttid);

    let left = 0;
    let top = 0;
    let params;

    if (iframe) {
      const iframePos = _src_ext_dom__WEBPACK_IMPORTED_MODULE_2__["default"].getPosition(iframe);
      left = iframePos[0];
      top = iframePos[1];
    }

    left += sel_params.left; //- (window.scrollX - sel_params.scrollX);
    top += sel_params.top; //- (window.scrollY - sel_params.scrollY);
    params = _src_ui_components_tooltip_help_js__WEBPACK_IMPORTED_MODULE_6__["default"].getOParamsInstance(sel_params);

    // const scale = temp.scale;

    tooltip.css("transform", `scaleX(${scale}) scaleY(${scale})`);
    // TODO: Inspect pls. I'm not sure if it's the right thing to do, but tooltip won't show up without it.
    tooltip.css("position", "absolute");

    _src_ui_components_tooltip_help_js__WEBPACK_IMPORTED_MODULE_6__["default"].computeTooltipPosition(
      tooltip,
      left,
      top,
      params,
      scale,
      function (tp) {
        _src_ui_components_tooltip_help_js__WEBPACK_IMPORTED_MODULE_6__["default"].applyTooltipPosition(tooltip, tp);

        let $dest = jquery__WEBPACK_IMPORTED_MODULE_0___default()("body");
        let dark_mode = flags.dark_mode;

        if (
          document.location.href.indexOf("https://www.netflix.com/watch") > -1
        ) {
          $dest = jquery__WEBPACK_IMPORTED_MODULE_0___default()(".watch-video--player-view");
          dark_mode = true;
        } else if ($dest.length === 0) {
          $dest = jquery__WEBPACK_IMPORTED_MODULE_0___default()("html");
        }

        jquery__WEBPACK_IMPORTED_MODULE_0___default()(tooltip).data("ttid", ttid);

        if (dark_mode) {
          tooltip.addClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "dark-mode");
        }

        $dest.append(tooltip.get());

        _src_ui_components_tooltip_help_js__WEBPACK_IMPORTED_MODULE_6__["default"].attachArrows(ttid);
        _src_ui_components_tooltip_help_js__WEBPACK_IMPORTED_MODULE_6__["default"].applyArrowPosition(tooltip, tp, left, top, scale, params);

        UITranslationTooltip._addToggleClasses();
      }
    );

    return ttid;
  },

  setTooltipContents: function (ttid, code) {
    jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "content-layout-" + ttid).html(code);
    UITranslationTooltip._addToggleClasses();
  },

  get MAX_HEIGHT() {
    return 253;
  },

  resizeTooltip: function (ttid, unpinned, pullup_px, vl_shift) {
    pullup_px = pullup_px || 0;
    vl_shift = vl_shift || 0;

    const was_above = jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "hsw-" + ttid).hasClass(
      _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "has-bottom-arr0w"
    );

    const has_sw_warn =
      !jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "iw-" + ttid).hasClass(
        _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "hide"
      ) || jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "nf-" + ttid).is(":visible");
    const sw_warn_height =
      jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "iw-" + ttid).height() +
        parseInt(jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "iw-" + ttid).css("padding")) * 2 ||
      0;

    let content_height =
      vl_shift +
      parseInt(
        jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "content-layout-" + ttid).css("height")
      );

    if (content_height > UITranslationTooltip.MAX_HEIGHT) {
      content_height = UITranslationTooltip.MAX_HEIGHT;
    }

    const tt_height = jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "hil-" + ttid).height();
    const new_height =
      content_height +
      11 +
      10 +
      parseInt(
        jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "tooltip-" + ttid)
          .find("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + (unpinned ? "unpinned-" : "") + "utils")
          .css("height")
      );

    jquery__WEBPACK_IMPORTED_MODULE_0___default()("#" + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "trVisibleLayout-" + ttid).css(
      "height",
      content_height - vl_shift
    );
    jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "hil-" + ttid).css("height", new_height);

    jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "tooltip-" + ttid).animate(
      {
        top:
          parseInt(jquery__WEBPACK_IMPORTED_MODULE_0___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + "tooltip-" + ttid).css("top")) -
          (has_sw_warn && was_above ? sw_warn_height + pullup_px : 0) +
          (was_above ? tt_height - new_height : 0),
      },
      125
    );
  },
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (UITranslationTooltip);


/***/ }),

/***/ "./src/ui_components/tooltip/simple.js":
/*!*********************************************!*\
  !*** ./src/ui_components/tooltip/simple.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../src/ext/kumquat_polyfill */ "./src/ext/kumquat_polyfill.js");
/* harmony import */ var _src_ext_tpl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../src/ext/tpl */ "./src/ext/tpl.js");
/* harmony import */ var _src_templates_simpleTooltip_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../src/templates/simpleTooltip.js */ "./src/templates/simpleTooltip.js");






if (_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.section !== 'content') {
}

const SEL = '#' + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + 'tooltip-wrap';

// The frame of all forth tooltips, because exactly these methods provides showing simple tooltips
// and adjusting its position.

const UISimpleTooltip = {
  temp: {
    openCounter: 0,
  },

  get Id() {
    return SEL;
  },

  _createElement: function (ic, ttid) {
    return jquery__WEBPACK_IMPORTED_MODULE_0___default()(
      jquery__WEBPACK_IMPORTED_MODULE_0___default()('<div>')
        .append(
          _src_ext_tpl__WEBPACK_IMPORTED_MODULE_2__.compile(_src_templates_simpleTooltip_js__WEBPACK_IMPORTED_MODULE_3__["default"], {
            content: ic,
            prefix: _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix(),
            ttid: ttid,
          })
        )[0].childNodes[1]
    );
  },

  _applyStyles: function (el, mw, mh) {
    const maxZ = Math.max.apply(
      null,
      jquery__WEBPACK_IMPORTED_MODULE_0___default().map(jquery__WEBPACK_IMPORTED_MODULE_0___default()('body *'), function (e, n) {
        if (jquery__WEBPACK_IMPORTED_MODULE_0___default()(e).css('position') != 'static')
          return parseInt(jquery__WEBPACK_IMPORTED_MODULE_0___default()(e).css('z-index')) || 1;
      })
    );

    el.css({
      'z-index': maxZ + 1,
      maxWidth: mw,
      maxHeight: mh,
    });
  },

  _computeAndAdjustPosition: function (el, xo, yo) {
    const xCenter = xo === 'center';
    if (xCenter) {
      xo = 0;
    }

    const yCenter = yo === 'center';
    if (yCenter) {
      yo = 0;
    }

    el.css({
      left: xo,
      top: yo,
    });

    if (xCenter) {
      var k = 0;
      const aw = parseInt(el.css('width'));
      const pw = parseInt(jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').css('width')) / 2 - aw / 2;
      el.css('left', pw + k);
    }

    if (yCenter) {
      var k = 0;
      const ah = parseInt(el.css('height'));
      const ph =
        parseInt(jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').css('height')) / 2 -
        ah / 2 +
        parseInt(el.find('.conf-tooltip-wrap').css('padding-top')) +
        parseInt(el.find('.conf-tooltip-wrap').css('padding-bottom'));
      el.css('top', ph + k);
    }
  },

  _bindCloseEvent: function (doc) {
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(window).on('click', UISimpleTooltip.close);
    jquery__WEBPACK_IMPORTED_MODULE_0___default()('body').on('click', UISimpleTooltip.close);
  },

  create: function (
    inner_code,
    ttid,
    xo,
    yo,
    mw,
    mh,
    doc,
    precompute_position
  ) {
    this.close(true);

    const element = this._createElement(inner_code, ttid);
    this._applyStyles(element, mw, mh);

    if (precompute_position) {
      this._computeAndAdjustPosition(element, xo, yo);
    }

    //this._bindCloseEvent(doc);

    return element;
  },

  close: function (e) {
    if (
      (typeof e === 'boolean' && e) ||
      (typeof e !== 'boolean' && !jquery__WEBPACK_IMPORTED_MODULE_0___default()(e.target).hasClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + 't'))
    ) {
      //$('body').unbind();

      const $tooltip = jquery__WEBPACK_IMPORTED_MODULE_0___default()('.' + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + 'tooltip-main-wrap');

      if ($tooltip.length > 0) {
        // trigger the playback stop
        $tooltip.find('.stop-audio').trigger('click');

        $tooltip.each(function () {
          if (!jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).hasClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getPrefix() + 'unpinned')) {
            jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).remove();
          }
        });
      }
    }
  },
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (UISimpleTooltip);


/***/ }),

/***/ "./src/ui_views/multi_variant.js":
/*!***************************************!*\
  !*** ./src/ui_views/multi_variant.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../src/ext/kumquat_polyfill */ "./src/ext/kumquat_polyfill.js");
/* harmony import */ var _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../src/ext/util/storageUtil */ "./src/ext/util/storageUtil.js");
/* harmony import */ var _src_ext_tpl__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../src/ext/tpl */ "./src/ext/tpl.js");
/* harmony import */ var _src_ext_api__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../src/ext/api */ "./src/ext/api.js");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_5__);








const max_synonyms = 3;

const SINGLE_HTML =
  '\
        <div class="<%=prefix%>original-wrap <%=prefix%>padded-single-translation">\
        <div class="<%=prefix%>mv-text-part"><%=original%></div>\
        <div class="<%=prefix%>mv-translit <%=prefix%>original-translit"><%=translit_original%></div>\
        <div class="<%=prefix%>ico-listen <%=prefix%>listen-butt0n <%=prefix%>listen-original" data-from="<%=from%>"></div>\
        </div>\
        <div class="<%=prefix%>padded-single-translation <%=prefix%>trans-wrap">\
        <div class="<%=prefix%>tpart"><%=translation%></div>\
        <div class="<%=prefix%>mv-translit <%=prefix%>translation-translit"><%=translit_translation%></div>\
        <div class="<%=prefix%>more-butt0n" data-to="<%=to%>"></div>\
        <div class="<%=prefix%>ico-listen <%=prefix%>listen-butt0n <%=prefix%>listen-translation" data-to="<%=to%>"></div>\
        </div>';

const multiVariant = {
  TRANSLIT_TYPE: 1,
  IPA_TYPE: 2,
  SYNONYMS_TYPE: 3,

  _singleWrap: async function (translations, type, prefix, lang) {
    prefix = prefix || "";

    let translit_blur_class = "";
    let gender_original = translations[8] ? translations[8] : "";
    let gender_translation = translations[9] ? translations[9] : "";
    let translit_original = 
      _src_ext_api__WEBPACK_IMPORTED_MODULE_4__.getSourceTranslitFromJson(translations);
    let translit_translation =
      _src_ext_api__WEBPACK_IMPORTED_MODULE_4__.getTargetTranslitFromJson(translations);

    if (!(await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_2__["default"].isTrueOption("show_ipa"))) {
      translit_original = "gikken";
      translit_translation = "gikken";
    }

    if (!(await _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.isProUser())) {
      translit_blur_class = prefix + "blurred-out";

      // no request is made for non-pro users
      // show a blurred out placeholder to encourage them update instead
      if (
        _src_ext_api__WEBPACK_IMPORTED_MODULE_4__.supportsArticles(translations[5]) &&
        translations[1].split(" ").length <= 1
      ) {
        gender_original = "das";
      }
      if (
        _src_ext_api__WEBPACK_IMPORTED_MODULE_4__.supportsArticles(translations[6]) &&
        translations[3].split(" ").length <= 1
      ) {
        gender_translation = "das";
      }
    }

    if (gender_original && await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_2__["default"].isTrueOption("show_articles")) {
      gender_original =
        '<span class="' +
        prefix +
        "article " +
        translit_blur_class +
        '">' +
        gender_original +
        "</span>";
    } else {
      gender_original = "";
    }

    if (gender_translation && await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_2__["default"].isTrueOption("show_articles")) {
      gender_translation =
        '<span class="' +
        prefix +
        "article " +
        translit_blur_class +
        '">' +
        gender_translation +
        "</span>";
    } else {
      gender_translation = "";
    }

    return _src_ext_tpl__WEBPACK_IMPORTED_MODULE_3__.compile(SINGLE_HTML, {
      prefix: prefix,
      original: gender_original + translations[1],
      translation: gender_translation + translations[3],
      to: lang,
      translit_original: translit_original,
      translit_translation: translit_translation,
    });
  },

  _complexSingleWrap: function (translations, ov, prefix, locales, lang) {
    return this._singleWrap(
      translations,
      multiVariant.SYNONYMS_TYPE,
      prefix,
      locales,
      lang
    );
  },

  _multiWrap: async function (translations, onlyVariants, prefix, lang) {
    let df_local, df_local_items;
    const df = document.createDocumentFragment();

    if (!lodash__WEBPACK_IMPORTED_MODULE_5___default().isString(prefix)) {
      prefix = "";
    }

    for (let i = 0; i < translations[7].length; ++i) {
      if (lodash__WEBPACK_IMPORTED_MODULE_5___default().isEmpty(translations[7][i])) {
        continue;
      }

      const len = translations[7][i].length;
      df_local = document.createDocumentFragment();

      for (const v of translations[7][i]) {
        df_local_items = document.createDocumentFragment();

        // Hotfix
        if (v[2] && lodash__WEBPACK_IMPORTED_MODULE_5___default().isString(v[1]) && lodash__WEBPACK_IMPORTED_MODULE_5___default().isString(v[2])) {
          const t = v[1];
          v[1] = v[2];
          v[2] = t;
        }

        (v[1] || []).forEach(function (v2, k2) {
          if (k2 >= max_synonyms) return;
          if (v2) {
            jquery__WEBPACK_IMPORTED_MODULE_0___default()(df_local_items)
              .append(jquery__WEBPACK_IMPORTED_MODULE_0___default()("<div>", { class: prefix + "synonym" }).html(v2))
              .append(
                k2 < v[1].length - 1 && k2 < max_synonyms - 1 ? ", " : ""
              );
          }
        });

        let gender = "";

        if (v[2] && (await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_2__["default"].isTrueOption("show_articles"))) {
          let blur_class = "";
          if (!(await _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.isProUser())) {
            blur_class = " " + prefix + "blurred-out";
          }
          gender =
            '<span class="' +
            prefix +
            "article " +
            blur_class +
            '">' +
            v[2] +
            "</span> ";
        }

        jquery__WEBPACK_IMPORTED_MODULE_0___default()(df_local).append(
          jquery__WEBPACK_IMPORTED_MODULE_0___default()("<div>", { class: prefix + "v-item" })
            .append(
              jquery__WEBPACK_IMPORTED_MODULE_0___default()("<div>", {
                class: prefix + "small-copy-button",
                "data-langto": "<%=to%>",
              })
            )
            .append(
              jquery__WEBPACK_IMPORTED_MODULE_0___default()("<div>", {
                class: prefix + "listen-v-item",
                "data-langto": "<%=to%>",
              })
            )
            .append(
              jquery__WEBPACK_IMPORTED_MODULE_0___default()("<div>", { class: prefix + "v-texts" }).append(
                jquery__WEBPACK_IMPORTED_MODULE_0___default()("<div>", { class: prefix + "main-of-item" }).html(
                  gender + v[0]
                )
              )
            )
            .append(
              jquery__WEBPACK_IMPORTED_MODULE_0___default()("<div>", { class: prefix + "synonyms" }).append(df_local_items)
            )
        );
      }

      const key = _src_ext_api__WEBPACK_IMPORTED_MODULE_4__.getPartOfSpeechByIndex(i);
      const empty_pos = lodash__WEBPACK_IMPORTED_MODULE_5___default().isEmpty(key);

      jquery__WEBPACK_IMPORTED_MODULE_0___default()(df).append(
        jquery__WEBPACK_IMPORTED_MODULE_0___default()("<div>")
          .addClass(prefix + "variant-row")
          .append(
            jquery__WEBPACK_IMPORTED_MODULE_0___default()("<div>")
              .addClass(prefix + "v-pos")
              .html(
                !empty_pos
                  ? _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.getLocale("CommonUi_LangPart_" + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.capitalize(key))
                  : ""
              )
              .addClass(empty_pos ? prefix + "empty-pos" : "")
              .get()
          )
          .append(
            jquery__WEBPACK_IMPORTED_MODULE_0___default()("<div>")
              .addClass(prefix + "v-closest-wrap")
              .append(df_local)
              .get()
          )
          .get()
      );
    }

    // Do not include different wrappers and a main variant to the final HTML code
    if (onlyVariants === true) {
      return jquery__WEBPACK_IMPORTED_MODULE_0___default()("<div>").append(df).html();
    }

    let translit_blur_class = "";
    let gender_original = translations[8] ? translations[8] : "";
    let gender_translation = translations[9] ? translations[9] : "";
    let translit_original = _src_ext_api__WEBPACK_IMPORTED_MODULE_4__.getSourceTranslitFromJson(translations);
    let translit_translation =
      _src_ext_api__WEBPACK_IMPORTED_MODULE_4__.getTargetTranslitFromJson(translations);

    console.log({
      show_ipa: await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_2__["default"].isTrueOption("show_ipa"),
      show_articles: await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_2__["default"].isTrueOption("show_articles"),
      translit_original,
      translit_translation,
    });

    if (!(await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_2__["default"].isTrueOption("show_ipa"))) {
      translit_original = "gikken";
      translit_translation = "gikken";
    }

    if (!(await _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_1__.ke.isProUser())) {
      translit_blur_class = prefix + "blurred-out";

      // no request is made for non-pro users
      // show a blurred out placeholder to encourage them update instead
      if (_src_ext_api__WEBPACK_IMPORTED_MODULE_4__.supportsArticles(translations[5])) {
        gender_original = "das";
      }
      if (_src_ext_api__WEBPACK_IMPORTED_MODULE_4__.supportsArticles(translations[6])) {
        gender_translation = "das";
      }
    }

    if (gender_original && await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_2__["default"].isTrueOption("show_articles")) {
      gender_original =
        '<span class="' +
        prefix +
        "article " +
        translit_blur_class +
        '">' +
        gender_original +
        "</span>";
    } else {
      gender_original = "";
    }

    if (gender_translation && await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_2__["default"].isTrueOption("show_articles")) {
      gender_translation =
        '<span class="' +
        prefix +
        "article " +
        translit_blur_class +
        '">' +
        gender_translation +
        "</span>";
    } else {
      gender_translation = "";
    }

    let synonyms_paywall = "";

    // if (!(await ke.isProUser())) {
    //   const synonyms_upgrade_cta =
    //     '<div class="' +
    //     prefix +
    //     'upgrade-cta">' +
    //     ke.getLocale("Pro_SynonymsPaywall").replace(".", "").replace("。", "") +
    //     "</div>";
    //   synonyms_paywall = $(
    //     '<div class="' +
    //       prefix +
    //       'synonyms-paywall">' +
    //       synonyms_upgrade_cta +
    //       "</div>"
    //   );

    //   synonyms_paywall = synonyms_paywall.get();
    // }

    const translit_original_html = await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_2__["default"].isTrueOption('show_ipa')
      ? '<div class="' +
        prefix +
        "mv-translit " +
        prefix +
        "original-translit " +
        translit_blur_class +
        " " +
        prefix +
        'ipa">' +
        translit_original +
        '</div>'
      : '';

    const translit_translation_html = await _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_2__["default"].isTrueOption('show_ipa')
      ? '<div class="' +
        prefix +
        "mv-translit " +
        prefix +
        "original-translit " +
        translit_blur_class +
        " " +
        prefix +
        'ipa">' +
        translit_translation +
        '</div>' 
      : '';

    const bunch = jquery__WEBPACK_IMPORTED_MODULE_0___default()("<div>")
      .addClass(prefix + "variant-bunch-wrap")
      .append(
        jquery__WEBPACK_IMPORTED_MODULE_0___default()("<div>")
          .addClass(prefix + "vbw-inside-layout")
          .append(
            jquery__WEBPACK_IMPORTED_MODULE_0___default()("<div>")
              .addClass(prefix + "original-wrap")
              .append(
                jquery__WEBPACK_IMPORTED_MODULE_0___default()("<div>")
                  .addClass(prefix + "original")
                  .html(
                    '<div class="' +
                      prefix +
                      'mv-text-part">' +
                      gender_original +
                      translations[1] +
                      '</div><div class="' +
                      prefix +
                      'add-pb-butt0n"></div>' + 
                      translit_original_html + 
                      '<div class="' +
                      prefix +
                      'copy-butt0n"></div><div class="' +
                      prefix +
                      "ico-listen " +
                      prefix +
                      "listen-butt0n " +
                      prefix +
                      'listen-original" data-from="<%=from%>">' +
                      "</div>"
                  )
                  .get()
              )
              .get()
          )
          .append(
            jquery__WEBPACK_IMPORTED_MODULE_0___default()("<div>")
              .addClass(prefix + "main-variant-wrap")
              .append(
                jquery__WEBPACK_IMPORTED_MODULE_0___default()("<div>")
                  .addClass(prefix + "main-variant")
                  .html(
                    '<div class="' +
                      prefix +
                      'mv-text-part">' +
                      gender_translation +
                      translations[3] +
                      '</div>' + 
                      translit_translation_html + 
                      '<div class="' +
                      prefix +
                      'more-butt0n"></div><div class="' +
                      prefix +
                      "ico-listen " +
                      prefix +
                      "listen-butt0n " +
                      prefix +
                      'listen-translation" data-to="' +
                      lang +
                      '">' +
                      "</div>"
                  )
                  .get()
              )
              .get()
          )
          .append(
            jquery__WEBPACK_IMPORTED_MODULE_0___default()("<div>")
              .addClass(prefix + "variants-by-pos")
              .append(df)
              .append(synonyms_paywall)
              .get()
          )
          .get()
      );

    return jquery__WEBPACK_IMPORTED_MODULE_0___default()("<div>").append(bunch.get()).html();
  },

  wrap: async function (multi, items, ov, prefix, locales, complexSingle) {
    return await multiVariant[
      "_" +
        (multi ? "multi" : !complexSingle ? "single" : "complexSingle") +
        "Wrap"
    ](items, ov, prefix, items[6]);
  },
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (multiVariant);


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
/*!**********************************************!*\
  !*** ./src/pages/pdf_tooltip/pdf_tooltip.js ***!
  \**********************************************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../src/ext/kumquat_polyfill */ "./src/ext/kumquat_polyfill.js");
/* harmony import */ var _handlers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./handlers.js */ "./src/pages/pdf_tooltip/handlers.js");
/* harmony import */ var _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../src/ext/util/storageUtil */ "./src/ext/util/storageUtil.js");
/* harmony import */ var _src_particles_listen_lModel__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../src/particles/listen/lModel */ "./src/particles/listen/lModel.js");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _src_particles_translate_ctt_tcModel_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../src/particles/translate_ctt/tcModel.js */ "./src/particles/translate_ctt/tcModel.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _content_shared__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../content/shared */ "./src/pages/content/shared.js");











window.flags = _content_shared__WEBPACK_IMPORTED_MODULE_7__.flags;
window.temp = _content_shared__WEBPACK_IMPORTED_MODULE_7__.temp;
window.handlers = _handlers_js__WEBPACK_IMPORTED_MODULE_1__["default"]; 

// on dom loaded
jquery__WEBPACK_IMPORTED_MODULE_6___default()(init);

let lastTranslationCallArgs = {};

function init() {
  _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.initSentry();
  
  if (lodash__WEBPACK_IMPORTED_MODULE_4___default().isEmpty(document.location.hash)) {
    window.close();
    return;
  }

  const hash_parts = document.location.hash.substring(1).split("|");
  lastTranslationCallArgs.from = decodeURIComponent(hash_parts[0]);
  lastTranslationCallArgs.to = decodeURIComponent(hash_parts[1]);
  lastTranslationCallArgs.text = decodeURIComponent(
    hash_parts.splice(2).join("")
  );

  document.title = "Mate Translate PDF";

  jquery__WEBPACK_IMPORTED_MODULE_6___default()("body").css("overflow", "hidden");

  _src_ext_util_storageUtil__WEBPACK_IMPORTED_MODULE_2__["default"].chainRequestBackgroundOption(
    [{ fn: "isTrueOption", args: ["dark_mode"] }],
    function (responses) {
      const dark_mode = responses[0].response;

      if (dark_mode) {
        jquery__WEBPACK_IMPORTED_MODULE_6___default()("body").addClass(_src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.getPrefix() + "dark-mode");
      }
    }
  );

  jquery__WEBPACK_IMPORTED_MODULE_6___default()(window).on("resize", _handlers_js__WEBPACK_IMPORTED_MODULE_1__["default"].onResize);

  _src_particles_translate_ctt_tcModel_js__WEBPACK_IMPORTED_MODULE_5__["default"].currentSelectedText =
    lastTranslationCallArgs.text;

  _src_particles_translate_ctt_tcModel_js__WEBPACK_IMPORTED_MODULE_5__["default"].getTranslation(
    lastTranslationCallArgs.text,
    _handlers_js__WEBPACK_IMPORTED_MODULE_1__["default"].showTranslation,
    lastTranslationCallArgs.from,
    lastTranslationCallArgs.to,
    null,
    "pdf"
  );
}

function initDropdowns() {}

const render = {
  organize: {},
  // TODO: Debug 'listen' feature. Error: Maximum call stack size exceeded
  events: {
    listen: function () {
      jquery__WEBPACK_IMPORTED_MODULE_6___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.getPrefix() + "listen-original")
        .off()
        .on("click", _src_particles_listen_lModel__WEBPACK_IMPORTED_MODULE_3__["default"].playTooltip);
      jquery__WEBPACK_IMPORTED_MODULE_6___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.getPrefix() + "listen-butt0n")
        .off()
        .on("click", _src_particles_listen_lModel__WEBPACK_IMPORTED_MODULE_3__["default"].playTooltip);
    },

    listenSynonym: function () {
      jquery__WEBPACK_IMPORTED_MODULE_6___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.getPrefix() + "listen-v-item")
        .off()
        .on("click", _src_particles_listen_lModel__WEBPACK_IMPORTED_MODULE_3__["default"].playTooltipSynonym);
    },

    reverseTranslation: function () {
      jquery__WEBPACK_IMPORTED_MODULE_6___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.getPrefix() + "show-reversed")
        .off()
        .on("click", _handlers_js__WEBPACK_IMPORTED_MODULE_1__["default"].reverseTranslation);
    },

    settings: function () {
      jquery__WEBPACK_IMPORTED_MODULE_6___default()("." + _src_ext_kumquat_polyfill__WEBPACK_IMPORTED_MODULE_0__.ke.getPrefix() + "settings")
        .off()
        .on("click", _handlers_js__WEBPACK_IMPORTED_MODULE_1__["default"].settings);
    },

    showUpgradeForIpaAndArticles: function () {},
  },
};

})();

/******/ })()
;
//# sourceMappingURL=pdf_tooltip.bundle.js.map